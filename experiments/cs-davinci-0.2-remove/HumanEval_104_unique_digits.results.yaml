language: cs
name: HumanEval_104_unique_digits
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (isUnique(i)) {\n                result.Add(i);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw2gc0hr7.cs(16,17): error CS0103: The name ''isUnique'' does not exist
    in the current context

    '
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        List<long>
    result = new List<long>();\n        foreach (long i in x) {\n            if (IsUnique(i))
    {\n                result.Add(i);\n            }\n        }\n        result.Sort();\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp00xyt3lr.cs(17,17): error CS0103: The name ''IsUnique'' does not exist
    in the current context

    '
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (i < 10) {\n                result.Add(i);\n
    \           } else {\n                bool isUnique = true;\n                long
    n = i;\n                while (n > 0) {\n                    if (n % 2 == 0) {\n
    \                       isUnique = false;\n                        break;\n                    }\n
    \                   n /= 10;\n                }\n                if (isUnique)
    {\n                    result.Add(i);\n                }\n            }\n        }\n
    \       result.Sort();\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,
    (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,
    (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,
    (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6a8b5f755ec04634aac681d37d8e4265>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6a8b5f755ec04634aac681d37d8e4265>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var res = new List<long>();\n
    \       foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) continue;\n            res.Add(i);\n        }\n        res.Sort();\n        return
    res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <80a8a1ebe0cf48539e3adf30caed5e9b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <80a8a1ebe0cf48539e3adf30caed5e9b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> res = new List<long>();\n
    \       foreach (long i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            res.Add(i);\n        }\n
    \       res.Sort();\n        return res;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e880acc082b40bcad3fa482ec1cb223>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e880acc082b40bcad3fa482ec1cb223>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(n => !n.ToString().Any(c => c % 2 == 0)).OrderBy(n => n).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e0cebe9c87974da8b3bbb99839a3ebe2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e0cebe9c87974da8b3bbb99839a3ebe2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var item in x) {\n            if (item.ToString().ToCharArray().Any(c
    => c % 2 == 0)) {\n                continue;\n            }\n            result.Add(item);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b349f9583e04d3baa65be2bafcdb863>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b349f9583e04d3baa65be2bafcdb863>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        return x.Where(i => i.ToString().All(c
    => c % 2 == 1)).OrderBy(i => i).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <36209b2961324ed38614d9e05ee20029>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <36209b2961324ed38614d9e05ee20029>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(i => i.ToString().All(c => c % 2 == 1)).ToList();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5cc0aede164643a4a4fca3b80c218e5e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5cc0aede164643a4a4fca3b80c218e5e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> res = new List<long>();\n
    \       foreach (long i in x) {\n            if (IsUnique(i)) {\n                res.Add(i);\n
    \           }\n        }\n        res.Sort();\n        return res;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyww95fl8.cs(16,17): error CS0103: The name ''IsUnique'' does not exist
    in the current context

    '
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(i => i.ToString().All(c => c % 2 == 1)).OrderBy(i => i).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        return x.Where(n => n.ToString().All(c
    => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <977af0fac30b47dcbbb8ab700df4fa3f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <977af0fac30b47dcbbb8ab700df4fa3f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // TODO: Implement this method\n
    \       return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <282f0d5c0fe947d495b96c54be9fc759>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <282f0d5c0fe947d495b96c54be9fc759>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var n in x) {\n            var digits = new HashSet<int>();\n
    \           var num = n;\n            while (num > 0) {\n                var digit
    = num % 10;\n                if (digit % 2 == 0) {\n                    break;\n
    \               }\n                digits.Add(digit);\n                num /=
    10;\n            }\n            if (num == 0) {\n                result.Add(n);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd8zgkrgt.cs(23,28): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long n in x) {\n            if (n < 10) {\n                result.Add(n);\n
    \           } else {\n                bool hasEven = false;\n                while
    (n > 0) {\n                    if ((n % 10) % 2 == 0) {\n                        hasEven
    = true;\n                        break;\n                    }\n                    n
    /= 10;\n                }\n                if (!hasEven) {\n                    result.Add(n);\n
    \               }\n            }\n        }\n        result.Sort();\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv58f_53_.cs(25,21): error CS1656: Cannot assign to ''n'' because it is
    a ''foreach iteration variable''

    '
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here.\n        return
    x.Where(i => i.ToString().All(c => c % 2 == 1)).OrderBy(i => i).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e76e1920764099bdcb89368e4b9897>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e76e1920764099bdcb89368e4b9897>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (i < 10) {\n                result.Add(i);\n
    \           } else {\n                bool hasEven = false;\n                long
    temp = i;\n                while (temp > 0) {\n                    if ((temp %
    10) % 2 == 0) {\n                        hasEven = true;\n                        break;\n
    \                   }\n                    temp /= 10;\n                }\n                if
    (!hasEven) {\n                    result.Add(i);\n                }\n            }\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72ac4020fde44a8cb877a885db47d005>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72ac4020fde44a8cb877a885db47d005>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <aa36a2886442420f8cdbfb4aab3daa1a>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <aa36a2886442420f8cdbfb4aab3daa1a>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var item in x) {\n            if (item.ToString().Any(c => c
    % 2 == 0)) {\n                continue;\n            }\n            result.Add(item);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7409fe75a3f7489697d71a517a5ac73d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7409fe75a3f7489697d71a517a5ac73d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // TODO: Implement this function.\n
    \       return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <cb4a82f879794728a5925caf9376118b>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <cb4a82f879794728a5925caf9376118b>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> res = new List<long>();\n
    \       foreach (var i in x) {\n            if (IsUnique(i)) {\n                res.Add(i);\n
    \           }\n        }\n        res.Sort();\n        return res;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf1s74tmg.cs(16,17): error CS0103: The name ''IsUnique'' does not exist
    in the current context

    '
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // TODO: Implement this function.\n
    \       List<long> result = new List<long>();\n        foreach (long num in x)
    {\n            if (IsUniqueDigit(num)) {\n                result.Add(num);\n            }\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6mghq1gm.cs(17,17): error CS0103: The name ''IsUniqueDigit'' does not
    exist in the current context

    '
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(y => y.ToString().All(z => z % 2 == 1)).OrderBy(y => y).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9945c794aaa047d59d840a34f520e890>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9945c794aaa047d59d840a34f520e890>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        return x.Where(y => !y.ToString().Any(z
    => z % 2 == 0)).OrderBy(y => y).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c67412f3beda47de9172cd2bbfdf9401>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c67412f3beda47de9172cd2bbfdf9401>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (IsUnique(i)) {\n                result.Add(i);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxbn2a825.cs(16,17): error CS0103: The name ''IsUnique'' does not exist
    in the current context

    '
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        return x.Where(y => y.ToString().All(z
    => z % 2 == 1)).OrderBy(y => y).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0f579b5f07d84c84aa5b2cdcd7f6effd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0f579b5f07d84c84aa5b2cdcd7f6effd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long num in x) {\n            if (IsUniqueDigits(num)) {\n                result.Add(num);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiqrvka6w.cs(16,17): error CS0103: The name ''IsUniqueDigits'' does not
    exist in the current context

    '
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var item in x) {\n            if (item.ToString().Any(c => c
    % 2 == 0)) {\n                continue;\n            }\n            result.Add(item);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7409fe75a3f7489697d71a517a5ac73d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7409fe75a3f7489697d71a517a5ac73d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        List<long>
    result = new List<long>();\n        foreach (long num in x) {\n            if
    (num.ToString().Any(c => c % 2 == 0)) {\n                continue;\n            }\n
    \           result.Add(num);\n        }\n        result.Sort();\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eace3c99fc4740ba9b53cc66b9fb56ca>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eace3c99fc4740ba9b53cc66b9fb56ca>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        return x.Where(i => i.ToString().All(c
    => c % 2 == 1)).ToList();\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d627329efe0b4923922417d2f2f6320b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d627329efe0b4923922417d2f2f6320b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            if (IsUniqueDigits(i)) {\n                result.Add(i);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjox_pqf9.cs(16,17): error CS0103: The name ''IsUniqueDigits'' does not
    exist in the current context

    '
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dd8f4db9500490087e0fc469ed919e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dd8f4db9500490087e0fc469ed919e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        return x.Where(n => !n.ToString().Any(c
    => c % 2 == 0)).OrderBy(n => n).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <20da331ac1a0493ab688627fb31dd0bb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <20da331ac1a0493ab688627fb31dd0bb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long n in x) {\n            if (HasEvenDigit(n)) {\n                continue;\n
    \           }\n            result.Add(n);\n        }\n        result.Sort();\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr7bd3zz4.cs(16,17): error CS0103: The name ''HasEvenDigit'' does not exist
    in the current context

    '
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var item in x) {\n            if (IsUniqueDigits(item)) {\n                result.Add(item);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpof1vuk6b.cs(16,17): error CS0103: The name ''IsUniqueDigits'' does not
    exist in the current context

    '
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        return x.Where(n => n.ToString().All(c
    => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <977af0fac30b47dcbbb8ab700df4fa3f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <977af0fac30b47dcbbb8ab700df4fa3f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dd8f4db9500490087e0fc469ed919e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dd8f4db9500490087e0fc469ed919e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(i => i.ToString().All(c => c % 2 == 1)).OrderBy(i => i).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(i => i.ToString().All(c => c % 2 == 1)).OrderBy(i => i).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dd8f4db9500490087e0fc469ed919e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dd8f4db9500490087e0fc469ed919e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> res = new List<long>();\n
    \       foreach (long i in x) {\n            if (i < 10) {\n                res.Add(i);\n
    \           } else {\n                bool flag = true;\n                long
    j = i;\n                while (j > 0) {\n                    if (j % 2 == 0) {\n
    \                       flag = false;\n                        break;\n                    }\n
    \                   j /= 10;\n                }\n                if (flag) {\n
    \                   res.Add(i);\n                }\n            }\n        }\n
    \       res.Sort();\n        return res;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <492bce36b2094b9393a423a20c4aee62>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <492bce36b2094b9393a423a20c4aee62>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            var digits = i.ToString().ToCharArray();\n
    \           var hasEven = false;\n            foreach (var d in digits) {\n                if
    ((d - '0') % 2 == 0) {\n                    hasEven = true;\n                    break;\n
    \               }\n            }\n            if (!hasEven) {\n                result.Add(i);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <762b03be21134728a8f1d9a68509463b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <762b03be21134728a8f1d9a68509463b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            if (i < 10) {\n                result.Add(i);\n
    \           } else {\n                var hasEven = false;\n                var
    n = i;\n                while (n > 0) {\n                    if ((n % 10) % 2
    == 0) {\n                        hasEven = true;\n                        break;\n
    \                   }\n                    n /= 10;\n                }\n                if
    (!hasEven) {\n                    result.Add(i);\n                }\n            }\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eb67bab5e02f418b892bd8cfe48f4ff4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eb67bab5e02f418b892bd8cfe48f4ff4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Your code goes here.\n        return
    x.Where(n => !n.ToString().Any(c => c % 2 == 0)).OrderBy(n => n).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aafcaaf958f04452963363ec18367be9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aafcaaf958f04452963363ec18367be9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(y => y.ToString().All(z => z % 2 == 1)).OrderBy(y => y).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9945c794aaa047d59d840a34f520e890>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9945c794aaa047d59d840a34f520e890>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(i => i.ToString().All(c => c % 2 == 1)).OrderBy(i => i).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(i => i.ToString().All(c => c % 2 == 1)).OrderBy(i => i).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        List<long>
    result = new List<long>();\n        foreach (long num in x) {\n            if
    (num.ToString().Any(c => c % 2 == 0)) {\n                continue;\n            }\n
    \           result.Add(num);\n        }\n        result.Sort();\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eace3c99fc4740ba9b53cc66b9fb56ca>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eace3c99fc4740ba9b53cc66b9fb56ca>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long num in x) {\n            if (IsUniqueDigits(num)) {\n                result.Add(num);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiqrvka6w.cs(16,17): error CS0103: The name ''IsUniqueDigits'' does not
    exist in the current context

    '
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dd8f4db9500490087e0fc469ed919e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dd8f4db9500490087e0fc469ed919e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var ans = new List<long>();\n
    \       foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) continue;\n            ans.Add(i);\n        }\n        ans.Sort();\n        return
    ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6544170c67a3463d864dfa1a429cd14d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6544170c67a3463d864dfa1a429cd14d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> res = new List<long>();\n
    \       foreach (long i in x) {\n            if (i < 10) {\n                res.Add(i);\n
    \           } else {\n                bool isUnique = true;\n                long
    temp = i;\n                while (temp > 0) {\n                    if (temp %
    2 == 0) {\n                        isUnique = false;\n                        break;\n
    \                   }\n                    temp /= 10;\n                }\n                if
    (isUnique) {\n                    res.Add(i);\n                }\n            }\n
    \       }\n        res.Sort();\n        return res;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1de9626a1d554e478e6524c5381f6b42>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1de9626a1d554e478e6524c5381f6b42>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // TODO: Implement this function.\n
    \       return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <cb4a82f879794728a5925caf9376118b>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <cb4a82f879794728a5925caf9376118b>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> res = new List<long>();\n
    \       foreach (long num in x) {\n            if (IsUniqueDigits(num)) {\n                res.Add(num);\n
    \           }\n        }\n        res.Sort();\n        return res;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuqodfi01.cs(16,17): error CS0103: The name ''IsUniqueDigits'' does not
    exist in the current context

    '
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        return x.Where(n => n.ToString().All(c
    => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <977af0fac30b47dcbbb8ab700df4fa3f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <977af0fac30b47dcbbb8ab700df4fa3f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            var hasEven = false;\n            var
    n = i;\n            while (n > 0) {\n                if ((n % 10) % 2 == 0) {\n
    \                   hasEven = true;\n                    break;\n                }\n
    \               n /= 10;\n            }\n            if (!hasEven) {\n                result.Add(i);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0996dedbdeca4272a0d292d373db5cfa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0996dedbdeca4272a0d292d373db5cfa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        List<long>
    result = new List<long>();\n        foreach (long n in x) {\n            if (n.ToString().Any(c
    => c % 2 == 0)) {\n                continue;\n            }\n            result.Add(n);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a153b03002184efc91ff075381e286c9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a153b03002184efc91ff075381e286c9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        List<long>
    result = new List<long>();\n        foreach (long num in x) {\n            if
    (IsUniqueDigits(num)) {\n                result.Add(num);\n            }\n        }\n
    \       result.Sort();\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,
    (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,
    (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,
    (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk5w_vf6e.cs(17,17): error CS0103: The name ''IsUniqueDigits'' does not
    exist in the current context

    '
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e1403a4a1649484280df4950c6d99880>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e1403a4a1649484280df4950c6d99880>:0
    \n"
  stdout: ''
  timestamp: 1660015691
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> res = new List<long>();\n
    \       foreach (long i in x) {\n            if (IsUnique(i)) {\n                res.Add(i);\n
    \           }\n        }\n        res.Sort();\n        return res;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyww95fl8.cs(16,17): error CS0103: The name ''IsUnique'' does not exist
    in the current context

    '
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var num in x) {\n            if (IsUniqueDigits(num)) {\n                result.Add(num);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptn4aa9wf.cs(16,17): error CS0103: The name ''IsUniqueDigits'' does not
    exist in the current context

    '
  timestamp: 1660015691
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dd8f4db9500490087e0fc469ed919e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dd8f4db9500490087e0fc469ed919e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dd8f4db9500490087e0fc469ed919e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dd8f4db9500490087e0fc469ed919e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(i => i.ToString().All(c => c % 2 == 1)).OrderBy(i => i).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long num in x) {\n            if (IsUniqueDigits(num)) {\n                result.Add(num);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiqrvka6w.cs(16,17): error CS0103: The name ''IsUniqueDigits'' does not
    exist in the current context

    '
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dd8f4db9500490087e0fc469ed919e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dd8f4db9500490087e0fc469ed919e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var item in x) {\n            if (item.ToString().Any(c => c
    % 2 == 0)) {\n                continue;\n            }\n            result.Add(item);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7409fe75a3f7489697d71a517a5ac73d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7409fe75a3f7489697d71a517a5ac73d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        List<long>
    result = new List<long>();\n        foreach (long num in x) {\n            if
    (IsUniqueDigits(num)) {\n                result.Add(num);\n            }\n        }\n
    \       result.Sort();\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,
    (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,
    (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,
    (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk5w_vf6e.cs(17,17): error CS0103: The name ''IsUniqueDigits'' does not
    exist in the current context

    '
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (IsUnique(i)) {\n                result.Add(i);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxbn2a825.cs(16,17): error CS0103: The name ''IsUnique'' does not exist
    in the current context

    '
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var num in x) {\n            if (num.ToString().Any(c => c %
    2 == 0)) {\n                continue;\n            }\n            result.Add(num);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4ecb42e9a1fe4a5fad667546106a2ca6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4ecb42e9a1fe4a5fad667546106a2ca6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015691
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(e => !e.ToString().Any(c => c % 2 == 0)).OrderBy(e => e).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <baa1bf0371b648d7a10a4810685d5058>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <baa1bf0371b648d7a10a4810685d5058>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015691
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var item in x) {\n            if (item.ToString().Any(c => c
    % 2 == 0)) {\n                continue;\n            }\n            result.Add(item);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7409fe75a3f7489697d71a517a5ac73d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7409fe75a3f7489697d71a517a5ac73d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var item in x) {\n            if (item.ToString().Any(c => c
    % 2 == 0)) {\n                continue;\n            }\n            result.Add(item);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7409fe75a3f7489697d71a517a5ac73d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7409fe75a3f7489697d71a517a5ac73d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dd8f4db9500490087e0fc469ed919e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dd8f4db9500490087e0fc469ed919e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long n in x) {\n            if (IsUniqueDigits(n)) {\n                result.Add(n);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp88bz74wc.cs(16,17): error CS0103: The name ''IsUniqueDigits'' does not
    exist in the current context

    '
  timestamp: 1660015691
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dd8f4db9500490087e0fc469ed919e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dd8f4db9500490087e0fc469ed919e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(n => n.ToString().All(c => c % 2 == 1)).ToList();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4f51740046b449ab76e852eb33ddd5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4f51740046b449ab76e852eb33ddd5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015691
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var num in x) {\n            if (num.ToString().Any(c => c %
    2 == 0)) {\n                continue;\n            }\n            result.Add(num);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4ecb42e9a1fe4a5fad667546106a2ca6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4ecb42e9a1fe4a5fad667546106a2ca6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015691
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (i < 10) {\n                result.Add(i);\n
    \           } else {\n                bool isEven = false;\n                while
    (i > 0) {\n                    if ((i % 10) % 2 == 0) {\n                        isEven
    = true;\n                        break;\n                    }\n                    i
    /= 10;\n                }\n                if (!isEven) {\n                    result.Add(i);\n
    \               }\n            }\n        }\n        result.Sort();\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptb4gudzg.cs(25,21): error CS1656: Cannot assign to ''i'' because it is
    a ''foreach iteration variable''

    '
  timestamp: 1660015691
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (i < 10) {\n                result.Add(i);\n
    \           } else {\n                bool even = false;\n                while
    (i > 0) {\n                    if ((i % 10) % 2 == 0) {\n                        even
    = true;\n                        break;\n                    }\n                    i
    /= 10;\n                }\n                if (!even) {\n                    result.Add(i);\n
    \               }\n            }\n        }\n        result.Sort();\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi5x8lvg3.cs(25,21): error CS1656: Cannot assign to ''i'' because it is
    a ''foreach iteration variable''

    '
  timestamp: 1660015691
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        List<long>
    result = new List<long>();\n        foreach (long i in x) {\n            if (i.ToString().ToCharArray().All(c
    => c % 2 != 0)) {\n                result.Add(i);\n            }\n        }\n
    \       result.Sort();\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,
    (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,
    (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,
    (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <903d57e198264e588224148f1e483b5e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <903d57e198264e588224148f1e483b5e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015691
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // TODO: Implement this function.\n
    \       return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <cb4a82f879794728a5925caf9376118b>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <cb4a82f879794728a5925caf9376118b>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var item in x) {\n            if (item.ToString().Any(c => c
    % 2 == 0)) {\n                continue;\n            }\n            result.Add(item);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7409fe75a3f7489697d71a517a5ac73d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7409fe75a3f7489697d71a517a5ac73d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        return x.Where(n => n.ToString().Any(c
    => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8fdbdd0faa89414d97a0718af1ed7030>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8fdbdd0faa89414d97a0718af1ed7030>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015691
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long l in x) {\n            if (l < 10) {\n                result.Add(l);\n
    \           } else {\n                bool hasEven = false;\n                long
    temp = l;\n                while (temp > 0) {\n                    if ((temp %
    10) % 2 == 0) {\n                        hasEven = true;\n                        break;\n
    \                   }\n                    temp /= 10;\n                }\n                if
    (!hasEven) {\n                    result.Add(l);\n                }\n            }\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe3c6c70aa3b45758987b41af365b50d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe3c6c70aa3b45758987b41af365b50d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015691
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (i < 0) {\n                continue;\n
    \           }\n            if (i == 0) {\n                result.Add(i);\n                continue;\n
    \           }\n            bool hasEven = false;\n            while (i > 0) {\n
    \               if ((i % 10) % 2 == 0) {\n                    hasEven = true;\n
    \                   break;\n                }\n                i /= 10;\n            }\n
    \           if (!hasEven) {\n                result.Add(i);\n            }\n        }\n
    \       result.Sort();\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,
    (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,
    (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,
    (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpimiwr_sc.cs(29,17): error CS1656: Cannot assign to ''i'' because it is
    a ''foreach iteration variable''

    '
  timestamp: 1660015691
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var item in x) {\n            if (HasEvenDigit(item)) {\n                continue;\n
    \           }\n            result.Add(item);\n        }\n        result.Sort();\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfb__bzu7.cs(16,17): error CS0103: The name ''HasEvenDigit'' does not exist
    in the current context

    '
  timestamp: 1660015691
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (IsUnique(i)) {\n                result.Add(i);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxbn2a825.cs(16,17): error CS0103: The name ''IsUnique'' does not exist
    in the current context

    '
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var num in x) {\n            var digits = new HashSet<int>();\n
    \           var n = num;\n            while (n > 0) {\n                var digit
    = n % 10;\n                if (digit % 2 == 0) {\n                    break;\n
    \               }\n                digits.Add(digit);\n                n /= 10;\n
    \           }\n            if (n == 0) {\n                result.Add(num);\n            }\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcprlw2bt.cs(23,28): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015691
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(i => i.ToString().All(c => c % 2 == 1)).ToList();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5cc0aede164643a4a4fca3b80c218e5e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5cc0aede164643a4a4fca3b80c218e5e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long num in x) {\n            if (num.ToString().Any(c => c %
    2 == 0)) {\n                continue;\n            }\n            result.Add(num);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ac4133e17b2346e0af04bb71f4cba92c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ac4133e17b2346e0af04bb71f4cba92c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015691
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (i < 10) {\n                result.Add(i);\n
    \           } else {\n                bool hasEven = false;\n                long
    j = i;\n                while (j > 0) {\n                    if ((j % 10) % 2
    == 0) {\n                        hasEven = true;\n                        break;\n
    \                   }\n                    j /= 10;\n                }\n                if
    (!hasEven) {\n                    result.Add(i);\n                }\n            }\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca88c7617b7742b5a2a006a321ec0d4f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca88c7617b7742b5a2a006a321ec0d4f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015691
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // TODO: Implement this method.\n
    \       return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <f71259b117b1427d9ab17f094ac816e3>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <f71259b117b1427d9ab17f094ac816e3>:0
    \n"
  stdout: ''
  timestamp: 1660015691
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var item in x) {\n            if (item.ToString().Any(c => c
    % 2 == 0)) {\n                continue;\n            }\n            result.Add(item);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7409fe75a3f7489697d71a517a5ac73d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7409fe75a3f7489697d71a517a5ac73d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        List<long>
    result = new List<long>();\n        foreach (long i in x) {\n            if (i.ToString().ToCharArray().All(c
    => c % 2 != 0)) {\n                result.Add(i);\n            }\n        }\n
    \       result.Sort();\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,
    (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,
    (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,
    (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <903d57e198264e588224148f1e483b5e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <903d57e198264e588224148f1e483b5e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015691
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // TODO: Implement your solution
    here\n        return null;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <cb8f62d4598e40038faca35cee50b542>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <cb8f62d4598e40038faca35cee50b542>:0
    \n"
  stdout: ''
  timestamp: 1660015691
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (IsUnique(i)) {\n                result.Add(i);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxbn2a825.cs(16,17): error CS0103: The name ''IsUnique'' does not exist
    in the current context

    '
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long n in x) {\n            if (n < 10) {\n                result.Add(n);\n
    \           } else {\n                bool even = false;\n                while
    (n > 0) {\n                    if ((n % 10) % 2 == 0) {\n                        even
    = true;\n                        break;\n                    }\n                    n
    /= 10;\n                }\n                if (!even) {\n                    result.Add(n);\n
    \               }\n            }\n        }\n        result.Sort();\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph0pyskpo.cs(25,21): error CS1656: Cannot assign to ''n'' because it is
    a ''foreach iteration variable''

    '
  timestamp: 1660015691
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var num in x) {\n            if (num.ToString().Any(c => c %
    2 == 0)) {\n                continue;\n            }\n            result.Add(num);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4ecb42e9a1fe4a5fad667546106a2ca6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4ecb42e9a1fe4a5fad667546106a2ca6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015691
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var item in x) {\n            if (item.ToString().Any(c => c
    % 2 == 0)) {\n                continue;\n            }\n            result.Add(item);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7409fe75a3f7489697d71a517a5ac73d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7409fe75a3f7489697d71a517a5ac73d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        return x.Where(i => i.ToString().All(c
    => c % 2 == 1)).OrderBy(i => i).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <36209b2961324ed38614d9e05ee20029>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <36209b2961324ed38614d9e05ee20029>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(n => !HasEvenDigit(n)).OrderBy(n => n).ToList();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8f9rd4d6.cs(15,30): error CS0103: The name ''HasEvenDigit'' does not exist
    in the current context

    '
  timestamp: 1660015691
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Your code here\n        return
    new List<long>();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a08cdfc047d4044a033fbba76b9ba1c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a08cdfc047d4044a033fbba76b9ba1c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015691
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        return x.Where(num => num.ToString().All(c
    => c % 2 == 1)).ToList();\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a206f0d08eb84789b9f9e8ba94c959da>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a206f0d08eb84789b9f9e8ba94c959da>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015691
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long n in x) {\n            if (n < 10) {\n                result.Add(n);\n
    \           } else {\n                bool hasEven = false;\n                while
    (n > 0) {\n                    if ((n % 10) % 2 == 0) {\n                        hasEven
    = true;\n                        break;\n                    }\n                    n
    /= 10;\n                }\n                if (!hasEven) {\n                    result.Add(n);\n
    \               }\n            }\n        }\n        result.Sort();\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv58f_53_.cs(25,21): error CS1656: Cannot assign to ''n'' because it is
    a ''foreach iteration variable''

    '
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var item in x) {\n            if (item.ToString().Any(c => c
    % 2 == 0)) {\n                continue;\n            }\n            result.Add(item);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7409fe75a3f7489697d71a517a5ac73d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7409fe75a3f7489697d71a517a5ac73d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var item in x) {\n            bool hasEvenDigit = false;\n            foreach
    (var digit in item.ToString()) {\n                if ((digit - '0') % 2 == 0)
    {\n                    hasEvenDigit = true;\n                    break;\n                }\n
    \           }\n            if (!hasEvenDigit) {\n                result.Add(item);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3eff5755c640468286006c16faac7907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3eff5755c640468286006c16faac7907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015691
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            if (!HasEvenDigit(i)) {\n                result.Add(i);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6x9aorq2.cs(16,18): error CS0103: The name ''HasEvenDigit'' does not exist
    in the current context

    '
  timestamp: 1660015691
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long n in x) {\n            if (!HasEvenDigit(n)) {\n                result.Add(n);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplx1v9nbt.cs(16,18): error CS0103: The name ''HasEvenDigit'' does not exist
    in the current context

    '
  timestamp: 1660015691
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(i => i.ToString().All(c => c % 2 == 1)).OrderBy(i => i).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // TODO: Implement this function\n
    \       return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <867584eee98c4e7d838c4b2f96662149>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <867584eee98c4e7d838c4b2f96662149>:0
    \n"
  stdout: ''
  timestamp: 1660015692
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (IsUnique(i)) {\n                result.Add(i);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxbn2a825.cs(16,17): error CS0103: The name ''IsUnique'' does not exist
    in the current context

    '
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var item in x) {\n            if (item.ToString().Any(c => c
    % 2 == 0))\n                continue;\n            result.Add(item);\n        }\n
    \       result.Sort();\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,
    (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,
    (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n
    \   Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,
    (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <febdfaaaa8234c379e3e0617b3b56cc0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <febdfaaaa8234c379e3e0617b3b56cc0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(i => i.ToString().All(c => c % 2 == 1)).OrderBy(i => i).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long num in x) {\n            if (IsUniqueDigits(num)) {\n                result.Add(num);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiqrvka6w.cs(16,17): error CS0103: The name ''IsUniqueDigits'' does not
    exist in the current context

    '
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(i => i.ToString().All(c => c % 2 == 1)).OrderBy(i => i).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var item in x) {\n            if (IsUniqueDigits(item)) {\n                result.Add(item);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpof1vuk6b.cs(16,17): error CS0103: The name ''IsUniqueDigits'' does not
    exist in the current context

    '
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long i in x) {\n            if (IsUnique(i)) {\n                result.Add(i);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxbn2a825.cs(16,17): error CS0103: The name ''IsUnique'' does not exist
    in the current context

    '
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var res = new List<long>();\n
    \       foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            res.Add(i);\n        }\n
    \       res.Sort();\n        return res;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0f6908c593b846d994e601cfb32d4d90>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0f6908c593b846d994e601cfb32d4d90>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Implement this function.\n
    \       return new List<long>();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5cf2200c2cf5432db271f616758eb483>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5cf2200c2cf5432db271f616758eb483>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015692
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> result = new List<long>();\n
    \       foreach (long num in x) {\n            if (IsUniqueDigits(num)) {\n                result.Add(num);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiqrvka6w.cs(16,17): error CS0103: The name ''IsUniqueDigits'' does not
    exist in the current context

    '
  timestamp: 1660015690
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(e => e.ToString().All(c => c % 2 == 1)).OrderBy(e => e).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3fc0137786734a4d8aeea01d3a046ff8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3fc0137786734a4d8aeea01d3a046ff8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(i => i.ToString().All(c => c % 2 == 1)).OrderBy(i => i).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c36ea7bd92a746ae9b4caf3c5d090625>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        return x.Where(n => n.ToString().All(c
    => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,
    (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,
    (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,
    (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new
    List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new
    long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <977af0fac30b47dcbbb8ab700df4fa3f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <977af0fac30b47dcbbb8ab700df4fa3f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            var hasEvenDigit = false;\n            var
    n = i;\n            while (n > 0) {\n                if ((n % 10) % 2 == 0) {\n
    \                   hasEvenDigit = true;\n                    break;\n                }\n
    \               n /= 10;\n            }\n            if (!hasEvenDigit) {\n                result.Add(i);\n
    \           }\n        }\n        result.Sort();\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <16c1459a66074736b2544c60ea970e0f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <16c1459a66074736b2544c60ea970e0f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015692
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> res = new List<long>();\n
    \       foreach (long i in x) {\n            if (IsUnique(i)) {\n                res.Add(i);\n
    \           }\n        }\n        res.Sort();\n        return res;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyww95fl8.cs(16,17): error CS0103: The name ''IsUnique'' does not exist
    in the current context

    '
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        List<long> res = new List<long>();\n
    \       foreach (long i in x) {\n            if (i < 10) {\n                res.Add(i);\n
    \           } else {\n                bool isUnique = true;\n                long
    tmp = i;\n                while (tmp > 0) {\n                    if (tmp % 2 ==
    0) {\n                        isUnique = false;\n                        break;\n
    \                   }\n                    tmp /= 10;\n                }\n                if
    (isUnique) {\n                    res.Add(i);\n                }\n            }\n
    \       }\n        res.Sort();\n        return res;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fb1111743c404d6b87f3d29f7477c18d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fb1111743c404d6b87f3d29f7477c18d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015692
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        List<long>
    result = new List<long>();\n        foreach (long number in x) {\n            if
    (IsUniqueDigits(number)) {\n                result.Add(number);\n            }\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprqrn70l5.cs(17,17): error CS0103: The name ''IsUniqueDigits'' does not
    exist in the current context

    '
  timestamp: 1660015692
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <e847aa5f5ed04729bca1abee82a25d67>:0
    \n"
  stdout: ''
  timestamp: 1660015689
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        // Write your code here\n        return
    x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new
    List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caec162edfa445fcb4cf40a35460df1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a list of positive integers x. return a sorted list of
    all \n    // elements that hasn't any even digit.\n    // Note: Returned list
    should be sorted in increasing order.\n    // For example:\n    public static
    List<long> UniqueDigits(List<long> x) {\n        var result = new List<long>();\n
    \       foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==
    0)) {\n                continue;\n            }\n            result.Add(i);\n
    \       }\n        result.Sort();\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new
    long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new
    List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new
    List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,
    (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,
    (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,
    (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22bd19a82cc9488c9ca28d68987ca907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015690

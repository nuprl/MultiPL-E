name: HumanEval_91_is_bored
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You'll be given a string of words, and your task is to count\
  \ the number\n    // of boredoms. A boredom is a sentence that starts with the word\
  \ \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n\
  \    public static long IsBored(string S) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
  Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
  \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
  bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
  \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for\
  \ a walk\")) == (0L));\n    }\n\n}\n"
completions: ["        // Your code here.\n        return 0;", "        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long count = 0;\n        int i = 0;\n        while (i <\
    \ S.Length) {\n            if (S[i] == 'I') {\n                count++;\n    \
    \            while (i < S.Length && S[i] != '.' && S[i] != '?' && S[i] != '!')\
    \ {\n                    i++;\n                }\n            }\n            i++;\n\
    \        }\n        return count;", "        long count = 0;\n        string[]\
    \ sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach (string\
    \ sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"I\"))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long count = 0;\n       \
    \ string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ string[] words = sentence.Split(new char[] { ' ' });\n            if (words.Length\
    \ > 0 && words[0] == \"I\") {\n                count++;\n            }\n     \
    \   }\n        return count;", "        // Write your code here\n        // To\
    \ debug: Console.Error.WriteLine(\"Debug messages...\");\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        // Write your code\
    \ here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\");\n\
    \        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        // Write your code here\n\
    \        // To debug: Console.Error.WriteLine(\"Debug messages...\");\n      \
    \  return S.Split(new char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"\
    I\"));", "        long count = 0;\n        string[] sentences = S.Split(new char[]\
    \ { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n    \
    \        if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long boredoms = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            string[] words = sentence.Split(new\
    \ char[] { ' ' });\n            if (words.Length > 0 && words[0] == \"I\") {\n\
    \                boredoms++;\n            }\n        }\n        return boredoms;",
  "        long boredoms = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' }, StringSplitOptions.RemoveEmptyEntries);\n        foreach (string\
    \ sentence in sentences) {\n            string[] words = sentence.Split(new char[]\
    \ { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n            if (words.Length\
    \ > 0 && words[0] == \"I\") {\n                boredoms++;\n            }\n  \
    \      }\n        return boredoms;", "        // Write your code here\n      \
    \  // To debug: Console.Error.WriteLine(\"Debug messages...\");\n        int count\
    \ = 0;\n        string[] sentences = S.Split('.', '?', '!');\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        long\
    \ boredoms = 0;\n        foreach (string sentence in sentences) {\n          \
    \  if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n   \
    \         }\n        }\n        return boredoms;", "        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long count = 0;\n        string[] words = S.Split('.',\
    \ '?', '!');\n        foreach (string word in words) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        // Write your code here\n\
    \        return 0;", "        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        var count = 0;\n \
    \       var words = S.Split(' ', '.', '?', '!');\n        foreach (var word in\
    \ words) {\n            if (word == \"I\") {\n                count++;\n     \
    \       }\n        }\n        return count;", "        return S.Split(new char[]\
    \ { '.', '?', '!' }).Count(x => x.Trim().StartsWith(\"I\"));", "        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' }, StringSplitOptions.RemoveEmptyEntries);\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ string[] words = sentence.Split(' ');\n            if (words.Length > 0 && words[0]\
    \ == \"I\") {\n                count++;\n            }\n        }\n        return\
    \ count;", "        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        // Split the string\
    \ into sentences.\n        string[] sentences = S.Split(new char[] { '.', '?',\
    \ '!' });\n        // Count the number of sentences that start with \"I\".\n \
    \       return sentences.Count(s => s.Trim().StartsWith(\"I\"));", "        long\
    \ count = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!'\
    \ });\n        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        int count = 0;\n        string[] words = S.Split('.',\
    \ '?', '!');\n        foreach (string word in words) {\n            if (word.Length\
    \ > 0 && word[0] == 'I') {\n                count++;\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        string[] sentences\
    \ = S.Split(new char[] { '.', '?', '!' });\n        foreach (string sentence in\
    \ sentences) {\n            if (sentence.Trim().StartsWith(\"I\")) {\n       \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        string[] sentences = S.Split(new char[] { '.', '?',\
    \ '!' });\n        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        var boredoms = 0;\n        var sentences = S.Split(new char[] { '.', '?',\
    \ '!' });\n        foreach (var sentence in sentences) {\n            if (sentence.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        // Your code here.\n\
    \        return 0;", "        // \"I am bored.\" => 1\n        // \"I am not bored.\"\
    \ => 0\n        // \"I am bored. I am not bored.\" => 2\n        // \"I am bored.\
    \ I am not bored. I am bored.\" => 3\n        // \"I am bored. I am not bored.\
    \ I am bored. I am not bored.\" => 4\n        // \"I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored.\" => 5\n        // \"I am bored. I am\
    \ not bored. I am bored. I am not bored. I am bored. I am not bored.\" => 6\n\
    \        // \"I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored.\" => 7\n        // \"I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored.\" => 8\n        // \"I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\"\
    \ => 9\n        // \"I am bored. I am not bored. I am bored. I am not bored. I\
    \ am bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\"\
    \ => 10\n        // \"I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored.\" => 11\n        // \"I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored.\" => 12\n        // \"I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored.\" => 13\n        // \"I am bored. I am not bored. I am bored.",
  "        // Split the string into sentences.\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        // Count the number of sentences that start\
    \ with \"I\".\n        return sentences.Count(s => s.Trim().StartsWith(\"I\"));",
  "        long boredoms = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n    \
    \        }\n        }\n        return boredoms;", "        var boredoms = 0;\n\
    \        var sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (var sentence in sentences) {\n            if (sentence.StartsWith(\"I\")) {\n\
    \                boredoms++;\n            }\n        }\n        return boredoms;",
  "        // Your code goes here\n        return 0;", "        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        return S.Split('.', '?',\
    \ '!').Count(s => s.Trim().StartsWith(\"I\"));", "        long boredoms = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long boredoms =\
    \ 0;\n        int i = 0;\n        while (i < S.Length) {\n            if (S[i]\
    \ == 'I') {\n                boredoms++;\n                while (i < S.Length\
    \ && S[i] != '.' && S[i] != '?' && S[i] != '!') {\n                    i++;\n\
    \                }\n            }\n            i++;\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        var boredoms = 0;\n        var sentences = S.Split(new[] { '.', '?', '!'\
    \ }, StringSplitOptions.RemoveEmptyEntries);\n        foreach (var sentence in\
    \ sentences) {\n            if (sentence.Trim().StartsWith(\"I\")) {\n       \
    \         boredoms++;\n            }\n        }\n        return boredoms;", " \
    \       long count = 0;\n        string[] words = S.Split('.', '?', '!');\n  \
    \      foreach (string word in words) {\n            if (word.StartsWith(\"I\"\
    )) {\n                count++;\n            }\n        }\n        return count;",
  "        long boredoms = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ string[] words = sentence.Split(new char[] { ' ' });\n            if (words.Length\
    \ > 0 && words[0] == \"I\") {\n                boredoms++;\n            }\n  \
    \      }\n        return boredoms;", "        long boredoms = 0;\n        int\
    \ i = 0;\n        while (i < S.Length) {\n            if (S[i] == 'I') {\n   \
    \             boredoms++;\n                while (i < S.Length && S[i] != '.'\
    \ && S[i] != '?' && S[i] != '!') {\n                    i++;\n               \
    \ }\n            }\n            i++;\n        }\n        return boredoms;", " \
    \       // Your code goes here\n        return 0;", "        // Split the string\
    \ into sentences.\n        string[] sentences = S.Split(new char[] { '.', '?',\
    \ '!' });\n        // Count the number of sentences that start with \"I\".\n \
    \       return sentences.Count(s => s.Trim().StartsWith(\"I\"));", "        long\
    \ count = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!'\
    \ });\n        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        var boredoms = 0;\n     \
    \   var sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach (var\
    \ sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"I\"))\
    \ {\n                boredoms++;\n            }\n        }\n        return boredoms;",
  "        // This is a boring sentence.\n        // I am not bored.\n        // I\
    \ am bored!\n        // I am bored?\n        // I am bored.\n        // I am bored!\n\
    \        // I am bored?\n        // I am bored.\n        // I am bored!\n    \
    \    // I am bored?\n        // I am bored.\n        // I am bored!\n        //\
    \ I am bored?\n        // I am bored.\n        // I am bored!\n        // I am\
    \ bored?\n        // I am bored.\n        // I am bored!\n        // I am bored?\n\
    \        // I am bored.\n        // I am bored!\n        // I am bored?\n    \
    \    // I am bored.\n        // I am bored!\n        // I am bored?\n        //\
    \ I am bored.\n        // I am bored!\n        // I am bored?\n        // I am\
    \ bored.\n        // I am bored!\n        // I am bored?\n        // I am bored.\n\
    \        // I am bored!\n        // I am bored?\n        // I am bored.\n    \
    \    // I am bored!\n        // I am bored?\n        // I am bored.\n        //\
    \ I am bored!\n        // I am bored?\n        // I am bored.\n        // I am\
    \ bored!\n        // I am bored?\n        // I am bored.\n        // I am bored!\n\
    \        // I am bored?\n        // I am bored.\n        // I am bored!\n    \
    \    // I am bored?\n        // I am bored.\n        // I am bored!\n        //\
    \ I am bored?\n        // I am bored.\n        // I am bored!\n        // I am\
    \ bored?\n        // I am bored.\n        // I am bored!\n        // I am bored?\n\
    \        // I am bored.\n        // I am bored!\n        // I am bored?\n    \
    \    // I am bored.\n        // I am bored!\n        // I am bored?\n        //\
    \ I am bored.\n        // I am bored!\n        // I am bored?\n        // I am\
    \ bored.\n        // I am bored!\n        // I am bored?\n        // I am bored.\n\
    \        // I am bored!\n        // I am", "        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        long count = 0;\n        foreach (string\
    \ sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"I\"))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long count = 0;\n       \
    \ string[] words = S.Split(new char[] { '.', '?', '!' });\n        foreach (string\
    \ word in words) {\n            if (word.Trim().StartsWith(\"I\")) {\n       \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  // Write your code here\n        // To debug: Console.Error.WriteLine(\"Debug\
    \ messages...\");\n        long count = 0;\n        string[] split = S.Split('.',\
    \ '?', '!');\n        foreach (string s in split) {\n            if (s.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        // Split the string into sentences\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        // Count the number of sentences that start\
    \ with \"I\"\n        return sentences.Count(s => s.Trim().StartsWith(\"I\"));",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long count = 0;\n       \
    \ string[] words = S.Split('.', '?', '!');\n        foreach (string word in words)\
    \ {\n            if (word.StartsWith(\"I\")) {\n                count++;\n   \
    \         }\n        }\n        return count;", "        // Your code here\n \
    \       return 0;", "        // Split the string into sentences.\n        var\
    \ sentences = S.Split(new[] { '.', '?', '!' }, StringSplitOptions.RemoveEmptyEntries);\n\
    \        // Count the number of sentences that start with \"I\".\n        return\
    \ sentences.Count(s => s.Trim().StartsWith(\"I\"));", "        long count = 0;\n\
    \        string[] words = S.Split('.', '?', '!');\n        foreach (string word\
    \ in words) {\n            if (word.StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long boredoms = 0;\n    \
    \    string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));", "      \
    \  // Write your code here\n        // To debug: Console.Error.WriteLine(\"Debug\
    \ messages...\");\n        int count = 0;\n        string[] words = S.Split('.',\
    \ '?', '!');\n        foreach (string word in words) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long count = 0;\n       \
    \ string[] words = S.Split(new char[] { '.', '?', '!' });\n        foreach (string\
    \ word in words) {\n            if (word.StartsWith(\"I\")) {\n              \
    \  count++;\n            }\n        }\n        return count;", "        // Split\
    \ the string into sentences.\n        var sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        // Count the sentences that start with \"I\".\n      \
    \  return sentences.Count(s => s.Trim().StartsWith(\"I\"));", "        long count\
    \ = 0;\n        int i = 0;\n        while (i < S.Length) {\n            if (S[i]\
    \ == 'I') {\n                count++;\n                while (i < S.Length &&\
    \ S[i] != '.' && S[i] != '?' && S[i] != '!') {\n                    i++;\n   \
    \             }\n            }\n            i++;\n        }\n        return count;",
  "        long boredoms = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n    \
    \        }\n        }\n        return boredoms;", "        // \"I am bored.\"\
    \ => 1\n        // \"I am not bored.\" => 0\n        // \"I am bored. I am not\
    \ bored.\" => 2\n        // \"I am bored. I am not bored. I am bored.\" => 3\n\
    \        // \"I am bored. I am not bored. I am bored. I am not bored.\" => 4\n\
    \        // \"I am bored. I am not bored. I am bored. I am not bored. I am bored.\"\
    \ => 5\n        // \"I am bored. I am not bored. I am bored. I am not bored. I\
    \ am bored. I am not bored.\" => 6\n        // \"I am bored. I am not bored. I\
    \ am bored. I am not bored. I am bored. I am not bored. I am bored.\" => 7\n \
    \       // \"I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored.\" => 8\n        // \"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored.\" => 9\n        // \"I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored.\" => 10\n        // \"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored.\" => 11\n   \
    \     // \"I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored.\" => 12\n        // \"I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored.\" => 13\n\
    \        // \"I am bored. I am not bored. I am bored.", "        long count =\
    \ 0;\n        string[] words = S.Split('.', '?', '!');\n        foreach (string\
    \ word in words) {\n            if (word.Trim().StartsWith(\"I\")) {\n       \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  // Write your code here\n        // To debug: Console.Error.WriteLine(\"Debug\
    \ messages...\");\n        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        // Your code here\n\
    \        return 0;", "        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long boredoms = 0;\n        // Split the string into sentences.\n     \
    \   string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            // Split the sentence into words.\n\
    \            string[] words = sentence.Split(' ');\n            // If the first\
    \ word is \"I\", it's a boredom.\n            if (words.Length > 0 && words[0]\
    \ == \"I\") {\n                boredoms++;\n            }\n        }\n       \
    \ return boredoms;", "        long boredoms = 0;\n        string[] sentences =\
    \ S.Split(new char[] { '.', '?', '!' });\n        foreach (string sentence in\
    \ sentences) {\n            if (sentence.Trim().StartsWith(\"I\")) {\n       \
    \         boredoms++;\n            }\n        }\n        return boredoms;", " \
    \       long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long count = 0;\n       \
    \ int i = 0;\n        while (i < S.Length) {\n            if (S[i] == 'I') {\n\
    \                count++;\n                while (i < S.Length && S[i] != '.'\
    \ && S[i] != '?' && S[i] != '!') {\n                    i++;\n               \
    \ }\n            }\n            i++;\n        }\n        return count;", "   \
    \     var count = 0;\n        var words = S.Split(' ', '.', '?', '!');\n     \
    \   foreach (var word in words) {\n            if (word == \"I\") {\n        \
    \        count++;\n            }\n        }\n        return count;", "       \
    \ // I am not bored.\n        // I am bored.\n        // I am not bored. I am\
    \ not bored.\n        // I am bored. I am bored.\n        // I am not bored. I\
    \ am bored. I am not bored. I am bored.\n        // I am not bored. I am not bored.\
    \ I am bored. I am bored.\n        // I am not bored. I am not bored. I am not\
    \ bored. I am not bored.\n        // I am bored. I am bored. I am bored. I am\
    \ bored.\n        // I am not bored. I am not bored. I am not bored. I am not\
    \ bored. I am not bored.\n        // I am bored. I am bored. I am bored. I am\
    \ bored. I am bored.\n        // I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored.\n        // I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored.\n        // I am not\
    \ bored. I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I am not bored.\n        // I am bored. I am bored. I am bored. I\
    \ am bored. I am bored. I am bored. I am bored.\n        // I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored.\n        // I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored.\n        // I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored.\n        // I\
    \ am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored.\n        // I am not bored. I am not bored. I am not\
    \ bored. I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I", "        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long boredoms = 0;\n    \
    \    string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long boredoms = 0;\n        int i = 0;\n        while (i < S.Length) {\n\
    \            if (S[i] == 'I') {\n                boredoms++;\n               \
    \ while (i < S.Length && S[i] != '.' && S[i] != '?' && S[i] != '!') {\n      \
    \              i++;\n                }\n            }\n            i++;\n    \
    \    }\n        return boredoms;", "        // Your code goes here.\n        return\
    \ 0;", "        long count = 0;\n        for (int i = 0; i < S.Length; i++) {\n\
    \            if (S[i] == 'I') {\n                count++;\n            }\n   \
    \     }\n        return count;", "        var boredoms = 0;\n        var words\
    \ = S.Split(new char[] { '.', '?', '!' });\n        foreach (var word in words)\
    \ {\n            var firstWord = word.Split(' ')[0];\n            if (firstWord\
    \ == \"I\") {\n                boredoms++;\n            }\n        }\n       \
    \ return boredoms;", "        var count = 0;\n        var words = S.Split('.',\
    \ '?', '!');\n        foreach (var word in words) {\n            if (word.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long boredoms = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n    \
    \        }\n        }\n        return boredoms;", "        long count = 0;\n \
    \       string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long boredoms = 0;\n        // Split the string into sentences.\n     \
    \   string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            // Split the sentence into words.\n\
    \            string[] words = sentence.Split(new char[] { ' ' });\n          \
    \  // If the first word is \"I\", we have a boredom.\n            if (words.Length\
    \ > 0 && words[0] == \"I\") {\n                boredoms++;\n            }\n  \
    \      }\n        return boredoms;", "        long count = 0;\n        string[]\
    \ sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach (string\
    \ sentence in sentences) {\n            string[] words = sentence.Split(new char[]\
    \ { ' ' });\n            if (words.Length > 0 && words[0] == \"I\") {\n      \
    \          count++;\n            }\n        }\n        return count;", "     \
    \   long count = 0;\n        string[] sentences = S.Split(new char[] { '.', '?',\
    \ '!' });\n        foreach (string sentence in sentences) {\n            string[]\
    \ words = sentence.Split(new char[] { ' ' });\n            if (words.Length >\
    \ 0 && words[0] == \"I\") {\n                count++;\n            }\n       \
    \ }\n        return count;", "        long count = 0;\n        string[] sentences\
    \ = S.Split(new char[] { '.', '?', '!' });\n        foreach (string sentence in\
    \ sentences) {\n            if (sentence.Trim().StartsWith(\"I\")) {\n       \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  // Split the string into sentences.\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        // Count the number of sentences that start\
    \ with \"I\".\n        return sentences.Count(s => s.Trim().StartsWith(\"I\"));",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long count = 0;\n       \
    \ string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            string[] words = sentence.Split('\
    \ ');\n            if (words.Length > 0 && words[0] == \"I\") {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!'\
    \ });\n        foreach (string sentence in sentences) {\n            string[]\
    \ words = sentence.Split(new char[] { ' ' });\n            if (words.Length >\
    \ 0 && words[0] == \"I\") {\n                count++;\n            }\n       \
    \ }\n        return count;", "        long count = 0;\n        string[] sentences\
    \ = S.Split(new char[] { '.', '?', '!' });\n        foreach (string sentence in\
    \ sentences) {\n            string[] words = sentence.Split(' ');\n          \
    \  if (words.Length > 0 && words[0] == \"I\") {\n                count++;\n  \
    \          }\n        }\n        return count;", "        // Write your code here\n\
    \        // To debug: Console.Error.WriteLine(\"Debug messages...\");\n      \
    \  long count = 0;\n        string[] words = S.Split('.', '?', '!');\n       \
    \ foreach (string word in words) {\n            if (word.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ string[] words = sentence.Split(' ');\n            if (words.Length > 0 && words[0]\
    \ == \"I\") {\n                count++;\n            }\n        }\n        return\
    \ count;", "        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long boredoms = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            string[] words = sentence.Split('\
    \ ');\n            if (words.Length > 0 && words[0] == \"I\") {\n            \
    \    boredoms++;\n            }\n        }\n        return boredoms;", "     \
    \   long count = 0;\n        string[] sentences = S.Split(new char[] { '.', '?',\
    \ '!' });\n        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] words = S.Split('.', '?', '!');\n   \
    \     foreach (string word in words) {\n            if (word.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long boredoms = 0;\n        var sentences = S.Split(new char[] { '.', '?',\
    \ '!' });\n        foreach (var sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\"))\n                boredoms++;\n        }\n        return boredoms;", "  \
    \      // Split the string into sentences.\n        var sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        // Count the number of sentences that start\
    \ with \"I\".\n        return sentences.Count(s => s.Trim().StartsWith(\"I\"));",
  "        long count = 0;\n        int i = 0;\n        while (i < S.Length) {\n \
    \           if (S[i] == 'I') {\n                count++;\n                while\
    \ (i < S.Length && S[i] != '.' && S[i] != '?' && S[i] != '!') {\n            \
    \        i++;\n                }\n            }\n            i++;\n        }\n\
    \        return count;", "        long boredoms = 0;\n        string[] sentences\
    \ = S.Split(new char[] { '.', '?', '!' });\n        foreach (string sentence in\
    \ sentences) {\n            if (sentence.Trim().StartsWith(\"I\")) {\n       \
    \         boredoms++;\n            }\n        }\n        return boredoms;", " \
    \       // Your code goes here\n        return 0;", "        // \"I am bored.\"\
    \ => 1\n        // \"I am not bored.\" => 0\n        // \"I am bored. I am not\
    \ bored.\" => 2\n        // \"I am bored. I am not bored. I am bored.\" => 3\n\
    \        // \"I am bored. I am not bored. I am bored. I am not bored.\" => 4\n\
    \        // \"I am bored. I am not bored. I am bored. I am not bored. I am bored.\"\
    \ => 5\n        // \"I am bored. I am not bored. I am bored. I am not bored. I\
    \ am bored. I am not bored.\" => 6\n        // \"I am bored. I am not bored. I\
    \ am bored. I am not bored. I am bored. I am not bored. I am bored.\" => 7\n \
    \       // \"I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored.\" => 8\n        // \"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored.\" => 9\n        // \"I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored.\" => 10\n        // \"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored.\" => 11\n   \
    \     // \"I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored.\" => 12\n        // \"I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored.\" => 13\n\
    \        // \"I am bored. I am not bored. I am bored.", "        long count =\
    \ 0;\n        for (int i = 0; i < S.Length; i++) {\n            if (S[i] == 'I')\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        // Split the string into sentences.\n        var sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        // Count the number of sentences that start\
    \ with \"I\".\n        return sentences.Count(s => s.Trim().StartsWith(\"I\"));",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.StartsWith(\"I\")) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        string[]\
    \ sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach (string\
    \ sentence in sentences) {\n            string[] words = sentence.Split(' ');\n\
    \            if (words.Length > 0 && words[0] == \"I\") {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        // I am bored. I am not bored.\
    \ I am bored.\n        // Should return 3.\n        // I am not bored. I am not\
    \ bored. I am not bored.\n        // Should return 0.\n        // I am bored.\
    \ I am bored. I am bored. I am bored.\n        // Should return 4.\n        //\
    \ I am bored. I am not bored. I am bored. I am not bored.\n        // Should return\
    \ 2.\n        // I am bored. I am bored. I am bored. I am bored. I am bored.\n\
    \        // Should return 5.\n        // I am bored. I am bored. I am bored. I\
    \ am bored. I am bored. I am bored.\n        // Should return 6.\n        // I\
    \ am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\n\
    \        // Should return 7.\n        // I am bored. I am bored. I am bored. I\
    \ am bored. I am bored. I am bored. I am bored. I am bored.\n        // Should\
    \ return 8.\n        // I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored.\n        // Should return 9.\n\
    \        // I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored.\n        // Should return 10.\n\
    \        // I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored.\n        // Should\
    \ return 11.\n        // I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored.\n        // Should return 12.\n        // I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored.\n        //", "     \
    \   // Your code goes here.\n        return 0;", "        var boredoms = 0;\n\
    \        var sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (var sentence in sentences) {\n            var words = sentence.Split(new char[]\
    \ { ' ' });\n            if (words.Length > 0 && words[0] == \"I\") {\n      \
    \          boredoms++;\n            }\n        }\n        return boredoms;", " \
    \       long boredoms = 0;\n        string[] sentences = S.Split(new char[] {\
    \ '.', '?', '!' });\n        foreach (string sentence in sentences) {\n      \
    \      string[] words = sentence.Split(' ');\n            if (words.Length > 0\
    \ && words[0] == \"I\") {\n                boredoms++;\n            }\n      \
    \  }\n        return boredoms;", "        long count = 0;\n        string[] words\
    \ = S.Split('.', '?', '!');\n        foreach (string word in words) {\n      \
    \      if (word.Trim().StartsWith(\"I\")) {\n                count++;\n      \
    \      }\n        }\n        return count;", "        // Your code here\n    \
    \    return 0;", "        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long boredoms = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            string[] words = sentence.Split(' ');\n            if (words.Length\
    \ > 0 && words[0] == \"I\") {\n                boredoms++;\n            }\n  \
    \      }\n        return boredoms;", "        long count = 0;\n        string[]\
    \ sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach (string\
    \ sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"I\"))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        // The string \"I am bored.\" contains 1 boredom.\n        // The string\
    \ \"I am bored. I am not.\" contains 2 boredoms.\n        // The string \"I am\
    \ bored. I am not. I am.\" contains 3 boredoms.\n        // The string \"I am\
    \ bored. I am not. I am. I am not.\" contains 4 boredoms.\n        // The string\
    \ \"I am bored. I am not. I am. I am not. I am.\" contains 5 boredoms.\n     \
    \   // The string \"I am bored. I am not. I am. I am not. I am. I am not.\" contains\
    \ 6 boredoms.\n        // The string \"I am bored. I am not. I am. I am not. I\
    \ am. I am not. I am.\" contains 7 boredoms.\n        // The string \"I am bored.\
    \ I am not. I am. I am not. I am. I am not. I am. I am not.\" contains 8 boredoms.\n\
    \        // The string \"I am bored. I am not. I am. I am not. I am. I am not.\
    \ I am. I am not. I am.\" contains 9 boredoms.\n        // The string \"I am bored.\
    \ I am not. I am. I am not. I am. I am not. I am. I am not. I am. I am not.\"\
    \ contains 10 boredoms.\n        // The string \"I am bored. I am not. I am. I\
    \ am not. I am. I am not. I am. I am not. I am. I am not. I am.\" contains 11\
    \ boredoms.\n        // The string \"I am bored. I am not. I am. I am not. I am.\
    \ I am not. I am. I am not. I am. I am not. I am. I am not.\" contains 12 boredoms.\n\
    \        // The string \"I am bored. I am not. I am. I am not. I am. I am not.\
    \ I am. I am not. I am. I am not. I am. I am not. I am.\" contains 13 boredoms.\n\
    \        // The string \"I am bored. I am not. I am. I am not. I am. I am not.\
    \ I am. I am not. I am. I am not.", "        long boredoms = 0;\n        string[]\
    \ sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach (string\
    \ sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"I\"))\
    \ {\n                boredoms++;\n            }\n        }\n        return boredoms;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long boredoms = 0;\n    \
    \    string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        // Your code here\n        return 0;", "        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] words = S.Split('.', '?', '!');\n   \
    \     foreach (string word in words) {\n            if (word.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long count = 0;\n       \
    \ string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long count = 0;\n       \
    \ string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim() == \"I\") {\n                count++;\n            }\n \
    \       }\n        return count;", "        long boredoms = 0;\n        string[]\
    \ sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach (string\
    \ sentence in sentences) {\n            if (sentence.StartsWith(\"I\")) {\n  \
    \              boredoms++;\n            }\n        }\n        return boredoms;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Length > 0 && sentence[0] == 'I') {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long boredoms = 0;\n        var sentences = S.Split(new char[] { '.', '?',\
    \ '!' });\n        foreach (var sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long count = 0;\n       \
    \ string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long boredoms = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n    \
    \        }\n        }\n        return boredoms;", "        long count = 0;\n \
    \       string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long boredoms = 0;\n        string[] sentences\
    \ = S.Split(new char[] { '.', '?', '!' });\n        foreach (string sentence in\
    \ sentences) {\n            if (sentence.Trim().StartsWith(\"I\")) {\n       \
    \         boredoms++;\n            }\n        }\n        return boredoms;", " \
    \       return S.Split(new char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"\
    I\"));", "        long count = 0;\n        string[] words = S.Split('.', '?',\
    \ '!');\n        foreach (string word in words) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        string[] words = S.Split('.', '?', '!');\n        foreach (string word\
    \ in words) {\n            if (word.Trim().StartsWith(\"I\")) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        string[] words = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string word in words) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        // The string \"I am bored.\" contains 1 boredom.\n        // The string\
    \ \"I am bored. I am not.\" contains 2 boredoms.\n        // The string \"I am\
    \ bored. I am not. I am.\" contains 3 boredoms.\n        // The string \"I am\
    \ bored. I am not. I am. I am not.\" contains 4 boredoms.\n        // The string\
    \ \"I am bored. I am not. I am. I am not. I am.\" contains 5 boredoms.\n     \
    \   // The string \"I am bored. I am not. I am. I am not. I am. I am not.\" contains\
    \ 6 boredoms.\n        // The string \"I am bored. I am not. I am. I am not. I\
    \ am. I am not. I am.\" contains 7 boredoms.\n        // The string \"I am bored.\
    \ I am not. I am. I am not. I am. I am not. I am. I am not.\" contains 8 boredoms.\n\
    \        // The string \"I am bored. I am not. I am. I am not. I am. I am not.\
    \ I am. I am not. I am.\" contains 9 boredoms.\n        // The string \"I am bored.\
    \ I am not. I am. I am not. I am. I am not. I am. I am not. I am. I am not.\"\
    \ contains 10 boredoms.\n        // The string \"I am bored. I am not. I am. I\
    \ am not. I am. I am not. I am. I am not. I am. I am not. I am.\" contains 11\
    \ boredoms.\n        // The string \"I am bored. I am not. I am. I am not. I am.\
    \ I am not. I am. I am not. I am. I am not. I am. I am not.\" contains 12 boredoms.\n\
    \        // The string \"I am bored. I am not. I am. I am not. I am. I am not.\
    \ I am. I am not. I am. I am not. I am. I am not. I am.\" contains 13 boredoms.\n\
    \        // The string \"I am bored. I am not. I am. I am not. I am. I am not.\
    \ I am. I am not. I am. I am not.", "        long count = 0;\n        string[]\
    \ sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach (string\
    \ sentence in sentences) {\n            if (sentence.StartsWith(\"I\")) {\n  \
    \              count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long boredoms = 0;\n    \
    \    string[] sentences = S.Split(new char[] { '.', '?', '!' }, StringSplitOptions.RemoveEmptyEntries);\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        // Your code goes here\n        return 0;", "        long boredoms = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long count = 0;\n        string[] words = S.Split('.',\
    \ '?', '!');\n        foreach (string word in words) {\n            if (word.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        var boredoms = 0;\n        var sentences = S.Split(new char[] { '.', '?',\
    \ '!' }, StringSplitOptions.RemoveEmptyEntries);\n        foreach (var sentence\
    \ in sentences) {\n            if (sentence.Trim().StartsWith(\"I\")) {\n    \
    \            boredoms++;\n            }\n        }\n        return boredoms;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long count = 0;\n       \
    \ string[] words = S.Split('.', '?', '!');\n        foreach (string word in words)\
    \ {\n            if (word.StartsWith(\"I\")) {\n                count++;\n   \
    \         }\n        }\n        return count;", "        long count = 0;\n   \
    \     string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        return S.Split(new char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"\
    I\"));", "        // I am not bored.\n        // I am bored.\n        // I am\
    \ not bored!\n        // I am not bored?\n        // I am not bored. I am not\
    \ bored. I am not bored.\n        // I am not bored. I am not bored. I am bored.\n\
    \        // I am not bored. I am not bored. I am bored. I am not bored.\n    \
    \    // I am not bored. I am not bored. I am bored. I am not bored. I am bored.\n\
    \        // I am not bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored.\n        // I am not bored. I am not bored. I am bored. I am\
    \ not bored. I am bored. I am not bored. I am bored.\n        // I am not bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored.\n        // I am not bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored.\n        // I am not bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored.\n        // I am not bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored.\n        // I am not bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored.\n        // I am not bored. I am\
    \ not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored.\n        // I am not bored. I am not bored. I am bored. I am not bored.\
    \ I am bored.", "        // Your code here.\n        return 0;", "        long\
    \ count = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!'\
    \ });\n        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long count = 0;\n       \
    \ string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            string[] words = sentence.Split(new\
    \ char[] { ' ' });\n            if (words.Length > 0 && words[0] == \"I\") {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       // Split the string into sentences.\n        var sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        long count = 0;\n        foreach (var sentence\
    \ in sentences) {\n            // Split the sentence into words.\n           \
    \ var words = sentence.Split(new char[] { ' ' });\n            if (words.Length\
    \ > 0 && words[0] == \"I\") {\n                count++;\n            }\n     \
    \   }\n        return count;", "        long boredoms = 0;\n        // Split the\
    \ string into sentences.\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ // Split the sentence into words.\n            string[] words = sentence.Split(new\
    \ char[] { ' ' });\n            if (words.Length > 0 && words[0] == \"I\") {\n\
    \                boredoms++;\n            }\n        }\n        return boredoms;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ string[] words = sentence.Split(new char[] { ' ' });\n            if (words.Length\
    \ > 0 && words[0] == \"I\") {\n                count++;\n            }\n     \
    \   }\n        return count;", "        long count = 0;\n        string[] sentences\
    \ = S.Split(new char[] { '.', '?', '!' });\n        foreach (string sentence in\
    \ sentences) {\n            if (sentence.Trim().StartsWith(\"I\")) {\n       \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        string[] sentences = S.Split(new char[] { '.', '?',\
    \ '!' });\n        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        // Split the string into sentences.\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        // Count the number of sentences that start\
    \ with \"I\".\n        return sentences.Count(s => s.Trim().StartsWith(\"I\"));",
  "        var boredoms = 0;\n        var words = S.Split(new char[] { '.', '?', '!'\
    \ });\n        foreach (var word in words) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        // Split the string into sentences.\n        string[] sentences\
    \ = S.Split(new char[] { '.', '?', '!' });\n        // Count the number of sentences\
    \ that start with \"I\".\n        return sentences.Count(s => s.Trim().StartsWith(\"\
    I\"));", "        // This is a boring sentence.\n        // This is a boring sentence!\n\
    \        // This is a boring sentence?\n        // This is a boring sentence.\n\
    \        // I am bored!\n        // I am bored.\n        // I am bored?\n    \
    \    // I am bored!\n        // I am bored.\n        // I am bored?\n        //\
    \ I am bored!\n        // I am bored.\n        // I am bored?\n        // I am\
    \ bored!\n        // I am bored.\n        // I am bored?\n        // I am bored!\n\
    \        // I am bored.\n        // I am bored?\n        // I am bored!\n    \
    \    // I am bored.\n        // I am bored?\n        // I am bored!\n        //\
    \ I am bored.\n        // I am bored?\n        // I am bored!\n        // I am\
    \ bored.\n        // I am bored?\n        // I am bored!\n        // I am bored.\n\
    \        // I am bored?\n        // I am bored!\n        // I am bored.\n    \
    \    // I am bored?\n        // I am bored!\n        // I am bored.\n        //\
    \ I am bored?\n        // I am bored!\n        // I am bored.\n        // I am\
    \ bored?\n        // I am bored!\n        // I am bored.\n        // I am bored?\n\
    \        // I am bored!\n        // I am bored.\n        // I am bored?\n    \
    \    // I am bored!\n        // I am bored.\n        // I am bored?\n        //\
    \ I am bored!\n        // I am bored.\n        // I am bored?\n        // I am\
    \ bored!\n        // I am bored.\n        // I am bored?\n        // I am bored!\n\
    \        // I am bored.\n        // I am bored?\n        // I am bored!\n    \
    \    // I am bored.\n        // I am bored?\n        // I am bored!\n        //\
    \ I am bored.\n        // I am bored?\n        // I am bored!\n        // I am\
    \ bored.\n        // I am bored?\n        // I am bored!\n        // I am bored.\n\
    \        // I am bored?\n        // I am bored!\n        // I am bored.", "  \
    \      long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long boredoms = 0;\n    \
    \    string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;"]
stop_tokens:
- "\n    }\n"

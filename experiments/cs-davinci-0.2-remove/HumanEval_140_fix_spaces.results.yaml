language: cs
name: HumanEval_140_fix_spaces
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count > 2)\n                {\n
    \                   result += '-';\n                    count = 0;\n                }\n
    \               else\n                {\n                    result += '_';\n
    \               }\n            }\n            else\n            {\n                result
    += text[i];\n                count = 0;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var prev = ' ';\n        var
    count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n                if
    (prev == ' ') {\n                    count++;\n                } else {\n                    count
    = 1;\n                }\n            } else {\n                if (count > 2)
    {\n                    sb.Append('-');\n                } else {\n                    for
    (int i = 0; i < count; i++) {\n                        sb.Append('_');\n                    }\n
    \               }\n                count = 0;\n            }\n            if (c
    != ' ') {\n                sb.Append(c);\n            }\n            prev = c;\n
    \       }\n        if (count > 2) {\n            sb.Append('-');\n        } else
    {\n            for (int i = 0; i < count; i++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       StringBuilder sb = new StringBuilder();\n        int count = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count > 2) {\n                    sb.Append('-');\n                    count
    = 0;\n                }\n            } else {\n                if (count > 0)
    {\n                    sb.Append('_', count);\n                    count = 0;\n
    \               }\n                sb.Append(text[i]);\n            }\n        }\n
    \       if (count > 0) {\n            sb.Append('_', count);\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var last = ' ';\n        var
    count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n                if
    (last == ' ') {\n                    count++;\n                } else {\n                    count
    = 1;\n                }\n            } else {\n                if (count > 2)
    {\n                    sb.Append('-');\n                } else {\n                    for
    (int i = 0; i < count; i++) {\n                        sb.Append('_');\n                    }\n
    \               }\n                count = 0;\n            }\n            if (c
    != ' ') {\n                sb.Append(c);\n            }\n            last = c;\n
    \       }\n        if (count > 2) {\n            sb.Append('-');\n        } else
    {\n            for (int i = 0; i < count; i++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        for (int i = 0; i < text.Length; i++)\n
    \       {\n            if (text[i] == ' ')\n            {\n                if
    (i != 0 && text[i - 1] == ' ')\n                {\n                    result
    += '-';\n                }\n                else\n                {\n                    result
    += '_';\n                }\n            }\n            else\n            {\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <70347e9690094c0ab456af346d0752f9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <70347e9690094c0ab456af346d0752f9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var lastSpace = false;\n        var
    consecutiveSpaces = 0;\n        foreach (var c in text) {\n            if (c ==
    ' ') {\n                if (lastSpace) {\n                    consecutiveSpaces++;\n
    \               } else {\n                    consecutiveSpaces = 1;\n                }\n
    \               lastSpace = true;\n            } else {\n                if (consecutiveSpaces
    > 2) {\n                    sb.Append('-');\n                } else {\n                    for
    (var i = 0; i < consecutiveSpaces; i++) {\n                        sb.Append('_');\n
    \                   }\n                }\n                consecutiveSpaces =
    0;\n                lastSpace = false;\n                sb.Append(c);\n            }\n
    \       }\n        if (consecutiveSpaces > 2) {\n            sb.Append('-');\n
    \       } else {\n            for (var i = 0; i < consecutiveSpaces; i++) {\n
    \               sb.Append('_');\n            }\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += '_';\n                }\n                else if
    (count > 2)\n                {\n                    result += '-';\n                }\n
    \           }\n            else\n            {\n                result += text[i];\n
    \               count = 0;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4fd75bf79fb84322a200a33a74ffa32e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4fd75bf79fb84322a200a33a74ffa32e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 0) {\n                    if (spaces > 2)
    {\n                        sb.Append('-');\n                    } else {\n                        for
    (int i = 0; i < spaces; i++) {\n                            sb.Append('_');\n
    \                       }\n                    }\n                    spaces =
    0;\n                }\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 0) {\n            if (spaces > 2) {\n                sb.Append('-');\n
    \           } else {\n                for (int i = 0; i < spaces; i++) {\n                    sb.Append('_');\n
    \               }\n            }\n        }\n        return sb.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaceCount = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n
    \               if (spaceCount > 2) {\n                    sb.Append('-');\n                    spaceCount
    = 0;\n                }\n            } else {\n                if (spaceCount
    > 0) {\n                    sb.Append('_');\n                    spaceCount =
    0;\n                }\n                sb.Append(c);\n            }\n        }\n
    \       if (spaceCount > 0) {\n            sb.Append('_');\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7484211a30694d9bad08b6ee8014eeb6>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: implement\n        return null;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0000b] in <5396312bfe544f8396a1777f7f5b5de5>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0000b] in <5396312bfe544f8396a1777f7f5b5de5>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces == 1) {\n                    sb.Append('_');\n
    \               } else if (spaces > 1) {\n                    sb.Append('-');\n
    \               }\n                sb.Append(c);\n                spaces = 0;\n
    \           }\n        }\n        if (spaces == 1) {\n            sb.Append('_');\n
    \       } else if (spaces > 1) {\n            sb.Append('-');\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5028652eb1cc493bb3deeaf50c59355a>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var prev = ' ';\n        var
    count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n                count++;\n
    \               if (count > 2) {\n                    if (prev != '-') {\n                        sb.Append('-');\n
    \                       prev = '-';\n                    }\n                }
    else {\n                    if (prev != '_') {\n                        sb.Append('_');\n
    \                       prev = '_';\n                    }\n                }\n
    \           } else {\n                count = 0;\n                sb.Append(c);\n
    \               prev = c;\n            }\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <df444773835544e3980db75218970f0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <df444773835544e3980db75218970f0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // Write your code here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3acb0b9ee8114095990d0eebbe78f85a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3acb0b9ee8114095990d0eebbe78f85a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 0) {\n                    if (spaces > 2)
    {\n                        sb.Append('-');\n                    } else {\n                        for
    (int i = 0; i < spaces; i++) {\n                            sb.Append('_');\n
    \                       }\n                    }\n                    spaces =
    0;\n                }\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 0) {\n            if (spaces > 2) {\n                sb.Append('-');\n
    \           } else {\n                for (int i = 0; i < spaces; i++) {\n                    sb.Append('_');\n
    \               }\n            }\n        }\n        return sb.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // Your code goes here\n        return text;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <11c0f8d12fcd4df7a65b44d299e5f01e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <11c0f8d12fcd4df7a65b44d299e5f01e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var ch in text) {\n            if (ch == ' ') {\n                spaces++;\n
    \           } else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(ch);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <98ab3fc47b514122826d7a900bee2378>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <98ab3fc47b514122826d7a900bee2378>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        bool prevSpace = false;\n
    \       foreach (char c in text) {\n            if (c == ' ') {\n                if
    (prevSpace) {\n                    sb.Append('-');\n                } else {\n
    \                   sb.Append('_');\n                }\n                prevSpace
    = true;\n            } else {\n                sb.Append(c);\n                prevSpace
    = false;\n            }\n        }\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1585bb411e204f96827d16798b48e141>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1585bb411e204f96827d16798b48e141>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        return text;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <728b3e72162e4a86a284726db90d4f8f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <728b3e72162e4a86a284726db90d4f8f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: implement this method\n        //throw new NotImplementedException();\n
    \       return text.Replace(\" \", \"_\").Replace(\"__\", \"-\");\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <05d30527355947dd893905982530ddcc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <05d30527355947dd893905982530ddcc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       StringBuilder sb = new StringBuilder();\n        int spaceCount = 0;\n
    \       for (int i = 0; i < text.Length; i++) {\n            if (text[i] == '
    ') {\n                spaceCount++;\n                if (spaceCount == 1) {\n
    \                   sb.Append('_');\n                }\n                else if
    (spaceCount == 2) {\n                    sb.Append('-');\n                }\n
    \           }\n            else {\n                spaceCount = 0;\n                sb.Append(text[i]);\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7c392846597b46968ede89db55e3eef0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7c392846597b46968ede89db55e3eef0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var prev = ' ';\n        var
    count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n                if
    (prev == ' ') {\n                    count++;\n                } else {\n                    count
    = 1;\n                }\n            } else {\n                if (count > 2)
    {\n                    sb.Append('-');\n                } else {\n                    for
    (int i = 0; i < count; i++) {\n                        sb.Append('_');\n                    }\n
    \               }\n                count = 0;\n            }\n            if (c
    != ' ') {\n                sb.Append(c);\n            }\n            prev = c;\n
    \       }\n        if (count > 2) {\n            sb.Append('-');\n        } else
    {\n            for (int i = 0; i < count; i++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                spaces++;\n
    \           } else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int j = 0; j < spaces; j++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(text[i]);\n            }\n
    \       }\n        if (spaces > 2) {\n            sb.Append('-');\n        } else
    {\n            for (int j = 0; j < spaces; j++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // Write your code here\n        return text;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7dec831a38a04307a19fc66d36b8c3b9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7dec831a38a04307a19fc66d36b8c3b9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaceCount = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n
    \               if (spaceCount == 1) {\n                    sb.Append('_');\n
    \               }\n            } else {\n                if (spaceCount > 2) {\n
    \                   sb.Append('-');\n                } else {\n                    for
    (int i = 0; i < spaceCount; i++) {\n                        sb.Append('_');\n
    \                   }\n                }\n                spaceCount = 0;\n                sb.Append(c);\n
    \           }\n        }\n        if (spaceCount > 2) {\n            sb.Append('-');\n
    \       } else {\n            for (int i = 0; i < spaceCount; i++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3430dde14cc34afa9e93b39539aeb830>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3430dde14cc34afa9e93b39539aeb830>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: implement this method\n        //throw new NotImplementedException();\n
    \       StringBuilder sb = new StringBuilder();\n        int count = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count > 2) {\n                    sb.Append('-');\n                    count
    = 0;\n                }\n            } else {\n                if (count > 0)
    {\n                    sb.Append('_', count);\n                    count = 0;\n
    \               }\n                sb.Append(text[i]);\n            }\n        }\n
    \       if (count > 0) {\n            sb.Append('_', count);\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += '_';\n                }\n                else if
    (count == 2)\n                {\n                    result += '-';\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        bool lastWasSpace
    = false;\n        int consecutiveSpaces = 0;\n        foreach (char c in text)
    {\n            if (c == ' ') {\n                if (lastWasSpace) {\n                    consecutiveSpaces++;\n
    \               } else {\n                    consecutiveSpaces = 1;\n                }\n
    \               lastWasSpace = true;\n            } else {\n                if
    (consecutiveSpaces > 2) {\n                    sb.Append('-');\n                }
    else {\n                    for (int i = 0; i < consecutiveSpaces; i++) {\n                        sb.Append('_');\n
    \                   }\n                }\n                consecutiveSpaces =
    0;\n                lastWasSpace = false;\n                sb.Append(c);\n            }\n
    \       }\n        if (consecutiveSpaces > 2) {\n            sb.Append('-');\n
    \       } else {\n            for (int i = 0; i < consecutiveSpaces; i++) {\n
    \               sb.Append('_');\n            }\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var last = ' ';\n        var
    count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n                count++;\n
    \               if (count > 2) {\n                    if (last != '-') {\n                        sb.Append('-');\n
    \                       last = '-';\n                    }\n                }
    else {\n                    if (last != '_') {\n                        sb.Append('_');\n
    \                       last = '_';\n                    }\n                }\n
    \           } else {\n                count = 0;\n                sb.Append(c);\n
    \               last = c;\n            }\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1832bb27b4914aa389aead0a36272bae>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1832bb27b4914aa389aead0a36272bae>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <98ab3fc47b514122826d7a900bee2378>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <98ab3fc47b514122826d7a900bee2378>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var lastWasSpace = false;\n
    \       var consecutiveSpaces = 0;\n        foreach (var c in text) {\n            if
    (c == ' ') {\n                consecutiveSpaces++;\n                if (consecutiveSpaces
    > 2) {\n                    if (!lastWasSpace) {\n                        sb.Append('-');\n
    \                       lastWasSpace = true;\n                    }\n                }
    else {\n                    sb.Append('_');\n                    lastWasSpace
    = true;\n                }\n            } else {\n                sb.Append(c);\n
    \               lastWasSpace = false;\n                consecutiveSpaces = 0;\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e4b1e708d1441ee99bcd163c3bbfe91>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e4b1e708d1441ee99bcd163c3bbfe91>:0
    \n"
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var prev = ' ';\n        var
    count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n                if
    (prev == ' ') {\n                    count++;\n                } else {\n                    count
    = 1;\n                }\n            } else {\n                if (count > 2)
    {\n                    sb.Append('-');\n                } else {\n                    for
    (int i = 0; i < count; i++) {\n                        sb.Append('_');\n                    }\n
    \               }\n                count = 0;\n            }\n            if (c
    != ' ') {\n                sb.Append(c);\n            }\n            prev = c;\n
    \       }\n        if (count > 2) {\n            sb.Append('-');\n        } else
    {\n            for (int i = 0; i < count; i++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var result = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var ch in text) {\n            if (ch == ' ') {\n                spaces++;\n
    \           } else {\n                if (spaces > 2) {\n                    result.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        result.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                result.Append(ch);\n            }\n
    \       }\n        if (spaces > 2) {\n            result.Append('-');\n        }
    else {\n            for (int i = 0; i < spaces; i++) {\n                result.Append('_');\n
    \           }\n        }\n        return result.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count > 2)\n                {\n
    \                   result += '-';\n                    count = 0;\n                }\n
    \               else\n                {\n                    result += '_';\n
    \               }\n            }\n            else\n            {\n                result
    += text[i];\n                count = 0;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces == 1) {\n                    sb.Append('_');\n
    \               } else if (spaces > 1) {\n                    sb.Append('-');\n
    \               }\n                sb.Append(c);\n                spaces = 0;\n
    \           }\n        }\n        if (spaces == 1) {\n            sb.Append('_');\n
    \       } else if (spaces > 1) {\n            sb.Append('-');\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5028652eb1cc493bb3deeaf50c59355a>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // Your code goes here\n        return text;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <11c0f8d12fcd4df7a65b44d299e5f01e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <11c0f8d12fcd4df7a65b44d299e5f01e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces == 1) {\n                    sb.Append('_');\n
    \               } else if (spaces > 1) {\n                    sb.Append('-');\n
    \               }\n                sb.Append(c);\n                spaces = 0;\n
    \           }\n        }\n        if (spaces == 1) {\n            sb.Append('_');\n
    \       } else if (spaces > 1) {\n            sb.Append('-');\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5028652eb1cc493bb3deeaf50c59355a>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var lastSpace = false;\n        var
    consecutiveSpaces = 0;\n        foreach (var c in text) {\n            if (c ==
    ' ') {\n                if (lastSpace) {\n                    consecutiveSpaces++;\n
    \               } else {\n                    consecutiveSpaces = 1;\n                }\n
    \               lastSpace = true;\n            } else {\n                if (consecutiveSpaces
    > 2) {\n                    sb.Append('-');\n                } else {\n                    for
    (var i = 0; i < consecutiveSpaces; i++) {\n                        sb.Append('_');\n
    \                   }\n                }\n                consecutiveSpaces =
    0;\n                lastSpace = false;\n                sb.Append(c);\n            }\n
    \       }\n        if (consecutiveSpaces > 2) {\n            sb.Append('-');\n
    \       } else {\n            for (var i = 0; i < consecutiveSpaces; i++) {\n
    \               sb.Append('_');\n            }\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaceCount = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n
    \               if (spaceCount > 2) {\n                    sb.Append('-');\n                    spaceCount
    = 0;\n                }\n            } else {\n                if (spaceCount
    > 0) {\n                    sb.Append('_');\n                    spaceCount =
    0;\n                }\n                sb.Append(c);\n            }\n        }\n
    \       if (spaceCount > 0) {\n            sb.Append('_');\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7484211a30694d9bad08b6ee8014eeb6>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces == 1) {\n                    sb.Append('_');\n
    \               } else if (spaces > 1) {\n                    sb.Append('-');\n
    \               }\n                sb.Append(c);\n                spaces = 0;\n
    \           }\n        }\n        if (spaces == 1) {\n            sb.Append('_');\n
    \       } else if (spaces > 1) {\n            sb.Append('-');\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5028652eb1cc493bb3deeaf50c59355a>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var lastWasSpace = false;\n
    \       var consecutiveSpaces = 0;\n        foreach (var c in text) {\n            if
    (c == ' ') {\n                consecutiveSpaces++;\n                if (consecutiveSpaces
    == 3) {\n                    sb.Append('-');\n                    consecutiveSpaces
    = 0;\n                }\n                lastWasSpace = true;\n            } else
    {\n                if (lastWasSpace) {\n                    sb.Append('_');\n
    \                   lastWasSpace = false;\n                }\n                sb.Append(c);\n
    \               consecutiveSpaces = 0;\n            }\n        }\n        if (lastWasSpace)
    {\n            sb.Append('_');\n        }\n        return sb.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8bde58c72615430da19c50850fd8c95d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8bde58c72615430da19c50850fd8c95d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += '_';\n                }\n                else if
    (count == 2)\n                {\n                    result += '-';\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        bool space = false;\n
    \       for (int i = 0; i < text.Length; i++) {\n            if (text[i] == '
    ') {\n                if (space) {\n                    sb.Append('-');\n                }
    else {\n                    sb.Append('_');\n                    space = true;\n
    \               }\n            } else {\n                sb.Append(text[i]);\n
    \               space = false;\n            }\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a56302ed10fb4c67a7fde71e39ec4dce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a56302ed10fb4c67a7fde71e39ec4dce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        return text.Replace(\" \", \"_\").Replace(\"__\", \"-\");\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1203b5c4cd574cc7ac052fcf4e65c711>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1203b5c4cd574cc7ac052fcf4e65c711>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var last = ' ';\n        var
    count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n                count++;\n
    \               if (count > 2) {\n                    sb.Append('-');\n                    count
    = 0;\n                }\n            } else {\n                if (count > 0)
    {\n                    sb.Append('_', count);\n                    count = 0;\n
    \               }\n                sb.Append(c);\n            }\n        }\n        if
    (count > 0) {\n            sb.Append('_', count);\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var last = ' ';\n        var
    count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n                if
    (last == ' ') {\n                    count++;\n                } else {\n                    count
    = 1;\n                }\n            } else {\n                if (count > 2)
    {\n                    sb.Append('-');\n                } else {\n                    for
    (int i = 0; i < count; i++) {\n                        sb.Append('_');\n                    }\n
    \               }\n                count = 0;\n            }\n            if (c
    != ' ') {\n                sb.Append(c);\n            }\n            last = c;\n
    \       }\n        if (count > 2) {\n            sb.Append('-');\n        } else
    {\n            for (int i = 0; i < count; i++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count > 2)\n                {\n
    \                   result += '-';\n                    count = 0;\n                }\n
    \               else\n                {\n                    result += '_';\n
    \               }\n            }\n            else\n            {\n                result
    += text[i];\n                count = 0;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       StringBuilder sb = new StringBuilder();\n        bool isSpace = false;\n
    \       for (int i = 0; i < text.Length; i++) {\n            if (text[i] == '
    ') {\n                if (isSpace) {\n                    sb.Append('-');\n                }
    else {\n                    sb.Append('_');\n                }\n                isSpace
    = true;\n            } else {\n                sb.Append(text[i]);\n                isSpace
    = false;\n            }\n        }\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ee183e6a925488b943d45cf40b25411>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ee183e6a925488b943d45cf40b25411>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaceCount = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n
    \               if (spaceCount == 1) {\n                    sb.Append('_');\n
    \               }\n            } else {\n                if (spaceCount > 2) {\n
    \                   sb.Append('-');\n                } else {\n                    for
    (int i = 0; i < spaceCount; i++) {\n                        sb.Append('_');\n
    \                   }\n                }\n                spaceCount = 0;\n                sb.Append(c);\n
    \           }\n        }\n        if (spaceCount > 2) {\n            sb.Append('-');\n
    \       } else {\n            for (int i = 0; i < spaceCount; i++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3430dde14cc34afa9e93b39539aeb830>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3430dde14cc34afa9e93b39539aeb830>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       return text.Replace(\" \", \"_\").Replace(\"__\", \"-\");\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <91467ae4f63447baa44b7224f0ac5bed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <91467ae4f63447baa44b7224f0ac5bed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var lastChar = ' ';\n        var
    spaceCount = 0;\n        foreach (var c in text) {\n            if (c == ' ')
    {\n                if (lastChar == ' ') {\n                    spaceCount++;\n
    \               } else {\n                    spaceCount = 1;\n                }\n
    \           } else {\n                if (spaceCount > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaceCount;
    i++) {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaceCount = 0;\n                sb.Append(c);\n            }\n
    \           lastChar = c;\n        }\n        if (spaceCount > 2) {\n            sb.Append('-');\n
    \       } else {\n            for (int i = 0; i < spaceCount; i++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var prev = ' ';\n        var
    count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n                count++;\n
    \               if (count > 2) {\n                    if (prev != '-') {\n                        sb.Append('-');\n
    \                       prev = '-';\n                    }\n                }
    else {\n                    if (prev != '_') {\n                        sb.Append('_');\n
    \                       prev = '_';\n                    }\n                }\n
    \           } else {\n                count = 0;\n                sb.Append(c);\n
    \               prev = c;\n            }\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <df444773835544e3980db75218970f0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <df444773835544e3980db75218970f0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var prev = ' ';\n        var
    count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n                if
    (prev == ' ') {\n                    count++;\n                } else {\n                    count
    = 1;\n                }\n            } else {\n                if (count > 2)
    {\n                    sb.Append('-');\n                } else {\n                    for
    (int i = 0; i < count; i++) {\n                        sb.Append('_');\n                    }\n
    \               }\n                count = 0;\n            }\n            if (c
    != ' ') {\n                sb.Append(c);\n            }\n            prev = c;\n
    \       }\n        if (count > 2) {\n            sb.Append('-');\n        } else
    {\n            for (int i = 0; i < count; i++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var last = ' ';\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                if (last == '
    ') {\n                    sb.Append('-');\n                } else {\n                    sb.Append('_');\n
    \               }\n            } else {\n                sb.Append(c);\n            }\n
    \           last = c;\n        }\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50cfd628365f42b6ab80d4026c5caeab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50cfd628365f42b6ab80d4026c5caeab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: implement this method\n        //throw new NotImplementedException();\n
    \       StringBuilder sb = new StringBuilder();\n        int count = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count == 1) {\n                    sb.Append('_');\n                }\n
    \               else if (count == 2) {\n                    sb.Append('-');\n
    \               }\n            }\n            else {\n                count =
    0;\n                sb.Append(text[i]);\n            }\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <920f7668c34c423fbebfe37f33093596>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <920f7668c34c423fbebfe37f33093596>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count > 2)\n                {\n
    \                   result += '-';\n                    count = 0;\n                }\n
    \               else\n                {\n                    result += '_';\n
    \               }\n            }\n            else\n            {\n                result
    += text[i];\n                count = 0;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        return \"\";\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d9813e24998342a896f87a13fcc62d37>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d9813e24998342a896f87a13fcc62d37>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        if (text == null)\n            return null;\n        if (text.Length
    == 0)\n            return text;\n        var sb = new StringBuilder();\n        var
    prev = '\\0';\n        var count = 0;\n        foreach (var c in text) {\n            if
    (c == ' ') {\n                count++;\n                if (count == 1) {\n                    sb.Append('_');\n
    \               }\n            } else {\n                if (count > 2) {\n                    sb.Append('-');\n
    \               } else if (count == 2) {\n                    sb.Append('_');\n
    \                   sb.Append('_');\n                }\n                count
    = 0;\n                sb.Append(c);\n            }\n        }\n        if (count
    > 2) {\n            sb.Append('-');\n        } else if (count == 2) {\n            sb.Append('_');\n
    \           sb.Append('_');\n        }\n        return sb.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5bcc175920874b249600c5da935688fc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5bcc175920874b249600c5da935688fc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var result = new StringBuilder();\n        var lastSpace = false;\n
    \       var spaceCount = 0;\n        foreach (var c in text) {\n            if
    (c == ' ') {\n                spaceCount++;\n                if (spaceCount >
    2) {\n                    if (!lastSpace) {\n                        result.Append('-');\n
    \                       lastSpace = true;\n                    }\n                }
    else {\n                    result.Append('_');\n                    lastSpace
    = true;\n                }\n            } else {\n                result.Append(c);\n
    \               lastSpace = false;\n                spaceCount = 0;\n            }\n
    \       }\n        return result.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <81014f6c438b4a1a894116a080a7d161>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <81014f6c438b4a1a894116a080a7d161>:0
    \n"
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        bool space = false;\n
    \       for (int i = 0; i < text.Length; i++) {\n            if (text[i] == '
    ') {\n                if (space) {\n                    sb.Append('-');\n                }
    else {\n                    sb.Append('_');\n                    space = true;\n
    \               }\n            } else {\n                sb.Append(text[i]);\n
    \               space = false;\n            }\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a56302ed10fb4c67a7fde71e39ec4dce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a56302ed10fb4c67a7fde71e39ec4dce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       return text.Replace(\" \", \"_\").Replace(\"__\", \"-\");\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <91467ae4f63447baa44b7224f0ac5bed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <91467ae4f63447baa44b7224f0ac5bed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += \"_\";\n                }\n                else
    if (count == 2)\n                {\n                    result += \"-\";\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62bf5d4f8f7a49a2a38c54de71f3658e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62bf5d4f8f7a49a2a38c54de71f3658e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        bool space = false;\n
    \       for (int i = 0; i < text.Length; i++) {\n            if (text[i] == '
    ') {\n                if (space) {\n                    sb.Append('-');\n                }
    else {\n                    sb.Append('_');\n                    space = true;\n
    \               }\n            } else {\n                sb.Append(text[i]);\n
    \               space = false;\n            }\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a56302ed10fb4c67a7fde71e39ec4dce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a56302ed10fb4c67a7fde71e39ec4dce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var last = ' ';\n        var
    count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n                if
    (last == ' ') {\n                    count++;\n                } else {\n                    count
    = 1;\n                }\n            } else {\n                if (count > 2)
    {\n                    sb.Append('-');\n                } else {\n                    for
    (int i = 0; i < count; i++) {\n                        sb.Append('_');\n                    }\n
    \               }\n                count = 0;\n            }\n            if (c
    != ' ') {\n                sb.Append(c);\n            }\n            last = c;\n
    \       }\n        if (count > 2) {\n            sb.Append('-');\n        } else
    {\n            for (int i = 0; i < count; i++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        string result = \"\";\n        int spaces = 0;\n        for (int i
    = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                spaces++;\n
    \               if (spaces == 1) {\n                    result += '_';\n                }\n
    \           } else {\n                if (spaces > 2) {\n                    result
    += '-';\n                } else {\n                    for (int j = 0; j < spaces;
    j++) {\n                        result += '_';\n                    }\n                }\n
    \               spaces = 0;\n                result += text[i];\n            }\n
    \       }\n        if (spaces > 2) {\n            result += '-';\n        } else
    {\n            for (int j = 0; j < spaces; j++) {\n                result += '_';\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6bc70dd316a54141a9fe7957bd39907c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6bc70dd316a54141a9fe7957bd39907c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaceCount = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n
    \               if (spaceCount == 1) {\n                    sb.Append('_');\n
    \               }\n            } else {\n                if (spaceCount > 2) {\n
    \                   sb.Append('-');\n                } else {\n                    for
    (int i = 0; i < spaceCount; i++) {\n                        sb.Append('_');\n
    \                   }\n                }\n                spaceCount = 0;\n                sb.Append(c);\n
    \           }\n        }\n        if (spaceCount > 2) {\n            sb.Append('-');\n
    \       } else {\n            for (int i = 0; i < spaceCount; i++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3430dde14cc34afa9e93b39539aeb830>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3430dde14cc34afa9e93b39539aeb830>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += '_';\n                }\n                else if
    (count == 2)\n                {\n                    result += '-';\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var ch in text) {\n            if (ch == ' ') {\n                spaces++;\n
    \           } else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(ch);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        int count = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count == 1) {\n                    sb.Append('_');\n                }\n
    \           } else {\n                if (count > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int j = 0; j < count; j++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               count = 0;\n                sb.Append(text[i]);\n            }\n
    \       }\n        if (count > 2) {\n            sb.Append('-');\n        } else
    {\n            for (int j = 0; j < count; j++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8cb03ab072f74680ae05e6cc6dde9662>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8cb03ab072f74680ae05e6cc6dde9662>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count > 2)\n                {\n
    \                   result += '-';\n                    count = 0;\n                }\n
    \               else\n                {\n                    result += '_';\n
    \               }\n            }\n            else\n            {\n                result
    += text[i];\n                count = 0;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var ch in text) {\n            if (ch == ' ') {\n                spaces++;\n
    \           } else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(ch);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var lastSpace = false;\n        var
    consecutiveSpaces = 0;\n        foreach (var c in text) {\n            if (c ==
    ' ') {\n                consecutiveSpaces++;\n                if (consecutiveSpaces
    > 2) {\n                    if (!lastSpace) {\n                        sb.Append('-');\n
    \                       lastSpace = true;\n                    }\n                }
    else {\n                    sb.Append('_');\n                    lastSpace = true;\n
    \               }\n            } else {\n                consecutiveSpaces = 0;\n
    \               sb.Append(c);\n                lastSpace = false;\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <273082882033424194a9c9c4ee54bccf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <273082882033424194a9c9c4ee54bccf>:0
    \n"
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += \"_\";\n                }\n                else
    if (count == 2)\n                {\n                    result += \"-\";\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62bf5d4f8f7a49a2a38c54de71f3658e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62bf5d4f8f7a49a2a38c54de71f3658e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces == 1) {\n                    sb.Append('_');\n
    \               } else if (spaces > 1) {\n                    sb.Append('-');\n
    \               }\n                sb.Append(c);\n                spaces = 0;\n
    \           }\n        }\n        if (spaces == 1) {\n            sb.Append('_');\n
    \       } else if (spaces > 1) {\n            sb.Append('-');\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5028652eb1cc493bb3deeaf50c59355a>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var lastChar = ' ';\n        var
    spaceCount = 0;\n        foreach (var c in text) {\n            if (c == ' ')
    {\n                spaceCount++;\n                if (spaceCount > 2) {\n                    sb.Append('-');\n
    \                   spaceCount = 0;\n                }\n            } else {\n
    \               if (spaceCount > 0) {\n                    sb.Append('_');\n                    spaceCount
    = 0;\n                }\n                sb.Append(c);\n            }\n        }\n
    \       if (spaceCount > 0) {\n            sb.Append('_');\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4019e64e3525411b9dd4f2cfb0d1623d>:0
    \n"
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += '_';\n                }\n                else if
    (count == 2)\n                {\n                    result += '-';\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while
    (i < text.Length) {\n            if (text[i] == ' ') {\n                sb.Append('_');\n
    \               i++;\n                while (i < text.Length && text[i] == ' ')
    {\n                    sb.Append('-');\n                    i++;\n                }\n
    \           } else {\n                sb.Append(text[i]);\n                i++;\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b5a25e90b8e4bfba39c49319c89ebdc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b5a25e90b8e4bfba39c49319c89ebdc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaceCount = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n
    \               if (spaceCount == 1) {\n                    sb.Append('_');\n
    \               }\n            } else {\n                if (spaceCount > 2) {\n
    \                   sb.Append('-');\n                } else if (spaceCount ==
    2) {\n                    sb.Append('_');\n                    sb.Append('_');\n
    \               }\n                spaceCount = 0;\n                sb.Append(c);\n
    \           }\n        }\n        if (spaceCount > 2) {\n            sb.Append('-');\n
    \       } else if (spaceCount == 2) {\n            sb.Append('_');\n            sb.Append('_');\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c802981ad0e34c9a9111188d8ef77173>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c802981ad0e34c9a9111188d8ef77173>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    sb.Append('_', spaces);\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            sb.Append('_',
    spaces);\n        }\n        return sb.ToString();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       StringBuilder sb = new StringBuilder();\n        int count = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count == 1) {\n                    sb.Append('_');\n                }\n
    \               else if (count > 2) {\n                    sb.Append('-');\n                }\n
    \           }\n            else {\n                count = 0;\n                sb.Append(text[i]);\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72f03de2e80540c4bdfbb64f3e033c54>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72f03de2e80540c4bdfbb64f3e033c54>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count > 2)\n                {\n
    \                   result += '-';\n                    count = 0;\n                }\n
    \               else\n                {\n                    result += '_';\n
    \               }\n            }\n            else\n            {\n                result
    += text[i];\n                count = 0;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        return text.Replace(\" \", \"_\").Replace(\"__\", \"-\");\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1203b5c4cd574cc7ac052fcf4e65c711>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1203b5c4cd574cc7ac052fcf4e65c711>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        bool space = false;\n
    \       for (int i = 0; i < text.Length; i++) {\n            if (text[i] == '
    ') {\n                if (space) {\n                    sb.Append('-');\n                }
    else {\n                    sb.Append('_');\n                    space = true;\n
    \               }\n            } else {\n                sb.Append(text[i]);\n
    \               space = false;\n            }\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a56302ed10fb4c67a7fde71e39ec4dce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a56302ed10fb4c67a7fde71e39ec4dce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var prev = ' ';\n        var
    count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n                if
    (prev == ' ') {\n                    count++;\n                } else {\n                    count
    = 1;\n                }\n            } else {\n                if (count > 2)
    {\n                    sb.Append('-');\n                } else {\n                    sb.Append('_',
    count);\n                }\n                count = 0;\n            }\n            sb.Append(c);\n
    \           prev = c;\n        }\n        if (count > 2) {\n            sb.Append('-');\n
    \       } else {\n            sb.Append('_', count);\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd4bcbd4cc7543ff98efdc1d30e47fd0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd4bcbd4cc7543ff98efdc1d30e47fd0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        return text.Replace(\" \", \"_\").Replace(\"__\", \"-\");\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1203b5c4cd574cc7ac052fcf4e65c711>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1203b5c4cd574cc7ac052fcf4e65c711>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       StringBuilder sb = new StringBuilder();\n        int count = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count > 2) {\n                    sb.Append('-');\n                    count
    = 0;\n                }\n            } else {\n                if (count > 0)
    {\n                    sb.Append('_', count);\n                    count = 0;\n
    \               }\n                sb.Append(text[i]);\n            }\n        }\n
    \       if (count > 0) {\n            sb.Append('_', count);\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += '_';\n                }\n                else if
    (count == 2)\n                {\n                    result += '-';\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2ac21929204a441db59c4175abc8aef0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2ac21929204a441db59c4175abc8aef0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       return text.Replace(\" \", \"_\").Replace(\"__\", \"-\");\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <91467ae4f63447baa44b7224f0ac5bed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <91467ae4f63447baa44b7224f0ac5bed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var result = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces == 1) {\n                    result.Append('_');\n
    \               } else if (spaces > 1) {\n                    result.Append('-');\n
    \               }\n                result.Append(c);\n                spaces =
    0;\n            }\n        }\n        if (spaces == 1) {\n            result.Append('_');\n
    \       } else if (spaces > 1) {\n            result.Append('-');\n        }\n
    \       return result.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e64b9b2437e14ab9afd03aa42949fbff>:0
    \n"
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += '_';\n                }\n                else if
    (count == 2)\n                {\n                    result += '-';\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        string result = \"\";\n        int count = 0;\n        for (int i =
    0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count == 1) {\n                    result += '_';\n                }\n
    \           } else {\n                if (count > 2) {\n                    result
    += '-';\n                } else {\n                    for (int j = 0; j < count;
    j++) {\n                        result += '_';\n                    }\n                }\n
    \               count = 0;\n                result += text[i];\n            }\n
    \       }\n        if (count > 2) {\n            result += '-';\n        } else
    {\n            for (int j = 0; j < count; j++) {\n                result += '_';\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2f45387f86484afdba4288cbe9f962a0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2f45387f86484afdba4288cbe9f962a0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += '_';\n                }\n                else if
    (count == 2)\n                {\n                    result += '-';\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += \"_\";\n                }\n                else
    if (count == 2)\n                {\n                    result += \"-\";\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62bf5d4f8f7a49a2a38c54de71f3658e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62bf5d4f8f7a49a2a38c54de71f3658e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        int spaces = 0;\n
    \       for (int i = 0; i < text.Length; i++) {\n            if (text[i] == '
    ') {\n                spaces++;\n            } else {\n                if (spaces
    > 2) {\n                    sb.Append('-');\n                } else {\n                    for
    (int j = 0; j < spaces; j++) {\n                        sb.Append('_');\n                    }\n
    \               }\n                spaces = 0;\n                sb.Append(text[i]);\n
    \           }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n
    \       } else {\n            for (int j = 0; j < spaces; j++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += '_';\n                }\n                else if
    (count == 2)\n                {\n                    result += '-';\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var result = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    result.Append('-');\n
    \               } else {\n                    result.Append('_', spaces);\n                }\n
    \               spaces = 0;\n                result.Append(c);\n            }\n
    \       }\n        if (spaces > 2) {\n            result.Append('-');\n        }
    else {\n            result.Append('_', spaces);\n        }\n        return result.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var lastSpace = false;\n        var
    consecutiveSpaces = 0;\n        foreach (var c in text) {\n            if (c ==
    ' ') {\n                consecutiveSpaces++;\n                if (consecutiveSpaces
    > 2) {\n                    if (!lastSpace) {\n                        sb.Append('-');\n
    \                       lastSpace = true;\n                    }\n                }
    else {\n                    sb.Append('_');\n                    lastSpace = true;\n
    \               }\n            } else {\n                consecutiveSpaces = 0;\n
    \               sb.Append(c);\n                lastSpace = false;\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <273082882033424194a9c9c4ee54bccf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <273082882033424194a9c9c4ee54bccf>:0
    \n"
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        int count = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count > 2) {\n                    sb.Append('-');\n                    count
    = 0;\n                }\n            } else {\n                if (count > 0)
    {\n                    sb.Append('_', count);\n                    count = 0;\n
    \               }\n                sb.Append(text[i]);\n            }\n        }\n
    \       if (count > 0) {\n            sb.Append('_', count);\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        int count = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count > 2) {\n                    sb.Append('-');\n                    count
    = 0;\n                }\n            } else {\n                if (count > 0)
    {\n                    sb.Append('_', count);\n                    count = 0;\n
    \               }\n                sb.Append(text[i]);\n            }\n        }\n
    \       if (count > 0) {\n            sb.Append('_', count);\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaceCount = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n
    \               if (spaceCount == 1) {\n                    sb.Append('_');\n
    \               }\n            } else {\n                if (spaceCount > 2) {\n
    \                   sb.Append('-');\n                } else {\n                    for
    (int i = 0; i < spaceCount; i++) {\n                        sb.Append('_');\n
    \                   }\n                }\n                spaceCount = 0;\n                sb.Append(c);\n
    \           }\n        }\n        if (spaceCount > 2) {\n            sb.Append('-');\n
    \       } else {\n            for (int i = 0; i < spaceCount; i++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3430dde14cc34afa9e93b39539aeb830>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3430dde14cc34afa9e93b39539aeb830>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count > 2)\n                {\n
    \                   result += '-';\n                    count = 0;\n                }\n
    \               else\n                {\n                    result += '_';\n
    \               }\n            }\n            else\n            {\n                result
    += text[i];\n                count = 0;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       return text.Replace(\" \", \"_\").Replace(\"__\", \"_-\");\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <68b4a63b2f2248a4882c0ac004946113>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <68b4a63b2f2248a4882c0ac004946113>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var lastSpace = false;\n        var
    consecutiveSpaces = 0;\n        foreach (var c in text) {\n            if (c ==
    ' ') {\n                consecutiveSpaces++;\n                lastSpace = true;\n
    \           } else {\n                if (lastSpace) {\n                    if
    (consecutiveSpaces > 2) {\n                        sb.Append('-');\n                    }
    else {\n                        for (int i = 0; i < consecutiveSpaces; i++) {\n
    \                           sb.Append('_');\n                        }\n                    }\n
    \                   consecutiveSpaces = 0;\n                }\n                lastSpace
    = false;\n                sb.Append(c);\n            }\n        }\n        if
    (lastSpace) {\n            if (consecutiveSpaces > 2) {\n                sb.Append('-');\n
    \           } else {\n                for (int i = 0; i < consecutiveSpaces; i++)
    {\n                    sb.Append('_');\n                }\n            }\n        }\n
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count > 2)\n                {\n
    \                   result += '-';\n                    count = 0;\n                }\n
    \               else\n                {\n                    result += '_';\n
    \               }\n            }\n            else\n            {\n                result
    += text[i];\n                count = 0;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count > 2)\n                {\n
    \                   result += '-';\n                    count = 0;\n                }\n
    \               else\n                {\n                    result += '_';\n
    \               }\n            }\n            else\n            {\n                result
    += text[i];\n                count = 0;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var prev = ' ';\n        var
    count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n                if
    (prev == ' ') {\n                    count++;\n                } else {\n                    count
    = 1;\n                }\n            } else {\n                if (count > 2)
    {\n                    sb.Append('-');\n                } else {\n                    sb.Append('_',
    count);\n                }\n                count = 0;\n            }\n            sb.Append(c);\n
    \           prev = c;\n        }\n        if (count > 2) {\n            sb.Append('-');\n
    \       } else {\n            sb.Append('_', count);\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd4bcbd4cc7543ff98efdc1d30e47fd0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd4bcbd4cc7543ff98efdc1d30e47fd0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var result = new StringBuilder();\n        var spaceCount = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n
    \               if (spaceCount == 1) {\n                    result.Append('_');\n
    \               }\n            } else {\n                if (spaceCount > 2) {\n
    \                   result.Append('-');\n                } else {\n                    for
    (int i = 0; i < spaceCount; i++) {\n                        result.Append('_');\n
    \                   }\n                }\n                spaceCount = 0;\n                result.Append(c);\n
    \           }\n        }\n        if (spaceCount > 2) {\n            result.Append('-');\n
    \       } else {\n            for (int i = 0; i < spaceCount; i++) {\n                result.Append('_');\n
    \           }\n        }\n        return result.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e0c520d45bf24db79ea4a7ee4e3b50ae>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e0c520d45bf24db79ea4a7ee4e3b50ae>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                spaces++;\n
    \           } else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int j = 0; j < spaces; j++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(text[i]);\n            }\n
    \       }\n        if (spaces > 2) {\n            sb.Append('-');\n        } else
    {\n            for (int j = 0; j < spaces; j++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += \"_\";\n                }\n                else
    if (count > 2)\n                {\n                    result += \"-\";\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5acb80c36a98488f886cccaf2dcdb48d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5acb80c36a98488f886cccaf2dcdb48d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        int count = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count == 1) {\n                    sb.Append('_');\n                }\n
    \           } else {\n                if (count > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int j = 0; j < count; j++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               count = 0;\n                sb.Append(text[i]);\n            }\n
    \       }\n        if (count > 2) {\n            sb.Append('-');\n        } else
    {\n            for (int j = 0; j < count; j++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8cb03ab072f74680ae05e6cc6dde9662>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8cb03ab072f74680ae05e6cc6dde9662>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var result = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces == 1) {\n                    result.Append('_');\n
    \               } else if (spaces > 1) {\n                    result.Append('-');\n
    \               }\n                result.Append(c);\n                spaces =
    0;\n            }\n        }\n        if (spaces == 1) {\n            result.Append('_');\n
    \       } else if (spaces > 1) {\n            result.Append('-');\n        }\n
    \       return result.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e64b9b2437e14ab9afd03aa42949fbff>:0
    \n"
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var last = ' ';\n        var
    count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n                count++;\n
    \               if (count == 2) {\n                    sb.Append('-');\n                    count
    = 0;\n                }\n            } else {\n                if (last == ' ')
    {\n                    sb.Append('_');\n                }\n                sb.Append(c);\n
    \               count = 0;\n            }\n            last = c;\n        }\n
    \       if (last == ' ') {\n            sb.Append('_');\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19511f6d90c64fbf97d5fe378d374907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19511f6d90c64fbf97d5fe378d374907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var prev = ' ';\n        var
    count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n                if
    (prev == ' ') {\n                    count++;\n                } else {\n                    count
    = 1;\n                }\n            } else {\n                if (count > 2)
    {\n                    sb.Append('-');\n                } else {\n                    for
    (int i = 0; i < count; i++) {\n                        sb.Append('_');\n                    }\n
    \               }\n                count = 0;\n            }\n            prev
    = c;\n            sb.Append(c);\n        }\n        return sb.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e2484b71a51410881000baa25c57cbb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e2484b71a51410881000baa25c57cbb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var count = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                count++;\n                if
    (count == 2) {\n                    sb.Append('-');\n                    count
    = 0;\n                }\n            } else {\n                if (count == 1)
    {\n                    sb.Append('_');\n                }\n                count
    = 0;\n                sb.Append(c);\n            }\n        }\n        if (count
    == 1) {\n            sb.Append('_');\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <104466bb40314eb2aa4c30160a0de2bb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <104466bb40314eb2aa4c30160a0de2bb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var ch in text) {\n            if (ch == ' ') {\n                spaces++;\n
    \           } else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(ch);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       StringBuilder sb = new StringBuilder();\n        int count = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count > 2) {\n                    sb.Append('-');\n                    count
    = 0;\n                }\n            } else {\n                if (count > 0)
    {\n                    sb.Append('_', count);\n                    count = 0;\n
    \               }\n                sb.Append(text[i]);\n            }\n        }\n
    \       if (count > 0) {\n            sb.Append('_', count);\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       StringBuilder sb = new StringBuilder();\n        int count = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count == 1) {\n                    sb.Append('_');\n                }\n
    \               else if (count > 2) {\n                    sb.Append('-');\n                }\n
    \           }\n            else {\n                count = 0;\n                sb.Append(text[i]);\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72f03de2e80540c4bdfbb64f3e033c54>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72f03de2e80540c4bdfbb64f3e033c54>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        string result = \"\";\n        int count = 0;\n        for (int i =
    0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count == 1) {\n                    result += \"_\";\n                }\n
    \           } else {\n                if (count > 2) {\n                    result
    += \"-\";\n                } else {\n                    for (int j = 0; j < count;
    j++) {\n                        result += \"_\";\n                    }\n                }\n
    \               count = 0;\n                result += text[i];\n            }\n
    \       }\n        if (count > 2) {\n            result += \"-\";\n        } else
    {\n            for (int j = 0; j < count; j++) {\n                result += \"_\";\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c5a205e66d72419ebe6319037b1b07b1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c5a205e66d72419ebe6319037b1b07b1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var lastSpace = false;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                if (lastSpace)
    {\n                    sb.Append('-');\n                } else {\n                    sb.Append('_');\n
    \               }\n                lastSpace = true;\n            } else {\n                sb.Append(c);\n
    \               lastSpace = false;\n            }\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19f60af6ef184fb3b2ab814003853df3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19f60af6ef184fb3b2ab814003853df3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        bool lastWasSpace = false;\n
    \       bool lastWasDoubleSpace = false;\n        foreach (var c in text) {\n
    \           if (c == ' ') {\n                if (lastWasSpace) {\n                    if
    (!lastWasDoubleSpace) {\n                        sb.Append('-');\n                        lastWasDoubleSpace
    = true;\n                    }\n                } else {\n                    sb.Append('_');\n
    \                   lastWasSpace = true;\n                }\n            } else
    {\n                sb.Append(c);\n                lastWasSpace = false;\n                lastWasDoubleSpace
    = false;\n            }\n        }\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <05b94e36ed9649ef843edf3f3d1c1e8f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <05b94e36ed9649ef843edf3f3d1c1e8f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var result = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    result.Append('-');\n
    \               } else {\n                    result.Append('_', spaces);\n                }\n
    \               spaces = 0;\n                result.Append(c);\n            }\n
    \       }\n        if (spaces > 2) {\n            result.Append('-');\n        }
    else {\n            result.Append('_', spaces);\n        }\n        return result.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var prev = ' ';\n        var
    count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n                count++;\n
    \               if (count == 1) {\n                    sb.Append('_');\n                }\n
    \           } else {\n                if (count > 2) {\n                    sb.Append('-');\n
    \               } else if (count == 2) {\n                    sb.Append('_');\n
    \                   sb.Append('_');\n                }\n                sb.Append(c);\n
    \               count = 0;\n            }\n        }\n        if (count > 2) {\n
    \           sb.Append('-');\n        } else if (count == 2) {\n            sb.Append('_');\n
    \           sb.Append('_');\n        }\n        return sb.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b428877ccecb41f6b6bed98620875f76>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b428877ccecb41f6b6bed98620875f76>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaceCount = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                spaceCount++;\n
    \           } else {\n                if (spaceCount > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int j = 0; j < spaceCount;
    j++) {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaceCount = 0;\n                sb.Append(text[i]);\n            }\n
    \       }\n        if (spaceCount > 2) {\n            sb.Append('-');\n        }
    else {\n            for (int j = 0; j < spaceCount; j++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += '_';\n                }\n                else if
    (count > 2)\n                {\n                    result += '-';\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9777a327a1c84ea0af49851e6fc6fa3a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9777a327a1c84ea0af49851e6fc6fa3a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        bool space = false;\n
    \       foreach (char c in text) {\n            if (c == ' ') {\n                if
    (space) {\n                    sb.Append('-');\n                } else {\n                    sb.Append('_');\n
    \                   space = true;\n                }\n            } else {\n                sb.Append(c);\n
    \               space = false;\n            }\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <60d2dd2b2d424396a65bc9d4a4b28483>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <60d2dd2b2d424396a65bc9d4a4b28483>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var lastSpace = false;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                if (lastSpace)
    {\n                    sb.Append('-');\n                } else {\n                    sb.Append('_');\n
    \               }\n                lastSpace = true;\n            } else {\n                sb.Append(c);\n
    \               lastSpace = false;\n            }\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19f60af6ef184fb3b2ab814003853df3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19f60af6ef184fb3b2ab814003853df3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       StringBuilder sb = new StringBuilder();\n        int count = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count > 2) {\n                    sb.Append('-');\n                    count
    = 0;\n                }\n            } else {\n                if (count > 0)
    {\n                    sb.Append('_', count);\n                    count = 0;\n
    \               }\n                sb.Append(text[i]);\n            }\n        }\n
    \       if (count > 0) {\n            sb.Append('_', count);\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        int count = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count > 2) {\n                    sb.Append('-');\n                    count
    = 0;\n                }\n            } else {\n                if (count > 0)
    {\n                    sb.Append('_', count);\n                    count = 0;\n
    \               }\n                sb.Append(text[i]);\n            }\n        }\n
    \       if (count > 0) {\n            sb.Append('_', count);\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces == 1) {\n                    sb.Append('_');\n
    \               } else if (spaces > 1) {\n                    sb.Append('-');\n
    \               }\n                sb.Append(c);\n                spaces = 0;\n
    \           }\n        }\n        if (spaces == 1) {\n            sb.Append('_');\n
    \       } else if (spaces > 1) {\n            sb.Append('-');\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5028652eb1cc493bb3deeaf50c59355a>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += '_';\n                }\n                else if
    (count > 2)\n                {\n                    result += '-';\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9777a327a1c84ea0af49851e6fc6fa3a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9777a327a1c84ea0af49851e6fc6fa3a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var lastChar = ' ';\n        var
    consecutiveSpaces = 0;\n        foreach (var c in text) {\n            if (c ==
    ' ') {\n                consecutiveSpaces++;\n                if (consecutiveSpaces
    > 2) {\n                    sb.Append('-');\n                    consecutiveSpaces
    = 0;\n                }\n            } else {\n                if (consecutiveSpaces
    > 0) {\n                    sb.Append('_');\n                    consecutiveSpaces
    = 0;\n                }\n                sb.Append(c);\n            }\n        }\n
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8224cf07b3854a8a85e0b20b6031f65d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8224cf07b3854a8a85e0b20b6031f65d>:0
    \n"
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaceCount = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n
    \               if (spaceCount == 1) {\n                    sb.Append('_');\n
    \               }\n            } else {\n                if (spaceCount > 1) {\n
    \                   sb.Append('-');\n                }\n                sb.Append(c);\n
    \               spaceCount = 0;\n            }\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca10d2d30396452b8d3693767331b2ea>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca10d2d30396452b8d3693767331b2ea>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // your code here\n        return \"\";\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e5f9b0d2b47548d6a6d1150f2cd4c820>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e5f9b0d2b47548d6a6d1150f2cd4c820>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       StringBuilder sb = new StringBuilder();\n        int count = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count == 1) {\n                    sb.Append('_');\n                }\n
    \               else if (count > 2) {\n                    sb.Append('-');\n                }\n
    \           }\n            else {\n                sb.Append(text[i]);\n                count
    = 0;\n            }\n        }\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0c1df362fb8d4551ae261002c3e7c85c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0c1df362fb8d4551ae261002c3e7c85c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += '_';\n                }\n                else if
    (count == 2)\n                {\n                    result += '-';\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        int spaces = 0;\n
    \       foreach (char c in text) {\n            if (c == ' ') {\n                spaces++;\n
    \           } else {\n                if (spaces == 1) {\n                    sb.Append('_');\n
    \               } else if (spaces > 1) {\n                    sb.Append('-');\n
    \               }\n                sb.Append(c);\n                spaces = 0;\n
    \           }\n        }\n        if (spaces == 1) {\n            sb.Append('_');\n
    \       } else if (spaces > 1) {\n            sb.Append('-');\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <317641ad41d84349acf7530c38f9097e>:0
    \n"
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <73284461b3af4cc390257560face2645>:0
    \n"
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces == 1) {\n                    sb.Append('_');\n
    \               } else if (spaces > 1) {\n                    sb.Append('-');\n
    \               }\n                sb.Append(c);\n                spaces = 0;\n
    \           }\n        }\n        if (spaces == 1) {\n            sb.Append('_');\n
    \       } else if (spaces > 1) {\n            sb.Append('-');\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5028652eb1cc493bb3deeaf50c59355a>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       return text.Replace(\" \", \"_\").Replace(\"__\", \"-\");\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <91467ae4f63447baa44b7224f0ac5bed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <91467ae4f63447baa44b7224f0ac5bed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += '_';\n                }\n                else if
    (count == 2)\n                {\n                    result += '-';\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += '_';\n                }\n                else if
    (count == 2)\n                {\n                    result += '-';\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d343347c54e54639b5fbb0352f480af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        string result = \"\";\n        int count = 0;\n        for (int i =
    0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count > 2) {\n                    result += '-';\n                    count
    = 0;\n                }\n            } else {\n                if (count > 0)
    {\n                    result += '_';\n                    count = 0;\n                }\n
    \               result += text[i];\n            }\n        }\n        if (count
    > 0) {\n            result += '_';\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c15640847bbf4dbca167477a62944aa6>:0
    \n"
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       StringBuilder sb = new StringBuilder();\n        bool lastWasSpace = false;\n
    \       for (int i = 0; i < text.Length; i++) {\n            if (text[i] == '
    ') {\n                if (lastWasSpace) {\n                    sb.Append('-');\n
    \               } else {\n                    sb.Append('_');\n                }\n
    \               lastWasSpace = true;\n            } else {\n                sb.Append(text[i]);\n
    \               lastWasSpace = false;\n            }\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4e6c972dd95b48a996ce0835e5ceb70f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4e6c972dd95b48a996ce0835e5ceb70f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 0) {\n                    if (spaces > 2)
    {\n                        sb.Append('-');\n                    } else {\n                        sb.Append('_',
    spaces);\n                    }\n                    spaces = 0;\n                }\n
    \               sb.Append(c);\n            }\n        }\n        if (spaces >
    0) {\n            if (spaces > 2) {\n                sb.Append('-');\n            }
    else {\n                sb.Append('_', spaces);\n            }\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count > 2)\n                {\n
    \                   result += '-';\n                    count = 0;\n                }\n
    \               else\n                {\n                    result += '_';\n
    \               }\n            }\n            else\n            {\n                result
    += text[i];\n                count = 0;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       StringBuilder sb = new StringBuilder();\n        int count = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count > 2) {\n                    sb.Append('-');\n                    count
    = 0;\n                }\n            } else {\n                if (count == 1)
    {\n                    sb.Append(' ');\n                } else if (count == 2)
    {\n                    sb.Append(\"__\");\n                }\n                count
    = 0;\n                sb.Append(text[i]);\n            }\n        }\n        if
    (count == 1) {\n            sb.Append(' ');\n        } else if (count == 2) {\n
    \           sb.Append(\"__\");\n        }\n        return sb.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af2b1e507fec4469a07c89c3ec62dea6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af2b1e507fec4469a07c89c3ec62dea6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaceCount = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n
    \               if (spaceCount == 1) {\n                    sb.Append('_');\n
    \               }\n            } else {\n                if (spaceCount > 2) {\n
    \                   sb.Append('-');\n                } else {\n                    for
    (int i = 0; i < spaceCount; i++) {\n                        sb.Append('_');\n
    \                   }\n                }\n                spaceCount = 0;\n                sb.Append(c);\n
    \           }\n        }\n        if (spaceCount > 2) {\n            sb.Append('-');\n
    \       } else {\n            for (int i = 0; i < spaceCount; i++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3430dde14cc34afa9e93b39539aeb830>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3430dde14cc34afa9e93b39539aeb830>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces == 1) {\n                    sb.Append('_');\n
    \               } else if (spaces > 1) {\n                    sb.Append('-');\n
    \               }\n                sb.Append(c);\n                spaces = 0;\n
    \           }\n        }\n        if (spaces == 1) {\n            sb.Append('_');\n
    \       } else if (spaces > 1) {\n            sb.Append('-');\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5028652eb1cc493bb3deeaf50c59355a>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        int count = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count > 2) {\n                    sb.Append('-');\n                    count
    = 0;\n                }\n            } else {\n                if (count > 0)
    {\n                    sb.Append('_', count);\n                    count = 0;\n
    \               }\n                sb.Append(text[i]);\n            }\n        }\n
    \       if (count > 0) {\n            sb.Append('_', count);\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        bool prevSpace = false;\n
    \       int spaces = 0;\n        foreach (char c in text) {\n            if (c
    == ' ') {\n                spaces++;\n                if (spaces > 2) {\n                    if
    (!prevSpace) {\n                        sb.Append('-');\n                        prevSpace
    = true;\n                    }\n                } else {\n                    sb.Append('_');\n
    \                   prevSpace = true;\n                }\n            } else {\n
    \               sb.Append(c);\n                prevSpace = false;\n                spaces
    = 0;\n            }\n        }\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1d7c66d61daf49c3ae975970149c864b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1d7c66d61daf49c3ae975970149c864b>:0
    \n"
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        int spaces = 0;\n
    \       for (int i = 0; i < text.Length; i++) {\n            if (text[i] == '
    ') {\n                spaces++;\n            } else {\n                if (spaces
    > 2) {\n                    sb.Append('-');\n                } else {\n                    for
    (int j = 0; j < spaces; j++) {\n                        sb.Append('_');\n                    }\n
    \               }\n                spaces = 0;\n                sb.Append(text[i]);\n
    \           }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n
    \       } else {\n            for (int j = 0; j < spaces; j++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        return text.Replace(\" \", \"_\").Replace(\"__\", \"-\");\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1203b5c4cd574cc7ac052fcf4e65c711>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1203b5c4cd574cc7ac052fcf4e65c711>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        bool space = false;\n
    \       foreach (char c in text) {\n            if (c == ' ') {\n                if
    (space) {\n                    sb.Append('-');\n                } else {\n                    sb.Append('_');\n
    \                   space = true;\n                }\n            } else {\n                sb.Append(c);\n
    \               space = false;\n            }\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <60d2dd2b2d424396a65bc9d4a4b28483>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <60d2dd2b2d424396a65bc9d4a4b28483>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += '_';\n                }\n                else if
    (count == 2)\n                {\n                    result += '-';\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2ac21929204a441db59c4175abc8aef0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2ac21929204a441db59c4175abc8aef0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var ch in text) {\n            if (ch == ' ') {\n                spaces++;\n
    \           } else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(ch);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: Implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count > 2)\n                {\n
    \                   result += '-';\n                    count = 0;\n                }\n
    \               else\n                {\n                    result += '_';\n
    \               }\n            }\n            else\n            {\n                result
    += text[i];\n                count = 0;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd210f0f82c143f0b81001cdaa26c444>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: implement this method\n        //throw new NotImplementedException();\n
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;
    i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n            {\n
    \               count++;\n                if (count == 1)\n                {\n
    \                   result += \"_\";\n                }\n                else
    if (count > 2)\n                {\n                    result += \"-\";\n                }\n
    \           }\n            else\n            {\n                count = 0;\n                result
    += text[i];\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9681ee773fdb44e384a3cdba16b799a2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9681ee773fdb44e384a3cdba16b799a2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        for
    (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                spaces++;\n
    \           } else {\n                if (spaces == 1) {\n                    sb.Append('_');\n
    \               } else if (spaces > 1) {\n                    sb.Append('-');\n
    \               }\n                sb.Append(text[i]);\n                spaces
    = 0;\n            }\n        }\n        if (spaces == 1) {\n            sb.Append('_');\n
    \       } else if (spaces > 1) {\n            sb.Append('-');\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a8de741df9e479cb5463dfc94f9be2b>:0
    \n"
  stdout: ''
  timestamp: 1659976905
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaceCount = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n
    \               if (spaceCount == 1) {\n                    sb.Append('_');\n
    \               }\n            } else {\n                if (spaceCount > 2) {\n
    \                   sb.Append('-');\n                } else {\n                    for
    (int i = 0; i < spaceCount; i++) {\n                        sb.Append('_');\n
    \                   }\n                }\n                spaceCount = 0;\n                sb.Append(c);\n
    \           }\n        }\n        if (spaceCount > 2) {\n            sb.Append('-');\n
    \       } else {\n            for (int i = 0; i < spaceCount; i++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3430dde14cc34afa9e93b39539aeb830>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3430dde14cc34afa9e93b39539aeb830>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        int spaces = 0;\n
    \       foreach (char c in text) {\n            if (c == ' ') {\n                spaces++;\n
    \           } else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        bool lastSpace = false;\n
    \       for (int i = 0; i < text.Length; i++) {\n            if (text[i] == '
    ') {\n                if (lastSpace) {\n                    sb.Append('-');\n
    \               } else {\n                    sb.Append('_');\n                }\n
    \               lastSpace = true;\n            } else {\n                sb.Append(text[i]);\n
    \               lastSpace = false;\n            }\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd303b1c30084461b6e8103fb74134ad>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd303b1c30084461b6e8103fb74134ad>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976905
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        bool prevSpace = false;\n
    \       foreach (char c in text) {\n            if (c == ' ') {\n                if
    (prevSpace) {\n                    sb.Append('-');\n                } else {\n
    \                   sb.Append('_');\n                }\n                prevSpace
    = true;\n            } else {\n                sb.Append(c);\n                prevSpace
    = false;\n            }\n        }\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1585bb411e204f96827d16798b48e141>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1585bb411e204f96827d16798b48e141>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces == 1) {\n                    sb.Append('_');\n
    \               } else if (spaces > 1) {\n                    sb.Append('-');\n
    \               }\n                sb.Append(c);\n                spaces = 0;\n
    \           }\n        }\n        if (spaces == 1) {\n            sb.Append('_');\n
    \       } else if (spaces > 1) {\n            sb.Append('-');\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5028652eb1cc493bb3deeaf50c59355a>:0
    \n"
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        StringBuilder sb = new StringBuilder();\n        int spaces = 0;\n
    \       for (int i = 0; i < text.Length; i++) {\n            if (text[i] == '
    ') {\n                spaces++;\n            } else {\n                if (spaces
    > 2) {\n                    sb.Append('-');\n                } else {\n                    for
    (int j = 0; j < spaces; j++) {\n                        sb.Append('_');\n                    }\n
    \               }\n                spaces = 0;\n                sb.Append(text[i]);\n
    \           }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n
    \       } else {\n            for (int j = 0; j < spaces; j++) {\n                sb.Append('_');\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        // TODO: implement this method\n        //throw new NotImplementedException();\n
    \       return text.Replace(\" \", \"_\").Replace(\"__\", \"-\");\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <05d30527355947dd893905982530ddcc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <05d30527355947dd893905982530ddcc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        string result = \"\";\n        int count = 0;\n        for (int i =
    0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n
    \               if (count == 1) {\n                    result += '_';\n                }\n
    \           } else {\n                if (count > 2) {\n                    result
    += '-';\n                } else {\n                    for (int j = 0; j < count;
    j++) {\n                        result += '_';\n                    }\n                }\n
    \               count = 0;\n                result += text[i];\n            }\n
    \       }\n        if (count > 2) {\n            result += '-';\n        } else
    {\n            for (int j = 0; j < count; j++) {\n                result += '_';\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n
    \   Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n
    \   Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n
    \   Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"
    \  Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2f45387f86484afdba4288cbe9f962a0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2f45387f86484afdba4288cbe9f962a0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string text, replace all spaces in it with underscores,
    \n    // and if a string has more than 2 consecutive spaces, \n    // then replace
    all consecutive spaces with -\n    public static string FixSpaces(string text)
    {\n        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach
    (var c in text) {\n            if (c == ' ') {\n                spaces++;\n            }
    else {\n                if (spaces > 2) {\n                    sb.Append('-');\n
    \               } else {\n                    for (int i = 0; i < spaces; i++)
    {\n                        sb.Append('_');\n                    }\n                }\n
    \               spaces = 0;\n                sb.Append(c);\n            }\n        }\n
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else {\n            for
    (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir
    Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow
    Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa
    \  mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2
    2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976901

name: HumanEval_35_max_element
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Return maximum element in the list.\n    public static long\
  \ MaxElement(List<long> l) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
  \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
  \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n\
  }\n"
completions: ["        long max = l[0];\n        for (int i = 1; i < l.Count; i++)\
    \ {\n            if (l[i] > max) {\n                max = l[i];\n            }\n\
    \        }\n        return max;", "        long max = l[0];\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n                max\
    \ = l[i];\n            }\n        }\n        return max;", "        long max =\
    \ l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max)\
    \ {\n                max = l[i];\n            }\n        }\n        return max;",
  "        long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n       \
    \     if (l[i] > max) {\n                max = l[i];\n            }\n        }\n\
    \        return max;", "        long max = l[0];\n        for (int i = 1; i <\
    \ l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) max =\
    \ l[i];\n        }\n        return max;", "        long max = l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n           \
    \     max = l[i];\n            }\n        }\n        return max;", "        long\
    \ max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i]\
    \ > max) {\n                max = l[i];\n            }\n        }\n        return\
    \ max;", "        long max = l[0];\n        for (int i = 1; i < l.Count; i++)\
    \ {\n            if (l[i] > max) {\n                max = l[i];\n            }\n\
    \        }\n        return max;", "        long max = long.MinValue;\n       \
    \ foreach (long x in l) {\n            if (x > max) {\n                max = x;\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) {\n                max = l[i];\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) {\n                max = l[i];\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = long.MinValue;\n\
    \        foreach (long x in l) {\n            if (x > max) max = x;\n        }\n\
    \        return max;", "        long max = l[0];\n        for (int i = 1; i <\
    \ l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) {\n                max = l[i];\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) max = l[i];\n        }\n        return max;", "       \
    \ long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if\
    \ (l[i] > max) {\n                max = l[i];\n            }\n        }\n    \
    \    return max;", "        long max = l[0];\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (l[i] > max) {\n                max = l[i];\n       \
    \     }\n        }\n        return max;", "        long max = l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n           \
    \     max = l[i];\n            }\n        }\n        return max;", "        long\
    \ max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i]\
    \ > max) {\n                max = l[i];\n            }\n        }\n        return\
    \ max;", "        long max = l[0];\n        for (int i = 1; i < l.Count; i++)\
    \ {\n            if (l[i] > max) {\n                max = l[i];\n            }\n\
    \        }\n        return max;", "        long max = l[0];\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n                max\
    \ = l[i];\n            }\n        }\n        return max;", "        long max =\
    \ long.MinValue;\n        foreach (long x in l) {\n            if (x > max) {\n\
    \                max = x;\n            }\n        }\n        return max;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) {\n                max = l[i];\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) max = l[i];\n        }\n  \
    \      return max;", "        long max = long.MinValue;\n        foreach (long\
    \ x in l) {\n            if (x > max) {\n                max = x;\n          \
    \  }\n        }\n        return max;", "        long max = l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n           \
    \     max = l[i];\n            }\n        }\n        return max;", "        long\
    \ max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i]\
    \ > max) {\n                max = l[i];\n            }\n        }\n        return\
    \ max;", "        long max = long.MinValue;\n        foreach (long x in l) {\n\
    \            if (x > max) {\n                max = x;\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) {\n                max = l[i];\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) max = l[i];\n        }\n  \
    \      return max;", "        long max = l[0];\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (l[i] > max) {\n                max = l[i];\n       \
    \     }\n        }\n        return max;", "        long max = l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) max = l[i];\n \
    \       }\n        return max;", "        long max = l[0];\n        for (int i\
    \ = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n                max\
    \ = l[i];\n            }\n        }\n        return max;", "        long max =\
    \ l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max)\
    \ {\n                max = l[i];\n            }\n        }\n        return max;",
  "        long max = long.MinValue;\n        foreach (long x in l) {\n          \
    \  if (x > max) {\n                max = x;\n            }\n        }\n      \
    \  return max;", "        long max = long.MinValue;\n        foreach (long x in\
    \ l) {\n            if (x > max) max = x;\n        }\n        return max;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) {\n                max = l[i];\n            }\n       \
    \ }\n        return max;", "        long max = long.MinValue;\n        foreach\
    \ (long x in l) {\n            if (x > max) {\n                max = x;\n    \
    \        }\n        }\n        return max;", "        long max = l[0];\n     \
    \   for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n     \
    \           max = l[i];\n            }\n        }\n        return max;", "   \
    \     long max = long.MinValue;\n        foreach (long i in l) {\n           \
    \ if (i > max) {\n                max = i;\n            }\n        }\n       \
    \ return max;", "        long max = l[0];\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (l[i] > max) {\n                max = l[i];\n       \
    \     }\n        }\n        return max;", "        long max = l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n           \
    \     max = l[i];\n            }\n        }\n        return max;", "        long\
    \ max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i]\
    \ > max) max = l[i];\n        }\n        return max;", "        long max = l[0];\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n\
    \                max = l[i];\n            }\n        }\n        return max;",
  "        long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n       \
    \     if (l[i] > max) {\n                max = l[i];\n            }\n        }\n\
    \        return max;", "        long max = long.MinValue;\n        foreach (long\
    \ e in l) {\n            if (e > max) {\n                max = e;\n          \
    \  }\n        }\n        return max;", "        long max = l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n           \
    \     max = l[i];\n            }\n        }\n        return max;", "        long\
    \ max = long.MinValue;\n        foreach (long x in l) {\n            if (x > max)\
    \ {\n                max = x;\n            }\n        }\n        return max;",
  "        long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n       \
    \     if (l[i] > max) max = l[i];\n        }\n        return max;", "        long\
    \ max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i]\
    \ > max) {\n                max = l[i];\n            }\n        }\n        return\
    \ max;", "        long max = l[0];\n        for (int i = 1; i < l.Count; i++)\
    \ {\n            if (l[i] > max) {\n                max = l[i];\n            }\n\
    \        }\n        return max;", "        long max = l[0];\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n                max\
    \ = l[i];\n            }\n        }\n        return max;", "        long max =\
    \ l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max)\
    \ {\n                max = l[i];\n            }\n        }\n        return max;",
  "        long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n       \
    \     if (l[i] > max) {\n                max = l[i];\n            }\n        }\n\
    \        return max;", "        long max = l[0];\n        for (int i = 1; i <\
    \ l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) {\n                max = l[i];\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) {\n                max = l[i];\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = long.MinValue;\n\
    \        foreach (long x in l) {\n            if (x > max) max = x;\n        }\n\
    \        return max;", "        long max = long.MinValue;\n        foreach (long\
    \ x in l) {\n            if (x > max) {\n                max = x;\n          \
    \  }\n        }\n        return max;", "        long max = l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) max = l[i];\n \
    \       }\n        return max;", "        long max = l[0];\n        for (int i\
    \ = 1; i < l.Count; i++) {\n            if (l[i] > max) max = l[i];\n        }\n\
    \        return max;", "        long max = l[0];\n        for (int i = 1; i <\
    \ l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) {\n                max = l[i];\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) {\n                max = l[i];\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) {\n                max = l[i];\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++)\n            if (l[i] > max)\n                max = l[i];\n\
    \        return max;", "        long max = l[0];\n        for (int i = 1; i <\
    \ l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) {\n                max = l[i];\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long m = l[0];\n        for (int i = 1; i < l.Count; i++) {\n        \
    \    if (l[i] > m) {\n                m = l[i];\n            }\n        }\n  \
    \      return m;", "        long max = l[0];\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (l[i] > max) {\n                max = l[i];\n       \
    \     }\n        }\n        return max;", "        long max = l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n           \
    \     max = l[i];\n            }\n        }\n        return max;", "        long\
    \ max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i]\
    \ > max) {\n                max = l[i];\n            }\n        }\n        return\
    \ max;", "        long max = long.MinValue;\n        foreach (long x in l) {\n\
    \            if (x > max) {\n                max = x;\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) {\n                max = l[i];\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = long.MinValue;\n\
    \        foreach (long i in l) {\n            if (i > max) {\n               \
    \ max = i;\n            }\n        }\n        return max;", "        long max\
    \ = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i] >\
    \ max) {\n                max = l[i];\n            }\n        }\n        return\
    \ max;", "        long max = l[0];\n        for (int i = 1; i < l.Count; i++)\
    \ {\n            if (l[i] > max) {\n                max = l[i];\n            }\n\
    \        }\n        return max;", "        long max = l[0];\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] > max) max = l[i];\n      \
    \  }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) max = l[i];\n        }\n  \
    \      return max;", "        long max = l[0];\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (l[i] > max) {\n                max = l[i];\n       \
    \     }\n        }\n        return max;", "        long max = l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n           \
    \     max = l[i];\n            }\n        }\n        return max;", "        long\
    \ max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i]\
    \ > max) {\n                max = l[i];\n            }\n        }\n        return\
    \ max;", "        long max = l[0];\n        for (int i = 1; i < l.Count; i++)\
    \ {\n            if (l[i] > max) {\n                max = l[i];\n            }\n\
    \        }\n        return max;", "        long max = l[0];\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n                max\
    \ = l[i];\n            }\n        }\n        return max;", "        long max =\
    \ l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max)\
    \ {\n                max = l[i];\n            }\n        }\n        return max;",
  "        long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n       \
    \     if (l[i] > max) {\n                max = l[i];\n            }\n        }\n\
    \        return max;", "        long max = l[0];\n        for (int i = 1; i <\
    \ l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) {\n                max = l[i];\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) max = l[i];\n        }\n  \
    \      return max;", "        long max = long.MinValue;\n        foreach (long\
    \ x in l) {\n            if (x > max) {\n                max = x;\n          \
    \  }\n        }\n        return max;", "        long max = l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n           \
    \     max = l[i];\n            }\n        }\n        return max;", "        long\
    \ max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i]\
    \ > max) {\n                max = l[i];\n            }\n        }\n        return\
    \ max;", "        long max = l[0];\n        for (int i = 1; i < l.Count; i++)\
    \ {\n            if (l[i] > max) {\n                max = l[i];\n            }\n\
    \        }\n        return max;", "        long max = l[0];\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] > max) max = l[i];\n      \
    \  }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) {\n                max = l[i];\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) max = l[i];\n        }\n        return max;", "       \
    \ long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if\
    \ (l[i] > max) {\n                max = l[i];\n            }\n        }\n    \
    \    return max;", "        long max = l[0];\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (l[i] > max) {\n                max = l[i];\n       \
    \     }\n        }\n        return max;", "        long max = l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n           \
    \     max = l[i];\n            }\n        }\n        return max;", "        long\
    \ max = long.MinValue;\n        foreach (long x in l) {\n            if (x > max)\
    \ {\n                max = x;\n            }\n        }\n        return max;",
  "        long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n       \
    \     if (l[i] > max) {\n                max = l[i];\n            }\n        }\n\
    \        return max;", "        long max = l[0];\n        for (int i = 1; i <\
    \ l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = long.MinValue;\n        foreach (long i in l) {\n         \
    \   if (i > max) {\n                max = i;\n            }\n        }\n     \
    \   return max;", "        long max = l[0];\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (l[i] > max) {\n                max = l[i];\n       \
    \     }\n        }\n        return max;", "        long max = l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n           \
    \     max = l[i];\n            }\n        }\n        return max;", "        long\
    \ max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i]\
    \ > max) {\n                max = l[i];\n            }\n        }\n        return\
    \ max;", "        long max = l[0];\n        for (int i = 1; i < l.Count; i++)\
    \ {\n            if (l[i] > max) {\n                max = l[i];\n            }\n\
    \        }\n        return max;", "        long max = l[0];\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n                max\
    \ = l[i];\n            }\n        }\n        return max;", "        long max =\
    \ l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max)\
    \ {\n                max = l[i];\n            }\n        }\n        return max;",
  "        long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n       \
    \     if (l[i] > max) max = l[i];\n        }\n        return max;", "        long\
    \ max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i]\
    \ > max) {\n                max = l[i];\n            }\n        }\n        return\
    \ max;", "        long max = l[0];\n        for (int i = 1; i < l.Count; i++)\
    \ {\n            if (l[i] > max) {\n                max = l[i];\n            }\n\
    \        }\n        return max;", "        long max = l[0];\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n                max\
    \ = l[i];\n            }\n        }\n        return max;", "        long max =\
    \ l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max)\
    \ {\n                max = l[i];\n            }\n        }\n        return max;",
  "        long max = long.MinValue;\n        foreach (long x in l) {\n          \
    \  if (x > max) {\n                max = x;\n            }\n        }\n      \
    \  return max;", "        long max = l[0];\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (l[i] > max) {\n                max = l[i];\n       \
    \     }\n        }\n        return max;", "        long max = l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n           \
    \     max = l[i];\n            }\n        }\n        return max;", "        long\
    \ max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i]\
    \ > max) {\n                max = l[i];\n            }\n        }\n        return\
    \ max;", "        long max = long.MinValue;\n        foreach (long i in l) {\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = long.MinValue;\n        foreach (long x in l) {\n         \
    \   if (x > max) {\n                max = x;\n            }\n        }\n     \
    \   return max;", "        long max = l[0];\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (l[i] > max) {\n                max = l[i];\n       \
    \     }\n        }\n        return max;", "        long max = l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n           \
    \     max = l[i];\n            }\n        }\n        return max;", "        long\
    \ max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i]\
    \ > max) {\n                max = l[i];\n            }\n        }\n        return\
    \ max;", "        long max = long.MinValue;\n        foreach (long i in l) {\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = long.MinValue;\n\
    \        foreach (long i in l) {\n            if (i > max) {\n               \
    \ max = i;\n            }\n        }\n        return max;", "        long max\
    \ = long.MinValue;\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;",
  "        long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n       \
    \     if (l[i] > max) {\n                max = l[i];\n            }\n        }\n\
    \        return max;", "        long max = long.MinValue;\n        foreach (long\
    \ i in l) {\n            if (i > max) {\n                max = i;\n          \
    \  }\n        }\n        return max;", "        long max = l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n           \
    \     max = l[i];\n            }\n        }\n        return max;", "        long\
    \ max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i]\
    \ > max) {\n                max = l[i];\n            }\n        }\n        return\
    \ max;", "        long max = long.MinValue;\n        foreach (long x in l) {\n\
    \            if (x > max) max = x;\n        }\n        return max;", "       \
    \ long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if\
    \ (l[i] > max) {\n                max = l[i];\n            }\n        }\n    \
    \    return max;", "        long max = l[0];\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (l[i] > max) {\n                max = l[i];\n       \
    \     }\n        }\n        return max;", "        long max = l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n           \
    \     max = l[i];\n            }\n        }\n        return max;", "        long\
    \ max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i]\
    \ > max) {\n                max = l[i];\n            }\n        }\n        return\
    \ max;", "        long max = l[0];\n        for (int i = 1; i < l.Count; i++)\
    \ {\n            if (l[i] > max) {\n                max = l[i];\n            }\n\
    \        }\n        return max;", "        long max = long.MinValue;\n       \
    \ foreach (long x in l) {\n            if (x > max) max = x;\n        }\n    \
    \    return max;", "        long max = l[0];\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (l[i] > max) {\n                max = l[i];\n       \
    \     }\n        }\n        return max;", "        long max = long.MinValue;\n\
    \        foreach (long x in l) {\n            if (x > max) {\n               \
    \ max = x;\n            }\n        }\n        return max;", "        long max\
    \ = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i] >\
    \ max) {\n                max = l[i];\n            }\n        }\n        return\
    \ max;", "        long max = l[0];\n        for (int i = 1; i < l.Count; i++)\
    \ {\n            if (l[i] > max) {\n                max = l[i];\n            }\n\
    \        }\n        return max;", "        long max = long.MinValue;\n       \
    \ foreach (long x in l) {\n            if (x > max) {\n                max = x;\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = long.MinValue;\n        foreach (long x in l) {\n         \
    \   if (x > max) {\n                max = x;\n            }\n        }\n     \
    \   return max;", "        long max = l[0];\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (l[i] > max) max = l[i];\n        }\n        return max;",
  "        long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n       \
    \     if (l[i] > max) {\n                max = l[i];\n            }\n        }\n\
    \        return max;", "        long max = long.MinValue;\n        foreach (long\
    \ x in l) {\n            if (x > max) {\n                max = x;\n          \
    \  }\n        }\n        return max;", "        long max = l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n           \
    \     max = l[i];\n            }\n        }\n        return max;", "        long\
    \ max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i]\
    \ > max) {\n                max = l[i];\n            }\n        }\n        return\
    \ max;", "        long max = l[0];\n        for (int i = 1; i < l.Count; i++)\
    \ {\n            if (l[i] > max) max = l[i];\n        }\n        return max;",
  "        long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n       \
    \     if (l[i] > max) {\n                max = l[i];\n            }\n        }\n\
    \        return max;", "        long max = long.MinValue;\n        foreach (long\
    \ x in l) {\n            if (x > max) max = x;\n        }\n        return max;",
  "        long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n       \
    \     if (l[i] > max) {\n                max = l[i];\n            }\n        }\n\
    \        return max;", "        long max = l[0];\n        for (int i = 1; i <\
    \ l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) max =\
    \ l[i];\n        }\n        return max;", "        long max = long.MinValue;\n\
    \        foreach (long x in l) {\n            if (x > max) max = x;\n        }\n\
    \        return max;", "        long max = l[0];\n        for (int i = 1; i <\
    \ l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n \
    \               max = l[i];\n            }\n        }\n        return max;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) {\n                max = l[i];\n            }\n       \
    \ }\n        return max;", "        long max = l[0];\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \            }\n        }\n        return max;", "        long max = l[0];\n \
    \       for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) max =\
    \ l[i];\n        }\n        return max;", "        long max = l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n           \
    \     max = l[i];\n            }\n        }\n        return max;", "        long\
    \ max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i]\
    \ > max) {\n                max = l[i];\n            }\n        }\n        return\
    \ max;", "        long max = l[0];\n        for (int i = 1; i < l.Count; i++)\
    \ {\n            if (l[i] > max) {\n                max = l[i];\n            }\n\
    \        }\n        return max;", "        long max = l[0];\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] > max) {\n                max\
    \ = l[i];\n            }\n        }\n        return max;", "        long max =\
    \ l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max)\
    \ {\n                max = l[i];\n            }\n        }\n        return max;"]
stop_tokens:
- "\n    }\n"

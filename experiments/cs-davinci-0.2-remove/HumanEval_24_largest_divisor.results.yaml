language: cs
name: HumanEval_24_largest_divisor
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = 1;\n        for (long i = 2; i < n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = (long)Math.Sqrt(n);\n        for (long i = max; i > 1; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return 1;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        long sqrt = (long)Math.Sqrt(n);\n \
    \       for (long i = 2; i <= sqrt; i++) {\n            if (n % i == 0) {\n  \
    \              largestDivisor = i;\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5c5553d82469404cbab3a41fd63dda9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5c5553d82469404cbab3a41fd63dda9b>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i * i <= n; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a933c89b6dbb47b393f813254c5016bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a933c89b6dbb47b393f813254c5016bc>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return -1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = (long)Math.Sqrt(n);\n        for (long i = max; i > 1; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return 1;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return -1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largest = 1;\n        for (long i = 2; i < n; i++) {\n         \
    \   if (n % i == 0) {\n                largest = i;\n            }\n        }\n\
    \        return largest;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 0;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ {\n                n /= i;\n            } else {\n                i++;\n   \
    \         }\n        }\n        return n;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 0;\n        for (long i = 1; i <= n; i++) {\n \
    \           if (n % i == 0) {\n                largestDivisor = i;\n         \
    \   }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1497993d5b8f4f52a312918b714cfb76>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1497993d5b8f4f52a312918b714cfb76>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n; i++) {\n \
    \           if (n % i == 0) {\n                largestDivisor = i;\n         \
    \   }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8af07f76b62940c6b5e5209bbdfa6073>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8af07f76b62940c6b5e5209bbdfa6073>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = 1;\n        for (long i = 2; i <= n / 2; i++) {\n        \
    \    if (n % i == 0) {\n                max = i;\n            }\n        }\n \
    \       return max;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ {\n                n /= i;\n            } else {\n                i++;\n   \
    \         }\n        }\n        return n;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = n - 1;\n        while (n % i != 0) {\n            i--;\n   \
    \     }\n        return i;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n; i++) {\n \
    \           if (n % i == 0) {\n                largestDivisor = i;\n         \
    \   }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8af07f76b62940c6b5e5209bbdfa6073>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8af07f76b62940c6b5e5209bbdfa6073>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long limit = (long)Math.Sqrt(n);\n        for (long i = limit; i > 1;\
    \ i--) {\n            if (n % i == 0) {\n                return i;\n         \
    \   }\n        }\n        return 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a70aed65bca54eaca63ab2b09372a900>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a70aed65bca54eaca63ab2b09372a900>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = 2;\n        while (i < n) {\n            if (n % i == 0) {\n\
    \                return i;\n            }\n            i++;\n        }\n     \
    \   return 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8c8fb90ed69740ecbd0b3032c23356a4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8c8fb90ed69740ecbd0b3032c23356a4>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = 2;\n        while (n % i != 0) {\n            i++;\n       \
    \ }\n        return i;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <715395f21cfe47d5b06fb7f8e5a59f9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <715395f21cfe47d5b06fb7f8e5a59f9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largest = 0;\n        for (long i = 1; i < n; i++) {\n         \
    \   if (n % i == 0) {\n                largest = i;\n            }\n        }\n\
    \        return largest;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ {\n                n /= i;\n            } else {\n                i++;\n   \
    \         }\n        }\n        return n;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = 2;\n        while (i < n) {\n            if (n % i == 0) {\n\
    \                return n / i;\n            }\n            i++;\n        }\n \
    \       return 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = n / 2;\n        for (long i = max; i > 1; i--) {\n       \
    \     if (n % i == 0) {\n                return i;\n            }\n        }\n\
    \        return 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n; i++) {\n \
    \           if (n % i == 0) {\n                largestDivisor = i;\n         \
    \   }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8af07f76b62940c6b5e5209bbdfa6073>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8af07f76b62940c6b5e5209bbdfa6073>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n; i++) {\n \
    \           if (n % i == 0) {\n                largestDivisor = i;\n         \
    \   }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8af07f76b62940c6b5e5209bbdfa6073>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8af07f76b62940c6b5e5209bbdfa6073>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        long sqrt = (long)Math.Sqrt(n);\n \
    \       for (long i = 2; i <= sqrt; i++) {\n            if (n % i == 0) {\n  \
    \              largestDivisor = i;\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5c5553d82469404cbab3a41fd63dda9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5c5553d82469404cbab3a41fd63dda9b>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 0;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = (long)Math.Sqrt(n);\n        for (long i = max; i > 1; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return 1;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = (long)Math.Sqrt(n);\n        for (long i = max; i > 1; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return 1;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = n - 1;\n        while (i > 0) {\n            if (n % i == 0)\
    \ {\n                return i;\n            }\n            i--;\n        }\n \
    \       return 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 0;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = (long)Math.Sqrt(n);\n        for (long i = max; i > 1; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return 1;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = 0;\n        for (long i = 1; i < n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 0;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n; i++) {\n \
    \           if (n % i == 0) {\n                largestDivisor = i;\n         \
    \   }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8af07f76b62940c6b5e5209bbdfa6073>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8af07f76b62940c6b5e5209bbdfa6073>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largest = 0;\n        for (long i = 1; i < n; i++) {\n         \
    \   if (n % i == 0) {\n                largest = i;\n            }\n        }\n\
    \        return largest;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largest = 1;\n        for (long i = 2; i < n; i++) {\n         \
    \   if (n % i == 0) {\n                largest = i;\n            }\n        }\n\
    \        return largest;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= Math.Sqrt(n);\
    \ i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n\
    \    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <104af77d8bc34805927ebef80a7c75f9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <104af77d8bc34805927ebef80a7c75f9>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = (long)Math.Sqrt(n);\n        for (long i = max; i > 1; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return 1;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) return\
    \ i;\n        }\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = (long)Math.Sqrt(n);\n        for (long i = max; i > 1; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return 1;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ {\n                n /= i;\n            } else {\n                i++;\n   \
    \         }\n        }\n        return n;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = n - 1;\n        while (i > 0) {\n            if (n % i == 0)\
    \ return i;\n            i--;\n        }\n        return 1;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) ==\
    \ (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = (long)Math.Sqrt(n);\n        for (long i = max; i > 1; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return 1;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) return\
    \ i;\n        }\n        return 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largest = 1;\n        for (long i = 2; i <= Math.Sqrt(n); i++) {\n\
    \            if (n % i == 0) {\n                largest = i;\n            }\n\
    \        }\n        return largest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d850c665673a45ea9c9f3331f75ae2da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d850c665673a45ea9c9f3331f75ae2da>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long sqrt = (long)Math.Sqrt(n);\n        for (long i = sqrt; i > 1; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return 1;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5a94857393943fe81bc5a454095892a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5a94857393943fe81bc5a454095892a>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largest = 1;\n        for (long i = 2; i <= n / 2; i++) {\n    \
    \        if (n % i == 0) {\n                largest = i;\n            }\n    \
    \    }\n        return largest;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = 1;\n        for (long i = 2; i < n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = 0;\n        for (long i = 1; i < n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = (long)Math.Sqrt(n);\n        for (long i = max; i > 1; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return 1;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) return\
    \ i;\n        }\n        return 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long d = n - 1;\n        while (n % d != 0) {\n            d--;\n   \
    \     }\n        return d;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = (long)Math.Sqrt(n);\n        for (long i = max; i > 1; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return 1;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 0;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ {\n                n /= i;\n            } else {\n                i++;\n   \
    \         }\n        }\n        return n;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ {\n                n /= i;\n            } else {\n                i++;\n   \
    \         }\n        }\n        return n;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = n - 1;\n        while (n % i != 0) {\n            i--;\n   \
    \     }\n        return i;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n; i++) {\n \
    \           if (n % i == 0) {\n                largestDivisor = i;\n         \
    \   }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8af07f76b62940c6b5e5209bbdfa6073>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8af07f76b62940c6b5e5209bbdfa6073>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 0;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = n / 2;\n        while (i > 1) {\n            if (n % i == 0)\
    \ {\n                return i;\n            }\n            i--;\n        }\n \
    \       return 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = (long)Math.Sqrt(n);\n        for (long i = max; i > 1; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return 1;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i * i <= n; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a933c89b6dbb47b393f813254c5016bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a933c89b6dbb47b393f813254c5016bc>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) return\
    \ i;\n        }\n        return 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ {\n                n /= i;\n            } else {\n                i++;\n   \
    \         }\n        }\n        return n;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = 1;\n        for (long i = 2; i <= n / 2; i++) {\n        \
    \    if (n % i == 0) {\n                max = i;\n            }\n        }\n \
    \       return max;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = 0;\n        for (long i = 1; i < n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largest = 1;\n        for (long i = 2; i < n; i++) {\n         \
    \   if (n % i == 0) {\n                largest = i;\n            }\n        }\n\
    \        return largest;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n; i++) {\n \
    \           if (n % i == 0) {\n                largestDivisor = i;\n         \
    \   }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8af07f76b62940c6b5e5209bbdfa6073>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8af07f76b62940c6b5e5209bbdfa6073>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i * i <= n; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a933c89b6dbb47b393f813254c5016bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a933c89b6dbb47b393f813254c5016bc>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ {\n                n /= i;\n            } else {\n                i++;\n   \
    \         }\n        }\n        return n;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n; i++) {\n \
    \           if (n % i == 0) {\n                largestDivisor = i;\n         \
    \   }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8af07f76b62940c6b5e5209bbdfa6073>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8af07f76b62940c6b5e5209bbdfa6073>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = n - 1;\n        while (i > 0) {\n            if (n % i == 0)\
    \ {\n                return i;\n            }\n            i--;\n        }\n \
    \       return 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largest = 1;\n        for (long i = 2; i <= n / 2; i++) {\n    \
    \        if (n % i == 0) {\n                largest = i;\n            }\n    \
    \    }\n        return largest;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i * i <= n; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a933c89b6dbb47b393f813254c5016bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a933c89b6dbb47b393f813254c5016bc>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return -1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = 0;\n        for (long i = 1; i < n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = (long)Math.Sqrt(n);\n        for (long i = max; i > 1; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return 1;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf81f5a37904188b8e4e03dc6d6e99d>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ {\n                n /= i;\n            } else {\n                i++;\n   \
    \         }\n        }\n        return n;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 0;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ {\n                n /= i;\n            } else {\n                i++;\n   \
    \         }\n        }\n        return n;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 0;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           return i;\n            }\n        }\n        return 1;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1acdbcc21eda4231945085c1f030966b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1acdbcc21eda4231945085c1f030966b>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long max = n / 2;\n        for (long i = max; i > 1; i--) {\n       \
    \     if (n % i == 0) {\n                return i;\n            }\n        }\n\
    \        return 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ {\n                n /= i;\n            } else {\n                i++;\n   \
    \         }\n        }\n        return n;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n; i++) {\n \
    \           if (n % i == 0) {\n                largestDivisor = i;\n         \
    \   }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8af07f76b62940c6b5e5209bbdfa6073>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8af07f76b62940c6b5e5209bbdfa6073>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largest = 1;\n        for (long i = 2; i * i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                largest = i;\n            }\n    \
    \    }\n        return largest;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <476778f14c14480eb7af8e4581f8f2f8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <476778f14c14480eb7af8e4581f8f2f8>:0 \n"
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ {\n                n /= i;\n            } else {\n                i++;\n   \
    \         }\n        }\n        return n;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e657f30c344cc8f38b48dcf6218c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                largestDivisor = i;\n          \
    \  }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long i = n - 1;\n        while (i > 0) {\n            if (n % i == 0)\
    \ {\n                return i;\n            }\n            i--;\n        }\n \
    \       return 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largestDivisor = 1;\n        for (long i = 2; i <= n / 2; i++) {\n\
    \            if (n % i == 0) {\n                largestDivisor = i;\n        \
    \    }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        long largest = 1;\n        for (long i = 2; i <= n / 2; i++) {\n    \
    \        if (n % i == 0) {\n                largest = i;\n            }\n    \
    \    }\n        return largest;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004080
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static long LargestDivisor(long n) {\n\
    \        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660004079

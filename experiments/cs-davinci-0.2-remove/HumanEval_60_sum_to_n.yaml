name: HumanEval_60_sum_to_n
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n    public\
  \ static long SumToN(long n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumToN((1L))\
  \ == (1L));\n    Debug.Assert(SumToN((6L)) == (21L));\n    Debug.Assert(SumToN((11L))\
  \ == (66L));\n    Debug.Assert(SumToN((30L)) == (465L));\n    Debug.Assert(SumToN((100L))\
  \ == (5050L));\n    }\n\n}\n"
completions: ['        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;', '        return n * (n
    + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return n * (n + 1) / 2;', '        return (n * (n + 1)) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;', '        return n * (n
    + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;', '        return n * (n
    + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return n * (n + 1) / 2;', '        return (n * (n + 1)) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return (n * (n + 1)) / 2;', '        return n * (n
    + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return (n * (n
    + 1)) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) /
    2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;', '        return (n * (n
    + 1)) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) /
    2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;', '        return n * (n
    + 1) / 2;', '        return n * (n + 1) / 2;', '        return (n * (n + 1)) /
    2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return (n * (n + 1)) / 2;', '        return n * (n
    + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;']
stop_tokens:
- "\n    }\n"

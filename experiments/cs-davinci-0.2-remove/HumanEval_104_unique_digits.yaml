name: HumanEval_104_unique_digits
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a list of positive integers x. return a sorted list of\
  \ all \n    // elements that hasn't any even digit.\n    // Note: Returned list\
  \ should be sorted in increasing order.\n    // For example:\n    public static\
  \ List<long> UniqueDigits(List<long> x) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
  \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
  \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
  \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
  \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
  \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
  \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
  \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
  \    }\n\n}\n"
completions: ["        List<long> result = new List<long>();\n        foreach (long\
    \ i in x) {\n            if (isUnique(i)) {\n                result.Add(i);\n\
    \            }\n        }\n        result.Sort();\n        return result;", " \
    \       // Write your code here\n        List<long> result = new List<long>();\n\
    \        foreach (long i in x) {\n            if (IsUnique(i)) {\n           \
    \     result.Add(i);\n            }\n        }\n        result.Sort();\n     \
    \   return result;", "        List<long> result = new List<long>();\n        foreach\
    \ (long i in x) {\n            if (i < 10) {\n                result.Add(i);\n\
    \            } else {\n                bool isUnique = true;\n               \
    \ long n = i;\n                while (n > 0) {\n                    if (n % 2\
    \ == 0) {\n                        isUnique = false;\n                       \
    \ break;\n                    }\n                    n /= 10;\n              \
    \  }\n                if (isUnique) {\n                    result.Add(i);\n  \
    \              }\n            }\n        }\n        result.Sort();\n        return\
    \ result;", "        var res = new List<long>();\n        foreach (var i in x)\
    \ {\n            if (i.ToString().Any(c => c % 2 == 0)) continue;\n          \
    \  res.Add(i);\n        }\n        res.Sort();\n        return res;", "      \
    \  List<long> res = new List<long>();\n        foreach (long i in x) {\n     \
    \       if (i.ToString().Any(c => c % 2 == 0)) {\n                continue;\n\
    \            }\n            res.Add(i);\n        }\n        res.Sort();\n    \
    \    return res;", "        // Write your code here\n        return x.Where(n\
    \ => !n.ToString().Any(c => c % 2 == 0)).OrderBy(n => n).ToList();", "       \
    \ var result = new List<long>();\n        foreach (var item in x) {\n        \
    \    if (item.ToString().ToCharArray().Any(c => c % 2 == 0)) {\n             \
    \   continue;\n            }\n            result.Add(item);\n        }\n     \
    \   return result;", '        return x.Where(i => i.ToString().All(c => c % 2
    == 1)).OrderBy(i => i).ToList();', "        // Write your code here\n        return\
    \ x.Where(i => i.ToString().All(c => c % 2 == 1)).ToList();", "        // Write\
    \ your code here\n        return null;", "        // Write your code here\n  \
    \      return null;", "        List<long> res = new List<long>();\n        foreach\
    \ (long i in x) {\n            if (IsUnique(i)) {\n                res.Add(i);\n\
    \            }\n        }\n        res.Sort();\n        return res;", "      \
    \  // Write your code here\n        return null;", "        // Write your code\
    \ here\n        return x.Where(i => i.ToString().All(c => c % 2 == 1)).OrderBy(i\
    \ => i).ToList();", "        // Write your code here\n        return null;", " \
    \       // Write your code here\n        return null;", '        return x.Where(n
    => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();', "        //\
    \ Write your code here\n        return x.Where(n => n.ToString().All(c => c %\
    \ 2 == 1)).OrderBy(n => n).ToList();", "        // Write your code here\n    \
    \    return null;", "        // TODO: Implement this method\n        return null;",
  "        var result = new List<long>();\n        foreach (var n in x) {\n      \
    \      var digits = new HashSet<int>();\n            var num = n;\n          \
    \  while (num > 0) {\n                var digit = num % 10;\n                if\
    \ (digit % 2 == 0) {\n                    break;\n                }\n        \
    \        digits.Add(digit);\n                num /= 10;\n            }\n     \
    \       if (num == 0) {\n                result.Add(n);\n            }\n     \
    \   }\n        result.Sort();\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (long n in x) {\n            if (n < 10)\
    \ {\n                result.Add(n);\n            } else {\n                bool\
    \ hasEven = false;\n                while (n > 0) {\n                    if ((n\
    \ % 10) % 2 == 0) {\n                        hasEven = true;\n               \
    \         break;\n                    }\n                    n /= 10;\n      \
    \          }\n                if (!hasEven) {\n                    result.Add(n);\n\
    \                }\n            }\n        }\n        result.Sort();\n       \
    \ return result;", "        // Write your code here.\n        return x.Where(i\
    \ => i.ToString().All(c => c % 2 == 1)).OrderBy(i => i).ToList();", "        List<long>\
    \ result = new List<long>();\n        foreach (long i in x) {\n            if\
    \ (i < 10) {\n                result.Add(i);\n            } else {\n         \
    \       bool hasEven = false;\n                long temp = i;\n              \
    \  while (temp > 0) {\n                    if ((temp % 10) % 2 == 0) {\n     \
    \                   hasEven = true;\n                        break;\n        \
    \            }\n                    temp /= 10;\n                }\n         \
    \       if (!hasEven) {\n                    result.Add(i);\n                }\n\
    \            }\n        }\n        result.Sort();\n        return result;", " \
    \       // Your code goes here.\n        return null;", "        // Write your\
    \ code here\n        return null;", "        // Write your code here\n       \
    \ return x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();",
  "        var result = new List<long>();\n        foreach (var item in x) {\n   \
    \         if (item.ToString().Any(c => c % 2 == 0)) {\n                continue;\n\
    \            }\n            result.Add(item);\n        }\n        result.Sort();\n\
    \        return result;", "        // TODO: Implement this function.\n       \
    \ return null;", "        // Write your code here\n        return null;", "  \
    \      // Write your code here\n        return null;", "        List<long> res\
    \ = new List<long>();\n        foreach (var i in x) {\n            if (IsUnique(i))\
    \ {\n                res.Add(i);\n            }\n        }\n        res.Sort();\n\
    \        return res;", "        // TODO: Implement this function.\n        List<long>\
    \ result = new List<long>();\n        foreach (long num in x) {\n            if\
    \ (IsUniqueDigit(num)) {\n                result.Add(num);\n            }\n  \
    \      }\n        result.Sort();\n        return result;", "        // Write your\
    \ code here\n        return null;", "        // Write your code here\n       \
    \ return x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();",
  "        // Write your code here\n        return x.Where(y => y.ToString().All(z\
    \ => z % 2 == 1)).OrderBy(y => y).ToList();", '        return x.Where(y => !y.ToString().Any(z
    => z % 2 == 0)).OrderBy(y => y).ToList();', "        List<long> result = new List<long>();\n\
    \        foreach (long i in x) {\n            if (IsUnique(i)) {\n           \
    \     result.Add(i);\n            }\n        }\n        result.Sort();\n     \
    \   return result;", '        return x.Where(y => y.ToString().All(z => z % 2
    == 1)).OrderBy(y => y).ToList();', "        // Write your code here\n        return\
    \ x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();",
  "        List<long> result = new List<long>();\n        foreach (long num in x)\
    \ {\n            if (IsUniqueDigits(num)) {\n                result.Add(num);\n\
    \            }\n        }\n        result.Sort();\n        return result;", " \
    \       var result = new List<long>();\n        foreach (var item in x) {\n  \
    \          if (item.ToString().Any(c => c % 2 == 0)) {\n                continue;\n\
    \            }\n            result.Add(item);\n        }\n        result.Sort();\n\
    \        return result;", "        var result = new List<long>();\n        foreach\
    \ (var i in x) {\n            if (i.ToString().Any(c => c % 2 == 0)) {\n     \
    \           continue;\n            }\n            result.Add(i);\n        }\n\
    \        result.Sort();\n        return result;", "        var result = new List<long>();\n\
    \        foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==\
    \ 0)) {\n                continue;\n            }\n            result.Add(i);\n\
    \        }\n        result.Sort();\n        return result;", "        // Write\
    \ your code here\n        return x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n\
    \ => n).ToList();", "        // Write your code here\n        List<long> result\
    \ = new List<long>();\n        foreach (long num in x) {\n            if (num.ToString().Any(c\
    \ => c % 2 == 0)) {\n                continue;\n            }\n            result.Add(num);\n\
    \        }\n        result.Sort();\n        return result;", "        // Write\
    \ your code here\n        return null;", '        return x.Where(i => i.ToString().All(c
    => c % 2 == 1)).ToList();', "        var result = new List<long>();\n        foreach\
    \ (var i in x) {\n            if (IsUniqueDigits(i)) {\n                result.Add(i);\n\
    \            }\n        }\n        result.Sort();\n        return result;", " \
    \       List<long> result = new List<long>();\n        foreach (long i in x) {\n\
    \            if (i.ToString().Any(c => c % 2 == 0)) {\n                continue;\n\
    \            }\n            result.Add(i);\n        }\n        result.Sort();\n\
    \        return result;", "        // Write your code here\n        return null;",
  '        return x.Where(n => !n.ToString().Any(c => c % 2 == 0)).OrderBy(n => n).ToList();',
  "        var result = new List<long>();\n        foreach (var i in x) {\n      \
    \      if (i.ToString().Any(c => c % 2 == 0)) {\n                continue;\n \
    \           }\n            result.Add(i);\n        }\n        result.Sort();\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     foreach (long n in x) {\n            if (HasEvenDigit(n)) {\n          \
    \      continue;\n            }\n            result.Add(n);\n        }\n     \
    \   result.Sort();\n        return result;", "        var result = new List<long>();\n\
    \        foreach (var item in x) {\n            if (IsUniqueDigits(item)) {\n\
    \                result.Add(item);\n            }\n        }\n        result.Sort();\n\
    \        return result;", '        return x.Where(n => n.ToString().All(c => c
    % 2 == 1)).OrderBy(n => n).ToList();', "        // Write your code here\n    \
    \    return x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();",
  "        // Write your code here\n        return null;", "        List<long> result\
    \ = new List<long>();\n        foreach (long i in x) {\n            if (i.ToString().Any(c\
    \ => c % 2 == 0)) {\n                continue;\n            }\n            result.Add(i);\n\
    \        }\n        result.Sort();\n        return result;", "        // Write\
    \ your code here\n        return x.Where(i => i.ToString().All(c => c % 2 == 1)).OrderBy(i\
    \ => i).ToList();", "        // Write your code here\n        return x.Where(i\
    \ => i.ToString().All(c => c % 2 == 1)).OrderBy(i => i).ToList();", "        List<long>\
    \ result = new List<long>();\n        foreach (long i in x) {\n            if\
    \ (i.ToString().Any(c => c % 2 == 0)) {\n                continue;\n         \
    \   }\n            result.Add(i);\n        }\n        result.Sort();\n       \
    \ return result;", "        // Write your code here\n        return null;", " \
    \       List<long> res = new List<long>();\n        foreach (long i in x) {\n\
    \            if (i < 10) {\n                res.Add(i);\n            } else {\n\
    \                bool flag = true;\n                long j = i;\n            \
    \    while (j > 0) {\n                    if (j % 2 == 0) {\n                \
    \        flag = false;\n                        break;\n                    }\n\
    \                    j /= 10;\n                }\n                if (flag) {\n\
    \                    res.Add(i);\n                }\n            }\n        }\n\
    \        res.Sort();\n        return res;", "        var result = new List<long>();\n\
    \        foreach (var i in x) {\n            var digits = i.ToString().ToCharArray();\n\
    \            var hasEven = false;\n            foreach (var d in digits) {\n \
    \               if ((d - '0') % 2 == 0) {\n                    hasEven = true;\n\
    \                    break;\n                }\n            }\n            if\
    \ (!hasEven) {\n                result.Add(i);\n            }\n        }\n   \
    \     result.Sort();\n        return result;", "        var result = new List<long>();\n\
    \        foreach (var i in x) {\n            if (i < 10) {\n                result.Add(i);\n\
    \            } else {\n                var hasEven = false;\n                var\
    \ n = i;\n                while (n > 0) {\n                    if ((n % 10) %\
    \ 2 == 0) {\n                        hasEven = true;\n                       \
    \ break;\n                    }\n                    n /= 10;\n              \
    \  }\n                if (!hasEven) {\n                    result.Add(i);\n  \
    \              }\n            }\n        }\n        result.Sort();\n        return\
    \ result;", "        // Write your code here\n        return x.Where(n => n.ToString().All(c\
    \ => c % 2 == 1)).OrderBy(n => n).ToList();", "        // Your code goes here.\n\
    \        return x.Where(n => !n.ToString().Any(c => c % 2 == 0)).OrderBy(n =>\
    \ n).ToList();", "        var result = new List<long>();\n        foreach (var\
    \ i in x) {\n            if (i.ToString().Any(c => c % 2 == 0)) {\n          \
    \      continue;\n            }\n            result.Add(i);\n        }\n     \
    \   result.Sort();\n        return result;", "        // Write your code here\n\
    \        return x.Where(y => y.ToString().All(z => z % 2 == 1)).OrderBy(y => y).ToList();",
  "        // Write your code here\n        return x.Where(i => i.ToString().All(c\
    \ => c % 2 == 1)).OrderBy(i => i).ToList();", "        // Write your code here\n\
    \        return x.Where(i => i.ToString().All(c => c % 2 == 1)).OrderBy(i => i).ToList();",
  "        // Write your code here\n        return null;", "        var result = new\
    \ List<long>();\n        foreach (var i in x) {\n            if (i.ToString().Any(c\
    \ => c % 2 == 0)) {\n                continue;\n            }\n            result.Add(i);\n\
    \        }\n        result.Sort();\n        return result;", "        // Write\
    \ your code here\n        List<long> result = new List<long>();\n        foreach\
    \ (long num in x) {\n            if (num.ToString().Any(c => c % 2 == 0)) {\n\
    \                continue;\n            }\n            result.Add(num);\n    \
    \    }\n        result.Sort();\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (long num in x) {\n            if (IsUniqueDigits(num))\
    \ {\n                result.Add(num);\n            }\n        }\n        result.Sort();\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     foreach (long i in x) {\n            if (i.ToString().Any(c => c % 2 ==\
    \ 0)) {\n                continue;\n            }\n            result.Add(i);\n\
    \        }\n        result.Sort();\n        return result;", "        // Write\
    \ your code here\n        return null;", "        var ans = new List<long>();\n\
    \        foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==\
    \ 0)) continue;\n            ans.Add(i);\n        }\n        ans.Sort();\n   \
    \     return ans;", "        List<long> res = new List<long>();\n        foreach\
    \ (long i in x) {\n            if (i < 10) {\n                res.Add(i);\n  \
    \          } else {\n                bool isUnique = true;\n                long\
    \ temp = i;\n                while (temp > 0) {\n                    if (temp\
    \ % 2 == 0) {\n                        isUnique = false;\n                   \
    \     break;\n                    }\n                    temp /= 10;\n       \
    \         }\n                if (isUnique) {\n                    res.Add(i);\n\
    \                }\n            }\n        }\n        res.Sort();\n        return\
    \ res;", "        // TODO: Implement this function.\n        return null;", " \
    \       List<long> res = new List<long>();\n        foreach (long num in x) {\n\
    \            if (IsUniqueDigits(num)) {\n                res.Add(num);\n     \
    \       }\n        }\n        res.Sort();\n        return res;", '        return
    x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();', " \
    \       // Write your code here\n        return null;", "        // Write your\
    \ code here\n        return null;", "        var result = new List<long>();\n\
    \        foreach (var i in x) {\n            var hasEven = false;\n          \
    \  var n = i;\n            while (n > 0) {\n                if ((n % 10) % 2 ==\
    \ 0) {\n                    hasEven = true;\n                    break;\n    \
    \            }\n                n /= 10;\n            }\n            if (!hasEven)\
    \ {\n                result.Add(i);\n            }\n        }\n        result.Sort();\n\
    \        return result;", "        // Write your code here\n        List<long>\
    \ result = new List<long>();\n        foreach (long n in x) {\n            if\
    \ (n.ToString().Any(c => c % 2 == 0)) {\n                continue;\n         \
    \   }\n            result.Add(n);\n        }\n        result.Sort();\n       \
    \ return result;", "        // Write your code here\n        return x.Where(n\
    \ => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();", "        //\
    \ Write your code here\n        List<long> result = new List<long>();\n      \
    \  foreach (long num in x) {\n            if (IsUniqueDigits(num)) {\n       \
    \         result.Add(num);\n            }\n        }\n        result.Sort();\n\
    \        return result;", "        // Your code here\n        return null;", " \
    \       var result = new List<long>();\n        foreach (var i in x) {\n     \
    \       if (i.ToString().Any(c => c % 2 == 0)) {\n                continue;\n\
    \            }\n            result.Add(i);\n        }\n        result.Sort();\n\
    \        return result;", "        List<long> res = new List<long>();\n      \
    \  foreach (long i in x) {\n            if (IsUnique(i)) {\n                res.Add(i);\n\
    \            }\n        }\n        res.Sort();\n        return res;", "      \
    \  var result = new List<long>();\n        foreach (var num in x) {\n        \
    \    if (IsUniqueDigits(num)) {\n                result.Add(num);\n          \
    \  }\n        }\n        result.Sort();\n        return result;", "        List<long>\
    \ result = new List<long>();\n        foreach (long i in x) {\n            if\
    \ (i.ToString().Any(c => c % 2 == 0)) {\n                continue;\n         \
    \   }\n            result.Add(i);\n        }\n        result.Sort();\n       \
    \ return result;", "        List<long> result = new List<long>();\n        foreach\
    \ (long i in x) {\n            if (i.ToString().Any(c => c % 2 == 0)) {\n    \
    \            continue;\n            }\n            result.Add(i);\n        }\n\
    \        result.Sort();\n        return result;", "        // Write your code\
    \ here\n        return x.Where(i => i.ToString().All(c => c % 2 == 1)).OrderBy(i\
    \ => i).ToList();", "        // Write your code here\n        return null;", " \
    \       List<long> result = new List<long>();\n        foreach (long num in x)\
    \ {\n            if (IsUniqueDigits(num)) {\n                result.Add(num);\n\
    \            }\n        }\n        result.Sort();\n        return result;", " \
    \       var result = new List<long>();\n        foreach (var i in x) {\n     \
    \       if (i.ToString().Any(c => c % 2 == 0)) {\n                continue;\n\
    \            }\n            result.Add(i);\n        }\n        result.Sort();\n\
    \        return result;", "        var result = new List<long>();\n        foreach\
    \ (var i in x) {\n            if (i.ToString().Any(c => c % 2 == 0)) {\n     \
    \           continue;\n            }\n            result.Add(i);\n        }\n\
    \        result.Sort();\n        return result;", "        List<long> result =\
    \ new List<long>();\n        foreach (long i in x) {\n            if (i.ToString().Any(c\
    \ => c % 2 == 0)) {\n                continue;\n            }\n            result.Add(i);\n\
    \        }\n        result.Sort();\n        return result;", "        var result\
    \ = new List<long>();\n        foreach (var item in x) {\n            if (item.ToString().Any(c\
    \ => c % 2 == 0)) {\n                continue;\n            }\n            result.Add(item);\n\
    \        }\n        result.Sort();\n        return result;", "        // Write\
    \ your code here\n        List<long> result = new List<long>();\n        foreach\
    \ (long num in x) {\n            if (IsUniqueDigits(num)) {\n                result.Add(num);\n\
    \            }\n        }\n        result.Sort();\n        return result;", " \
    \       List<long> result = new List<long>();\n        foreach (long i in x) {\n\
    \            if (IsUnique(i)) {\n                result.Add(i);\n            }\n\
    \        }\n        result.Sort();\n        return result;", "        var result\
    \ = new List<long>();\n        foreach (var num in x) {\n            if (num.ToString().Any(c\
    \ => c % 2 == 0)) {\n                continue;\n            }\n            result.Add(num);\n\
    \        }\n        result.Sort();\n        return result;", "        var result\
    \ = new List<long>();\n        foreach (var i in x) {\n            if (i.ToString().Any(c\
    \ => c % 2 == 0)) {\n                continue;\n            }\n            result.Add(i);\n\
    \        }\n        result.Sort();\n        return result;", "        // Write\
    \ your code here\n        return null;", "        // Write your code here\n  \
    \      return null;", "        // Write your code here\n        return x.Where(e\
    \ => !e.ToString().Any(c => c % 2 == 0)).OrderBy(e => e).ToList();", "       \
    \ var result = new List<long>();\n        foreach (var item in x) {\n        \
    \    if (item.ToString().Any(c => c % 2 == 0)) {\n                continue;\n\
    \            }\n            result.Add(item);\n        }\n        result.Sort();\n\
    \        return result;", "        var result = new List<long>();\n        foreach\
    \ (var item in x) {\n            if (item.ToString().Any(c => c % 2 == 0)) {\n\
    \                continue;\n            }\n            result.Add(item);\n   \
    \     }\n        result.Sort();\n        return result;", "        // Write your\
    \ code here\n        return x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n\
    \ => n).ToList();", "        List<long> result = new List<long>();\n        foreach\
    \ (long i in x) {\n            if (i.ToString().Any(c => c % 2 == 0)) {\n    \
    \            continue;\n            }\n            result.Add(i);\n        }\n\
    \        result.Sort();\n        return result;", "        List<long> result =\
    \ new List<long>();\n        foreach (long n in x) {\n            if (IsUniqueDigits(n))\
    \ {\n                result.Add(n);\n            }\n        }\n        result.Sort();\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     foreach (long i in x) {\n            if (i.ToString().Any(c => c % 2 ==\
    \ 0)) {\n                continue;\n            }\n            result.Add(i);\n\
    \        }\n        result.Sort();\n        return result;", "        // Write\
    \ your code here\n        return x.Where(n => n.ToString().All(c => c % 2 == 1)).ToList();",
  "        var result = new List<long>();\n        foreach (var num in x) {\n    \
    \        if (num.ToString().Any(c => c % 2 == 0)) {\n                continue;\n\
    \            }\n            result.Add(num);\n        }\n        result.Sort();\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     foreach (long i in x) {\n            if (i < 10) {\n                result.Add(i);\n\
    \            } else {\n                bool isEven = false;\n                while\
    \ (i > 0) {\n                    if ((i % 10) % 2 == 0) {\n                  \
    \      isEven = true;\n                        break;\n                    }\n\
    \                    i /= 10;\n                }\n                if (!isEven)\
    \ {\n                    result.Add(i);\n                }\n            }\n  \
    \      }\n        result.Sort();\n        return result;", "        List<long>\
    \ result = new List<long>();\n        foreach (long i in x) {\n            if\
    \ (i < 10) {\n                result.Add(i);\n            } else {\n         \
    \       bool even = false;\n                while (i > 0) {\n                \
    \    if ((i % 10) % 2 == 0) {\n                        even = true;\n        \
    \                break;\n                    }\n                    i /= 10;\n\
    \                }\n                if (!even) {\n                    result.Add(i);\n\
    \                }\n            }\n        }\n        result.Sort();\n       \
    \ return result;", "        // Write your code here\n        List<long> result\
    \ = new List<long>();\n        foreach (long i in x) {\n            if (i.ToString().ToCharArray().All(c\
    \ => c % 2 != 0)) {\n                result.Add(i);\n            }\n        }\n\
    \        result.Sort();\n        return result;", "        // TODO: Implement\
    \ this function.\n        return null;", "        var result = new List<long>();\n\
    \        foreach (var item in x) {\n            if (item.ToString().Any(c => c\
    \ % 2 == 0)) {\n                continue;\n            }\n            result.Add(item);\n\
    \        }\n        result.Sort();\n        return result;", "        // Write\
    \ your code here\n        return null;", "        // Write your code here\n  \
    \      return null;", '        return x.Where(n => n.ToString().Any(c => c % 2
    == 1)).OrderBy(n => n).ToList();', "        List<long> result = new List<long>();\n\
    \        foreach (long l in x) {\n            if (l < 10) {\n                result.Add(l);\n\
    \            } else {\n                bool hasEven = false;\n               \
    \ long temp = l;\n                while (temp > 0) {\n                    if ((temp\
    \ % 10) % 2 == 0) {\n                        hasEven = true;\n               \
    \         break;\n                    }\n                    temp /= 10;\n   \
    \             }\n                if (!hasEven) {\n                    result.Add(l);\n\
    \                }\n            }\n        }\n        result.Sort();\n       \
    \ return result;", "        // Write your code here\n        return x.Where(n\
    \ => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();", "        List<long>\
    \ result = new List<long>();\n        foreach (long i in x) {\n            if\
    \ (i < 0) {\n                continue;\n            }\n            if (i == 0)\
    \ {\n                result.Add(i);\n                continue;\n            }\n\
    \            bool hasEven = false;\n            while (i > 0) {\n            \
    \    if ((i % 10) % 2 == 0) {\n                    hasEven = true;\n         \
    \           break;\n                }\n                i /= 10;\n            }\n\
    \            if (!hasEven) {\n                result.Add(i);\n            }\n\
    \        }\n        result.Sort();\n        return result;", "        // Write\
    \ your code here\n        return null;", "        var result = new List<long>();\n\
    \        foreach (var item in x) {\n            if (HasEvenDigit(item)) {\n  \
    \              continue;\n            }\n            result.Add(item);\n     \
    \   }\n        result.Sort();\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (long i in x) {\n            if (IsUnique(i))\
    \ {\n                result.Add(i);\n            }\n        }\n        result.Sort();\n\
    \        return result;", "        var result = new List<long>();\n        foreach\
    \ (var num in x) {\n            var digits = new HashSet<int>();\n           \
    \ var n = num;\n            while (n > 0) {\n                var digit = n % 10;\n\
    \                if (digit % 2 == 0) {\n                    break;\n         \
    \       }\n                digits.Add(digit);\n                n /= 10;\n    \
    \        }\n            if (n == 0) {\n                result.Add(num);\n    \
    \        }\n        }\n        result.Sort();\n        return result;", "    \
    \    // Write your code here\n        return x.Where(i => i.ToString().All(c =>\
    \ c % 2 == 1)).ToList();", "        // Write your code here\n        return null;",
  "        List<long> result = new List<long>();\n        foreach (long num in x)\
    \ {\n            if (num.ToString().Any(c => c % 2 == 0)) {\n                continue;\n\
    \            }\n            result.Add(num);\n        }\n        result.Sort();\n\
    \        return result;", "        // Write your code here\n        return null;",
  "        var result = new List<long>();\n        foreach (var i in x) {\n      \
    \      if (i.ToString().Any(c => c % 2 == 0)) {\n                continue;\n \
    \           }\n            result.Add(i);\n        }\n        result.Sort();\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     foreach (long i in x) {\n            if (i < 10) {\n                result.Add(i);\n\
    \            } else {\n                bool hasEven = false;\n               \
    \ long j = i;\n                while (j > 0) {\n                    if ((j % 10)\
    \ % 2 == 0) {\n                        hasEven = true;\n                     \
    \   break;\n                    }\n                    j /= 10;\n            \
    \    }\n                if (!hasEven) {\n                    result.Add(i);\n\
    \                }\n            }\n        }\n        result.Sort();\n       \
    \ return result;", "        // Write your code here\n        return null;", " \
    \       // Write your code here\n        return null;", "        // Write your\
    \ code here\n        return x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n\
    \ => n).ToList();", "        // TODO: Implement this method.\n        return null;",
  "        // Write your code here\n        return null;", "        // Write your\
    \ code here\n        return null;", "        var result = new List<long>();\n\
    \        foreach (var i in x) {\n            if (i.ToString().Any(c => c % 2 ==\
    \ 0)) {\n                continue;\n            }\n            result.Add(i);\n\
    \        }\n        result.Sort();\n        return result;", "        var result\
    \ = new List<long>();\n        foreach (var item in x) {\n            if (item.ToString().Any(c\
    \ => c % 2 == 0)) {\n                continue;\n            }\n            result.Add(item);\n\
    \        }\n        result.Sort();\n        return result;", "        // Write\
    \ your code here\n        List<long> result = new List<long>();\n        foreach\
    \ (long i in x) {\n            if (i.ToString().ToCharArray().All(c => c % 2 !=\
    \ 0)) {\n                result.Add(i);\n            }\n        }\n        result.Sort();\n\
    \        return result;", "        // TODO: Implement your solution here\n   \
    \     return null;", "        List<long> result = new List<long>();\n        foreach\
    \ (long i in x) {\n            if (IsUnique(i)) {\n                result.Add(i);\n\
    \            }\n        }\n        result.Sort();\n        return result;", " \
    \       // Write your code here\n        return null;", "        List<long> result\
    \ = new List<long>();\n        foreach (long n in x) {\n            if (n < 10)\
    \ {\n                result.Add(n);\n            } else {\n                bool\
    \ even = false;\n                while (n > 0) {\n                    if ((n %\
    \ 10) % 2 == 0) {\n                        even = true;\n                    \
    \    break;\n                    }\n                    n /= 10;\n           \
    \     }\n                if (!even) {\n                    result.Add(n);\n  \
    \              }\n            }\n        }\n        result.Sort();\n        return\
    \ result;", "        var result = new List<long>();\n        foreach (var num\
    \ in x) {\n            if (num.ToString().Any(c => c % 2 == 0)) {\n          \
    \      continue;\n            }\n            result.Add(num);\n        }\n   \
    \     result.Sort();\n        return result;", "        var result = new List<long>();\n\
    \        foreach (var item in x) {\n            if (item.ToString().Any(c => c\
    \ % 2 == 0)) {\n                continue;\n            }\n            result.Add(item);\n\
    \        }\n        result.Sort();\n        return result;", '        return x.Where(i
    => i.ToString().All(c => c % 2 == 1)).OrderBy(i => i).ToList();', "        //\
    \ Write your code here\n        return x.Where(n => !HasEvenDigit(n)).OrderBy(n\
    \ => n).ToList();", "        // Your code here\n        return new List<long>();",
  '        return x.Where(num => num.ToString().All(c => c % 2 == 1)).ToList();',
  "        // Write your code here\n        return null;", "        // Write your\
    \ code here\n        return null;", "        // Write your code here\n       \
    \ return null;", "        List<long> result = new List<long>();\n        foreach\
    \ (long n in x) {\n            if (n < 10) {\n                result.Add(n);\n\
    \            } else {\n                bool hasEven = false;\n               \
    \ while (n > 0) {\n                    if ((n % 10) % 2 == 0) {\n            \
    \            hasEven = true;\n                        break;\n               \
    \     }\n                    n /= 10;\n                }\n                if (!hasEven)\
    \ {\n                    result.Add(n);\n                }\n            }\n  \
    \      }\n        result.Sort();\n        return result;", "        var result\
    \ = new List<long>();\n        foreach (var item in x) {\n            if (item.ToString().Any(c\
    \ => c % 2 == 0)) {\n                continue;\n            }\n            result.Add(item);\n\
    \        }\n        result.Sort();\n        return result;", "        var result\
    \ = new List<long>();\n        foreach (var item in x) {\n            bool hasEvenDigit\
    \ = false;\n            foreach (var digit in item.ToString()) {\n           \
    \     if ((digit - '0') % 2 == 0) {\n                    hasEvenDigit = true;\n\
    \                    break;\n                }\n            }\n            if\
    \ (!hasEvenDigit) {\n                result.Add(item);\n            }\n      \
    \  }\n        result.Sort();\n        return result;", "        var result = new\
    \ List<long>();\n        foreach (var i in x) {\n            if (!HasEvenDigit(i))\
    \ {\n                result.Add(i);\n            }\n        }\n        result.Sort();\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     foreach (long n in x) {\n            if (!HasEvenDigit(n)) {\n         \
    \       result.Add(n);\n            }\n        }\n        result.Sort();\n   \
    \     return result;", "        // Write your code here\n        return x.Where(i\
    \ => i.ToString().All(c => c % 2 == 1)).OrderBy(i => i).ToList();", "        //\
    \ Write your code here\n        return null;", "        // Write your code here\n\
    \        return null;", "        // Write your code here\n        return x.Where(n\
    \ => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();", "        //\
    \ TODO: Implement this function\n        return null;", "        // Write your\
    \ code here\n        return null;", "        List<long> result = new List<long>();\n\
    \        foreach (long i in x) {\n            if (IsUnique(i)) {\n           \
    \     result.Add(i);\n            }\n        }\n        result.Sort();\n     \
    \   return result;", "        // Write your code here\n        return null;",
  "        var result = new List<long>();\n        foreach (var item in x) {\n   \
    \         if (item.ToString().Any(c => c % 2 == 0))\n                continue;\n\
    \            result.Add(item);\n        }\n        result.Sort();\n        return\
    \ result;", "        var result = new List<long>();\n        foreach (var i in\
    \ x) {\n            if (i.ToString().Any(c => c % 2 == 0)) {\n               \
    \ continue;\n            }\n            result.Add(i);\n        }\n        result.Sort();\n\
    \        return result;", "        // Write your code here\n        return x.Where(i\
    \ => i.ToString().All(c => c % 2 == 1)).OrderBy(i => i).ToList();", "        List<long>\
    \ result = new List<long>();\n        foreach (long num in x) {\n            if\
    \ (IsUniqueDigits(num)) {\n                result.Add(num);\n            }\n \
    \       }\n        result.Sort();\n        return result;", "        // Write\
    \ your code here\n        return x.Where(i => i.ToString().All(c => c % 2 == 1)).OrderBy(i\
    \ => i).ToList();", "        // Write your code here\n        return null;", " \
    \       var result = new List<long>();\n        foreach (var item in x) {\n  \
    \          if (IsUniqueDigits(item)) {\n                result.Add(item);\n  \
    \          }\n        }\n        result.Sort();\n        return result;", "  \
    \      // Write your code here\n        return null;", "        List<long> result\
    \ = new List<long>();\n        foreach (long i in x) {\n            if (IsUnique(i))\
    \ {\n                result.Add(i);\n            }\n        }\n        result.Sort();\n\
    \        return result;", "        // Write your code here\n        return x.Where(n\
    \ => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();", "        var\
    \ res = new List<long>();\n        foreach (var i in x) {\n            if (i.ToString().Any(c\
    \ => c % 2 == 0)) {\n                continue;\n            }\n            res.Add(i);\n\
    \        }\n        res.Sort();\n        return res;", "        // Implement this\
    \ function.\n        return new List<long>();", "        List<long> result = new\
    \ List<long>();\n        foreach (long num in x) {\n            if (IsUniqueDigits(num))\
    \ {\n                result.Add(num);\n            }\n        }\n        result.Sort();\n\
    \        return result;", "        // Write your code here\n        return null;",
  "        // Write your code here\n        return null;", "        // Write your\
    \ code here\n        return x.Where(e => e.ToString().All(c => c % 2 == 1)).OrderBy(e\
    \ => e).ToList();", "        // Write your code here\n        return x.Where(i\
    \ => i.ToString().All(c => c % 2 == 1)).OrderBy(i => i).ToList();", '        return
    x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n => n).ToList();', " \
    \       var result = new List<long>();\n        foreach (var i in x) {\n     \
    \       var hasEvenDigit = false;\n            var n = i;\n            while (n\
    \ > 0) {\n                if ((n % 10) % 2 == 0) {\n                    hasEvenDigit\
    \ = true;\n                    break;\n                }\n                n /=\
    \ 10;\n            }\n            if (!hasEvenDigit) {\n                result.Add(i);\n\
    \            }\n        }\n        result.Sort();\n        return result;", " \
    \       // Write your code here\n        return null;", "        List<long> res\
    \ = new List<long>();\n        foreach (long i in x) {\n            if (IsUnique(i))\
    \ {\n                res.Add(i);\n            }\n        }\n        res.Sort();\n\
    \        return res;", "        List<long> res = new List<long>();\n        foreach\
    \ (long i in x) {\n            if (i < 10) {\n                res.Add(i);\n  \
    \          } else {\n                bool isUnique = true;\n                long\
    \ tmp = i;\n                while (tmp > 0) {\n                    if (tmp % 2\
    \ == 0) {\n                        isUnique = false;\n                       \
    \ break;\n                    }\n                    tmp /= 10;\n            \
    \    }\n                if (isUnique) {\n                    res.Add(i);\n   \
    \             }\n            }\n        }\n        res.Sort();\n        return\
    \ res;", "        // Write your code here\n        List<long> result = new List<long>();\n\
    \        foreach (long number in x) {\n            if (IsUniqueDigits(number))\
    \ {\n                result.Add(number);\n            }\n        }\n        result.Sort();\n\
    \        return result;", "        // Write your code here\n        return null;",
  "        // Write your code here\n        return null;", "        // Write your\
    \ code here\n        return x.Where(n => n.ToString().All(c => c % 2 == 1)).OrderBy(n\
    \ => n).ToList();", "        var result = new List<long>();\n        foreach (var\
    \ i in x) {\n            if (i.ToString().Any(c => c % 2 == 0)) {\n          \
    \      continue;\n            }\n            result.Add(i);\n        }\n     \
    \   result.Sort();\n        return result;"]
stop_tokens:
- "\n    }\n"

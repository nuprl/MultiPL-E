language: cs
name: HumanEval_19_sort_numbers
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var nums2 = new string[nums.Length];\n        for (int i = 0; i < nums.Length;
    i++) {\n            switch (nums[i]) {\n                case \"zero\": nums2[i]
    = \"0\"; break;\n                case \"one\": nums2[i] = \"1\"; break;\n                case
    \"two\": nums2[i] = \"2\"; break;\n                case \"three\": nums2[i] =
    \"3\"; break;\n                case \"four\": nums2[i] = \"4\"; break;\n                case
    \"five\": nums2[i] = \"5\"; break;\n                case \"six\": nums2[i] = \"6\";
    break;\n                case \"seven\": nums2[i] = \"7\"; break;\n                case
    \"eight\": nums2[i] = \"8\"; break;\n                case \"nine\": nums2[i] =
    \"9\"; break;\n            }\n        }\n        Array.Sort(nums2);\n        for
    (int i = 0; i < nums.Length; i++) {\n            switch (nums2[i]) {\n                case
    \"0\": nums2[i] = \"zero\"; break;\n                case \"1\": nums2[i] = \"one\";
    break;\n                case \"2\": nums2[i] = \"two\"; break;\n                case
    \"3\": nums2[i] = \"three\"; break;\n                case \"4\": nums2[i] = \"four\";
    break;\n                case \"5\": nums2[i] = \"five\"; break;\n                case
    \"6\": nums2[i] = \"six\"; break;\n                case \"7\": nums2[i] = \"seven\";
    break;\n                case \"8\": nums2[i] = \"eight\"; break;\n                case
    \"9\": nums2[i] = \"nine\"; break;\n            }\n        }\n        return string.Join(\"
    \", nums2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var sorted = new string[nums.Length];\n        var numToInt = new Dictionary<string,
    int>() {\n            {\"zero\", 0},\n            {\"one\", 1},\n            {\"two\",
    2},\n            {\"three\", 3},\n            {\"four\", 4},\n            {\"five\",
    5},\n            {\"six\", 6},\n            {\"seven\", 7},\n            {\"eight\",
    8},\n            {\"nine\", 9}\n        };\n        for (int i = 0; i < nums.Length;
    i++) {\n            sorted[i] = numToInt[nums[i]].ToString();\n        }\n        Array.Sort(sorted);\n
    \       for (int i = 0; i < nums.Length; i++) {\n            sorted[i] = nums[int.Parse(sorted[i])];\n
    \       }\n        return string.Join(\" \", sorted);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x000cb] in <9e3905f03f1549739033645e441fc0d1>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <9e3905f03f1549739033645e441fc0d1>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x000cb] in <9e3905f03f1549739033645e441fc0d1>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <9e3905f03f1549739033645e441fc0d1>:0
    \n"
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this function\n        return \"\";\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22df63c903774f05937fb04570cba248>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22df63c903774f05937fb04570cba248>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = nums.Select(s =>
    int.Parse(s)).ToArray();\n        Array.Sort(nums2);\n        return string.Join(\"
    \", nums2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String s) [0x00000] in <17997a61994a4a95a50d7138a87ac8f8>:0
    \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray ()
    [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x00030] in <17997a61994a4a95a50d7138a87ac8f8>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <17997a61994a4a95a50d7138a87ac8f8>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was
    not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String s) [0x00000] in <17997a61994a4a95a50d7138a87ac8f8>:0
    \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray ()
    [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6"
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        string[] nums = numbers.Split(' ');\n        int[] nums_int = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])
    {\n                case \"zero\":\n                    nums_int[i] = 0;\n                    break;\n
    \               case \"one\":\n                    nums_int[i] = 1;\n                    break;\n
    \               case \"two\":\n                    nums_int[i] = 2;\n                    break;\n
    \               case \"three\":\n                    nums_int[i] = 3;\n                    break;\n
    \               case \"four\":\n                    nums_int[i] = 4;\n                    break;\n
    \               case \"five\":\n                    nums_int[i] = 5;\n                    break;\n
    \               case \"six\":\n                    nums_int[i] = 6;\n                    break;\n
    \               case \"seven\":\n                    nums_int[i] = 7;\n                    break;\n
    \               case \"eight\":\n                    nums_int[i] = 8;\n                    break;\n
    \               case \"nine\":\n                    nums_int[i] = 9;\n                    break;\n
    \           }\n        }\n        Array.Sort(nums_int);\n        string result
    = \"\";\n        for (int i = 0; i < nums_int.Length; i++) {\n            switch
    (nums_int[i]) {\n                case 0:\n                    result += \"zero
    \";\n                    break;\n                case 1:\n                    result
    += \"one \";\n                    break;\n                case 2:\n                    result
    += \"two \";\n                    break;\n                case 3:\n                    result
    += \"three \";\n                    break;\n                case 4:\n                    result
    += \"four \";\n                    break;\n                case 5:\n                    result
    += \"five \";\n                    break;\n                case 6:\n                    result
    += \"six \";\n                    break;\n                case 7:\n                    result
    += \"seven \";\n                    break;\n                case 8:\n                    result
    += \"eight \";\n                    break;\n                case 9:\n                    result
    += \"nine \";\n                    break;\n            }\n        }\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpob93bbge.cs(12,26): error CS0161: ''Problem.SortNumbers(string)'': not
    all code paths return a value

    '
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\":\n                    nums2.Add(0);\n                    break;\n                case
    \"one\":\n                    nums2.Add(1);\n                    break;\n                case
    \"two\":\n                    nums2.Add(2);\n                    break;\n                case
    \"three\":\n                    nums2.Add(3);\n                    break;\n                case
    \"four\":\n                    nums2.Add(4);\n                    break;\n                case
    \"five\":\n                    nums2.Add(5);\n                    break;\n                case
    \"six\":\n                    nums2.Add(6);\n                    break;\n                case
    \"seven\":\n                    nums2.Add(7);\n                    break;\n                case
    \"eight\":\n                    nums2.Add(8);\n                    break;\n                case
    \"nine\":\n                    nums2.Add(9);\n                    break;\n            }\n
    \       }\n        nums2.Sort();\n        var sb = new StringBuilder();\n        foreach
    (var num in nums2) {\n            switch (num) {\n                case 0:\n                    sb.Append(\"zero
    \");\n                    break;\n                case 1:\n                    sb.Append(\"one
    \");\n                    break;\n                case 2:\n                    sb.Append(\"two
    \");\n                    break;\n                case 3:\n                    sb.Append(\"three
    \");\n                    break;\n                case 4:\n                    sb.Append(\"four
    \");\n                    break;\n                case 5:\n                    sb.Append(\"five
    \");\n                    break;\n                case 6:\n                    sb.Append(\"six
    \");\n                    break;\n                case 7:\n                    sb.Append(\"seven
    \");\n                    break;\n                case 8:\n                    sb.Append(\"eight
    \");\n                    break;\n                case 9:\n                    sb.Append(\"nine
    \");\n                    break;\n            }\n        }\n        return sb.ToString().Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = nums.Select(x =>
    int.Parse(x)).ToArray();\n        Array.Sort(nums2);\n        return string.Join(\"
    \", nums2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <678699c43a6246338382cd40d6739b41>:0
    \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray ()
    [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x00030] in <678699c43a6246338382cd40d6739b41>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <678699c43a6246338382cd40d6739b41>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was
    not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <678699c43a6246338382cd40d6739b41>:0
    \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray ()
    [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6"
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var numsInt = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            numsInt[i] = ConvertToInt(nums[i]);\n
    \       }\n        Array.Sort(numsInt);\n        var numsStr = new string[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            numsStr[i] = ConvertToString(numsInt[i]);\n
    \       }\n        return string.Join(\" \", numsStr);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphjvv0vh1.cs(16,26): error CS0103: The name ''ConvertToInt'' does not exist
    in the current context

    /tmp/tmphjvv0vh1.cs(21,26): error CS0103: The name ''ConvertToString'' does not
    exist in the current context

    '
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var numList = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\":\n                    numList.Add(0);\n                    break;\n                case
    \"one\":\n                    numList.Add(1);\n                    break;\n                case
    \"two\":\n                    numList.Add(2);\n                    break;\n                case
    \"three\":\n                    numList.Add(3);\n                    break;\n
    \               case \"four\":\n                    numList.Add(4);\n                    break;\n
    \               case \"five\":\n                    numList.Add(5);\n                    break;\n
    \               case \"six\":\n                    numList.Add(6);\n                    break;\n
    \               case \"seven\":\n                    numList.Add(7);\n                    break;\n
    \               case \"eight\":\n                    numList.Add(8);\n                    break;\n
    \               case \"nine\":\n                    numList.Add(9);\n                    break;\n
    \           }\n        }\n        numList.Sort();\n        var sb = new StringBuilder();\n
    \       foreach (var num in numList) {\n            switch (num) {\n                case
    0:\n                    sb.Append(\"zero \");\n                    break;\n                case
    1:\n                    sb.Append(\"one \");\n                    break;\n                case
    2:\n                    sb.Append(\"two \");\n                    break;\n                case
    3:\n                    sb.Append(\"three \");\n                    break;\n                case
    4:\n                    sb.Append(\"four \");\n                    break;\n                case
    5:\n                    sb.Append(\"five \");\n                    break;\n                case
    6:\n                    sb.Append(\"six \");\n                    break;\n                case
    7:\n                    sb.Append(\"seven \");\n                    break;\n                case
    8:\n                    sb.Append(\"eight \");\n                    break;\n                case
    9:\n                    sb.Append(\"nine \");\n                    break;\n            }\n
    \       }\n        return sb.ToString().Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Write your code here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b325b38466144df28aa8c81ede6909ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b325b38466144df28aa8c81ede6909ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var dict = new Dictionary<string, int>();\n        dict[\"zero\"] = 0;\n
    \       dict[\"one\"] = 1;\n        dict[\"two\"] = 2;\n        dict[\"three\"]
    = 3;\n        dict[\"four\"] = 4;\n        dict[\"five\"] = 5;\n        dict[\"six\"]
    = 6;\n        dict[\"seven\"] = 7;\n        dict[\"eight\"] = 8;\n        dict[\"nine\"]
    = 9;\n        var sorted = nums.Select(x => dict[x]).OrderBy(x => x).ToArray();\n
    \       var result = new StringBuilder();\n        foreach (var num in sorted)
    {\n            var str = \"\";\n            switch (num) {\n                case
    0: str = \"zero\"; break;\n                case 1: str = \"one\"; break;\n                case
    2: str = \"two\"; break;\n                case 3: str = \"three\"; break;\n                case
    4: str = \"four\"; break;\n                case 5: str = \"five\"; break;\n                case
    6: str = \"six\"; break;\n                case 7: str = \"seven\"; break;\n                case
    8: str = \"eight\"; break;\n                case 9: str = \"nine\"; break;\n            }\n
    \           result.Append(str + \" \");\n        }\n        return result.ToString().Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String x) [0x00000] in <bf09b0406478406e8e9cdc2665f66768>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToArray () [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToArray[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x00130] in <bf09b0406478406e8e9cdc2665f66768>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <bf09b0406478406e8e9cdc2665f66768>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String x) [0x00000] in <bf09b0406478406e8e9cdc2665f66768>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToArray () [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToArray[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.SortNumbers
    (Syste"
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this function\n        return \"\";\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22df63c903774f05937fb04570cba248>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22df63c903774f05937fb04570cba248>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var nums2 = new List<string>();\n        var nums3 = new List<string>();\n
    \       var nums4 = new List<string>();\n        var nums5 = new List<string>();\n
    \       var nums6 = new List<string>();\n        var nums7 = new List<string>();\n
    \       var nums8 = new List<string>();\n        var nums9 = new List<string>();\n
    \       var nums10 = new List<string>();\n        foreach (var num in nums) {\n
    \           switch (num) {\n                case \"zero\":\n                    nums2.Add(num);\n
    \                   break;\n                case \"one\":\n                    nums3.Add(num);\n
    \                   break;\n                case \"two\":\n                    nums4.Add(num);\n
    \                   break;\n                case \"three\":\n                    nums5.Add(num);\n
    \                   break;\n                case \"four\":\n                    nums6.Add(num);\n
    \                   break;\n                case \"five\":\n                    nums7.Add(num);\n
    \                   break;\n                case \"six\":\n                    nums8.Add(num);\n
    \                   break;\n                case \"seven\":\n                    nums9.Add(num);\n
    \                   break;\n                case \"eight\":\n                    nums10.Add(num);\n
    \                   break;\n                case \"nine\":\n                    nums2.Add(num);\n
    \                   break;\n            }\n        }\n        var result = string.Join(\"
    \", nums2.Concat(nums3).Concat(nums4).Concat(nums5).Concat(nums6).Concat(nums7).Concat(nums8).Concat(nums9).Concat(nums10));\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90d7382dd5184c2a90b784e7807358df>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90d7382dd5184c2a90b784e7807358df>:0
    \n"
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            numsInt[i] = int.Parse(nums[i]);\n
    \       }\n        Array.Sort(numsInt);\n        string result = \"\";\n        for
    (int i = 0; i < numsInt.Length; i++) {\n            result += numsInt[i] + \"
    \";\n        }\n        return result.Trim();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x00019] in <11331014ea5e4832842c7e9c273a54fc>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <11331014ea5e4832842c7e9c273a54fc>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was
    not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x00019] in <11331014ea5e4832842c7e9c273a54fc>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <11331014ea5e4832842c7e9c273a54fc>:0
    \n"
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\": nums2.Add(0); break;\n                case \"one\": nums2.Add(1); break;\n
    \               case \"two\": nums2.Add(2); break;\n                case \"three\":
    nums2.Add(3); break;\n                case \"four\": nums2.Add(4); break;\n                case
    \"five\": nums2.Add(5); break;\n                case \"six\": nums2.Add(6); break;\n
    \               case \"seven\": nums2.Add(7); break;\n                case \"eight\":
    nums2.Add(8); break;\n                case \"nine\": nums2.Add(9); break;\n            }\n
    \       }\n        nums2.Sort();\n        var nums3 = new List<string>();\n        foreach
    (var num in nums2) {\n            switch (num) {\n                case 0: nums3.Add(\"zero\");
    break;\n                case 1: nums3.Add(\"one\"); break;\n                case
    2: nums3.Add(\"two\"); break;\n                case 3: nums3.Add(\"three\"); break;\n
    \               case 4: nums3.Add(\"four\"); break;\n                case 5: nums3.Add(\"five\");
    break;\n                case 6: nums3.Add(\"six\"); break;\n                case
    7: nums3.Add(\"seven\"); break;\n                case 8: nums3.Add(\"eight\");
    break;\n                case 9: nums3.Add(\"nine\"); break;\n            }\n        }\n
    \       return string.Join(\" \", nums3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var numsInt = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])
    {\n                case \"zero\":\n                    numsInt[i] = 0;\n                    break;\n
    \               case \"one\":\n                    numsInt[i] = 1;\n                    break;\n
    \               case \"two\":\n                    numsInt[i] = 2;\n                    break;\n
    \               case \"three\":\n                    numsInt[i] = 3;\n                    break;\n
    \               case \"four\":\n                    numsInt[i] = 4;\n                    break;\n
    \               case \"five\":\n                    numsInt[i] = 5;\n                    break;\n
    \               case \"six\":\n                    numsInt[i] = 6;\n                    break;\n
    \               case \"seven\":\n                    numsInt[i] = 7;\n                    break;\n
    \               case \"eight\":\n                    numsInt[i] = 8;\n                    break;\n
    \               case \"nine\":\n                    numsInt[i] = 9;\n                    break;\n
    \           }\n        }\n        Array.Sort(numsInt);\n        var numsStr =
    new string[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n            switch
    (numsInt[i]) {\n                case 0:\n                    numsStr[i] = \"zero\";\n
    \                   break;\n                case 1:\n                    numsStr[i]
    = \"one\";\n                    break;\n                case 2:\n                    numsStr[i]
    = \"two\";\n                    break;\n                case 3:\n                    numsStr[i]
    = \"three\";\n                    break;\n                case 4:\n                    numsStr[i]
    = \"four\";\n                    break;\n                case 5:\n                    numsStr[i]
    = \"five\";\n                    break;\n                case 6:\n                    numsStr[i]
    = \"six\";\n                    break;\n                case 7:\n                    numsStr[i]
    = \"seven\";\n                    break;\n                case 8:\n                    numsStr[i]
    = \"eight\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5aw1pwj_.cs(80,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp5aw1pwj_.cs(88,2): error CS1513: } expected

    '
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\":\n                    nums2.Add(0);\n                    break;\n                case
    \"one\":\n                    nums2.Add(1);\n                    break;\n                case
    \"two\":\n                    nums2.Add(2);\n                    break;\n                case
    \"three\":\n                    nums2.Add(3);\n                    break;\n                case
    \"four\":\n                    nums2.Add(4);\n                    break;\n                case
    \"five\":\n                    nums2.Add(5);\n                    break;\n                case
    \"six\":\n                    nums2.Add(6);\n                    break;\n                case
    \"seven\":\n                    nums2.Add(7);\n                    break;\n                case
    \"eight\":\n                    nums2.Add(8);\n                    break;\n                case
    \"nine\":\n                    nums2.Add(9);\n                    break;\n            }\n
    \       }\n        nums2.Sort();\n        var sb = new StringBuilder();\n        foreach
    (var num in nums2) {\n            switch (num) {\n                case 0:\n                    sb.Append(\"zero
    \");\n                    break;\n                case 1:\n                    sb.Append(\"one
    \");\n                    break;\n                case 2:\n                    sb.Append(\"two
    \");\n                    break;\n                case 3:\n                    sb.Append(\"three
    \");\n                    break;\n                case 4:\n                    sb.Append(\"four
    \");\n                    break;\n                case 5:\n                    sb.Append(\"five
    \");\n                    break;\n                case 6:\n                    sb.Append(\"six
    \");\n                    break;\n                case 7:\n                    sb.Append(\"seven
    \");\n                    break;\n                case 8:\n                    sb.Append(\"eight
    \");\n                    break;\n                case 9:\n                    sb.Append(\"nine
    \");\n                    break;\n            }\n        }\n        return sb.ToString().Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(s => s.ToLower()).ToArray();\n
    \       var numMap = new Dictionary<string, int>() {\n            {\"zero\", 0},\n
    \           {\"one\", 1},\n            {\"two\", 2},\n            {\"three\",
    3},\n            {\"four\", 4},\n            {\"five\", 5},\n            {\"six\",
    6},\n            {\"seven\", 7},\n            {\"eight\", 8},\n            {\"nine\",
    9}\n        };\n        var numsInt = nums.Select(s => numMap[s]).ToArray();\n
    \       Array.Sort(numsInt);\n        var numsStr = numsInt.Select(i => numMap.First(kvp
    => kvp.Value == i).Key).ToArray();\n        return string.Join(\" \", numsStr);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String s) [0x00000] in <79de9fb545664827a640505ad701a586>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x000da] in <79de9fb545664827a640505ad701a586>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <79de9fb545664827a640505ad701a586>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String s) [0x00000] in <79de9fb545664827a640505ad701a586>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x000da] in <79de9fb545664827a640505ad701a586>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <79de9fb545664827a640505ad701a586>:0
    \n"
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])
    {\n                case \"zero\":\n                    nums2[i] = 0;\n                    break;\n
    \               case \"one\":\n                    nums2[i] = 1;\n                    break;\n
    \               case \"two\":\n                    nums2[i] = 2;\n                    break;\n
    \               case \"three\":\n                    nums2[i] = 3;\n                    break;\n
    \               case \"four\":\n                    nums2[i] = 4;\n                    break;\n
    \               case \"five\":\n                    nums2[i] = 5;\n                    break;\n
    \               case \"six\":\n                    nums2[i] = 6;\n                    break;\n
    \               case \"seven\":\n                    nums2[i] = 7;\n                    break;\n
    \               case \"eight\":\n                    nums2[i] = 8;\n                    break;\n
    \               case \"nine\":\n                    nums2[i] = 9;\n                    break;\n
    \           }\n        }\n        Array.Sort(nums2);\n        string result =
    \"\";\n        for (int i = 0; i < nums2.Length; i++) {\n            switch (nums2[i])
    {\n                case 0:\n                    result += \"zero \";\n                    break;\n
    \               case 1:\n                    result += \"one \";\n                    break;\n
    \               case 2:\n                    result += \"two \";\n                    break;\n
    \               case 3:\n                    result += \"three \";\n                    break;\n
    \               case 4:\n                    result += \"four \";\n                    break;\n
    \               case 5:\n                    result += \"five \";\n                    break;\n
    \               case 6:\n                    result += \"six \";\n                    break;\n
    \               case 7:\n                    result += \"seven \";\n                    break;\n
    \               case 8:\n                    result += \"eight \";\n                    break;\n
    \               case 9:\n                    result += \"nine \";\n                    break;\n
    \           }\n        }\n        return result.Trim();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cd7970d489124001a128ecc61740161a>:0
    \n"
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var numeralToNumber = new Dictionary<string, int>() {\n            {\"zero\",
    0},\n            {\"one\", 1},\n            {\"two\", 2},\n            {\"three\",
    3},\n            {\"four\", 4},\n            {\"five\", 5},\n            {\"six\",
    6},\n            {\"seven\", 7},\n            {\"eight\", 8},\n            {\"nine\",
    9}\n        };\n        var numberToNumeral = new Dictionary<int, string>() {\n
    \           {0, \"zero\"},\n            {1, \"one\"},\n            {2, \"two\"},\n
    \           {3, \"three\"},\n            {4, \"four\"},\n            {5, \"five\"},\n
    \           {6, \"six\"},\n            {7, \"seven\"},\n            {8, \"eight\"},\n
    \           {9, \"nine\"}\n        };\n        var nums = numbers.Split(' ').Select(numeral
    => numeralToNumber[numeral]).ToList();\n        nums.Sort();\n        return string.Join(\"
    \", nums.Select(number => numberToNumeral[number]));\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__0
    (System.String numeral) [0x00000] in <92ea8b5fb59046a590ffeb469f410664>:0 \n  at
    System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToList () [0x00014]
    in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToList[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x0013d] in <92ea8b5fb59046a590ffeb469f410664>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <92ea8b5fb59046a590ffeb469f410664>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__0
    (System.String numeral) [0x00000] in <92ea8b5fb59046a590ffeb469f410664>:0 \n  at
    System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToList () [0x00014]
    in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToList[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x0013d] in <92ea8b5fb59046a590ffeb469f410664>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <92ea8b5fb59046a590ffeb469f410664>:0
    \n"
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(n => int.Parse(n)).OrderBy(n =>
    n).Select(n => n.ToString()).ToArray();\n        return string.Join(\" \", nums);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String n) [0x00000] in <0e4cf2e44b4c4d5cbf5c8d5589e64c3e>:0
    \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray ()
    [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext
    () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray
    (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at
    System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()
    [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <0e4cf2e44b4c4d5cbf5c8d5589e64c3e>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <0e4cf2e44b4c4d5cbf5c8d5589e64c3e>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was
    not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this method\n        // This method should return
    a string containing the numbers in the input string sorted from smallest to largest\n
    \       // The numbers in the string should be delimited by a single space\n        //
    The numbers should be sorted by their numeric value, not their spelling\n        //
    The numbers in the input string will be unique\n        // The numbers in the
    input string will be in the range 0-9\n        // The input string will contain
    between 1 and 10 numbers\n        // The input string will only contain valid
    numberals\n        // The input string will not be null or empty\n        // The
    input string will not start or end with a space\n        // The input string will
    not contain two or more consecutive spaces\n        // The input string will not
    contain leading zeros\n        // The input string will not contain negative numbers\n
    \       // The input string will not contain non-numeric characters\n        //
    The input string will not contain numbers greater than 9\n        // The input
    string will not contain numbers less than 0\n        // The input string will
    not contain numbers with more than one digit\n        // The input string will
    not contain numbers with decimal points\n        // The input string will not
    contain numbers in scientific notation\n        // The input string will not contain
    numbers in hexadecimal\n        // The input string will not contain numbers in
    octal\n        // The input string will not contain numbers in binary\n        //
    The input string will not contain numbers in Roman numerals\n        // The input
    string will not contain numbers in any other base\n        // The input string
    will not contain numbers with leading or trailing whitespace\n        // The input
    string will not contain numbers with leading or trailing punctuation\n        //
    The input string will not contain numbers with leading or trailing symbols\n        //
    The input string will not contain numbers with leading or trailing non-printable
    characters\n        // The input string will not contain numbers with leading
    or trailing control characters\n        // The input string will not contain numbers
    with leading or trailing non-ASCII characters\n        // The input string will
    not contain numbers with leading or trailing non-Latin characters\n        //
    The input string will not contain numbers with leading or trailing non-alphanumeric
    characters\n        // The input string will not contain numbers with leading
    or trailing non-alphabetic characters\n        // The input string will not contain
    numbers with leading or trailing non-numeric characters\n        // The input
    string will\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp77jvddsn.cs(12,26): error CS0161: ''Problem.SortNumbers(string)'': not
    all code paths return a value

    '
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var numMap = new Dictionary<string, int> {\n            { \"zero\", 0
    },\n            { \"one\", 1 },\n            { \"two\", 2 },\n            { \"three\",
    3 },\n            { \"four\", 4 },\n            { \"five\", 5 },\n            {
    \"six\", 6 },\n            { \"seven\", 7 },\n            { \"eight\", 8 },\n
    \           { \"nine\", 9 }\n        };\n        var numsSorted = nums.Select(x
    => numMap[x]).OrderBy(x => x).ToArray();\n        var numsSortedStr = numsSorted.Select(x
    => numMap.First(y => y.Value == x).Key).ToArray();\n        return string.Join(\"
    \", numsSortedStr);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String x) [0x00000] in <02b5aa2355d8462d9851c79e4899bb7c>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToArray () [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToArray[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x000fe] in <02b5aa2355d8462d9851c79e4899bb7c>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <02b5aa2355d8462d9851c79e4899bb7c>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String x) [0x00000] in <02b5aa2355d8462d9851c79e4899bb7c>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToArray () [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToArray[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.SortNumbers
    (Syste"
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var nums2 = new List<int>();\n        foreach (var num in nums) {\n            switch
    (num) {\n                case \"zero\": nums2.Add(0); break;\n                case
    \"one\": nums2.Add(1); break;\n                case \"two\": nums2.Add(2); break;\n
    \               case \"three\": nums2.Add(3); break;\n                case \"four\":
    nums2.Add(4); break;\n                case \"five\": nums2.Add(5); break;\n                case
    \"six\": nums2.Add(6); break;\n                case \"seven\": nums2.Add(7); break;\n
    \               case \"eight\": nums2.Add(8); break;\n                case \"nine\":
    nums2.Add(9); break;\n            }\n        }\n        nums2.Sort();\n        var
    nums3 = new List<string>();\n        foreach (var num in nums2) {\n            switch
    (num) {\n                case 0: nums3.Add(\"zero\"); break;\n                case
    1: nums3.Add(\"one\"); break;\n                case 2: nums3.Add(\"two\"); break;\n
    \               case 3: nums3.Add(\"three\"); break;\n                case 4:
    nums3.Add(\"four\"); break;\n                case 5: nums3.Add(\"five\"); break;\n
    \               case 6: nums3.Add(\"six\"); break;\n                case 7: nums3.Add(\"seven\");
    break;\n                case 8: nums3.Add(\"eight\"); break;\n                case
    9: nums3.Add(\"nine\"); break;\n            }\n        }\n        return string.Join(\"
    \", nums3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var numMap = new Dictionary<string, int> {\n            { \"zero\", 0
    },\n            { \"one\", 1 },\n            { \"two\", 2 },\n            { \"three\",
    3 },\n            { \"four\", 4 },\n            { \"five\", 5 },\n            {
    \"six\", 6 },\n            { \"seven\", 7 },\n            { \"eight\", 8 },\n
    \           { \"nine\", 9 }\n        };\n        var numsInt = nums.Select(x =>
    numMap[x]).ToArray();\n        Array.Sort(numsInt);\n        var numsStr = numsInt.Select(x
    => numMap.First(y => y.Value == x).Key).ToArray();\n        return string.Join(\"
    \", numsStr);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String x) [0x00000] in <ac3e46bb33ff473e948ff10d5d721235>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x000da] in <ac3e46bb33ff473e948ff10d5d721235>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ac3e46bb33ff473e948ff10d5d721235>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String x) [0x00000] in <ac3e46bb33ff473e948ff10d5d721235>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x000da] in <ac3e46bb33ff473e948ff10d5d721235>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ac3e46bb33ff473e948ff10d5d721235>:0
    \n"
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this method\n        // This method should return
    a string with the numbers sorted from smallest to largest\n        // You can
    use any language you want, but you must submit a .cs file\n        // You can
    use any algorithm you want, but try to make it as efficient as possible\n        //
    You can use any libraries you want, but you must implement the sorting algorithm
    yourself\n        // You can write any additional methods you want, but you must
    implement the sorting algorithm yourself\n        // You can add any additional
    classes you want, but you must implement the sorting algorithm yourself\n        //
    You can make any changes you want to Main, but your algorithm must still be called
    from SortNumbers\n        // You can add any additional files you want, but you
    must still implement the sorting algorithm yourself\n        // You can use any
    variable names you want, but you must implement the sorting algorithm yourself\n
    \       // You can use any formatting you want, but you must implement the sorting
    algorithm yourself\n        // You can use any whitespace you want, but you must
    implement the sorting algorithm yourself\n        // You can use any comments
    you want, but you must implement the sorting algorithm yourself\n        // You
    can use any IDE you want, but you must implement the sorting algorithm yourself\n
    \       // You can use any operating system you want, but you must implement the
    sorting algorithm yourself\n        // You can use any computer you want, but
    you must implement the sorting algorithm yourself\n        // You can use any
    human language you want, but you must implement the sorting algorithm yourself\n
    \       // You can use any other language you want, but you must implement the
    sorting algorithm yourself\n        // You can use any other algorithm you want,
    but you must implement the sorting algorithm yourself\n        // You can use
    any other libraries you want, but you must implement the sorting algorithm yourself\n
    \       // You can write any other methods you want, but you must implement the
    sorting algorithm yourself\n        // You can add any other classes you want,
    but you must implement the sorting algorithm yourself\n        // You can make
    any other changes you want to Main, but your algorithm must still be called from
    SortNumbers\n        // You can add any other files you want, but you must still
    implement the sorting algorithm yourself\n        // You can use any other variable
    names you want, but you must implement the sorting algorithm yourself\n        //
    You can use any other formatting you want, but you must implement the sorting
    algorithm yourself\n       \n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1gv9s8l_.cs(12,26): error CS0161: ''Problem.SortNumbers(string)'': not
    all code paths return a value

    '
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x =>
    x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \", nums);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <ac2a26f1ece543228ac9fecd2f68f148>:0
    \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray ()
    [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext
    () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray
    (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at
    System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()
    [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <ac2a26f1ece543228ac9fecd2f68f148>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ac2a26f1ece543228ac9fecd2f68f148>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was
    not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(n => NumeralToInt(n)).OrderBy(n
    => n).Select(n => IntToNumeral(n));\n        return string.Join(\" \", nums);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpibzri0mx.cs(13,51): error CS0103: The name ''NumeralToInt'' does not exist
    in the current context

    /tmp/tmpibzri0mx.cs(13,96): error CS0103: The name ''IntToNumeral'' does not exist
    in the current context

    '
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\": nums2.Add(0); break;\n                case \"one\": nums2.Add(1); break;\n
    \               case \"two\": nums2.Add(2); break;\n                case \"three\":
    nums2.Add(3); break;\n                case \"four\": nums2.Add(4); break;\n                case
    \"five\": nums2.Add(5); break;\n                case \"six\": nums2.Add(6); break;\n
    \               case \"seven\": nums2.Add(7); break;\n                case \"eight\":
    nums2.Add(8); break;\n                case \"nine\": nums2.Add(9); break;\n            }\n
    \       }\n        nums2.Sort();\n        var nums3 = new List<string>();\n        foreach
    (var num in nums2) {\n            switch (num) {\n                case 0: nums3.Add(\"zero\");
    break;\n                case 1: nums3.Add(\"one\"); break;\n                case
    2: nums3.Add(\"two\"); break;\n                case 3: nums3.Add(\"three\"); break;\n
    \               case 4: nums3.Add(\"four\"); break;\n                case 5: nums3.Add(\"five\");
    break;\n                case 6: nums3.Add(\"six\"); break;\n                case
    7: nums3.Add(\"seven\"); break;\n                case 8: nums3.Add(\"eight\");
    break;\n                case 9: nums3.Add(\"nine\"); break;\n            }\n        }\n
    \       return string.Join(\" \", nums3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(s => s.ToLower()).ToArray();\n
    \       var numMap = new Dictionary<string, int>() {\n            { \"zero\",
    0 },\n            { \"one\", 1 },\n            { \"two\", 2 },\n            {
    \"three\", 3 },\n            { \"four\", 4 },\n            { \"five\", 5 },\n
    \           { \"six\", 6 },\n            { \"seven\", 7 },\n            { \"eight\",
    8 },\n            { \"nine\", 9 }\n        };\n        var numsInt = nums.Select(s
    => numMap[s]).ToArray();\n        Array.Sort(numsInt);\n        var numsStr =
    numsInt.Select(i => numMap.First(kvp => kvp.Value == i).Key).ToArray();\n        return
    string.Join(\" \", numsStr);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String s) [0x00000] in <82c1ff59c8fc4e89b735ba65e6a08215>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x000da] in <82c1ff59c8fc4e89b735ba65e6a08215>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <82c1ff59c8fc4e89b735ba65e6a08215>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String s) [0x00000] in <82c1ff59c8fc4e89b735ba65e6a08215>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x000da] in <82c1ff59c8fc4e89b735ba65e6a08215>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <82c1ff59c8fc4e89b735ba65e6a08215>:0
    \n"
  stdout: ''
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])
    {\n                case \"zero\":\n                    nums2[i] = 0;\n                    break;\n
    \               case \"one\":\n                    nums2[i] = 1;\n                    break;\n
    \               case \"two\":\n                    nums2[i] = 2;\n                    break;\n
    \               case \"three\":\n                    nums2[i] = 3;\n                    break;\n
    \               case \"four\":\n                    nums2[i] = 4;\n                    break;\n
    \               case \"five\":\n                    nums2[i] = 5;\n                    break;\n
    \               case \"six\":\n                    nums2[i] = 6;\n                    break;\n
    \               case \"seven\":\n                    nums2[i] = 7;\n                    break;\n
    \               case \"eight\":\n                    nums2[i] = 8;\n                    break;\n
    \               case \"nine\":\n                    nums2[i] = 9;\n                    break;\n
    \           }\n        }\n        Array.Sort(nums2);\n        string[] nums3 =
    new string[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n            switch
    (nums2[i]) {\n                case 0:\n                    nums3[i] = \"zero\";\n
    \                   break;\n                case 1:\n                    nums3[i]
    = \"one\";\n                    break;\n                case 2:\n                    nums3[i]
    = \"two\";\n                    break;\n                case 3:\n                    nums3[i]
    = \"three\";\n                    break;\n                case 4:\n                    nums3[i]
    = \"four\";\n                    break;\n                case 5:\n                    nums3[i]
    = \"five\";\n                    break;\n                case 6:\n                    nums3[i]
    = \"six\";\n                    break;\n                case 7:\n                    nums3[i]
    = \"seven\";\n                    break;\n                case 8:\n                    nums3[i]
    =\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpweherih4.cs(78,31): error CS1525: Invalid expression term ''}''

    /tmp/tmpweherih4.cs(78,31): error CS1002: ; expected

    /tmp/tmpweherih4.cs(80,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpweherih4.cs(88,2): error CS1513: } expected

    '
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this method\n        // This method should return
    a string containing the numbers sorted from smallest to largest\n        // The
    numbers should be delimited by a single space\n        // For example, if the
    input is \"three two one\" the output should be \"one two three\"\n        //
    If the input is \"three three three\" the output should be \"three three three\"\n
    \       // If the input is \"three two one three\" the output should be \"one
    two three three\"\n        // If the input is \"three three three one one five\"
    the output should be \"one one three three three five\"\n        // If the input
    is \"three one three three two\" the output should be \"one two three three three\"\n
    \       // If the input is \"one two three four five six seven eight nine\" the
    output should be \"one two three four five six seven eight nine\"\n        //
    If the input is \"nine eight seven six five four three two one\" the output should
    be \"one two three four five six seven eight nine\"\n        // If the input is
    \"one one one one one one one one one\" the output should be \"one one one one
    one one one one one\"\n        // If the input is \"one two three four five six
    seven eight nine one two three four five six seven eight nine\" the output should
    be \"one one two two three three four four five five six six seven seven eight
    eight nine nine\"\n        // If the input is \"one two three four five six seven
    eight nine one two three four five six seven eight nine one two three four five
    six seven eight nine\" the output should be \"one one one two two two three three
    three four four four five five five six six six seven seven seven eight eight
    eight nine nine nine\"\n        // If the input is \"one two three four five six
    seven eight nine one two three four five six seven eight nine one two three four
    five six seven eight nine one two three four five six seven eight nine\" the output
    should be \"one one one one two two two two three three three three four four
    four four five five five five six six six six seven seven seven seven eight eight
    eight eight nine nine nine nine\"\n        // If the input is \"one two three
    four five six seven eight nine one two three four five six seven eight nine one
    two three four five six seven eight nine one two three four five six seven eight
    nine one two three\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi_2jmpny.cs(12,26): error CS0161: ''Problem.SortNumbers(string)'': not
    all code paths return a value

    '
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Write your code here.\n        var nums = new List<int>();\n        var
    words = numbers.Split(' ');\n        foreach (var word in words) {\n            switch
    (word) {\n                case \"zero\":\n                    nums.Add(0);\n                    break;\n
    \               case \"one\":\n                    nums.Add(1);\n                    break;\n
    \               case \"two\":\n                    nums.Add(2);\n                    break;\n
    \               case \"three\":\n                    nums.Add(3);\n                    break;\n
    \               case \"four\":\n                    nums.Add(4);\n                    break;\n
    \               case \"five\":\n                    nums.Add(5);\n                    break;\n
    \               case \"six\":\n                    nums.Add(6);\n                    break;\n
    \               case \"seven\":\n                    nums.Add(7);\n                    break;\n
    \               case \"eight\":\n                    nums.Add(8);\n                    break;\n
    \               case \"nine\":\n                    nums.Add(9);\n                    break;\n
    \           }\n        }\n        nums.Sort();\n        var result = new StringBuilder();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    0:\n                    result.Append(\"zero \");\n                    break;\n
    \               case 1:\n                    result.Append(\"one \");\n                    break;\n
    \               case 2:\n                    result.Append(\"two \");\n                    break;\n
    \               case 3:\n                    result.Append(\"three \");\n                    break;\n
    \               case 4:\n                    result.Append(\"four \");\n                    break;\n
    \               case 5:\n                    result.Append(\"five \");\n                    break;\n
    \               case 6:\n                    result.Append(\"six \");\n                    break;\n
    \               case 7:\n                    result.Append(\"seven \");\n                    break;\n
    \               case 8:\n                    result.Append(\"eight \");\n                    break;\n
    \               case 9:\n                    result.Append(\"nine \");\n                    break;\n
    \           }\n        }\n        return result.ToString().Trim();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Write your code here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b325b38466144df28aa8c81ede6909ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b325b38466144df28aa8c81ede6909ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this method\n        // This method should return
    a string with the numbers sorted from smallest to largest\n        // For example,
    if the input is \"one two three four five six seven eight nine zero\"\n        //
    The output should be \"zero one two three four five six seven eight nine\"\n        //
    The input is a space-delimited string of numberals from 'zero' to 'nine'\n        //
    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',
    'eight' and 'nine'\n        // Return the string with numbers sorted from smallest
    to largest\n        // TODO: Implement this method\n        // This method should
    return a string with the numbers sorted from smallest to largest\n        // For
    example, if the input is \"one two three four five six seven eight nine zero\"\n
    \       // The output should be \"zero one two three four five six seven eight
    nine\"\n        // The input is a space-delimited string of numberals from 'zero'
    to 'nine'\n        // Valid choices are 'zero', 'one', 'two', 'three', 'four',
    'five', 'six', 'seven', 'eight' and 'nine'\n        // Return the string with
    numbers sorted from smallest to largest\n        // TODO: Implement this method\n
    \       // This method should return a string with the numbers sorted from smallest
    to largest\n        // For example, if the input is \"one two three four five
    six seven eight nine zero\"\n        // The output should be \"zero one two three
    four five six seven eight nine\"\n        // The input is a space-delimited string
    of numberals from 'zero' to 'nine'\n        // Valid choices are 'zero', 'one',
    'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'\n        //
    Return the string with numbers sorted from smallest to largest\n        // TODO:
    Implement this method\n        // This method should return a string with the
    numbers sorted from smallest to largest\n        // For example, if the input
    is \"one two three four five six seven eight nine zero\"\n        // The output
    should be \"zero one two three four five six seven eight nine\"\n        // The
    input is a space-delimited string of numberals from 'zero' to '\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk2ggxy88.cs(12,26): error CS0161: ''Problem.SortNumbers(string)'': not
    all code paths return a value

    '
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this method\n        return \"\";\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f714d5c03c5b468babfec3cdb0e4888c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f714d5c03c5b468babfec3cdb0e4888c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\": nums2.Add(0); break;\n                case \"one\": nums2.Add(1); break;\n
    \               case \"two\": nums2.Add(2); break;\n                case \"three\":
    nums2.Add(3); break;\n                case \"four\": nums2.Add(4); break;\n                case
    \"five\": nums2.Add(5); break;\n                case \"six\": nums2.Add(6); break;\n
    \               case \"seven\": nums2.Add(7); break;\n                case \"eight\":
    nums2.Add(8); break;\n                case \"nine\": nums2.Add(9); break;\n            }\n
    \       }\n        nums2.Sort();\n        var nums3 = new List<string>();\n        foreach
    (var num in nums2) {\n            switch (num) {\n                case 0: nums3.Add(\"zero\");
    break;\n                case 1: nums3.Add(\"one\"); break;\n                case
    2: nums3.Add(\"two\"); break;\n                case 3: nums3.Add(\"three\"); break;\n
    \               case 4: nums3.Add(\"four\"); break;\n                case 5: nums3.Add(\"five\");
    break;\n                case 6: nums3.Add(\"six\"); break;\n                case
    7: nums3.Add(\"seven\"); break;\n                case 8: nums3.Add(\"eight\");
    break;\n                case 9: nums3.Add(\"nine\"); break;\n            }\n        }\n
    \       return string.Join(\" \", nums3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        int[] nums = new int[10];\n        string[] numsStr = numbers.Split('
    ');\n        for (int i = 0; i < numsStr.Length; i++) {\n            switch (numsStr[i])
    {\n                case \"zero\":\n                    nums[0]++;\n                    break;\n
    \               case \"one\":\n                    nums[1]++;\n                    break;\n
    \               case \"two\":\n                    nums[2]++;\n                    break;\n
    \               case \"three\":\n                    nums[3]++;\n                    break;\n
    \               case \"four\":\n                    nums[4]++;\n                    break;\n
    \               case \"five\":\n                    nums[5]++;\n                    break;\n
    \               case \"six\":\n                    nums[6]++;\n                    break;\n
    \               case \"seven\":\n                    nums[7]++;\n                    break;\n
    \               case \"eight\":\n                    nums[8]++;\n                    break;\n
    \               case \"nine\":\n                    nums[9]++;\n                    break;\n
    \           }\n        }\n        string result = \"\";\n        for (int i =
    0; i < 10; i++) {\n            for (int j = 0; j < nums[i]; j++) {\n                result
    += i.ToString() + \" \";\n            }\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9e8e59f55a406aa976b49884cf86a9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9e8e59f55a406aa976b49884cf86a9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement me\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <488bbae7a8bc4cec88eae57737273ae9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <488bbae7a8bc4cec88eae57737273ae9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this method\n        // This method should return
    a string with the numbers sorted from smallest to largest\n        // For example,
    if the input is \"three two one\", the output should be \"one two three\"\n        //
    If the input is \"nine zero one\", the output should be \"zero one nine\"\n        //
    If the input is \"three three three\", the output should be \"three three three\"\n
    \       // If the input is \"zero zero zero\", the output should be \"zero zero
    zero\"\n        // If the input is \"one two three\", the output should be \"one
    two three\"\n        // If the input is \"one one two\", the output should be
    \"one one two\"\n        // If the input is \"one one one\", the output should
    be \"one one one\"\n        // If the input is \"one two two\", the output should
    be \"one two two\"\n        // If the input is \"one one two two\", the output
    should be \"one one two two\"\n        // If the input is \"one one one two\",
    the output should be \"one one one two\"\n        // If the input is \"one one
    one one\", the output should be \"one one one one\"\n        // If the input is
    \"one one one one one\", the output should be \"one one one one one\"\n        //
    If the input is \"one one one one one one\", the output should be \"one one one
    one one one\"\n        // If the input is \"one one one one one one one\", the
    output should be \"one one one one one one one\"\n        // If the input is \"one
    one one one one one one one\", the output should be \"one one one one one one
    one one\"\n        // If the input is \"one one one one one one one one one\",
    the output should be \"one one one one one one one one one\"\n        // If the
    input is \"one one one one one one one one one one\", the output should be \"one
    one one one one one one one one one\"\n        // If the input is \"one one one
    one one one one one one one one\", the output should be \"one one one one one
    one one one one one one\"\n        // If the input is \"one one one one one one
    one one one one one one\", the output should be \"one one one\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi5pio4oe.cs(12,26): error CS0161: ''Problem.SortNumbers(string)'': not
    all code paths return a value

    '
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Write your code here\n        var nums = numbers.Split(' ');\n        var
    numList = new List<int>();\n        foreach (var num in nums) {\n            switch
    (num) {\n                case \"zero\":\n                    numList.Add(0);\n
    \                   break;\n                case \"one\":\n                    numList.Add(1);\n
    \                   break;\n                case \"two\":\n                    numList.Add(2);\n
    \                   break;\n                case \"three\":\n                    numList.Add(3);\n
    \                   break;\n                case \"four\":\n                    numList.Add(4);\n
    \                   break;\n                case \"five\":\n                    numList.Add(5);\n
    \                   break;\n                case \"six\":\n                    numList.Add(6);\n
    \                   break;\n                case \"seven\":\n                    numList.Add(7);\n
    \                   break;\n                case \"eight\":\n                    numList.Add(8);\n
    \                   break;\n                case \"nine\":\n                    numList.Add(9);\n
    \                   break;\n            }\n        }\n        numList.Sort();\n
    \       var result = \"\";\n        foreach (var num in numList) {\n            switch
    (num) {\n                case 0:\n                    result += \"zero \";\n                    break;\n
    \               case 1:\n                    result += \"one \";\n                    break;\n
    \               case 2:\n                    result += \"two \";\n                    break;\n
    \               case 3:\n                    result += \"three \";\n                    break;\n
    \               case 4:\n                    result += \"four \";\n                    break;\n
    \               case 5:\n                    result += \"five \";\n                    break;\n
    \               case 6:\n                    result += \"six \";\n                    break;\n
    \               case 7:\n                    result += \"seven \";\n                    break;\n
    \               case 8:\n                    result += \"eight \";\n                    break;\n
    \               case 9:\n                    result += \"nine \";\n                    break;\n
    \           }\n        }\n        return result.Trim();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = nums.Select(x =>
    (int)Enum.Parse(typeof(Nums), x)).ToArray();\n        Array.Sort(nums2);\n        return
    string.Join(\" \", nums2.Select(x => Enum.GetName(typeof(Nums), x)));\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpomluiga5.cs(14,61): error CS0246: The type or namespace name ''Nums''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpomluiga5.cs(16,71): error CS0246: The type or namespace name ''Nums''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n        return
    string.Join(\" \", nums);\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <163f37511bd2407a9f83b47acd9c3057>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <163f37511bd2407a9f83b47acd9c3057>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var numMap = new Dictionary<string, int>();\n        numMap[\"zero\"]
    = 0;\n        numMap[\"one\"] = 1;\n        numMap[\"two\"] = 2;\n        numMap[\"three\"]
    = 3;\n        numMap[\"four\"] = 4;\n        numMap[\"five\"] = 5;\n        numMap[\"six\"]
    = 6;\n        numMap[\"seven\"] = 7;\n        numMap[\"eight\"] = 8;\n        numMap[\"nine\"]
    = 9;\n        var nums2 = nums.Select(x => numMap[x]).ToArray();\n        Array.Sort(nums2);\n
    \       var nums3 = nums2.Select(x => x.ToString()).ToArray();\n        return
    string.Join(\" \", nums3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String x) [0x00000] in <bc1bb92b01244cba9092711213b44d87>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x0010c] in <bc1bb92b01244cba9092711213b44d87>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <bc1bb92b01244cba9092711213b44d87>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String x) [0x00000] in <bc1bb92b01244cba9092711213b44d87>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x0010c] in <bc1bb92b01244cba9092711213b44d87>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <bc1bb92b01244cba9092711213b44d87>:0
    \n"
  stdout: ''
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])
    {\n                case \"zero\":\n                    nums2[i] = 0;\n                    break;\n
    \               case \"one\":\n                    nums2[i] = 1;\n                    break;\n
    \               case \"two\":\n                    nums2[i] = 2;\n                    break;\n
    \               case \"three\":\n                    nums2[i] = 3;\n                    break;\n
    \               case \"four\":\n                    nums2[i] = 4;\n                    break;\n
    \               case \"five\":\n                    nums2[i] = 5;\n                    break;\n
    \               case \"six\":\n                    nums2[i] = 6;\n                    break;\n
    \               case \"seven\":\n                    nums2[i] = 7;\n                    break;\n
    \               case \"eight\":\n                    nums2[i] = 8;\n                    break;\n
    \               case \"nine\":\n                    nums2[i] = 9;\n                    break;\n
    \           }\n        }\n        Array.Sort(nums2);\n        string[] nums3 =
    new string[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n            switch
    (nums2[i]) {\n                case 0:\n                    nums3[i] = \"zero\";\n
    \                   break;\n                case 1:\n                    nums3[i]
    = \"one\";\n                    break;\n                case 2:\n                    nums3[i]
    = \"two\";\n                    break;\n                case 3:\n                    nums3[i]
    = \"three\";\n                    break;\n                case 4:\n                    nums3[i]
    = \"four\";\n                    break;\n                case 5:\n                    nums3[i]
    = \"five\";\n                    break;\n                case 6:\n                    nums3[i]
    = \"six\";\n                    break;\n                case 7:\n                    nums3[i]
    = \"seven\";\n                    break;\n                case 8:\n                    nums3[i]
    =\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpweherih4.cs(78,31): error CS1525: Invalid expression term ''}''

    /tmp/tmpweherih4.cs(78,31): error CS1002: ; expected

    /tmp/tmpweherih4.cs(80,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpweherih4.cs(88,2): error CS1513: } expected

    '
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\": nums2.Add(0); break;\n                case \"one\": nums2.Add(1); break;\n
    \               case \"two\": nums2.Add(2); break;\n                case \"three\":
    nums2.Add(3); break;\n                case \"four\": nums2.Add(4); break;\n                case
    \"five\": nums2.Add(5); break;\n                case \"six\": nums2.Add(6); break;\n
    \               case \"seven\": nums2.Add(7); break;\n                case \"eight\":
    nums2.Add(8); break;\n                case \"nine\": nums2.Add(9); break;\n            }\n
    \       }\n        nums2.Sort();\n        var sb = new StringBuilder();\n        foreach
    (var num in nums2) {\n            switch (num) {\n                case 0: sb.Append(\"zero
    \"); break;\n                case 1: sb.Append(\"one \"); break;\n                case
    2: sb.Append(\"two \"); break;\n                case 3: sb.Append(\"three \");
    break;\n                case 4: sb.Append(\"four \"); break;\n                case
    5: sb.Append(\"five \"); break;\n                case 6: sb.Append(\"six \");
    break;\n                case 7: sb.Append(\"seven \"); break;\n                case
    8: sb.Append(\"eight \"); break;\n                case 9: sb.Append(\"nine \");
    break;\n            }\n        }\n        return sb.ToString().Trim();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = nums.Select(x =>
    int.Parse(x)).ToArray();\n        Array.Sort(nums2);\n        return string.Join(\"
    \", nums2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <678699c43a6246338382cd40d6739b41>:0
    \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray ()
    [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x00030] in <678699c43a6246338382cd40d6739b41>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <678699c43a6246338382cd40d6739b41>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was
    not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <678699c43a6246338382cd40d6739b41>:0
    \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray ()
    [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6"
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this method\n        // This method should return
    a string with the numbers sorted from smallest to largest\n        // You can
    assume the input is always valid\n        // Hint: You can use the following code
    to convert a string to an array of strings:\n        // string[] numbersArray
    = numbers.Split(' ');\n        // Hint: You can use the following code to convert
    an array of strings to an array of integers:\n        // int[] numbersArrayInt
    = Array.ConvertAll(numbersArray, int.Parse);\n        // Hint: You can use the
    following code to sort an array of integers:\n        // Array.Sort(numbersArrayInt);\n
    \       // Hint: You can use the following code to convert an array of integers
    back to an array of strings:\n        // numbersArray = Array.ConvertAll(numbersArrayInt,
    x => x.ToString());\n        // Hint: You can use the following code to convert
    an array of strings back to a string:\n        // numbers = string.Join(\" \",
    numbersArray);\n        // Hint: You can use the following code to convert a number
    to its English word representation:\n        // string word = NumberToWords(number);\n
    \       // Hint: You can use the following code to convert a number to its English
    word representation:\n        // int number = WordsToNumber(word);\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89a6f8b2220d4f6aaf69c27fece1f411>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89a6f8b2220d4f6aaf69c27fece1f411>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code here\n        return \"\";\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b08fc12dc81b4e8584088610100230d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b08fc12dc81b4e8584088610100230d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var nums2 = nums.Select(x => {\n            switch (x) {\n                case
    \"zero\": return 0;\n                case \"one\": return 1;\n                case
    \"two\": return 2;\n                case \"three\": return 3;\n                case
    \"four\": return 4;\n                case \"five\": return 5;\n                case
    \"six\": return 6;\n                case \"seven\": return 7;\n                case
    \"eight\": return 8;\n                case \"nine\": return 9;\n                default:
    throw new Exception(\"Invalid input\");\n            }\n        }).ToArray();\n
    \       Array.Sort(nums2);\n        return string.Join(\" \", nums2.Select(x =>
    {\n            switch (x) {\n                case 0: return \"zero\";\n                case
    1: return \"one\";\n                case 2: return \"two\";\n                case
    3: return \"three\";\n                case 4: return \"four\";\n                case
    5: return \"five\";\n                case 6: return \"six\";\n                case
    7: return \"seven\";\n                case 8: return \"eight\";\n                case
    9: return \"nine\";\n                default: throw new Exception(\"Invalid input\");\n
    \           }\n        }));\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Exception: Invalid input\n  at Problem+<>c.<SortNumbers>b__0_1
    (System.String x) [0x0017d] in <ebd19cb01e9741e7adc4c76dcecf1c1c>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x00059] in <ebd19cb01e9741e7adc4c76dcecf1c1c>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ebd19cb01e9741e7adc4c76dcecf1c1c>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Exception: Invalid input\n  at Problem+<>c.<SortNumbers>b__0_1
    (System.String x) [0x0017d] in <ebd19cb01e9741e7adc4c76dcecf1c1c>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x00059] in <ebd19cb01e9741e7adc4c76dcecf1c1c>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ebd19cb01e9741e7adc4c76dcecf1c1c>:0
    \n"
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])
    {\n                case \"zero\":\n                    nums2[i] = 0;\n                    break;\n
    \               case \"one\":\n                    nums2[i] = 1;\n                    break;\n
    \               case \"two\":\n                    nums2[i] = 2;\n                    break;\n
    \               case \"three\":\n                    nums2[i] = 3;\n                    break;\n
    \               case \"four\":\n                    nums2[i] = 4;\n                    break;\n
    \               case \"five\":\n                    nums2[i] = 5;\n                    break;\n
    \               case \"six\":\n                    nums2[i] = 6;\n                    break;\n
    \               case \"seven\":\n                    nums2[i] = 7;\n                    break;\n
    \               case \"eight\":\n                    nums2[i] = 8;\n                    break;\n
    \               case \"nine\":\n                    nums2[i] = 9;\n                    break;\n
    \           }\n        }\n        Array.Sort(nums2);\n        string result =
    \"\";\n        for (int i = 0; i < nums2.Length; i++) {\n            switch (nums2[i])
    {\n                case 0:\n                    result += \"zero \";\n                    break;\n
    \               case 1:\n                    result += \"one \";\n                    break;\n
    \               case 2:\n                    result += \"two \";\n                    break;\n
    \               case 3:\n                    result += \"three \";\n                    break;\n
    \               case 4:\n                    result += \"four \";\n                    break;\n
    \               case 5:\n                    result += \"five \";\n                    break;\n
    \               case 6:\n                    result += \"six \";\n                    break;\n
    \               case 7:\n                    result += \"seven \";\n                    break;\n
    \               case 8:\n                    result += \"eight \";\n                    break;\n
    \               case 9:\n                    result += \"nine \";\n                    break;\n
    \           }\n        }\n        return result.Trim();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cd7970d489124001a128ecc61740161a>:0
    \n"
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var numToInt = new Dictionary<string, int>() {\n            { \"zero\",
    0 },\n            { \"one\", 1 },\n            { \"two\", 2 },\n            {
    \"three\", 3 },\n            { \"four\", 4 },\n            { \"five\", 5 },\n
    \           { \"six\", 6 },\n            { \"seven\", 7 },\n            { \"eight\",
    8 },\n            { \"nine\", 9 }\n        };\n        var intToNum = numToInt.ToDictionary(x
    => x.Value, x => x.Key);\n        var sorted = nums.Select(x => numToInt[x]).OrderBy(x
    => x).Select(x => intToNum[x]);\n        return string.Join(\" \", sorted);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__3
    (System.String x) [0x00000] in <02877a35fed54abfb1326a0bab8e5325>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext
    () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].MoveNext
    () [0x00029] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.String.Join
    (System.String separator, System.Collections.Generic.IEnumerable`1[T] values)
    [0x00015] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers (System.String
    numbers) [0x0015f] in <02877a35fed54abfb1326a0bab8e5325>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <02877a35fed54abfb1326a0bab8e5325>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException: The
    given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__3
    (System.String x) [0x00000] in <02877a35fed54abfb1326a0bab8e5325>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext
    () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 "
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = nums.Select(x =>
    (int)Enum.Parse(typeof(Numbers), x)).ToArray();\n        Array.Sort(nums2);\n
    \       return string.Join(\" \", nums2.Select(x => Enum.GetName(typeof(Numbers),
    x)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5denn1ur.cs(14,61): error CS0246: The type or namespace name ''Numbers''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmp5denn1ur.cs(16,71): error CS0246: The type or namespace name ''Numbers''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this method\n        // This method should return
    a string of numbers sorted from smallest to largest\n        // The input string
    will be space-delimited\n        // The output string should be space-delimited\n
    \       // You can assume the input string is valid\n        // You can assume
    the input string contains at least one number\n        // You can assume the input
    string contains no more than ten numbers\n        // You can assume the input
    string contains only numbers from 'zero' to 'nine'\n        // You can assume
    the input string contains no leading or trailing whitespace\n        // You can
    assume the input string contains no consecutive spaces\n        // You can assume
    the input string contains no spaces before or after the numbers\n        // You
    can assume the input string contains no spaces before or after the numbers\n        //
    You can assume the input string contains no spaces before or after the numbers\n
    \       // You can assume the input string contains no spaces before or after
    the numbers\n        // You can assume the input string contains no spaces before
    or after the numbers\n        // You can assume the input string contains no spaces
    before or after the numbers\n        // You can assume the input string contains
    no spaces before or after the numbers\n        // You can assume the input string
    contains no spaces before or after the numbers\n        // You can assume the
    input string contains no spaces before or after the numbers\n        // You can
    assume the input string contains no spaces before or after the numbers\n        //
    You can assume the input string contains no spaces before or after the numbers\n
    \       // You can assume the input string contains no spaces before or after
    the numbers\n        // You can assume the input string contains no spaces before
    or after the numbers\n        // You can assume the input string contains no spaces
    before or after the numbers\n        // You can assume the input string contains
    no spaces before or after the numbers\n        // You can assume the input string
    contains no spaces before or after the numbers\n        // You can assume the
    input string contains no spaces before or after the numbers\n        // You can
    assume the input string contains no spaces before or after the numbers\n        //
    You can assume the input string contains no spaces before or after the numbers\n
    \       // You can assume the input string contains no spaces before or after
    the numbers\n        // You can assume the input string contains no spaces before
    or after the numbers\n        // You can assume the input string contains no spaces
    before or after\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj0klncr2.cs(12,26): error CS0161: ''Problem.SortNumbers(string)'': not
    all code paths return a value

    '
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code here\n        return \"\";\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b08fc12dc81b4e8584088610100230d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b08fc12dc81b4e8584088610100230d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var sorted = new List<string>();\n        for (int i = 0; i < 10; i++)
    {\n            for (int j = 0; j < nums.Length; j++) {\n                if (nums[j]
    == i.ToString()) {\n                    sorted.Add(nums[j]);\n                }\n
    \           }\n        }\n        return string.Join(\" \", sorted);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <683c4ca9909148798760778e152e8ec4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <683c4ca9909148798760778e152e8ec4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code here\n        return \"\";\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b08fc12dc81b4e8584088610100230d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b08fc12dc81b4e8584088610100230d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var nums2 = new int[nums.Length];\n        for (int i = 0; i < nums.Length;
    i++) {\n            switch (nums[i]) {\n                case \"zero\": nums2[i]
    = 0; break;\n                case \"one\": nums2[i] = 1; break;\n                case
    \"two\": nums2[i] = 2; break;\n                case \"three\": nums2[i] = 3; break;\n
    \               case \"four\": nums2[i] = 4; break;\n                case \"five\":
    nums2[i] = 5; break;\n                case \"six\": nums2[i] = 6; break;\n                case
    \"seven\": nums2[i] = 7; break;\n                case \"eight\": nums2[i] = 8;
    break;\n                case \"nine\": nums2[i] = 9; break;\n            }\n        }\n
    \       Array.Sort(nums2);\n        var sb = new StringBuilder();\n        for
    (int i = 0; i < nums2.Length; i++) {\n            switch (nums2[i]) {\n                case
    0: sb.Append(\"zero\"); break;\n                case 1: sb.Append(\"one\"); break;\n
    \               case 2: sb.Append(\"two\"); break;\n                case 3: sb.Append(\"three\");
    break;\n                case 4: sb.Append(\"four\"); break;\n                case
    5: sb.Append(\"five\"); break;\n                case 6: sb.Append(\"six\"); break;\n
    \               case 7: sb.Append(\"seven\"); break;\n                case 8:
    sb.Append(\"eight\"); break;\n                case 9: sb.Append(\"nine\"); break;\n
    \           }\n            if (i != nums2.Length - 1) {\n                sb.Append(\"
    \");\n            }\n        }\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3f55ce3da370425b80b25fc67eba8e58>:0
    \n"
  stdout: ''
  timestamp: 1659976210
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x =>
    x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \", nums);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <ac2a26f1ece543228ac9fecd2f68f148>:0
    \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray ()
    [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext
    () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray
    (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at
    System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()
    [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <ac2a26f1ece543228ac9fecd2f68f148>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ac2a26f1ece543228ac9fecd2f68f148>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was
    not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var numList = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\":\n                    numList.Add(0);\n                    break;\n                case
    \"one\":\n                    numList.Add(1);\n                    break;\n                case
    \"two\":\n                    numList.Add(2);\n                    break;\n                case
    \"three\":\n                    numList.Add(3);\n                    break;\n
    \               case \"four\":\n                    numList.Add(4);\n                    break;\n
    \               case \"five\":\n                    numList.Add(5);\n                    break;\n
    \               case \"six\":\n                    numList.Add(6);\n                    break;\n
    \               case \"seven\":\n                    numList.Add(7);\n                    break;\n
    \               case \"eight\":\n                    numList.Add(8);\n                    break;\n
    \               case \"nine\":\n                    numList.Add(9);\n                    break;\n
    \           }\n        }\n        numList.Sort();\n        var sb = new StringBuilder();\n
    \       foreach (var num in numList) {\n            switch (num) {\n                case
    0:\n                    sb.Append(\"zero \");\n                    break;\n                case
    1:\n                    sb.Append(\"one \");\n                    break;\n                case
    2:\n                    sb.Append(\"two \");\n                    break;\n                case
    3:\n                    sb.Append(\"three \");\n                    break;\n                case
    4:\n                    sb.Append(\"four \");\n                    break;\n                case
    5:\n                    sb.Append(\"five \");\n                    break;\n                case
    6:\n                    sb.Append(\"six \");\n                    break;\n                case
    7:\n                    sb.Append(\"seven \");\n                    break;\n                case
    8:\n                    sb.Append(\"eight \");\n                    break;\n                case
    9:\n                    sb.Append(\"nine \");\n                    break;\n            }\n
    \       }\n        return sb.ToString().Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this function\n        return \"\";\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22df63c903774f05937fb04570cba248>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22df63c903774f05937fb04570cba248>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this function\n        return \"\";\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22df63c903774f05937fb04570cba248>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22df63c903774f05937fb04570cba248>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\": nums2.Add(0); break;\n                case \"one\": nums2.Add(1); break;\n
    \               case \"two\": nums2.Add(2); break;\n                case \"three\":
    nums2.Add(3); break;\n                case \"four\": nums2.Add(4); break;\n                case
    \"five\": nums2.Add(5); break;\n                case \"six\": nums2.Add(6); break;\n
    \               case \"seven\": nums2.Add(7); break;\n                case \"eight\":
    nums2.Add(8); break;\n                case \"nine\": nums2.Add(9); break;\n            }\n
    \       }\n        nums2.Sort();\n        var sb = new StringBuilder();\n        foreach
    (var num in nums2) {\n            switch (num) {\n                case 0: sb.Append(\"zero
    \"); break;\n                case 1: sb.Append(\"one \"); break;\n                case
    2: sb.Append(\"two \"); break;\n                case 3: sb.Append(\"three \");
    break;\n                case 4: sb.Append(\"four \"); break;\n                case
    5: sb.Append(\"five \"); break;\n                case 6: sb.Append(\"six \");
    break;\n                case 7: sb.Append(\"seven \"); break;\n                case
    8: sb.Append(\"eight \"); break;\n                case 9: sb.Append(\"nine \");
    break;\n            }\n        }\n        return sb.ToString().Trim();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this method\n        // This method should return
    a string with the numbers sorted from smallest to largest\n        // The numbers
    should be separated by a single space\n        // Example:\n        //      Input:
    \"zero one two three four five six seven eight nine\"\n        //      Output:
    \"zero one two three four five six seven eight nine\"\n        //      Input:
    \"nine eight seven six five four three two one zero\"\n        //      Output:
    \"zero one two three four five six seven eight nine\"\n        //      Input:
    \"one two three four five six seven eight nine zero\"\n        //      Output:
    \"zero one two three four five six seven eight nine\"\n        //      Input:
    \"one one one one one one one one one one\"\n        //      Output: \"one one
    one one one one one one one one\"\n        //      Input: \"zero zero zero zero
    zero zero zero zero zero zero\"\n        //      Output: \"zero zero zero zero
    zero zero zero zero zero zero\"\n        //      Input: \"zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero
    zero zero zero zero zero zero\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0jk4rk0u.cs(12,26): error CS0161: ''Problem.SortNumbers(string)'': not
    all code paths return a value

    '
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var sorted = new List<string>();\n        var numeralToNumber = new Dictionary<string,
    int>() {\n            { \"zero\", 0 },\n            { \"one\", 1 },\n            {
    \"two\", 2 },\n            { \"three\", 3 },\n            { \"four\", 4 },\n            {
    \"five\", 5 },\n            { \"six\", 6 },\n            { \"seven\", 7 },\n            {
    \"eight\", 8 },\n            { \"nine\", 9 }\n        };\n        for (int i =
    0; i < 10; i++) {\n            foreach (var num in nums) {\n                if
    (numeralToNumber[num] == i) {\n                    sorted.Add(num);\n                }\n
    \           }\n        }\n        return string.Join(\" \", sorted);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x000d9] in <e7b5147ade9a4b219d58d98e3c7c0a51>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <e7b5147ade9a4b219d58d98e3c7c0a51>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x000d9] in <e7b5147ade9a4b219d58d98e3c7c0a51>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <e7b5147ade9a4b219d58d98e3c7c0a51>:0
    \n"
  stdout: ''
  timestamp: 1659976210
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this method\n        // This method should return
    the string with numbers sorted from smallest to largest\n        // Hint: You
    can use the CompareTo method to compare strings\n        // Hint: You can use
    the Split method to split a string into an array of strings\n        // Hint:
    You can use the ToArray method to convert an IEnumerable to an array\n        //
    Hint: You can use the OrderBy method to sort an array of strings\n        // Hint:
    You can use the string.Join method to join an array of strings into a single string\n
    \       // Hint: You can use the string.Concat method to concatenate two strings\n
    \       // Hint: You can use the string.Format method to format a string\n        //
    Hint: You can use the string.Empty constant to get an empty string\n        //
    Hint: You can use the string.IsNullOrEmpty method to check if a string is null
    or empty\n        // Hint: You can use the string.IsNullOrWhiteSpace method to
    check if a string is null, empty or whitespace\n        // Hint: You can use the
    string.Trim method to trim whitespace from the start and end of a string\n        //
    Hint: You can use the string.TrimStart method to trim whitespace from the start
    of a string\n        // Hint: You can use the string.TrimEnd method to trim whitespace
    from the end of a string\n        // Hint: You can use the string.TrimEnd method
    to trim a character from the end of a string\n        // Hint: You can use the
    string.TrimEnd method to trim a character from the start of a string\n        //
    Hint: You can use the string.TrimEnd method to trim a character from the start
    and end of a string\n        // Hint: You can use the string.ToLower method to
    convert a string to lowercase\n        // Hint: You can use the string.ToUpper
    method to convert a string to uppercase\n        // Hint: You can use the string.Substring
    method to get a substring of a string\n        // Hint: You can use the string.IndexOf
    method to get the index of a substring in a string\n        // Hint: You can use
    the string.LastIndexOf method to\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfekg5272.cs(12,26): error CS0161: ''Problem.SortNumbers(string)'': not
    all code paths return a value

    '
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code here\n        return null;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0000b] in <fb7d1e986c044e8780a532455dc5c14c>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0000b] in <fb7d1e986c044e8780a532455dc5c14c>:0
    \n"
  stdout: ''
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(s => s.ToLower()).ToArray();\n
    \       Array.Sort(nums, (a, b) => {\n            var ai = Array.IndexOf(new string[]
    { \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\",
    \"eight\", \"nine\" }, a);\n            var bi = Array.IndexOf(new string[] {
    \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\",
    \"eight\", \"nine\" }, b);\n            return ai.CompareTo(bi);\n        });\n
    \       return string.Join(\" \", nums);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n        return
    string.Join(\" \", nums);\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <163f37511bd2407a9f83b47acd9c3057>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <163f37511bd2407a9f83b47acd9c3057>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])
    {\n                case \"zero\":\n                    nums2[i] = 0;\n                    break;\n
    \               case \"one\":\n                    nums2[i] = 1;\n                    break;\n
    \               case \"two\":\n                    nums2[i] = 2;\n                    break;\n
    \               case \"three\":\n                    nums2[i] = 3;\n                    break;\n
    \               case \"four\":\n                    nums2[i] = 4;\n                    break;\n
    \               case \"five\":\n                    nums2[i] = 5;\n                    break;\n
    \               case \"six\":\n                    nums2[i] = 6;\n                    break;\n
    \               case \"seven\":\n                    nums2[i] = 7;\n                    break;\n
    \               case \"eight\":\n                    nums2[i] = 8;\n                    break;\n
    \               case \"nine\":\n                    nums2[i] = 9;\n                    break;\n
    \           }\n        }\n        Array.Sort(nums2);\n        for (int i = 0;
    i < nums.Length; i++) {\n            switch (nums2[i]) {\n                case
    0:\n                    nums[i] = \"zero\";\n                    break;\n                case
    1:\n                    nums[i] = \"one\";\n                    break;\n                case
    2:\n                    nums[i] = \"two\";\n                    break;\n                case
    3:\n                    nums[i] = \"three\";\n                    break;\n                case
    4:\n                    nums[i] = \"four\";\n                    break;\n                case
    5:\n                    nums[i] = \"five\";\n                    break;\n                case
    6:\n                    nums[i] = \"six\";\n                    break;\n                case
    7:\n                    nums[i] = \"seven\";\n                    break;\n                case
    8:\n                    nums[i] = \"eight\";\n                    break;\n                case
    9:\n                    nums[i] = \"nine\";\n                   \n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpg_m4hsfg.cs(83,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpg_m4hsfg.cs(91,2): error CS1513: } expected

    '
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var nums2 = new string[nums.Length];\n        for (int i = 0; i < nums.Length;
    i++) {\n            switch (nums[i]) {\n                case \"zero\": nums2[i]
    = \"0\"; break;\n                case \"one\": nums2[i] = \"1\"; break;\n                case
    \"two\": nums2[i] = \"2\"; break;\n                case \"three\": nums2[i] =
    \"3\"; break;\n                case \"four\": nums2[i] = \"4\"; break;\n                case
    \"five\": nums2[i] = \"5\"; break;\n                case \"six\": nums2[i] = \"6\";
    break;\n                case \"seven\": nums2[i] = \"7\"; break;\n                case
    \"eight\": nums2[i] = \"8\"; break;\n                case \"nine\": nums2[i] =
    \"9\"; break;\n            }\n        }\n        Array.Sort(nums2);\n        for
    (int i = 0; i < nums.Length; i++) {\n            switch (nums2[i]) {\n                case
    \"0\": nums2[i] = \"zero\"; break;\n                case \"1\": nums2[i] = \"one\";
    break;\n                case \"2\": nums2[i] = \"two\"; break;\n                case
    \"3\": nums2[i] = \"three\"; break;\n                case \"4\": nums2[i] = \"four\";
    break;\n                case \"5\": nums2[i] = \"five\"; break;\n                case
    \"6\": nums2[i] = \"six\"; break;\n                case \"7\": nums2[i] = \"seven\";
    break;\n                case \"8\": nums2[i] = \"eight\"; break;\n                case
    \"9\": nums2[i] = \"nine\"; break;\n            }\n        }\n        return string.Join(\"
    \", nums2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var nums2 = new List<string>();\n        foreach (var num in nums) {\n
    \           switch (num) {\n                case \"zero\":\n                    nums2.Add(\"0\");\n
    \                   break;\n                case \"one\":\n                    nums2.Add(\"1\");\n
    \                   break;\n                case \"two\":\n                    nums2.Add(\"2\");\n
    \                   break;\n                case \"three\":\n                    nums2.Add(\"3\");\n
    \                   break;\n                case \"four\":\n                    nums2.Add(\"4\");\n
    \                   break;\n                case \"five\":\n                    nums2.Add(\"5\");\n
    \                   break;\n                case \"six\":\n                    nums2.Add(\"6\");\n
    \                   break;\n                case \"seven\":\n                    nums2.Add(\"7\");\n
    \                   break;\n                case \"eight\":\n                    nums2.Add(\"8\");\n
    \                   break;\n                case \"nine\":\n                    nums2.Add(\"9\");\n
    \                   break;\n            }\n        }\n        nums2.Sort();\n
    \       var nums3 = new List<string>();\n        foreach (var num in nums2) {\n
    \           switch (num) {\n                case \"0\":\n                    nums3.Add(\"zero\");\n
    \                   break;\n                case \"1\":\n                    nums3.Add(\"one\");\n
    \                   break;\n                case \"2\":\n                    nums3.Add(\"two\");\n
    \                   break;\n                case \"3\":\n                    nums3.Add(\"three\");\n
    \                   break;\n                case \"4\":\n                    nums3.Add(\"four\");\n
    \                   break;\n                case \"5\":\n                    nums3.Add(\"five\");\n
    \                   break;\n                case \"6\":\n                    nums3.Add(\"six\");\n
    \                   break;\n                case \"7\":\n                    nums3.Add(\"seven\");\n
    \                   break;\n                case \"8\":\n                    nums3.Add(\"eight\");\n
    \                   break;\n                case \"9\":\n                    nums3.Add(\"nine\");\n
    \                   break;\n            }\n        }\n       \n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsfyzsv19.cs(12,26): error CS0161: ''Problem.SortNumbers(string)'': not
    all code paths return a value

    '
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower());\n        var
    dict = new Dictionary<string, int>() {\n            { \"zero\", 0 },\n            {
    \"one\", 1 },\n            { \"two\", 2 },\n            { \"three\", 3 },\n            {
    \"four\", 4 },\n            { \"five\", 5 },\n            { \"six\", 6 },\n            {
    \"seven\", 7 },\n            { \"eight\", 8 },\n            { \"nine\", 9 }\n
    \       };\n        var nums2 = nums.Select(x => dict[x]);\n        var nums3
    = nums2.OrderBy(x => x);\n        var nums4 = nums3.Select(x => dict.First(y =>
    y.Value == x).Key);\n        return string.Join(\" \", nums4);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String x) [0x00000] in <995379f6fc4045b3b3c1f1257c1ce534>:0 \n  at System.Linq.Utilities+<>c__DisplayClass2_0`3[TSource,TMiddle,TResult].<CombineSelectors>b__0
    (TSource x) [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext
    () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].MoveNext
    () [0x00029] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.String.Join
    (System.String separator, System.Collections.Generic.IEnumerable`1[T] values)
    [0x00015] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers (System.String
    numbers) [0x00110] in <995379f6fc4045b3b3c1f1257c1ce534>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <995379f6fc4045b3b3c1f1257c1ce534>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException: The
    given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String x) [0x00000] in <995379f6fc4045b3b3c1f1257c1ce534>:0 \n  at System.Linq.Utilities+<>c__DisplayClass2_0`3[TSource,TMiddle,TResult].<CombineSelectors>b__0
    (TSource x) [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x0"
  stdout: ''
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here.\n        // You can add other methods and classes.\n
    \       string[] nums = numbers.Split(' ');\n        int[] num = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])
    {\n                case \"zero\":\n                    num[i] = 0;\n                    break;\n
    \               case \"one\":\n                    num[i] = 1;\n                    break;\n
    \               case \"two\":\n                    num[i] = 2;\n                    break;\n
    \               case \"three\":\n                    num[i] = 3;\n                    break;\n
    \               case \"four\":\n                    num[i] = 4;\n                    break;\n
    \               case \"five\":\n                    num[i] = 5;\n                    break;\n
    \               case \"six\":\n                    num[i] = 6;\n                    break;\n
    \               case \"seven\":\n                    num[i] = 7;\n                    break;\n
    \               case \"eight\":\n                    num[i] = 8;\n                    break;\n
    \               case \"nine\":\n                    num[i] = 9;\n                    break;\n
    \           }\n        }\n        Array.Sort(num);\n        string result = \"\";\n
    \       for (int i = 0; i < num.Length; i++) {\n            switch (num[i]) {\n
    \               case 0:\n                    result += \"zero \";\n                    break;\n
    \               case 1:\n                    result += \"one \";\n                    break;\n
    \               case 2:\n                    result += \"two \";\n                    break;\n
    \               case 3:\n                    result += \"three \";\n                    break;\n
    \               case 4:\n                    result += \"four \";\n                    break;\n
    \               case 5:\n                    result += \"five \";\n                    break;\n
    \               case 6:\n                    result += \"six \";\n                    break;\n
    \               case 7:\n                    result += \"seven \";\n                    break;\n
    \               case 8:\n                    result += \"eight \";\n                    break;\n
    \               case 9:\n                    result += \"nine \";\n                    break;\n
    \           }\n        }\n        return result.Trim();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <45dad791a91e48b08df537d32c4c8107>:0
    \n"
  stdout: ''
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement me\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <488bbae7a8bc4cec88eae57737273ae9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <488bbae7a8bc4cec88eae57737273ae9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\":\n                    nums2.Add(0);\n                    break;\n                case
    \"one\":\n                    nums2.Add(1);\n                    break;\n                case
    \"two\":\n                    nums2.Add(2);\n                    break;\n                case
    \"three\":\n                    nums2.Add(3);\n                    break;\n                case
    \"four\":\n                    nums2.Add(4);\n                    break;\n                case
    \"five\":\n                    nums2.Add(5);\n                    break;\n                case
    \"six\":\n                    nums2.Add(6);\n                    break;\n                case
    \"seven\":\n                    nums2.Add(7);\n                    break;\n                case
    \"eight\":\n                    nums2.Add(8);\n                    break;\n                case
    \"nine\":\n                    nums2.Add(9);\n                    break;\n            }\n
    \       }\n        nums2.Sort();\n        var sb = new StringBuilder();\n        foreach
    (var num in nums2) {\n            switch (num) {\n                case 0:\n                    sb.Append(\"zero
    \");\n                    break;\n                case 1:\n                    sb.Append(\"one
    \");\n                    break;\n                case 2:\n                    sb.Append(\"two
    \");\n                    break;\n                case 3:\n                    sb.Append(\"three
    \");\n                    break;\n                case 4:\n                    sb.Append(\"four
    \");\n                    break;\n                case 5:\n                    sb.Append(\"five
    \");\n                    break;\n                case 6:\n                    sb.Append(\"six
    \");\n                    break;\n                case 7:\n                    sb.Append(\"seven
    \");\n                    break;\n                case 8:\n                    sb.Append(\"eight
    \");\n                    break;\n                case 9:\n                    sb.Append(\"nine
    \");\n                    break;\n            }\n        }\n        return sb.ToString().Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code here\n        return \"\";\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b08fc12dc81b4e8584088610100230d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b08fc12dc81b4e8584088610100230d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\": nums2.Add(0); break;\n                case \"one\": nums2.Add(1); break;\n
    \               case \"two\": nums2.Add(2); break;\n                case \"three\":
    nums2.Add(3); break;\n                case \"four\": nums2.Add(4); break;\n                case
    \"five\": nums2.Add(5); break;\n                case \"six\": nums2.Add(6); break;\n
    \               case \"seven\": nums2.Add(7); break;\n                case \"eight\":
    nums2.Add(8); break;\n                case \"nine\": nums2.Add(9); break;\n            }\n
    \       }\n        nums2.Sort();\n        var nums3 = new List<string>();\n        foreach
    (var num in nums2) {\n            switch (num) {\n                case 0: nums3.Add(\"zero\");
    break;\n                case 1: nums3.Add(\"one\"); break;\n                case
    2: nums3.Add(\"two\"); break;\n                case 3: nums3.Add(\"three\"); break;\n
    \               case 4: nums3.Add(\"four\"); break;\n                case 5: nums3.Add(\"five\");
    break;\n                case 6: nums3.Add(\"six\"); break;\n                case
    7: nums3.Add(\"seven\"); break;\n                case 8: nums3.Add(\"eight\");
    break;\n                case 9: nums3.Add(\"nine\"); break;\n            }\n        }\n
    \       return string.Join(\" \", nums3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = new List<int>();\n        foreach (var num in numbers.Split('
    ')) {\n            switch (num) {\n                case \"zero\": nums.Add(0);
    break;\n                case \"one\": nums.Add(1); break;\n                case
    \"two\": nums.Add(2); break;\n                case \"three\": nums.Add(3); break;\n
    \               case \"four\": nums.Add(4); break;\n                case \"five\":
    nums.Add(5); break;\n                case \"six\": nums.Add(6); break;\n                case
    \"seven\": nums.Add(7); break;\n                case \"eight\": nums.Add(8); break;\n
    \               case \"nine\": nums.Add(9); break;\n            }\n        }\n
    \       nums.Sort();\n        var result = new StringBuilder();\n        foreach
    (var num in nums) {\n            switch (num) {\n                case 0: result.Append(\"zero
    \"); break;\n                case 1: result.Append(\"one \"); break;\n                case
    2: result.Append(\"two \"); break;\n                case 3: result.Append(\"three
    \"); break;\n                case 4: result.Append(\"four \"); break;\n                case
    5: result.Append(\"five \"); break;\n                case 6: result.Append(\"six
    \"); break;\n                case 7: result.Append(\"seven \"); break;\n                case
    8: result.Append(\"eight \"); break;\n                case 9: result.Append(\"nine
    \"); break;\n            }\n        }\n        return result.ToString().Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<string>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\": nums2.Add(\"0\"); break;\n                case \"one\": nums2.Add(\"1\");
    break;\n                case \"two\": nums2.Add(\"2\"); break;\n                case
    \"three\": nums2.Add(\"3\"); break;\n                case \"four\": nums2.Add(\"4\");
    break;\n                case \"five\": nums2.Add(\"5\"); break;\n                case
    \"six\": nums2.Add(\"6\"); break;\n                case \"seven\": nums2.Add(\"7\");
    break;\n                case \"eight\": nums2.Add(\"8\"); break;\n                case
    \"nine\": nums2.Add(\"9\"); break;\n            }\n        }\n        var nums3
    = nums2.OrderBy(x => x).ToList();\n        var nums4 = new List<string>();\n        foreach
    (var num in nums3) {\n            switch (num) {\n                case \"0\":
    nums4.Add(\"zero\"); break;\n                case \"1\": nums4.Add(\"one\"); break;\n
    \               case \"2\": nums4.Add(\"two\"); break;\n                case \"3\":
    nums4.Add(\"three\"); break;\n                case \"4\": nums4.Add(\"four\");
    break;\n                case \"5\": nums4.Add(\"five\"); break;\n                case
    \"6\": nums4.Add(\"six\"); break;\n                case \"7\": nums4.Add(\"seven\");
    break;\n                case \"8\": nums4.Add(\"eight\"); break;\n                case
    \"9\": nums4.Add(\"nine\"); break;\n            }\n        }\n        return string.Join(\"
    \", nums4);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976210
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => NumberToInt(x)).OrderBy(x
    => x).Select(x => IntToNumber(x));\n        return string.Join(\" \", nums);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpepisa3ef.cs(13,51): error CS0103: The name ''NumberToInt'' does not exist
    in the current context

    /tmp/tmpepisa3ef.cs(13,95): error CS0103: The name ''IntToNumber'' does not exist
    in the current context

    '
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var dict = new Dictionary<string, int> {\n            { \"zero\", 0 },\n
    \           { \"one\", 1 },\n            { \"two\", 2 },\n            { \"three\",
    3 },\n            { \"four\", 4 },\n            { \"five\", 5 },\n            {
    \"six\", 6 },\n            { \"seven\", 7 },\n            { \"eight\", 8 },\n
    \           { \"nine\", 9 }\n        };\n        var sorted = nums.Select(x =>
    dict[x]).OrderBy(x => x).Select(x => dict.First(y => y.Value == x).Key).ToArray();\n
    \       return string.Join(\" \", sorted);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String x) [0x00000] in <82182004598e4ccb84c2fbbc92b8474e>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext
    () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray
    (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at
    System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()
    [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x0010f] in <82182004598e4ccb84c2fbbc92b8474e>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <82182004598e4ccb84c2fbbc92b8474e>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String x) [0x00000] in <82182004598e4ccb84c2fbbc92b8474e>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e54009"
  stdout: ''
  timestamp: 1659976210
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = new List<int>();\n        var numeral = new Dictionary<string,
    int>() {\n            { \"zero\", 0 },\n            { \"one\", 1 },\n            {
    \"two\", 2 },\n            { \"three\", 3 },\n            { \"four\", 4 },\n            {
    \"five\", 5 },\n            { \"six\", 6 },\n            { \"seven\", 7 },\n            {
    \"eight\", 8 },\n            { \"nine\", 9 }\n        };\n        foreach (var
    word in numbers.Split(' ')) {\n            nums.Add(numeral[word]);\n        }\n
    \       nums.Sort();\n        var result = new List<string>();\n        foreach
    (var num in nums) {\n            result.Add(numeral.First(x => x.Value == num).Key);\n
    \       }\n        return string.Join(\" \", result);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x000a7] in <df4bf1be94ce4a0c8be7bd25c8a91a46>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <df4bf1be94ce4a0c8be7bd25c8a91a46>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x000a7] in <df4bf1be94ce4a0c8be7bd25c8a91a46>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <df4bf1be94ce4a0c8be7bd25c8a91a46>:0
    \n"
  stdout: ''
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this function\n        return \"\";\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22df63c903774f05937fb04570cba248>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22df63c903774f05937fb04570cba248>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\": nums2.Add(0); break;\n                case \"one\": nums2.Add(1); break;\n
    \               case \"two\": nums2.Add(2); break;\n                case \"three\":
    nums2.Add(3); break;\n                case \"four\": nums2.Add(4); break;\n                case
    \"five\": nums2.Add(5); break;\n                case \"six\": nums2.Add(6); break;\n
    \               case \"seven\": nums2.Add(7); break;\n                case \"eight\":
    nums2.Add(8); break;\n                case \"nine\": nums2.Add(9); break;\n            }\n
    \       }\n        nums2.Sort();\n        var sb = new StringBuilder();\n        foreach
    (var num in nums2) {\n            switch (num) {\n                case 0: sb.Append(\"zero
    \"); break;\n                case 1: sb.Append(\"one \"); break;\n                case
    2: sb.Append(\"two \"); break;\n                case 3: sb.Append(\"three \");
    break;\n                case 4: sb.Append(\"four \"); break;\n                case
    5: sb.Append(\"five \"); break;\n                case 6: sb.Append(\"six \");
    break;\n                case 7: sb.Append(\"seven \"); break;\n                case
    8: sb.Append(\"eight \"); break;\n                case 9: sb.Append(\"nine \");
    break;\n            }\n        }\n        return sb.ToString().Trim();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this method\n        // This method is supposed
    to sort the numbers in the string\n        // each number is converted to an integer
    for the purpose of sorting\n        // don't modify the input string, make a new
    one and return that\n        // feel free to use a different sorting algorithm
    than SelectionSort\n        // SelectionSort is just used here because it's simple
    to understand\n\n        // convert the string to an array of strings\n        string[]
    nums = numbers.Split(' ');\n        // convert the array of strings to an array
    of integers\n        int[] numsInt = new int[nums.Length];\n        for (int i
    = 0; i < nums.Length; i++) {\n            numsInt[i] = ConvertStringToInt(nums[i]);\n
    \       }\n        // sort the array of integers\n        SelectionSort(numsInt);\n
    \       // convert the array of integers back to an array of strings\n        for
    (int i = 0; i < nums.Length; i++) {\n            nums[i] = ConvertIntToString(numsInt[i]);\n
    \       }\n        // convert the array of strings back to a string and return
    it\n        return string.Join(\" \", nums);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptp1roa6z.cs(25,26): error CS0103: The name ''ConvertStringToInt'' does
    not exist in the current context

    /tmp/tmptp1roa6z.cs(28,9): error CS0103: The name ''SelectionSort'' does not exist
    in the current context

    /tmp/tmptp1roa6z.cs(31,23): error CS0103: The name ''ConvertIntToString'' does
    not exist in the current context

    '
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var nums2 = new int[nums.Length];\n        for (int i = 0; i < nums.Length;
    i++) {\n            switch (nums[i]) {\n                case \"zero\": nums2[i]
    = 0; break;\n                case \"one\": nums2[i] = 1; break;\n                case
    \"two\": nums2[i] = 2; break;\n                case \"three\": nums2[i] = 3; break;\n
    \               case \"four\": nums2[i] = 4; break;\n                case \"five\":
    nums2[i] = 5; break;\n                case \"six\": nums2[i] = 6; break;\n                case
    \"seven\": nums2[i] = 7; break;\n                case \"eight\": nums2[i] = 8;
    break;\n                case \"nine\": nums2[i] = 9; break;\n            }\n        }\n
    \       Array.Sort(nums2);\n        var sb = new StringBuilder();\n        for
    (int i = 0; i < nums2.Length; i++) {\n            switch (nums2[i]) {\n                case
    0: sb.Append(\"zero\"); break;\n                case 1: sb.Append(\"one\"); break;\n
    \               case 2: sb.Append(\"two\"); break;\n                case 3: sb.Append(\"three\");
    break;\n                case 4: sb.Append(\"four\"); break;\n                case
    5: sb.Append(\"five\"); break;\n                case 6: sb.Append(\"six\"); break;\n
    \               case 7: sb.Append(\"seven\"); break;\n                case 8:
    sb.Append(\"eight\"); break;\n                case 9: sb.Append(\"nine\"); break;\n
    \           }\n            if (i != nums2.Length - 1) {\n                sb.Append(\"
    \");\n            }\n        }\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3f55ce3da370425b80b25fc67eba8e58>:0
    \n"
  stdout: ''
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])
    {\n                case \"zero\":\n                    numsInt[i] = 0;\n                    break;\n
    \               case \"one\":\n                    numsInt[i] = 1;\n                    break;\n
    \               case \"two\":\n                    numsInt[i] = 2;\n                    break;\n
    \               case \"three\":\n                    numsInt[i] = 3;\n                    break;\n
    \               case \"four\":\n                    numsInt[i] = 4;\n                    break;\n
    \               case \"five\":\n                    numsInt[i] = 5;\n                    break;\n
    \               case \"six\":\n                    numsInt[i] = 6;\n                    break;\n
    \               case \"seven\":\n                    numsInt[i] = 7;\n                    break;\n
    \               case \"eight\":\n                    numsInt[i] = 8;\n                    break;\n
    \               case \"nine\":\n                    numsInt[i] = 9;\n                    break;\n
    \           }\n        }\n        Array.Sort(numsInt);\n        string[] numsSorted
    = new string[nums.Length];\n        for (int i = 0; i < numsInt.Length; i++) {\n
    \           switch (numsInt[i]) {\n                case 0:\n                    numsSorted[i]
    = \"zero\";\n                    break;\n                case 1:\n                    numsSorted[i]
    = \"one\";\n                    break;\n                case 2:\n                    numsSorted[i]
    = \"two\";\n                    break;\n                case 3:\n                    numsSorted[i]
    = \"three\";\n                    break;\n                case 4:\n                    numsSorted[i]
    = \"four\";\n                    break;\n                case 5:\n                    numsSorted[i]
    = \"five\";\n                    break;\n                case 6:\n                    numsSorted[i]
    = \"six\";\n                    break;\n                case 7:\n                    numsSorted[i]
    = \"seven\";\n                    break;\n                case 8\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4bq84514.cs(77,23): error CS1003: Syntax error, '':'' expected

    /tmp/tmp4bq84514.cs(79,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp4bq84514.cs(87,2): error CS1513: } expected

    '
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Write your code here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b325b38466144df28aa8c81ede6909ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b325b38466144df28aa8c81ede6909ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var numsInt = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            numsInt[i] = Convert.ToInt32(nums[i]);\n
    \       }\n        Array.Sort(numsInt);\n        var result = \"\";\n        for
    (int i = 0; i < numsInt.Length; i++) {\n            result += numsInt[i].ToString()
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider) [0x00017]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32 (System.String
    value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x00019] in <56ac21324b094909ac173bececa1e5b0>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <56ac21324b094909ac173bececa1e5b0>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was
    not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider) [0x00017]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32 (System.String
    value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x00019] in <56ac21324b094909ac173bececa1e5b0>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <56ac21324b094909ac173bececa1e5b0>:0
    \n"
  stdout: ''
  timestamp: 1659976210
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var nums2 = new string[nums.Length];\n        var nums3 = new string[nums.Length];\n
    \       var nums4 = new string[nums.Length];\n        var nums5 = new string[nums.Length];\n
    \       var nums6 = new string[nums.Length];\n        var nums7 = new string[nums.Length];\n
    \       var nums8 = new string[nums.Length];\n        var nums9 = new string[nums.Length];\n
    \       var nums0 = new string[nums.Length];\n        var nums1 = new string[nums.Length];\n
    \       var nums2 = new string[nums.Length];\n        var nums3 = new string[nums.Length];\n
    \       var nums4 = new string[nums.Length];\n        var nums5 = new string[nums.Length];\n
    \       var nums6 = new string[nums.Length];\n        var nums7 = new string[nums.Length];\n
    \       var nums8 = new string[nums.Length];\n        var nums9 = new string[nums.Length];\n
    \       var nums0 = new string[nums.Length];\n        var nums1 = new string[nums.Length];\n
    \       var nums2 = new string[nums.Length];\n        var nums3 = new string[nums.Length];\n
    \       var nums4 = new string[nums.Length];\n        var nums5 = new string[nums.Length];\n
    \       var nums6 = new string[nums.Length];\n        var nums7 = new string[nums.Length];\n
    \       var nums8 = new string[nums.Length];\n        var nums9 = new string[nums.Length];\n
    \       var nums0 = new string[nums.Length];\n        var nums1 = new string[nums.Length];\n
    \       var nums2 = new string[nums.Length];\n        var nums3 = new string[nums.Length];\n
    \       var nums4 =\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm3hf1xo6.cs(46,20): error CS1525: Invalid expression term ''}''

    /tmp/tmpm3hf1xo6.cs(46,20): error CS1002: ; expected

    '
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var numsInt = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            numsInt[i] = NumeralToInt(nums[i]);\n
    \       }\n        Array.Sort(numsInt);\n        var result = new string[numsInt.Length];\n
    \       for (int i = 0; i < numsInt.Length; i++) {\n            result[i] = IntToNumeral(numsInt[i]);\n
    \       }\n        return string.Join(\" \", result);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo2lqybgo.cs(16,26): error CS0103: The name ''NumeralToInt'' does not exist
    in the current context

    /tmp/tmpo2lqybgo.cs(21,25): error CS0103: The name ''IntToNumeral'' does not exist
    in the current context

    '
  timestamp: 1659976210
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<string>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\":\n                    nums2.Add(\"0\");\n                    break;\n
    \               case \"one\":\n                    nums2.Add(\"1\");\n                    break;\n
    \               case \"two\":\n                    nums2.Add(\"2\");\n                    break;\n
    \               case \"three\":\n                    nums2.Add(\"3\");\n                    break;\n
    \               case \"four\":\n                    nums2.Add(\"4\");\n                    break;\n
    \               case \"five\":\n                    nums2.Add(\"5\");\n                    break;\n
    \               case \"six\":\n                    nums2.Add(\"6\");\n                    break;\n
    \               case \"seven\":\n                    nums2.Add(\"7\");\n                    break;\n
    \               case \"eight\":\n                    nums2.Add(\"8\");\n                    break;\n
    \               case \"nine\":\n                    nums2.Add(\"9\");\n                    break;\n
    \           }\n        }\n        nums2.Sort();\n        var nums3 = new List<string>();\n
    \       foreach (var num in nums2) {\n            switch (num) {\n                case
    \"0\":\n                    nums3.Add(\"zero\");\n                    break;\n
    \               case \"1\":\n                    nums3.Add(\"one\");\n                    break;\n
    \               case \"2\":\n                    nums3.Add(\"two\");\n                    break;\n
    \               case \"3\":\n                    nums3.Add(\"three\");\n                    break;\n
    \               case \"4\":\n                    nums3.Add(\"four\");\n                    break;\n
    \               case \"5\":\n                    nums3.Add(\"five\");\n                    break;\n
    \               case \"6\":\n                    nums3.Add(\"six\");\n                    break;\n
    \               case \"7\":\n                    nums3.Add(\"seven\");\n                    break;\n
    \               case \"8\":\n                    nums3.Add(\"eight\");\n                    break;\n
    \               case \"9\":\n                    nums3.Add(\"nine\");\n                    break;\n
    \           }\n        }\n        return string.Join(\" \", nums3);\n    }\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxal6nhvq.cs(96,1): error CS1022: Type or namespace definition, or end-of-file
    expected

    '
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var nums2 = nums.Select(x => {\n            switch (x) {\n                case
    \"zero\": return 0;\n                case \"one\": return 1;\n                case
    \"two\": return 2;\n                case \"three\": return 3;\n                case
    \"four\": return 4;\n                case \"five\": return 5;\n                case
    \"six\": return 6;\n                case \"seven\": return 7;\n                case
    \"eight\": return 8;\n                case \"nine\": return 9;\n                default:
    throw new Exception(\"Invalid input\");\n            }\n        }).ToArray();\n
    \       Array.Sort(nums2);\n        return string.Join(\" \", nums2.Select(x =>
    {\n            switch (x) {\n                case 0: return \"zero\";\n                case
    1: return \"one\";\n                case 2: return \"two\";\n                case
    3: return \"three\";\n                case 4: return \"four\";\n                case
    5: return \"five\";\n                case 6: return \"six\";\n                case
    7: return \"seven\";\n                case 8: return \"eight\";\n                case
    9: return \"nine\";\n                default: throw new Exception(\"Invalid input\");\n
    \           }\n        }));\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Exception: Invalid input\n  at Problem+<>c.<SortNumbers>b__0_1
    (System.String x) [0x0017d] in <ebd19cb01e9741e7adc4c76dcecf1c1c>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x00059] in <ebd19cb01e9741e7adc4c76dcecf1c1c>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ebd19cb01e9741e7adc4c76dcecf1c1c>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Exception: Invalid input\n  at Problem+<>c.<SortNumbers>b__0_1
    (System.String x) [0x0017d] in <ebd19cb01e9741e7adc4c76dcecf1c1c>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x00059] in <ebd19cb01e9741e7adc4c76dcecf1c1c>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ebd19cb01e9741e7adc4c76dcecf1c1c>:0
    \n"
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = new List<int>();\n        var words = numbers.Split(' ');\n
    \       foreach (var word in words) {\n            switch (word) {\n                case
    \"zero\": nums.Add(0); break;\n                case \"one\": nums.Add(1); break;\n
    \               case \"two\": nums.Add(2); break;\n                case \"three\":
    nums.Add(3); break;\n                case \"four\": nums.Add(4); break;\n                case
    \"five\": nums.Add(5); break;\n                case \"six\": nums.Add(6); break;\n
    \               case \"seven\": nums.Add(7); break;\n                case \"eight\":
    nums.Add(8); break;\n                case \"nine\": nums.Add(9); break;\n            }\n
    \       }\n        nums.Sort();\n        var result = new StringBuilder();\n        foreach
    (var num in nums) {\n            switch (num) {\n                case 0: result.Append(\"zero
    \"); break;\n                case 1: result.Append(\"one \"); break;\n                case
    2: result.Append(\"two \"); break;\n                case 3: result.Append(\"three
    \"); break;\n                case 4: result.Append(\"four \"); break;\n                case
    5: result.Append(\"five \"); break;\n                case 6: result.Append(\"six
    \"); break;\n                case 7: result.Append(\"seven \"); break;\n                case
    8: result.Append(\"eight \"); break;\n                case 9: result.Append(\"nine
    \"); break;\n            }\n        }\n        return result.ToString().Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = new List<int>();\n        var words = numbers.Split(' ');\n
    \       foreach (var word in words) {\n            switch (word) {\n                case
    \"zero\":\n                    nums.Add(0);\n                    break;\n                case
    \"one\":\n                    nums.Add(1);\n                    break;\n                case
    \"two\":\n                    nums.Add(2);\n                    break;\n                case
    \"three\":\n                    nums.Add(3);\n                    break;\n                case
    \"four\":\n                    nums.Add(4);\n                    break;\n                case
    \"five\":\n                    nums.Add(5);\n                    break;\n                case
    \"six\":\n                    nums.Add(6);\n                    break;\n                case
    \"seven\":\n                    nums.Add(7);\n                    break;\n                case
    \"eight\":\n                    nums.Add(8);\n                    break;\n                case
    \"nine\":\n                    nums.Add(9);\n                    break;\n            }\n
    \       }\n        nums.Sort();\n        var result = new StringBuilder();\n        foreach
    (var num in nums) {\n            switch (num) {\n                case 0:\n                    result.Append(\"zero
    \");\n                    break;\n                case 1:\n                    result.Append(\"one
    \");\n                    break;\n                case 2:\n                    result.Append(\"two
    \");\n                    break;\n                case 3:\n                    result.Append(\"three
    \");\n                    break;\n                case 4:\n                    result.Append(\"four
    \");\n                    break;\n                case 5:\n                    result.Append(\"five
    \");\n                    break;\n                case 6:\n                    result.Append(\"six
    \");\n                    break;\n                case 7:\n                    result.Append(\"seven
    \");\n                    break;\n                case 8:\n                    result.Append(\"eight
    \");\n                    break;\n                case 9:\n                    result.Append(\"nine
    \");\n                    break;\n            }\n        }\n        return result.ToString().Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\": nums2.Add(0); break;\n                case \"one\": nums2.Add(1); break;\n
    \               case \"two\": nums2.Add(2); break;\n                case \"three\":
    nums2.Add(3); break;\n                case \"four\": nums2.Add(4); break;\n                case
    \"five\": nums2.Add(5); break;\n                case \"six\": nums2.Add(6); break;\n
    \               case \"seven\": nums2.Add(7); break;\n                case \"eight\":
    nums2.Add(8); break;\n                case \"nine\": nums2.Add(9); break;\n            }\n
    \       }\n        nums2.Sort();\n        var nums3 = new List<string>();\n        foreach
    (var num in nums2) {\n            switch (num) {\n                case 0: nums3.Add(\"zero\");
    break;\n                case 1: nums3.Add(\"one\"); break;\n                case
    2: nums3.Add(\"two\"); break;\n                case 3: nums3.Add(\"three\"); break;\n
    \               case 4: nums3.Add(\"four\"); break;\n                case 5: nums3.Add(\"five\");
    break;\n                case 6: nums3.Add(\"six\"); break;\n                case
    7: nums3.Add(\"seven\"); break;\n                case 8: nums3.Add(\"eight\");
    break;\n                case 9: nums3.Add(\"nine\"); break;\n            }\n        }\n
    \       return string.Join(\" \", nums3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\": nums2.Add(0); break;\n                case \"one\": nums2.Add(1); break;\n
    \               case \"two\": nums2.Add(2); break;\n                case \"three\":
    nums2.Add(3); break;\n                case \"four\": nums2.Add(4); break;\n                case
    \"five\": nums2.Add(5); break;\n                case \"six\": nums2.Add(6); break;\n
    \               case \"seven\": nums2.Add(7); break;\n                case \"eight\":
    nums2.Add(8); break;\n                case \"nine\": nums2.Add(9); break;\n            }\n
    \       }\n        nums2.Sort();\n        var nums3 = new List<string>();\n        foreach
    (var num in nums2) {\n            switch (num) {\n                case 0: nums3.Add(\"zero\");
    break;\n                case 1: nums3.Add(\"one\"); break;\n                case
    2: nums3.Add(\"two\"); break;\n                case 3: nums3.Add(\"three\"); break;\n
    \               case 4: nums3.Add(\"four\"); break;\n                case 5: nums3.Add(\"five\");
    break;\n                case 6: nums3.Add(\"six\"); break;\n                case
    7: nums3.Add(\"seven\"); break;\n                case 8: nums3.Add(\"eight\");
    break;\n                case 9: nums3.Add(\"nine\"); break;\n            }\n        }\n
    \       return string.Join(\" \", nums3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\": nums2.Add(0); break;\n                case \"one\": nums2.Add(1); break;\n
    \               case \"two\": nums2.Add(2); break;\n                case \"three\":
    nums2.Add(3); break;\n                case \"four\": nums2.Add(4); break;\n                case
    \"five\": nums2.Add(5); break;\n                case \"six\": nums2.Add(6); break;\n
    \               case \"seven\": nums2.Add(7); break;\n                case \"eight\":
    nums2.Add(8); break;\n                case \"nine\": nums2.Add(9); break;\n            }\n
    \       }\n        nums2.Sort();\n        var sb = new StringBuilder();\n        foreach
    (var num in nums2) {\n            switch (num) {\n                case 0: sb.Append(\"zero
    \"); break;\n                case 1: sb.Append(\"one \"); break;\n                case
    2: sb.Append(\"two \"); break;\n                case 3: sb.Append(\"three \");
    break;\n                case 4: sb.Append(\"four \"); break;\n                case
    5: sb.Append(\"five \"); break;\n                case 6: sb.Append(\"six \");
    break;\n                case 7: sb.Append(\"seven \"); break;\n                case
    8: sb.Append(\"eight \"); break;\n                case 9: sb.Append(\"nine \");
    break;\n            }\n        }\n        return sb.ToString().Trim();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\": nums2.Add(0); break;\n                case \"one\": nums2.Add(1); break;\n
    \               case \"two\": nums2.Add(2); break;\n                case \"three\":
    nums2.Add(3); break;\n                case \"four\": nums2.Add(4); break;\n                case
    \"five\": nums2.Add(5); break;\n                case \"six\": nums2.Add(6); break;\n
    \               case \"seven\": nums2.Add(7); break;\n                case \"eight\":
    nums2.Add(8); break;\n                case \"nine\": nums2.Add(9); break;\n            }\n
    \       }\n        nums2.Sort();\n        var nums3 = new List<string>();\n        foreach
    (var num in nums2) {\n            switch (num) {\n                case 0: nums3.Add(\"zero\");
    break;\n                case 1: nums3.Add(\"one\"); break;\n                case
    2: nums3.Add(\"two\"); break;\n                case 3: nums3.Add(\"three\"); break;\n
    \               case 4: nums3.Add(\"four\"); break;\n                case 5: nums3.Add(\"five\");
    break;\n                case 6: nums3.Add(\"six\"); break;\n                case
    7: nums3.Add(\"seven\"); break;\n                case 8: nums3.Add(\"eight\");
    break;\n                case 9: nums3.Add(\"nine\"); break;\n            }\n        }\n
    \       return string.Join(\" \", nums3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => NumberToInt(x)).OrderBy(x
    => x).Select(x => IntToNumber(x));\n        return string.Join(\" \", nums);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpepisa3ef.cs(13,51): error CS0103: The name ''NumberToInt'' does not exist
    in the current context

    /tmp/tmpepisa3ef.cs(13,95): error CS0103: The name ''IntToNumber'' does not exist
    in the current context

    '
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var nums2 = new int[nums.Length];\n        for (int i = 0; i < nums.Length;
    i++) {\n            switch (nums[i]) {\n                case \"zero\": nums2[i]
    = 0; break;\n                case \"one\": nums2[i] = 1; break;\n                case
    \"two\": nums2[i] = 2; break;\n                case \"three\": nums2[i] = 3; break;\n
    \               case \"four\": nums2[i] = 4; break;\n                case \"five\":
    nums2[i] = 5; break;\n                case \"six\": nums2[i] = 6; break;\n                case
    \"seven\": nums2[i] = 7; break;\n                case \"eight\": nums2[i] = 8;
    break;\n                case \"nine\": nums2[i] = 9; break;\n            }\n        }\n
    \       Array.Sort(nums2);\n        var sb = new StringBuilder();\n        for
    (int i = 0; i < nums2.Length; i++) {\n            switch (nums2[i]) {\n                case
    0: sb.Append(\"zero\"); break;\n                case 1: sb.Append(\"one\"); break;\n
    \               case 2: sb.Append(\"two\"); break;\n                case 3: sb.Append(\"three\");
    break;\n                case 4: sb.Append(\"four\"); break;\n                case
    5: sb.Append(\"five\"); break;\n                case 6: sb.Append(\"six\"); break;\n
    \               case 7: sb.Append(\"seven\"); break;\n                case 8:
    sb.Append(\"eight\"); break;\n                case 9: sb.Append(\"nine\"); break;\n
    \           }\n            if (i != nums2.Length - 1) {\n                sb.Append(\"
    \");\n            }\n        }\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3f55ce3da370425b80b25fc67eba8e58>:0
    \n"
  stdout: ''
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            nums2[i] = Convert.ToInt32(nums[i]);\n
    \       }\n        Array.Sort(nums2);\n        string result = \"\";\n        for
    (int i = 0; i < nums2.Length; i++) {\n            result += nums2[i].ToString()
    + \" \";\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider) [0x00017]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32 (System.String
    value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x00019] in <bd2dfecb700b47e48ba211e674b246ba>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <bd2dfecb700b47e48ba211e674b246ba>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was
    not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider) [0x00017]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32 (System.String
    value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x00019] in <bd2dfecb700b47e48ba211e674b246ba>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <bd2dfecb700b47e48ba211e674b246ba>:0
    \n"
  stdout: ''
  timestamp: 1659976210
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => (int)Enum.Parse(typeof(Numbers),
    x)).OrderBy(x => x).Select(x => (Numbers)x).Select(x => x.ToString());\n        return
    string.Join(\" \", nums);\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwa9vh5ot.cs(13,74): error CS0246: The type or namespace name ''Numbers''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpwa9vh5ot.cs(13,117): error CS0246: The type or namespace name ''Numbers''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement me\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <488bbae7a8bc4cec88eae57737273ae9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <488bbae7a8bc4cec88eae57737273ae9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Write your code here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b325b38466144df28aa8c81ede6909ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b325b38466144df28aa8c81ede6909ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n        return
    string.Join(\" \", nums);\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <163f37511bd2407a9f83b47acd9c3057>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <163f37511bd2407a9f83b47acd9c3057>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this method\n        // This method should return
    a string with the numbers sorted from smallest to largest\n        // The numbers
    should be space-delimited\n        // If the input is null or empty, return an
    empty string\n        // If the input is invalid, throw an ArgumentException\n
    \       if (numbers == null || numbers == \"\")\n        {\n            return
    \"\";\n        }\n        else\n        {\n            string[] nums = numbers.Split('
    ');\n            int[] nums2 = new int[nums.Length];\n            for (int i =
    0; i < nums.Length; i++)\n            {\n                switch (nums[i])\n                {\n
    \                   case \"zero\":\n                        nums2[i] = 0;\n                        break;\n
    \                   case \"one\":\n                        nums2[i] = 1;\n                        break;\n
    \                   case \"two\":\n                        nums2[i] = 2;\n                        break;\n
    \                   case \"three\":\n                        nums2[i] = 3;\n                        break;\n
    \                   case \"four\":\n                        nums2[i] = 4;\n                        break;\n
    \                   case \"five\":\n                        nums2[i] = 5;\n                        break;\n
    \                   case \"six\":\n                        nums2[i] = 6;\n                        break;\n
    \                   case \"seven\":\n                        nums2[i] = 7;\n                        break;\n
    \                   case \"eight\":\n                        nums2[i] = 8;\n                        break;\n
    \                   case \"nine\":\n                        nums2[i] = 9;\n                        break;\n
    \                   default:\n                        throw new ArgumentException();\n
    \               }\n            }\n            Array.Sort(nums2);\n            string
    result = \"\";\n            for (int i = 0; i < nums2.Length; i++)\n            {\n
    \               switch (nums2[i])\n                {\n                    case
    0:\n                        result += \"zero \";\n                        break;\n
    \                   case 1:\n                        result += \"one \";\n                        break;\n
    \                   case 2:\n                        result += \"two \";\n                        break;\n
    \                   case 3:\n                        result += \"three \";\n                        break;\n
    \                   case 4:\n                       \n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0msx1ach.cs(85,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp0msx1ach.cs(93,2): error CS1513: } expected

    '
  timestamp: 1659976210
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this function\n        return null;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0000b] in <de312cdb38c04b48842ffb74e428a85d>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0000b] in <de312cdb38c04b48842ffb74e428a85d>:0
    \n"
  stdout: ''
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Write your code here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b325b38466144df28aa8c81ede6909ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b325b38466144df28aa8c81ede6909ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => new {\n            num =
    x,\n            val = x.ToLower() switch {\n                \"zero\" => 0,\n                \"one\"
    => 1,\n                \"two\" => 2,\n                \"three\" => 3,\n                \"four\"
    => 4,\n                \"five\" => 5,\n                \"six\" => 6,\n                \"seven\"
    => 7,\n                \"eight\" => 8,\n                \"nine\" => 9,\n                _
    => throw new Exception(\"Invalid input\"),\n            }\n        }).OrderBy(x
    => x.val).Select(x => x.num);\n        return string.Join(\" \", nums);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Exception: Invalid input\n  at Problem+<>c.<SortNumbers>b__0_0
    (System.String x) [0x00181] in <f120438c381240de9bcb60c4a28e7a8b>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext
    () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].MoveNext
    () [0x00029] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.String.Join
    (System.String separator, System.Collections.Generic.IEnumerable`1[T] values)
    [0x00015] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers (System.String
    numbers) [0x00077] in <f120438c381240de9bcb60c4a28e7a8b>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <f120438c381240de9bcb60c4a28e7a8b>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.Exception: Invalid input\n  at Problem+<>c.<SortNumbers>b__0_0
    (System.String x) [0x00181] in <f120438c381240de9bcb60c4a28e7a8b>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext
    () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].MoveNext
    () [0x00029] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.String.Join
    (System.String separator, System.Collections.Generic.IEnumerable`1[T] values)
    [0x00015] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers (System.String
    numbers) [0x00077] in <f120438c381240de9bcb60c4a28e7a8b>:0 \n  at Problem.Main
    (System.String[] ar"
  stdout: ''
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        string[] nums = numbers.Split(' ');\n        int[] nums_int = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            nums_int[i] = Convert.ToInt32(nums[i]);\n
    \       }\n        Array.Sort(nums_int);\n        string result = \"\";\n        for
    (int i = 0; i < nums_int.Length; i++) {\n            result += nums_int[i] + \"
    \";\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider) [0x00017]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32 (System.String
    value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x00019] in <4856d94348aa4f26a8651cad13236e50>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <4856d94348aa4f26a8651cad13236e50>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was
    not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider) [0x00017]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32 (System.String
    value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x00019] in <4856d94348aa4f26a8651cad13236e50>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <4856d94348aa4f26a8651cad13236e50>:0
    \n"
  stdout: ''
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])
    {\n                case \"zero\":\n                    nums2[i] = 0;\n                    break;\n
    \               case \"one\":\n                    nums2[i] = 1;\n                    break;\n
    \               case \"two\":\n                    nums2[i] = 2;\n                    break;\n
    \               case \"three\":\n                    nums2[i] = 3;\n                    break;\n
    \               case \"four\":\n                    nums2[i] = 4;\n                    break;\n
    \               case \"five\":\n                    nums2[i] = 5;\n                    break;\n
    \               case \"six\":\n                    nums2[i] = 6;\n                    break;\n
    \               case \"seven\":\n                    nums2[i] = 7;\n                    break;\n
    \               case \"eight\":\n                    nums2[i] = 8;\n                    break;\n
    \               case \"nine\":\n                    nums2[i] = 9;\n                    break;\n
    \           }\n        }\n        Array.Sort(nums2);\n        string ret = \"\";\n
    \       for (int i = 0; i < nums2.Length; i++) {\n            switch (nums2[i])
    {\n                case 0:\n                    ret += \"zero \";\n                    break;\n
    \               case 1:\n                    ret += \"one \";\n                    break;\n
    \               case 2:\n                    ret += \"two \";\n                    break;\n
    \               case 3:\n                    ret += \"three \";\n                    break;\n
    \               case 4:\n                    ret += \"four \";\n                    break;\n
    \               case 5:\n                    ret += \"five \";\n                    break;\n
    \               case 6:\n                    ret += \"six \";\n                    break;\n
    \               case 7:\n                    ret += \"seven \";\n                    break;\n
    \               case 8:\n                    ret += \"eight \";\n                    break;\n
    \               case 9:\n                    ret += \"nine \";\n                    break;\n
    \           }\n        }\n        return ret.Trim();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ecc09650d76e49888273e92d58b64b7f>:0
    \n"
  stdout: ''
  timestamp: 1659976211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        string[] nums = numbers.Split(' ');\n        int[] num = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])
    {\n                case \"zero\":\n                    num[i] = 0;\n                    break;\n
    \               case \"one\":\n                    num[i] = 1;\n                    break;\n
    \               case \"two\":\n                    num[i] = 2;\n                    break;\n
    \               case \"three\":\n                    num[i] = 3;\n                    break;\n
    \               case \"four\":\n                    num[i] = 4;\n                    break;\n
    \               case \"five\":\n                    num[i] = 5;\n                    break;\n
    \               case \"six\":\n                    num[i] = 6;\n                    break;\n
    \               case \"seven\":\n                    num[i] = 7;\n                    break;\n
    \               case \"eight\":\n                    num[i] = 8;\n                    break;\n
    \               case \"nine\":\n                    num[i] = 9;\n                    break;\n
    \           }\n        }\n        Array.Sort(num);\n        string ret = \"\";\n
    \       for (int i = 0; i < num.Length; i++) {\n            switch (num[i]) {\n
    \               case 0:\n                    ret += \"zero \";\n                    break;\n
    \               case 1:\n                    ret += \"one \";\n                    break;\n
    \               case 2:\n                    ret += \"two \";\n                    break;\n
    \               case 3:\n                    ret += \"three \";\n                    break;\n
    \               case 4:\n                    ret += \"four \";\n                    break;\n
    \               case 5:\n                    ret += \"five \";\n                    break;\n
    \               case 6:\n                    ret += \"six \";\n                    break;\n
    \               case 7:\n                    ret += \"seven \";\n                    break;\n
    \               case 8:\n                    ret += \"eight \";\n                    break;\n
    \               case 9:\n                    ret += \"nine \";\n                    break;\n
    \           }\n        }\n        return ret.Trim();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aab713b5bf51487abc6bb428aa5e8e6c>:0
    \n"
  stdout: ''
  timestamp: 1659976211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])
    {\n                case \"zero\":\n                    nums2[i] = 0;\n                    break;\n
    \               case \"one\":\n                    nums2[i] = 1;\n                    break;\n
    \               case \"two\":\n                    nums2[i] = 2;\n                    break;\n
    \               case \"three\":\n                    nums2[i] = 3;\n                    break;\n
    \               case \"four\":\n                    nums2[i] = 4;\n                    break;\n
    \               case \"five\":\n                    nums2[i] = 5;\n                    break;\n
    \               case \"six\":\n                    nums2[i] = 6;\n                    break;\n
    \               case \"seven\":\n                    nums2[i] = 7;\n                    break;\n
    \               case \"eight\":\n                    nums2[i] = 8;\n                    break;\n
    \               case \"nine\":\n                    nums2[i] = 9;\n                    break;\n
    \           }\n        }\n        Array.Sort(nums2);\n        string result =
    \"\";\n        for (int i = 0; i < nums2.Length; i++) {\n            switch (nums2[i])
    {\n                case 0:\n                    result += \"zero \";\n                    break;\n
    \               case 1:\n                    result += \"one \";\n                    break;\n
    \               case 2:\n                    result += \"two \";\n                    break;\n
    \               case 3:\n                    result += \"three \";\n                    break;\n
    \               case 4:\n                    result += \"four \";\n                    break;\n
    \               case 5:\n                    result += \"five \";\n                    break;\n
    \               case 6:\n                    result += \"six \";\n                    break;\n
    \               case 7:\n                    result += \"seven \";\n                    break;\n
    \               case 8:\n                    result += \"eight \";\n                    break;\n
    \               case 9:\n                    result += \"nine \";\n                    break;\n
    \           }\n        }\n        return result.Trim();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cd7970d489124001a128ecc61740161a>:0
    \n"
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this method\n        // This method should return
    the string with numbers sorted from smallest to largest\n        // You can add
    additional methods in this class, or create additional classes\n        // If
    you create additional classes, place them in the Problem namespace\n        //
    Examples:\n        // SortNumbers(\"zero one two three four five six seven eight
    nine\") -> \"zero one two three four five six seven eight nine\"\n        // SortNumbers(\"nine
    zero eight seven six five four three two one\") -> \"zero one two three four five
    six seven eight nine\"\n        // SortNumbers(\"one two three four five six seven
    eight nine zero\") -> \"zero one two three four five six seven eight nine\"\n
    \       // SortNumbers(\"zero zero zero zero zero zero zero zero zero zero\")
    -> \"zero zero zero zero zero zero zero zero zero zero\"\n        // SortNumbers(\"one
    two three four five six seven eight nine nine\") -> \"one two three four five
    six seven eight nine nine\"\n        // SortNumbers(\"one one one one one one
    one one one one one\") -> \"one one one one one one one one one one one\"\n        //
    SortNumbers(\"zero one two three four five six seven eight nine zero one two three
    four five six seven eight nine\") -> \"zero zero one one two two three three four
    four five five six six seven seven eight eight nine nine nine\"\n        // SortNumbers(\"one
    zero zero zero zero zero zero zero zero zero one\") -> \"zero zero zero zero zero
    zero zero zero zero one one\"\n        // SortNumbers(\"one zero zero zero zero
    zero zero zero zero zero zero\") -> \"zero zero zero zero zero zero zero zero
    zero zero one\"\n        // SortNumbers(\"one zero zero zero zero zero zero zero
    zero zero zero zero\") -> \"zero zero zero zero zero zero zero zero zero zero
    zero one\"\n        // SortNumbers(\"one zero zero zero zero zero zero zero zero
    zero zero zero zero\") -> \"zero zero zero zero zero zero zero zero zero zero
    zero zero one\"\n        // SortNumbers(\"one zero zero zero zero zero zero zero
    zero zero zero zero zero zero\") -> \"zero zero zero zero zero zero zero zero
    zero zero zero zero zero one\"\n        // SortNumbers(\"one zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero\") -> \"zero zero zero zero
    zero zero zero zero zero zero zero zero zero zero one\"\n        // SortNumbers(\"\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz1emzhv5.cs(12,26): error CS0161: ''Problem.SortNumbers(string)'': not
    all code paths return a value

    '
  timestamp: 1659976210
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this method\n        // This method should return
    a string with the numbers sorted from smallest to largest\n        // For example,
    SortNumbers(\"one two three four five\") should return \"one two three four five\"\n
    \       // Hint: You can use the CompareTo method on strings to determine which
    string is smaller\n        // Hint: You can use the Split method on strings to
    split them into arrays of strings\n        // Hint: You can use the Join method
    on arrays of strings to join them into a single string\n        // Hint: You can
    use the Sort method on arrays to sort them\n        // Hint: You can use the ToLower
    method on strings to convert them to lowercase\n        // Hint: You can use the
    ToUpper method on strings to convert them to uppercase\n        // Hint: You can
    use the Trim method on strings to remove leading and trailing whitespace\n        //
    Hint: You can use the Substring method on strings to get a substring\n        //
    Hint: You can use the Length property on strings to get their length\n        //
    Hint: You can use the IndexOf method on strings to get the index of a substring\n
    \       // Hint: You can use the Replace method on strings to replace a substring
    with another substring\n        // Hint: You can use the Insert method on strings
    to insert a substring at a particular index\n        // Hint: You can use the
    Remove method on strings to remove a substring at a particular index\n        //
    Hint: You can use the Contains method on strings to check if a string contains
    a substring\n        // Hint: You can use the StartsWith method on strings to
    check if a string starts with a substring\n        // Hint: You can use the EndsWith
    method on strings to check if a string ends with a substring\n        // Hint:
    You can use the IsNullOrEmpty method on strings to check if a string is null or
    empty\n        // Hint: You can use the IsNullOrWhiteSpace method on strings to
    check if a string is null, empty or whitespace\n        // Hint: You can use the
    TrimStart method on strings to remove leading whitespace\n        // Hint: You
    can use the TrimEnd method on strings to remove trailing whitespace\n        //
    Hint: You can use the Trim method\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpusdxvvs8.cs(12,26): error CS0161: ''Problem.SortNumbers(string)'': not
    all code paths return a value

    '
  timestamp: 1659976210
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this method\n        // This method should return
    a string with the numbers sorted from smallest to largest\n        // You can
    use any language you want, but you should not use any built-in sorting methods\n
    \       // Hint: You can use the string.CompareTo(string) method to compare two
    strings\n        // Hint: You can use the string.Split(char[]) method to split
    a string into an array of strings\n        // Hint: You can use the string.Join(string,
    string[]) method to join an array of strings into a string\n        // Hint: You
    can use the char.IsDigit(char) method to check if a character is a digit\n        //
    Hint: You can use the int.Parse(string) method to convert a string to an integer\n
    \       // Hint: You can use the string.Format(string, object) method to convert
    an integer to a string\n        // Hint: You can use the string.Concat(string,
    string) method to concatenate two strings\n        // Hint: You can use the string.Substring(int,
    int) method to get a substring of a string\n        // Hint: You can use the string.IndexOf(string)
    method to get the index of the first occurrence of a substring in a string\n        //
    Hint: You can use the string.LastIndexOf(string) method to get the index of the
    last occurrence of a substring in a string\n        // Hint: You can use the string.Insert(int,
    string) method to insert a string into another string\n        // Hint: You can
    use the string.Remove(int, int) method to remove a substring from a string\n        //
    Hint: You can use the string.Replace(string, string) method to replace all occurrences
    of a substring in a string\n        // Hint: You can use the string.ToLower()
    method to convert a string to lowercase\n        // Hint: You can use the string.ToUpper()
    method to convert a string to uppercase\n        // Hint: You can use the string.Trim()
    method to remove leading and trailing whitespace from a string\n        // Hint:
    You can use the string.Trim(char[]) method to remove leading and trailing characters
    from a string\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbasus8mf.cs(12,26): error CS0161: ''Problem.SortNumbers(string)'': not
    all code paths return a value

    '
  timestamp: 1659976210
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(s => s.ToLower()).ToArray();\n
    \       var numMap = new Dictionary<string, int>() {\n            { \"zero\",
    0 },\n            { \"one\", 1 },\n            { \"two\", 2 },\n            {
    \"three\", 3 },\n            { \"four\", 4 },\n            { \"five\", 5 },\n
    \           { \"six\", 6 },\n            { \"seven\", 7 },\n            { \"eight\",
    8 },\n            { \"nine\", 9 }\n        };\n        var sorted = nums.Select(s
    => numMap[s]).OrderBy(i => i).Select(i => numMap.First(kvp => kvp.Value == i).Key).ToArray();\n
    \       return string.Join(\" \", sorted);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String s) [0x00000] in <a185439a0fdc44568c5daf8bd076f99e>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext
    () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray
    (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at
    System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()
    [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x0010f] in <a185439a0fdc44568c5daf8bd076f99e>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <a185439a0fdc44568c5daf8bd076f99e>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String s) [0x00000] in <a185439a0fdc44568c5daf8bd076f99e>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e54009"
  stdout: ''
  timestamp: 1659976211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this method\n        // This method should return
    a string with the numbers sorted from smallest to largest\n        // For example,
    if the input is \"zero one two three four five six seven eight nine\"\n        //
    The output should be \"zero one two three four five six seven eight nine\"\n        //
    If the input is \"nine eight seven six five four three two one zero\"\n        //
    The output should be \"zero one two three four five six seven eight nine\"\n        //
    If the input is \"one two three four five six seven eight nine zero\"\n        //
    The output should be \"zero one two three four five six seven eight nine\"\n        //
    If the input is \"zero zero zero zero zero zero zero zero zero zero\"\n        //
    The output should be \"zero zero zero zero zero zero zero zero zero zero\"\n        //
    If the input is \"one two three four five six seven eight nine nine\"\n        //
    The output should be \"one two three four five six seven eight nine nine\"\n        //
    If the input is \"one one one one one one one one one one\"\n        // The output
    should be \"one one one one one one one one one one\"\n        // If the input
    is \"one two three four five six seven eight nine nine nine nine nine nine nine
    nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine
    nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine
    nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine
    nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine
    nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine
    nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine
    nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine
    nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine
    nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine
    nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine
    nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine
    nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine
    nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine
    nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine nine
    nine nine nine nine nine nine nine nine\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpszhixisb.cs(12,26): error CS0161: ''Problem.SortNumbers(string)'': not
    all code paths return a value

    '
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this method\n        return \"\";\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f714d5c03c5b468babfec3cdb0e4888c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f714d5c03c5b468babfec3cdb0e4888c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Write your code here\n        // To print results to the standard
    output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello
    world!\");\n        string[] nums = numbers.Split(' ');\n        int[] numsInt
    = new int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n            switch
    (nums[i]) {\n                case \"zero\":\n                    numsInt[i] =
    0;\n                    break;\n                case \"one\":\n                    numsInt[i]
    = 1;\n                    break;\n                case \"two\":\n                    numsInt[i]
    = 2;\n                    break;\n                case \"three\":\n                    numsInt[i]
    = 3;\n                    break;\n                case \"four\":\n                    numsInt[i]
    = 4;\n                    break;\n                case \"five\":\n                    numsInt[i]
    = 5;\n                    break;\n                case \"six\":\n                    numsInt[i]
    = 6;\n                    break;\n                case \"seven\":\n                    numsInt[i]
    = 7;\n                    break;\n                case \"eight\":\n                    numsInt[i]
    = 8;\n                    break;\n                case \"nine\":\n                    numsInt[i]
    = 9;\n                    break;\n            }\n        }\n        Array.Sort(numsInt);\n
    \       string result = \"\";\n        for (int i = 0; i < numsInt.Length; i++)
    {\n            switch (numsInt[i]) {\n                case 0:\n                    result
    += \"zero \";\n                    break;\n                case 1:\n                    result
    += \"one \";\n                    break;\n                case 2:\n                    result
    += \"two \";\n                    break;\n                case 3:\n                    result
    += \"three \";\n                    break;\n                case 4:\n                    result
    += \"four \";\n                    break;\n                case 5:\n                    result
    += \"five \";\n                    break;\n                case 6:\n                    result
    += \"six \";\n                    break;\n                case 7:\n                    result
    += \"seven \";\n                    break;\n                case 8:\n                    result
    += \"eight \";\n                   \n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_38iv6f1.cs(84,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp_38iv6f1.cs(92,2): error CS1513: } expected

    '
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var nums2 = new string[nums.Length];\n        for (int i = 0; i < nums.Length;
    i++) {\n            switch (nums[i]) {\n                case \"zero\": nums2[i]
    = \"0\"; break;\n                case \"one\": nums2[i] = \"1\"; break;\n                case
    \"two\": nums2[i] = \"2\"; break;\n                case \"three\": nums2[i] =
    \"3\"; break;\n                case \"four\": nums2[i] = \"4\"; break;\n                case
    \"five\": nums2[i] = \"5\"; break;\n                case \"six\": nums2[i] = \"6\";
    break;\n                case \"seven\": nums2[i] = \"7\"; break;\n                case
    \"eight\": nums2[i] = \"8\"; break;\n                case \"nine\": nums2[i] =
    \"9\"; break;\n            }\n        }\n        Array.Sort(nums2);\n        for
    (int i = 0; i < nums.Length; i++) {\n            switch (nums2[i]) {\n                case
    \"0\": nums2[i] = \"zero\"; break;\n                case \"1\": nums2[i] = \"one\";
    break;\n                case \"2\": nums2[i] = \"two\"; break;\n                case
    \"3\": nums2[i] = \"three\"; break;\n                case \"4\": nums2[i] = \"four\";
    break;\n                case \"5\": nums2[i] = \"five\"; break;\n                case
    \"6\": nums2[i] = \"six\"; break;\n                case \"7\": nums2[i] = \"seven\";
    break;\n                case \"8\": nums2[i] = \"eight\"; break;\n                case
    \"9\": nums2[i] = \"nine\"; break;\n            }\n        }\n        return string.Join(\"
    \", nums2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(s => s.ToLower()).ToArray();\n
    \       var numMap = new Dictionary<string, int> {\n            { \"zero\", 0
    },\n            { \"one\", 1 },\n            { \"two\", 2 },\n            { \"three\",
    3 },\n            { \"four\", 4 },\n            { \"five\", 5 },\n            {
    \"six\", 6 },\n            { \"seven\", 7 },\n            { \"eight\", 8 },\n
    \           { \"nine\", 9 }\n        };\n        var numsInt = nums.Select(s =>
    numMap[s]).ToArray();\n        Array.Sort(numsInt);\n        var numsStr = numsInt.Select(i
    => numMap.First(kvp => kvp.Value == i).Key).ToArray();\n        return string.Join(\"
    \", numsStr);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String s) [0x00000] in <a26d9331a58841bca696dffbab1389aa>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x000da] in <a26d9331a58841bca696dffbab1389aa>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <a26d9331a58841bca696dffbab1389aa>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String s) [0x00000] in <a26d9331a58841bca696dffbab1389aa>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x000da] in <a26d9331a58841bca696dffbab1389aa>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <a26d9331a58841bca696dffbab1389aa>:0
    \n"
  stdout: ''
  timestamp: 1659976211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\":\n                    nums2.Add(0);\n                    break;\n                case
    \"one\":\n                    nums2.Add(1);\n                    break;\n                case
    \"two\":\n                    nums2.Add(2);\n                    break;\n                case
    \"three\":\n                    nums2.Add(3);\n                    break;\n                case
    \"four\":\n                    nums2.Add(4);\n                    break;\n                case
    \"five\":\n                    nums2.Add(5);\n                    break;\n                case
    \"six\":\n                    nums2.Add(6);\n                    break;\n                case
    \"seven\":\n                    nums2.Add(7);\n                    break;\n                case
    \"eight\":\n                    nums2.Add(8);\n                    break;\n                case
    \"nine\":\n                    nums2.Add(9);\n                    break;\n            }\n
    \       }\n        nums2.Sort();\n        var nums3 = new List<string>();\n        foreach
    (var num in nums2) {\n            switch (num) {\n                case 0:\n                    nums3.Add(\"zero\");\n
    \                   break;\n                case 1:\n                    nums3.Add(\"one\");\n
    \                   break;\n                case 2:\n                    nums3.Add(\"two\");\n
    \                   break;\n                case 3:\n                    nums3.Add(\"three\");\n
    \                   break;\n                case 4:\n                    nums3.Add(\"four\");\n
    \                   break;\n                case 5:\n                    nums3.Add(\"five\");\n
    \                   break;\n                case 6:\n                    nums3.Add(\"six\");\n
    \                   break;\n                case 7:\n                    nums3.Add(\"seven\");\n
    \                   break;\n                case 8:\n                    nums3.Add(\"eight\");\n
    \                   break;\n                case 9:\n                    nums3.Add(\"nine\");\n
    \                   break;\n            }\n        }\n        return string.Join(\"
    \", nums3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        int[] nums = new int[numbers.Length];\n
    \       for (int i = 0; i < numbers.Length; i++) {\n            switch (numbers[i])
    {\n                case 'z':\n                    nums[i] = 0;\n                    break;\n
    \               case 'o':\n                    nums[i] = 1;\n                    break;\n
    \               case 'w':\n                    nums[i] = 2;\n                    break;\n
    \               case 'h':\n                    nums[i] = 3;\n                    break;\n
    \               case 'u':\n                    nums[i] = 4;\n                    break;\n
    \               case 'f':\n                    nums[i] = 5;\n                    break;\n
    \               case 'x':\n                    nums[i] = 6;\n                    break;\n
    \               case 's':\n                    nums[i] = 7;\n                    break;\n
    \               case 'g':\n                    nums[i] = 8;\n                    break;\n
    \               case 'i':\n                    nums[i] = 9;\n                    break;\n
    \           }\n        }\n        Array.Sort(nums);\n        string ans = \"\";\n
    \       for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])
    {\n                case 0:\n                    ans += \"zero\";\n                    break;\n
    \               case 1:\n                    ans += \"one\";\n                    break;\n
    \               case 2:\n                    ans += \"two\";\n                    break;\n
    \               case 3:\n                    ans += \"three\";\n                    break;\n
    \               case 4:\n                    ans += \"four\";\n                    break;\n
    \               case 5:\n                    ans += \"five\";\n                    break;\n
    \               case 6:\n                    ans += \"six\";\n                    break;\n
    \               case 7:\n                    ans += \"seven\";\n                    break;\n
    \               case 8:\n                    ans += \"eight\";\n                    break;\n
    \               case 9:\n                    ans += \"nine\";\n                    break;\n
    \           }\n            if (i < nums.Length - 1) {\n                ans +=
    \" \";\n            }\n        }\n        return ans;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cabb6db9ea3e48adb2e121a67d773107>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cabb6db9ea3e48adb2e121a67d773107>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var nums2 = new int[nums.Length];\n        for (int i = 0; i < nums.Length;
    i++) {\n            switch (nums[i]) {\n                case \"zero\": nums2[i]
    = 0; break;\n                case \"one\": nums2[i] = 1; break;\n                case
    \"two\": nums2[i] = 2; break;\n                case \"three\": nums2[i] = 3; break;\n
    \               case \"four\": nums2[i] = 4; break;\n                case \"five\":
    nums2[i] = 5; break;\n                case \"six\": nums2[i] = 6; break;\n                case
    \"seven\": nums2[i] = 7; break;\n                case \"eight\": nums2[i] = 8;
    break;\n                case \"nine\": nums2[i] = 9; break;\n            }\n        }\n
    \       Array.Sort(nums2);\n        var sb = new StringBuilder();\n        for
    (int i = 0; i < nums2.Length; i++) {\n            switch (nums2[i]) {\n                case
    0: sb.Append(\"zero\"); break;\n                case 1: sb.Append(\"one\"); break;\n
    \               case 2: sb.Append(\"two\"); break;\n                case 3: sb.Append(\"three\");
    break;\n                case 4: sb.Append(\"four\"); break;\n                case
    5: sb.Append(\"five\"); break;\n                case 6: sb.Append(\"six\"); break;\n
    \               case 7: sb.Append(\"seven\"); break;\n                case 8:
    sb.Append(\"eight\"); break;\n                case 9: sb.Append(\"nine\"); break;\n
    \           }\n            if (i != nums2.Length - 1) {\n                sb.Append(\"
    \");\n            }\n        }\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3f55ce3da370425b80b25fc67eba8e58>:0
    \n"
  stdout: ''
  timestamp: 1659976210
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        string[] nums = numbers.Split(' ');\n
    \       int[] numsInt = new int[nums.Length];\n        for (int i = 0; i < nums.Length;
    i++) {\n            switch (nums[i]) {\n                case \"zero\":\n                    numsInt[i]
    = 0;\n                    break;\n                case \"one\":\n                    numsInt[i]
    = 1;\n                    break;\n                case \"two\":\n                    numsInt[i]
    = 2;\n                    break;\n                case \"three\":\n                    numsInt[i]
    = 3;\n                    break;\n                case \"four\":\n                    numsInt[i]
    = 4;\n                    break;\n                case \"five\":\n                    numsInt[i]
    = 5;\n                    break;\n                case \"six\":\n                    numsInt[i]
    = 6;\n                    break;\n                case \"seven\":\n                    numsInt[i]
    = 7;\n                    break;\n                case \"eight\":\n                    numsInt[i]
    = 8;\n                    break;\n                case \"nine\":\n                    numsInt[i]
    = 9;\n                    break;\n            }\n        }\n        Array.Sort(numsInt);\n
    \       string result = \"\";\n        for (int i = 0; i < numsInt.Length; i++)
    {\n            switch (numsInt[i]) {\n                case 0:\n                    result
    += \"zero \";\n                    break;\n                case 1:\n                    result
    += \"one \";\n                    break;\n                case 2:\n                    result
    += \"two \";\n                    break;\n                case 3:\n                    result
    += \"three \";\n                    break;\n                case 4:\n                    result
    += \"four \";\n                    break;\n                case 5:\n                    result
    += \"five \";\n                    break;\n                case 6:\n                    result
    += \"six \";\n                    break;\n                case 7:\n                    result
    += \"seven \";\n                    break;\n                case 8:\n                    result
    += \"eight \";\n                    break;\n                case 9:\n                    result
    += \"nine \";\n                    break;\n            }\n        }\n        return
    result.Trim\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8pp0p4jh.cs(86,27): error CS1002: ; expected

    '
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var nums2 = new int[nums.Length];\n        for (int i = 0; i < nums.Length;
    i++) {\n            switch (nums[i]) {\n                case \"zero\": nums2[i]
    = 0; break;\n                case \"one\": nums2[i] = 1; break;\n                case
    \"two\": nums2[i] = 2; break;\n                case \"three\": nums2[i] = 3; break;\n
    \               case \"four\": nums2[i] = 4; break;\n                case \"five\":
    nums2[i] = 5; break;\n                case \"six\": nums2[i] = 6; break;\n                case
    \"seven\": nums2[i] = 7; break;\n                case \"eight\": nums2[i] = 8;
    break;\n                case \"nine\": nums2[i] = 9; break;\n            }\n        }\n
    \       Array.Sort(nums2);\n        var sb = new StringBuilder();\n        for
    (int i = 0; i < nums2.Length; i++) {\n            switch (nums2[i]) {\n                case
    0: sb.Append(\"zero\"); break;\n                case 1: sb.Append(\"one\"); break;\n
    \               case 2: sb.Append(\"two\"); break;\n                case 3: sb.Append(\"three\");
    break;\n                case 4: sb.Append(\"four\"); break;\n                case
    5: sb.Append(\"five\"); break;\n                case 6: sb.Append(\"six\"); break;\n
    \               case 7: sb.Append(\"seven\"); break;\n                case 8:
    sb.Append(\"eight\"); break;\n                case 9: sb.Append(\"nine\"); break;\n
    \           }\n            if (i != nums2.Length - 1) sb.Append(' ');\n        }\n
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d76bd649f25a4e309a93aa06fc7c4460>:0
    \n"
  stdout: ''
  timestamp: 1659976211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var numsInt = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            numsInt[i] = NumeralToInt(nums[i]);\n
    \       }\n        Array.Sort(numsInt);\n        var numsStr = new string[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            numsStr[i] = IntToNumeral(numsInt[i]);\n
    \       }\n        return string.Join(\" \", numsStr);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1gihqaet.cs(16,26): error CS0103: The name ''NumeralToInt'' does not exist
    in the current context

    /tmp/tmp1gihqaet.cs(21,26): error CS0103: The name ''IntToNumeral'' does not exist
    in the current context

    '
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = new List<int>();\n        var words = numbers.Split(' ');\n
    \       foreach (var word in words) {\n            switch (word) {\n                case
    \"zero\": nums.Add(0); break;\n                case \"one\": nums.Add(1); break;\n
    \               case \"two\": nums.Add(2); break;\n                case \"three\":
    nums.Add(3); break;\n                case \"four\": nums.Add(4); break;\n                case
    \"five\": nums.Add(5); break;\n                case \"six\": nums.Add(6); break;\n
    \               case \"seven\": nums.Add(7); break;\n                case \"eight\":
    nums.Add(8); break;\n                case \"nine\": nums.Add(9); break;\n            }\n
    \       }\n        nums.Sort();\n        var result = new StringBuilder();\n        foreach
    (var num in nums) {\n            switch (num) {\n                case 0: result.Append(\"zero
    \"); break;\n                case 1: result.Append(\"one \"); break;\n                case
    2: result.Append(\"two \"); break;\n                case 3: result.Append(\"three
    \"); break;\n                case 4: result.Append(\"four \"); break;\n                case
    5: result.Append(\"five \"); break;\n                case 6: result.Append(\"six
    \"); break;\n                case 7: result.Append(\"seven \"); break;\n                case
    8: result.Append(\"eight \"); break;\n                case 9: result.Append(\"nine
    \"); break;\n            }\n        }\n        return result.ToString().Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var sorted = nums.OrderBy(x => x).ToArray();\n        return string.Join(\"
    \", sorted);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <77966d4b686842b18aa43dd0dedff47a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <77966d4b686842b18aa43dd0dedff47a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this function\n        return \"\";\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22df63c903774f05937fb04570cba248>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22df63c903774f05937fb04570cba248>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n        return
    string.Join(\" \", nums);\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <163f37511bd2407a9f83b47acd9c3057>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <163f37511bd2407a9f83b47acd9c3057>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n
    \       var nums_int = new int[nums.Length];\n        for (int i = 0; i < nums.Length;
    i++) {\n            switch (nums[i]) {\n                case \"zero\":\n                    nums_int[i]
    = 0;\n                    break;\n                case \"one\":\n                    nums_int[i]
    = 1;\n                    break;\n                case \"two\":\n                    nums_int[i]
    = 2;\n                    break;\n                case \"three\":\n                    nums_int[i]
    = 3;\n                    break;\n                case \"four\":\n                    nums_int[i]
    = 4;\n                    break;\n                case \"five\":\n                    nums_int[i]
    = 5;\n                    break;\n                case \"six\":\n                    nums_int[i]
    = 6;\n                    break;\n                case \"seven\":\n                    nums_int[i]
    = 7;\n                    break;\n                case \"eight\":\n                    nums_int[i]
    = 8;\n                    break;\n                case \"nine\":\n                    nums_int[i]
    = 9;\n                    break;\n            }\n        }\n        Array.Sort(nums_int);\n
    \       var result = new string[nums_int.Length];\n        for (int i = 0; i <
    nums_int.Length; i++) {\n            switch (nums_int[i]) {\n                case
    0:\n                    result[i] = \"zero\";\n                    break;\n                case
    1:\n                    result[i] = \"one\";\n                    break;\n                case
    2:\n                    result[i] = \"two\";\n                    break;\n                case
    3:\n                    result[i] = \"three\";\n                    break;\n                case
    4:\n                    result[i] = \"four\";\n                    break;\n                case
    5:\n                    result[i] = \"five\";\n                    break;\n                case
    6:\n                    result[i] = \"six\";\n                    break;\n                case
    7:\n                    result[i] = \"seven\";\n                    break;\n                case
    8:\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgajqps39.cs(79,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpgajqps39.cs(87,2): error CS1513: } expected

    '
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code here\n        return \"\";\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b08fc12dc81b4e8584088610100230d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b08fc12dc81b4e8584088610100230d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n        return
    string.Join(\" \", nums);\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <163f37511bd2407a9f83b47acd9c3057>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <163f37511bd2407a9f83b47acd9c3057>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this method\n        // This method should return
    a string of numbers sorted from smallest to largest\n        // Hint: You may
    want to use the following helper method:\n        // int ToNumber(string numeral)\n
    \       // This method converts a numeral to an integer.\n        // Example:
    ToNumber(\"two\") returns 2\n        // Example: ToNumber(\"nine\") returns 9\n
    \       // Example: ToNumber(\"one\") returns 1\n        // Example: ToNumber(\"zero\")
    returns 0\n        // Example: ToNumber(\"four\") returns 4\n        // Example:
    ToNumber(\"five\") returns 5\n        // Example: ToNumber(\"six\") returns 6\n
    \       // Example: ToNumber(\"seven\") returns 7\n        // Example: ToNumber(\"eight\")
    returns 8\n        // Example: ToNumber(\"three\") returns 3\n        string[]
    nums = numbers.Split(' ');\n        int[] numsInt = new int[nums.Length];\n        for
    (int i = 0; i < nums.Length; i++) {\n            numsInt[i] = ToNumber(nums[i]);\n
    \       }\n        Array.Sort(numsInt);\n        string result = \"\";\n        for
    (int i = 0; i < numsInt.Length; i++) {\n            result += ToNumeral(numsInt[i])
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz1so8v1h.cs(31,26): error CS0103: The name ''ToNumber'' does not exist
    in the current context

    /tmp/tmpz1so8v1h.cs(36,23): error CS0103: The name ''ToNumeral'' does not exist
    in the current context

    '
  timestamp: 1659976211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var sorted = nums.OrderBy(x
    => x).ToArray();\n        return string.Join(\" \", sorted);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <54bc93a1bb2f4adc98decaeeff23e266>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <54bc93a1bb2f4adc98decaeeff23e266>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976211
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])
    {\n                case \"zero\":\n                    numsInt[i] = 0;\n                    break;\n
    \               case \"one\":\n                    numsInt[i] = 1;\n                    break;\n
    \               case \"two\":\n                    numsInt[i] = 2;\n                    break;\n
    \               case \"three\":\n                    numsInt[i] = 3;\n                    break;\n
    \               case \"four\":\n                    numsInt[i] = 4;\n                    break;\n
    \               case \"five\":\n                    numsInt[i] = 5;\n                    break;\n
    \               case \"six\":\n                    numsInt[i] = 6;\n                    break;\n
    \               case \"seven\":\n                    numsInt[i] = 7;\n                    break;\n
    \               case \"eight\":\n                    numsInt[i] = 8;\n                    break;\n
    \               case \"nine\":\n                    numsInt[i] = 9;\n                    break;\n
    \           }\n        }\n        Array.Sort(numsInt);\n        string[] numsStr
    = new string[numsInt.Length];\n        for (int i = 0; i < numsInt.Length; i++)
    {\n            switch (numsInt[i]) {\n                case 0:\n                    numsStr[i]
    = \"zero\";\n                    break;\n                case 1:\n                    numsStr[i]
    = \"one\";\n                    break;\n                case 2:\n                    numsStr[i]
    = \"two\";\n                    break;\n                case 3:\n                    numsStr[i]
    = \"three\";\n                    break;\n                case 4:\n                    numsStr[i]
    = \"four\";\n                    break;\n                case 5:\n                    numsStr[i]
    = \"five\";\n                    break;\n                case 6:\n                    numsStr[i]
    = \"six\";\n                    break;\n                case 7:\n                    numsStr[i]
    = \"seven\";\n                    break;\n                case 8:\n                    numsStr[i\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppwwifcb8.cs(78,30): error CS1003: Syntax error, '']'' expected

    /tmp/tmppwwifcb8.cs(78,30): error CS1002: ; expected

    /tmp/tmppwwifcb8.cs(80,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmppwwifcb8.cs(88,2): error CS1513: } expected

    '
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code here\n        return \"\";\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b08fc12dc81b4e8584088610100230d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b08fc12dc81b4e8584088610100230d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        string[] nums = numbers.Split(' ');\n        int[] nums_int = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            nums_int[i] = Convert.ToInt32(nums[i]);\n
    \       }\n        Array.Sort(nums_int);\n        string result = \"\";\n        for
    (int i = 0; i < nums_int.Length; i++) {\n            result += nums_int[i].ToString()
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider) [0x00017]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32 (System.String
    value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x00019] in <0357acd431ff40a48fd30fda0ba7f47d>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <0357acd431ff40a48fd30fda0ba7f47d>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was
    not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider) [0x00017]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32 (System.String
    value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x00019] in <0357acd431ff40a48fd30fda0ba7f47d>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <0357acd431ff40a48fd30fda0ba7f47d>:0
    \n"
  stdout: ''
  timestamp: 1659976211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var numList = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\":\n                    numList.Add(0);\n                    break;\n                case
    \"one\":\n                    numList.Add(1);\n                    break;\n                case
    \"two\":\n                    numList.Add(2);\n                    break;\n                case
    \"three\":\n                    numList.Add(3);\n                    break;\n
    \               case \"four\":\n                    numList.Add(4);\n                    break;\n
    \               case \"five\":\n                    numList.Add(5);\n                    break;\n
    \               case \"six\":\n                    numList.Add(6);\n                    break;\n
    \               case \"seven\":\n                    numList.Add(7);\n                    break;\n
    \               case \"eight\":\n                    numList.Add(8);\n                    break;\n
    \               case \"nine\":\n                    numList.Add(9);\n                    break;\n
    \           }\n        }\n        numList.Sort();\n        var result = new StringBuilder();\n
    \       foreach (var num in numList) {\n            switch (num) {\n                case
    0:\n                    result.Append(\"zero \");\n                    break;\n
    \               case 1:\n                    result.Append(\"one \");\n                    break;\n
    \               case 2:\n                    result.Append(\"two \");\n                    break;\n
    \               case 3:\n                    result.Append(\"three \");\n                    break;\n
    \               case 4:\n                    result.Append(\"four \");\n                    break;\n
    \               case 5:\n                    result.Append(\"five \");\n                    break;\n
    \               case 6:\n                    result.Append(\"six \");\n                    break;\n
    \               case 7:\n                    result.Append(\"seven \");\n                    break;\n
    \               case 8:\n                    result.Append(\"eight \");\n                    break;\n
    \               case 9:\n                    result.Append(\"nine \");\n                    break;\n
    \           }\n        }\n        return result.ToString().Trim();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // TODO: Implement this function\n        return \"\";\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22df63c903774f05937fb04570cba248>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22df63c903774f05937fb04570cba248>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        var numList = new List<int>();\n
    \       foreach (var num in nums) {\n            switch (num) {\n                case
    \"zero\":\n                    numList.Add(0);\n                    break;\n                case
    \"one\":\n                    numList.Add(1);\n                    break;\n                case
    \"two\":\n                    numList.Add(2);\n                    break;\n                case
    \"three\":\n                    numList.Add(3);\n                    break;\n
    \               case \"four\":\n                    numList.Add(4);\n                    break;\n
    \               case \"five\":\n                    numList.Add(5);\n                    break;\n
    \               case \"six\":\n                    numList.Add(6);\n                    break;\n
    \               case \"seven\":\n                    numList.Add(7);\n                    break;\n
    \               case \"eight\":\n                    numList.Add(8);\n                    break;\n
    \               case \"nine\":\n                    numList.Add(9);\n                    break;\n
    \           }\n        }\n        numList.Sort();\n        var result = \"\";\n
    \       foreach (var num in numList) {\n            switch (num) {\n                case
    0:\n                    result += \"zero \";\n                    break;\n                case
    1:\n                    result += \"one \";\n                    break;\n                case
    2:\n                    result += \"two \";\n                    break;\n                case
    3:\n                    result += \"three \";\n                    break;\n                case
    4:\n                    result += \"four \";\n                    break;\n                case
    5:\n                    result += \"five \";\n                    break;\n                case
    6:\n                    result += \"six \";\n                    break;\n                case
    7:\n                    result += \"seven \";\n                    break;\n                case
    8:\n                    result += \"eight \";\n                    break;\n                case
    9:\n                    result += \"nine \";\n                    break;\n            }\n
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976211
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(n => NumberalToInt(n)).OrderBy(n
    => n).Select(n => IntToNumberal(n));\n        return string.Join(\" \", nums);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8y8x64fw.cs(13,51): error CS0103: The name ''NumberalToInt'' does not
    exist in the current context

    /tmp/tmp8y8x64fw.cs(13,97): error CS0103: The name ''IntToNumberal'' does not
    exist in the current context

    '
  timestamp: 1659976211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code here\n        return \"\";\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b08fc12dc81b4e8584088610100230d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b08fc12dc81b4e8584088610100230d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])
    {\n                case \"zero\":\n                    numsInt[i] = 0;\n                    break;\n
    \               case \"one\":\n                    numsInt[i] = 1;\n                    break;\n
    \               case \"two\":\n                    numsInt[i] = 2;\n                    break;\n
    \               case \"three\":\n                    numsInt[i] = 3;\n                    break;\n
    \               case \"four\":\n                    numsInt[i] = 4;\n                    break;\n
    \               case \"five\":\n                    numsInt[i] = 5;\n                    break;\n
    \               case \"six\":\n                    numsInt[i] = 6;\n                    break;\n
    \               case \"seven\":\n                    numsInt[i] = 7;\n                    break;\n
    \               case \"eight\":\n                    numsInt[i] = 8;\n                    break;\n
    \               case \"nine\":\n                    numsInt[i] = 9;\n                    break;\n
    \           }\n        }\n        Array.Sort(numsInt);\n        for (int i = 0;
    i < nums.Length; i++) {\n            switch (numsInt[i]) {\n                case
    0:\n                    nums[i] = \"zero\";\n                    break;\n                case
    1:\n                    nums[i] = \"one\";\n                    break;\n                case
    2:\n                    nums[i] = \"two\";\n                    break;\n                case
    3:\n                    nums[i] = \"three\";\n                    break;\n                case
    4:\n                    nums[i] = \"four\";\n                    break;\n                case
    5:\n                    nums[i] = \"five\";\n                    break;\n                case
    6:\n                    nums[i] = \"six\";\n                    break;\n                case
    7:\n                    nums[i] = \"seven\";\n                    break;\n                case
    8:\n                    nums[i] = \"eight\";\n                    break;\n                case
    9:\n                    nums[i] = \"nine\";\n                   \n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdf55uwhn.cs(83,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpdf55uwhn.cs(91,2): error CS1513: } expected

    '
  timestamp: 1659976210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n        return
    string.Join(\" \", nums);\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <163f37511bd2407a9f83b47acd9c3057>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <163f37511bd2407a9f83b47acd9c3057>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        // Your code goes here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32d4b3a55c4c45abb2238377adc19698>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(s => s.ToLower()).ToArray();\n
    \       var numeralToNumber = new Dictionary<string, int> {\n            { \"zero\",
    0 },\n            { \"one\", 1 },\n            { \"two\", 2 },\n            {
    \"three\", 3 },\n            { \"four\", 4 },\n            { \"five\", 5 },\n
    \           { \"six\", 6 },\n            { \"seven\", 7 },\n            { \"eight\",
    8 },\n            { \"nine\", 9 }\n        };\n        var numberToNumeral = new
    Dictionary<int, string> {\n            { 0, \"zero\" },\n            { 1, \"one\"
    },\n            { 2, \"two\" },\n            { 3, \"three\" },\n            {
    4, \"four\" },\n            { 5, \"five\" },\n            { 6, \"six\" },\n            {
    7, \"seven\" },\n            { 8, \"eight\" },\n            { 9, \"nine\" }\n
    \       };\n        var numsSorted = nums.Select(s => numeralToNumber[s]).OrderBy(i
    => i).Select(i => numberToNumeral[i]).ToArray();\n        return string.Join(\"
    \", numsSorted);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String s) [0x00000] in <c0f776d71e9f47d9b5397ccd30c416aa>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext
    () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray
    (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at
    System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()
    [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.SortNumbers (System.String numbers) [0x0019d] in <c0f776d71e9f47d9b5397ccd30c416aa>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <c0f776d71e9f47d9b5397ccd30c416aa>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1
    (System.String s) [0x00000] in <c0f776d71e9f47d9b5397ccd30c416aa>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray
    () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e54009"
  stdout: ''
  timestamp: 1659976211
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new int[nums.Length];\n
    \       for (int i = 0; i < nums.Length; i++) {\n            numsInt[i] = Convert.ToInt32(nums[i]);\n
    \       }\n        Array.Sort(numsInt);\n        string result = \"\";\n        for
    (int i = 0; i < numsInt.Length; i++) {\n            result += numsInt[i].ToString()
    + \" \";\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider) [0x00017]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32 (System.String
    value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x00019] in <5173a26d9a374de6873949b591314439>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <5173a26d9a374de6873949b591314439>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was
    not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider) [0x00017]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32 (System.String
    value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x00019] in <5173a26d9a374de6873949b591314439>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <5173a26d9a374de6873949b591314439>:0
    \n"
  stdout: ''
  timestamp: 1659976211
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    public static string SortNumbers(string numbers)
    {\n        var nums = numbers.Split(' ').Select(x => (int)Enum.Parse(typeof(Number),
    x)).OrderBy(x => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\"
    \", nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq5dg_t6g.cs(13,74): error CS0122: ''Number'' is inaccessible due to its
    protection level

    '
  timestamp: 1659976211

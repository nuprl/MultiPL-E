name: HumanEval_140_fix_spaces
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a string text, replace all spaces in it with underscores,\
  \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
  \ all consecutive spaces with -\n    public static string FixSpaces(string text)\
  \ {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"\
  Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif\
  \ \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow Yellow\
  \  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"\
  Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1\
  \ 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
completions: ["        var sb = new StringBuilder();\n        var spaces = 0;\n  \
    \      foreach (var c in text) {\n            if (c == ' ') {\n              \
    \  spaces++;\n            } else {\n                if (spaces > 2) {\n      \
    \              sb.Append('-');\n                } else {\n                   \
    \ for (int i = 0; i < spaces; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                spaces = 0;\n     \
    \           sb.Append(c);\n            }\n        }\n        if (spaces > 2) {\n\
    \            sb.Append('-');\n        } else {\n            for (int i = 0; i\
    \ < spaces; i++) {\n                sb.Append('_');\n            }\n        }\n\
    \        return sb.ToString();", "        // TODO: Implement this method\n   \
    \     //throw new NotImplementedException();\n        string result = \"\";\n\
    \        int count = 0;\n        for (int i = 0; i < text.Length; i++)\n     \
    \   {\n            if (text[i] == ' ')\n            {\n                count++;\n\
    \                if (count > 2)\n                {\n                    result\
    \ += '-';\n                    count = 0;\n                }\n               \
    \ else\n                {\n                    result += '_';\n              \
    \  }\n            }\n            else\n            {\n                result +=\
    \ text[i];\n                count = 0;\n            }\n        }\n        return\
    \ result;", "        var sb = new StringBuilder();\n        var prev = ' ';\n\
    \        var count = 0;\n        foreach (var c in text) {\n            if (c\
    \ == ' ') {\n                if (prev == ' ') {\n                    count++;\n\
    \                } else {\n                    count = 1;\n                }\n\
    \            } else {\n                if (count > 2) {\n                    sb.Append('-');\n\
    \                } else {\n                    for (int i = 0; i < count; i++)\
    \ {\n                        sb.Append('_');\n                    }\n        \
    \        }\n                count = 0;\n            }\n            if (c != '\
    \ ') {\n                sb.Append(c);\n            }\n            prev = c;\n\
    \        }\n        if (count > 2) {\n            sb.Append('-');\n        } else\
    \ {\n            for (int i = 0; i < count; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        StringBuilder\
    \ sb = new StringBuilder();\n        int count = 0;\n        for (int i = 0; i\
    \ < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n\
    \                if (count > 2) {\n                    sb.Append('-');\n     \
    \               count = 0;\n                }\n            } else {\n        \
    \        if (count > 0) {\n                    sb.Append('_', count);\n      \
    \              count = 0;\n                }\n                sb.Append(text[i]);\n\
    \            }\n        }\n        if (count > 0) {\n            sb.Append('_',\
    \ count);\n        }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        var last = ' ';\n        var count = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                if (last == ' ') {\n       \
    \             count++;\n                } else {\n                    count =\
    \ 1;\n                }\n            } else {\n                if (count > 2)\
    \ {\n                    sb.Append('-');\n                } else {\n         \
    \           for (int i = 0; i < count; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                count = 0;\n      \
    \      }\n            if (c != ' ') {\n                sb.Append(c);\n       \
    \     }\n            last = c;\n        }\n        if (count > 2) {\n        \
    \    sb.Append('-');\n        } else {\n            for (int i = 0; i < count;\
    \ i++) {\n                sb.Append('_');\n            }\n        }\n        return\
    \ sb.ToString();", "        // TODO: Implement this method\n        //throw new\
    \ NotImplementedException();\n        string result = \"\";\n        for (int\
    \ i = 0; i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n \
    \           {\n                if (i != 0 && text[i - 1] == ' ')\n           \
    \     {\n                    result += '-';\n                }\n             \
    \   else\n                {\n                    result += '_';\n            \
    \    }\n            }\n            else\n            {\n                result\
    \ += text[i];\n            }\n        }\n        return result;", "        var\
    \ sb = new StringBuilder();\n        var lastSpace = false;\n        var consecutiveSpaces\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           if (lastSpace) {\n                    consecutiveSpaces++;\n     \
    \           } else {\n                    consecutiveSpaces = 1;\n           \
    \     }\n                lastSpace = true;\n            } else {\n           \
    \     if (consecutiveSpaces > 2) {\n                    sb.Append('-');\n    \
    \            } else {\n                    for (var i = 0; i < consecutiveSpaces;\
    \ i++) {\n                        sb.Append('_');\n                    }\n   \
    \             }\n                consecutiveSpaces = 0;\n                lastSpace\
    \ = false;\n                sb.Append(c);\n            }\n        }\n        if\
    \ (consecutiveSpaces > 2) {\n            sb.Append('-');\n        } else {\n \
    \           for (var i = 0; i < consecutiveSpaces; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        string\
    \ result = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length;\
    \ i++)\n        {\n            if (text[i] == ' ')\n            {\n          \
    \      count++;\n                if (count == 1)\n                {\n        \
    \            result += '_';\n                }\n                else if (count\
    \ > 2)\n                {\n                    result += '-';\n              \
    \  }\n            }\n            else\n            {\n                result +=\
    \ text[i];\n                count = 0;\n            }\n        }\n        return\
    \ result;", "        var sb = new StringBuilder();\n        var spaces = 0;\n\
    \        foreach (var c in text) {\n            if (c == ' ') {\n            \
    \    spaces++;\n            } else {\n                if (spaces > 0) {\n    \
    \                if (spaces > 2) {\n                        sb.Append('-');\n\
    \                    } else {\n                        for (int i = 0; i < spaces;\
    \ i++) {\n                            sb.Append('_');\n                      \
    \  }\n                    }\n                    spaces = 0;\n               \
    \ }\n                sb.Append(c);\n            }\n        }\n        if (spaces\
    \ > 0) {\n            if (spaces > 2) {\n                sb.Append('-');\n   \
    \         } else {\n                for (int i = 0; i < spaces; i++) {\n     \
    \               sb.Append('_');\n                }\n            }\n        }\n\
    \        return sb.ToString();", "        var sb = new StringBuilder();\n    \
    \    var spaceCount = 0;\n        foreach (var c in text) {\n            if (c\
    \ == ' ') {\n                spaceCount++;\n                if (spaceCount > 2)\
    \ {\n                    sb.Append('-');\n                    spaceCount = 0;\n\
    \                }\n            } else {\n                if (spaceCount > 0)\
    \ {\n                    sb.Append('_');\n                    spaceCount = 0;\n\
    \                }\n                sb.Append(c);\n            }\n        }\n\
    \        if (spaceCount > 0) {\n            sb.Append('_');\n        }\n     \
    \   return sb.ToString();", "        // TODO: implement\n        return null;",
  "        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces == 1) {\n                  \
    \  sb.Append('_');\n                } else if (spaces > 1) {\n               \
    \     sb.Append('-');\n                }\n                sb.Append(c);\n    \
    \            spaces = 0;\n            }\n        }\n        if (spaces == 1) {\n\
    \            sb.Append('_');\n        } else if (spaces > 1) {\n            sb.Append('-');\n\
    \        }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        var prev = ' ';\n        var count = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                count++;\n                if\
    \ (count > 2) {\n                    if (prev != '-') {\n                    \
    \    sb.Append('-');\n                        prev = '-';\n                  \
    \  }\n                } else {\n                    if (prev != '_') {\n     \
    \                   sb.Append('_');\n                        prev = '_';\n   \
    \                 }\n                }\n            } else {\n               \
    \ count = 0;\n                sb.Append(c);\n                prev = c;\n     \
    \       }\n        }\n        return sb.ToString();", "        // Write your code\
    \ here\n        return \"\";", "        var sb = new StringBuilder();\n      \
    \  var spaces = 0;\n        foreach (var c in text) {\n            if (c == '\
    \ ') {\n                spaces++;\n            } else {\n                if (spaces\
    \ > 0) {\n                    if (spaces > 2) {\n                        sb.Append('-');\n\
    \                    } else {\n                        for (int i = 0; i < spaces;\
    \ i++) {\n                            sb.Append('_');\n                      \
    \  }\n                    }\n                    spaces = 0;\n               \
    \ }\n                sb.Append(c);\n            }\n        }\n        if (spaces\
    \ > 0) {\n            if (spaces > 2) {\n                sb.Append('-');\n   \
    \         } else {\n                for (int i = 0; i < spaces; i++) {\n     \
    \               sb.Append('_');\n                }\n            }\n        }\n\
    \        return sb.ToString();", "        // Your code goes here\n        return\
    \ text;", "        var sb = new StringBuilder();\n        var spaces = 0;\n  \
    \      foreach (var ch in text) {\n            if (ch == ' ') {\n            \
    \    spaces++;\n            } else {\n                if (spaces > 2) {\n    \
    \                sb.Append('-');\n                } else {\n                 \
    \   for (int i = 0; i < spaces; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                spaces = 0;\n     \
    \           sb.Append(ch);\n            }\n        }\n        if (spaces > 2)\
    \ {\n            sb.Append('-');\n        } else {\n            for (int i = 0;\
    \ i < spaces; i++) {\n                sb.Append('_');\n            }\n       \
    \ }\n        return sb.ToString();", "        // TODO\n        return \"\";",
  "        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 2) {\n                   \
    \ sb.Append('-');\n                } else {\n                    for (int i =\
    \ 0; i < spaces; i++) {\n                        sb.Append('_');\n           \
    \         }\n                }\n                spaces = 0;\n                sb.Append(c);\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int i = 0; i < spaces; i++) {\n          \
    \      sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        StringBuilder sb = new StringBuilder();\n        bool prevSpace = false;\n\
    \        foreach (char c in text) {\n            if (c == ' ') {\n           \
    \     if (prevSpace) {\n                    sb.Append('-');\n                }\
    \ else {\n                    sb.Append('_');\n                }\n           \
    \     prevSpace = true;\n            } else {\n                sb.Append(c);\n\
    \                prevSpace = false;\n            }\n        }\n        return\
    \ sb.ToString();", "        // TODO: Implement this method\n        return text;",
  "        // TODO: implement this method\n        //throw new NotImplementedException();\n\
    \        return text.Replace(\" \", \"_\").Replace(\"__\", \"-\");", "       \
    \ // TODO: Implement this method\n        //throw new NotImplementedException();\n\
    \        StringBuilder sb = new StringBuilder();\n        int spaceCount = 0;\n\
    \        for (int i = 0; i < text.Length; i++) {\n            if (text[i] == '\
    \ ') {\n                spaceCount++;\n                if (spaceCount == 1) {\n\
    \                    sb.Append('_');\n                }\n                else\
    \ if (spaceCount == 2) {\n                    sb.Append('-');\n              \
    \  }\n            }\n            else {\n                spaceCount = 0;\n   \
    \             sb.Append(text[i]);\n            }\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var prev = ' ';\n        var count\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           if (prev == ' ') {\n                    count++;\n               \
    \ } else {\n                    count = 1;\n                }\n            } else\
    \ {\n                if (count > 2) {\n                    sb.Append('-');\n \
    \               } else {\n                    for (int i = 0; i < count; i++)\
    \ {\n                        sb.Append('_');\n                    }\n        \
    \        }\n                count = 0;\n            }\n            if (c != '\
    \ ') {\n                sb.Append(c);\n            }\n            prev = c;\n\
    \        }\n        if (count > 2) {\n            sb.Append('-');\n        } else\
    \ {\n            for (int i = 0; i < count; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", "        var sb = new\
    \ StringBuilder();\n        var spaces = 0;\n        for (int i = 0; i < text.Length;\
    \ i++) {\n            if (text[i] == ' ') {\n                spaces++;\n     \
    \       } else {\n                if (spaces > 2) {\n                    sb.Append('-');\n\
    \                } else {\n                    for (int j = 0; j < spaces; j++)\
    \ {\n                        sb.Append('_');\n                    }\n        \
    \        }\n                spaces = 0;\n                sb.Append(text[i]);\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int j = 0; j < spaces; j++) {\n          \
    \      sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        // Write your code here\n        return text;", "        var sb = new StringBuilder();\n\
    \        var spaces = 0;\n        foreach (var c in text) {\n            if (c\
    \ == ' ') {\n                spaces++;\n            } else {\n               \
    \ if (spaces > 2) {\n                    sb.Append('-');\n                } else\
    \ {\n                    for (int i = 0; i < spaces; i++) {\n                \
    \        sb.Append('_');\n                    }\n                }\n         \
    \       spaces = 0;\n                sb.Append(c);\n            }\n        }\n\
    \        if (spaces > 2) {\n            sb.Append('-');\n        } else {\n  \
    \          for (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", "        var sb = new\
    \ StringBuilder();\n        var spaceCount = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                spaceCount++;\n            \
    \    if (spaceCount == 1) {\n                    sb.Append('_');\n           \
    \     }\n            } else {\n                if (spaceCount > 2) {\n       \
    \             sb.Append('-');\n                } else {\n                    for\
    \ (int i = 0; i < spaceCount; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                spaceCount = 0;\n \
    \               sb.Append(c);\n            }\n        }\n        if (spaceCount\
    \ > 2) {\n            sb.Append('-');\n        } else {\n            for (int\
    \ i = 0; i < spaceCount; i++) {\n                sb.Append('_');\n           \
    \ }\n        }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        var spaces = 0;\n        foreach (var c in text) {\n            if (c\
    \ == ' ') {\n                spaces++;\n            } else {\n               \
    \ if (spaces > 2) {\n                    sb.Append('-');\n                } else\
    \ {\n                    for (int i = 0; i < spaces; i++) {\n                \
    \        sb.Append('_');\n                    }\n                }\n         \
    \       spaces = 0;\n                sb.Append(c);\n            }\n        }\n\
    \        if (spaces > 2) {\n            sb.Append('-');\n        } else {\n  \
    \          for (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", "        // TODO: implement\
    \ this method\n        //throw new NotImplementedException();\n        StringBuilder\
    \ sb = new StringBuilder();\n        int count = 0;\n        for (int i = 0; i\
    \ < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n\
    \                if (count > 2) {\n                    sb.Append('-');\n     \
    \               count = 0;\n                }\n            } else {\n        \
    \        if (count > 0) {\n                    sb.Append('_', count);\n      \
    \              count = 0;\n                }\n                sb.Append(text[i]);\n\
    \            }\n        }\n        if (count > 0) {\n            sb.Append('_',\
    \ count);\n        }\n        return sb.ToString();", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        string\
    \ result = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length;\
    \ i++)\n        {\n            if (text[i] == ' ')\n            {\n          \
    \      count++;\n                if (count == 1)\n                {\n        \
    \            result += '_';\n                }\n                else if (count\
    \ == 2)\n                {\n                    result += '-';\n             \
    \   }\n            }\n            else\n            {\n                count =\
    \ 0;\n                result += text[i];\n            }\n        }\n        return\
    \ result;", "        var sb = new StringBuilder();\n        var spaces = 0;\n\
    \        foreach (var c in text) {\n            if (c == ' ') {\n            \
    \    spaces++;\n            } else {\n                if (spaces > 2) {\n    \
    \                sb.Append('-');\n                } else {\n                 \
    \   for (int i = 0; i < spaces; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                spaces = 0;\n     \
    \           sb.Append(c);\n            }\n        }\n        if (spaces > 2) {\n\
    \            sb.Append('-');\n        } else {\n            for (int i = 0; i\
    \ < spaces; i++) {\n                sb.Append('_');\n            }\n        }\n\
    \        return sb.ToString();", "        var sb = new StringBuilder();\n    \
    \    var spaces = 0;\n        foreach (var c in text) {\n            if (c ==\
    \ ' ') {\n                spaces++;\n            } else {\n                if\
    \ (spaces > 2) {\n                    sb.Append('-');\n                } else\
    \ {\n                    for (int i = 0; i < spaces; i++) {\n                \
    \        sb.Append('_');\n                    }\n                }\n         \
    \       spaces = 0;\n                sb.Append(c);\n            }\n        }\n\
    \        if (spaces > 2) {\n            sb.Append('-');\n        } else {\n  \
    \          for (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        bool lastWasSpace = false;\n        int consecutiveSpaces\
    \ = 0;\n        foreach (char c in text) {\n            if (c == ' ') {\n    \
    \            if (lastWasSpace) {\n                    consecutiveSpaces++;\n \
    \               } else {\n                    consecutiveSpaces = 1;\n       \
    \         }\n                lastWasSpace = true;\n            } else {\n    \
    \            if (consecutiveSpaces > 2) {\n                    sb.Append('-');\n\
    \                } else {\n                    for (int i = 0; i < consecutiveSpaces;\
    \ i++) {\n                        sb.Append('_');\n                    }\n   \
    \             }\n                consecutiveSpaces = 0;\n                lastWasSpace\
    \ = false;\n                sb.Append(c);\n            }\n        }\n        if\
    \ (consecutiveSpaces > 2) {\n            sb.Append('-');\n        } else {\n \
    \           for (int i = 0; i < consecutiveSpaces; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", "        var sb = new\
    \ StringBuilder();\n        var last = ' ';\n        var count = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                count++;\n \
    \               if (count > 2) {\n                    if (last != '-') {\n   \
    \                     sb.Append('-');\n                        last = '-';\n \
    \                   }\n                } else {\n                    if (last\
    \ != '_') {\n                        sb.Append('_');\n                       \
    \ last = '_';\n                    }\n                }\n            } else {\n\
    \                count = 0;\n                sb.Append(c);\n                last\
    \ = c;\n            }\n        }\n        return sb.ToString();", "        //\
    \ TODO\n        return \"\";", "        var sb = new StringBuilder();\n      \
    \  var lastWasSpace = false;\n        var consecutiveSpaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                consecutiveSpaces++;\n\
    \                if (consecutiveSpaces > 2) {\n                    if (!lastWasSpace)\
    \ {\n                        sb.Append('-');\n                        lastWasSpace\
    \ = true;\n                    }\n                } else {\n                 \
    \   sb.Append('_');\n                    lastWasSpace = true;\n              \
    \  }\n            } else {\n                sb.Append(c);\n                lastWasSpace\
    \ = false;\n                consecutiveSpaces = 0;\n            }\n        }\n\
    \        return sb.ToString();", "        var sb = new StringBuilder();\n    \
    \    var prev = ' ';\n        var count = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                if (prev == ' ') {\n       \
    \             count++;\n                } else {\n                    count =\
    \ 1;\n                }\n            } else {\n                if (count > 2)\
    \ {\n                    sb.Append('-');\n                } else {\n         \
    \           for (int i = 0; i < count; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                count = 0;\n      \
    \      }\n            if (c != ' ') {\n                sb.Append(c);\n       \
    \     }\n            prev = c;\n        }\n        if (count > 2) {\n        \
    \    sb.Append('-');\n        } else {\n            for (int i = 0; i < count;\
    \ i++) {\n                sb.Append('_');\n            }\n        }\n        return\
    \ sb.ToString();", "        var result = new StringBuilder();\n        var spaces\
    \ = 0;\n        foreach (var ch in text) {\n            if (ch == ' ') {\n   \
    \             spaces++;\n            } else {\n                if (spaces > 2)\
    \ {\n                    result.Append('-');\n                } else {\n     \
    \               for (int i = 0; i < spaces; i++) {\n                        result.Append('_');\n\
    \                    }\n                }\n                spaces = 0;\n     \
    \           result.Append(ch);\n            }\n        }\n        if (spaces >\
    \ 2) {\n            result.Append('-');\n        } else {\n            for (int\
    \ i = 0; i < spaces; i++) {\n                result.Append('_');\n           \
    \ }\n        }\n        return result.ToString();", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        string\
    \ result = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length;\
    \ i++)\n        {\n            if (text[i] == ' ')\n            {\n          \
    \      count++;\n                if (count > 2)\n                {\n         \
    \           result += '-';\n                    count = 0;\n                }\n\
    \                else\n                {\n                    result += '_';\n\
    \                }\n            }\n            else\n            {\n         \
    \       result += text[i];\n                count = 0;\n            }\n      \
    \  }\n        return result;", "        var sb = new StringBuilder();\n      \
    \  var spaces = 0;\n        foreach (var c in text) {\n            if (c == '\
    \ ') {\n                spaces++;\n            } else {\n                if (spaces\
    \ == 1) {\n                    sb.Append('_');\n                } else if (spaces\
    \ > 1) {\n                    sb.Append('-');\n                }\n           \
    \     sb.Append(c);\n                spaces = 0;\n            }\n        }\n \
    \       if (spaces == 1) {\n            sb.Append('_');\n        } else if (spaces\
    \ > 1) {\n            sb.Append('-');\n        }\n        return sb.ToString();",
  "        // Your code goes here\n        return text;", "        var sb = new StringBuilder();\n\
    \        var spaces = 0;\n        foreach (var c in text) {\n            if (c\
    \ == ' ') {\n                spaces++;\n            } else {\n               \
    \ if (spaces == 1) {\n                    sb.Append('_');\n                } else\
    \ if (spaces > 1) {\n                    sb.Append('-');\n                }\n\
    \                sb.Append(c);\n                spaces = 0;\n            }\n \
    \       }\n        if (spaces == 1) {\n            sb.Append('_');\n        }\
    \ else if (spaces > 1) {\n            sb.Append('-');\n        }\n        return\
    \ sb.ToString();", "        var sb = new StringBuilder();\n        var lastSpace\
    \ = false;\n        var consecutiveSpaces = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                if (lastSpace) {\n         \
    \           consecutiveSpaces++;\n                } else {\n                 \
    \   consecutiveSpaces = 1;\n                }\n                lastSpace = true;\n\
    \            } else {\n                if (consecutiveSpaces > 2) {\n        \
    \            sb.Append('-');\n                } else {\n                    for\
    \ (var i = 0; i < consecutiveSpaces; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                consecutiveSpaces =\
    \ 0;\n                lastSpace = false;\n                sb.Append(c);\n    \
    \        }\n        }\n        if (consecutiveSpaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (var i = 0; i < consecutiveSpaces; i++) {\n\
    \                sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var spaceCount = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n\
    \                if (spaceCount > 2) {\n                    sb.Append('-');\n\
    \                    spaceCount = 0;\n                }\n            } else {\n\
    \                if (spaceCount > 0) {\n                    sb.Append('_');\n\
    \                    spaceCount = 0;\n                }\n                sb.Append(c);\n\
    \            }\n        }\n        if (spaceCount > 0) {\n            sb.Append('_');\n\
    \        }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        var spaces = 0;\n        foreach (var c in text) {\n            if (c\
    \ == ' ') {\n                spaces++;\n            } else {\n               \
    \ if (spaces == 1) {\n                    sb.Append('_');\n                } else\
    \ if (spaces > 1) {\n                    sb.Append('-');\n                }\n\
    \                sb.Append(c);\n                spaces = 0;\n            }\n \
    \       }\n        if (spaces == 1) {\n            sb.Append('_');\n        }\
    \ else if (spaces > 1) {\n            sb.Append('-');\n        }\n        return\
    \ sb.ToString();", "        var sb = new StringBuilder();\n        var lastWasSpace\
    \ = false;\n        var consecutiveSpaces = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                consecutiveSpaces++;\n     \
    \           if (consecutiveSpaces == 3) {\n                    sb.Append('-');\n\
    \                    consecutiveSpaces = 0;\n                }\n             \
    \   lastWasSpace = true;\n            } else {\n                if (lastWasSpace)\
    \ {\n                    sb.Append('_');\n                    lastWasSpace = false;\n\
    \                }\n                sb.Append(c);\n                consecutiveSpaces\
    \ = 0;\n            }\n        }\n        if (lastWasSpace) {\n            sb.Append('_');\n\
    \        }\n        return sb.ToString();", "        // TODO: Implement this method\n\
    \        //throw new NotImplementedException();\n        string result = \"\"\
    ;\n        int count = 0;\n        for (int i = 0; i < text.Length; i++)\n   \
    \     {\n            if (text[i] == ' ')\n            {\n                count++;\n\
    \                if (count == 1)\n                {\n                    result\
    \ += '_';\n                }\n                else if (count == 2)\n         \
    \       {\n                    result += '-';\n                }\n           \
    \ }\n            else\n            {\n                count = 0;\n           \
    \     result += text[i];\n            }\n        }\n        return result;", " \
    \       StringBuilder sb = new StringBuilder();\n        bool space = false;\n\
    \        for (int i = 0; i < text.Length; i++) {\n            if (text[i] == '\
    \ ') {\n                if (space) {\n                    sb.Append('-');\n  \
    \              } else {\n                    sb.Append('_');\n               \
    \     space = true;\n                }\n            } else {\n               \
    \ sb.Append(text[i]);\n                space = false;\n            }\n       \
    \ }\n        return sb.ToString();", '        return text.Replace(" ", "_").Replace("__",
    "-");', "        var sb = new StringBuilder();\n        var last = ' ';\n    \
    \    var count = 0;\n        foreach (var c in text) {\n            if (c == '\
    \ ') {\n                count++;\n                if (count > 2) {\n         \
    \           sb.Append('-');\n                    count = 0;\n                }\n\
    \            } else {\n                if (count > 0) {\n                    sb.Append('_',\
    \ count);\n                    count = 0;\n                }\n               \
    \ sb.Append(c);\n            }\n        }\n        if (count > 0) {\n        \
    \    sb.Append('_', count);\n        }\n        return sb.ToString();", "    \
    \    var sb = new StringBuilder();\n        var last = ' ';\n        var count\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           if (last == ' ') {\n                    count++;\n               \
    \ } else {\n                    count = 1;\n                }\n            } else\
    \ {\n                if (count > 2) {\n                    sb.Append('-');\n \
    \               } else {\n                    for (int i = 0; i < count; i++)\
    \ {\n                        sb.Append('_');\n                    }\n        \
    \        }\n                count = 0;\n            }\n            if (c != '\
    \ ') {\n                sb.Append(c);\n            }\n            last = c;\n\
    \        }\n        if (count > 2) {\n            sb.Append('-');\n        } else\
    \ {\n            for (int i = 0; i < count; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        string\
    \ result = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length;\
    \ i++)\n        {\n            if (text[i] == ' ')\n            {\n          \
    \      count++;\n                if (count > 2)\n                {\n         \
    \           result += '-';\n                    count = 0;\n                }\n\
    \                else\n                {\n                    result += '_';\n\
    \                }\n            }\n            else\n            {\n         \
    \       result += text[i];\n                count = 0;\n            }\n      \
    \  }\n        return result;", "        // TODO: Implement this method\n     \
    \   //throw new NotImplementedException();\n        StringBuilder sb = new StringBuilder();\n\
    \        bool isSpace = false;\n        for (int i = 0; i < text.Length; i++)\
    \ {\n            if (text[i] == ' ') {\n                if (isSpace) {\n     \
    \               sb.Append('-');\n                } else {\n                  \
    \  sb.Append('_');\n                }\n                isSpace = true;\n     \
    \       } else {\n                sb.Append(text[i]);\n                isSpace\
    \ = false;\n            }\n        }\n        return sb.ToString();", "      \
    \  var sb = new StringBuilder();\n        var spaces = 0;\n        foreach (var\
    \ c in text) {\n            if (c == ' ') {\n                spaces++;\n     \
    \       } else {\n                if (spaces > 2) {\n                    sb.Append('-');\n\
    \                } else {\n                    for (int i = 0; i < spaces; i++)\
    \ {\n                        sb.Append('_');\n                    }\n        \
    \        }\n                spaces = 0;\n                sb.Append(c);\n     \
    \       }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int i = 0; i < spaces; i++) {\n          \
    \      sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var spaceCount = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n\
    \                if (spaceCount == 1) {\n                    sb.Append('_');\n\
    \                }\n            } else {\n                if (spaceCount > 2)\
    \ {\n                    sb.Append('-');\n                } else {\n         \
    \           for (int i = 0; i < spaceCount; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                spaceCount = 0;\n \
    \               sb.Append(c);\n            }\n        }\n        if (spaceCount\
    \ > 2) {\n            sb.Append('-');\n        } else {\n            for (int\
    \ i = 0; i < spaceCount; i++) {\n                sb.Append('_');\n           \
    \ }\n        }\n        return sb.ToString();", "        // TODO: Implement this\
    \ method\n        //throw new NotImplementedException();\n        return text.Replace(\"\
    \ \", \"_\").Replace(\"__\", \"-\");", "        var sb = new StringBuilder();\n\
    \        var lastChar = ' ';\n        var spaceCount = 0;\n        foreach (var\
    \ c in text) {\n            if (c == ' ') {\n                if (lastChar == '\
    \ ') {\n                    spaceCount++;\n                } else {\n        \
    \            spaceCount = 1;\n                }\n            } else {\n      \
    \          if (spaceCount > 2) {\n                    sb.Append('-');\n      \
    \          } else {\n                    for (int i = 0; i < spaceCount; i++)\
    \ {\n                        sb.Append('_');\n                    }\n        \
    \        }\n                spaceCount = 0;\n                sb.Append(c);\n \
    \           }\n            lastChar = c;\n        }\n        if (spaceCount >\
    \ 2) {\n            sb.Append('-');\n        } else {\n            for (int i\
    \ = 0; i < spaceCount; i++) {\n                sb.Append('_');\n            }\n\
    \        }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        var prev = ' ';\n        var count = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                count++;\n                if\
    \ (count > 2) {\n                    if (prev != '-') {\n                    \
    \    sb.Append('-');\n                        prev = '-';\n                  \
    \  }\n                } else {\n                    if (prev != '_') {\n     \
    \                   sb.Append('_');\n                        prev = '_';\n   \
    \                 }\n                }\n            } else {\n               \
    \ count = 0;\n                sb.Append(c);\n                prev = c;\n     \
    \       }\n        }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        var prev = ' ';\n        var count = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                if (prev == ' ') {\n       \
    \             count++;\n                } else {\n                    count =\
    \ 1;\n                }\n            } else {\n                if (count > 2)\
    \ {\n                    sb.Append('-');\n                } else {\n         \
    \           for (int i = 0; i < count; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                count = 0;\n      \
    \      }\n            if (c != ' ') {\n                sb.Append(c);\n       \
    \     }\n            prev = c;\n        }\n        if (count > 2) {\n        \
    \    sb.Append('-');\n        } else {\n            for (int i = 0; i < count;\
    \ i++) {\n                sb.Append('_');\n            }\n        }\n        return\
    \ sb.ToString();", "        var sb = new StringBuilder();\n        var last =\
    \ ' ';\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           if (last == ' ') {\n                    sb.Append('-');\n        \
    \        } else {\n                    sb.Append('_');\n                }\n  \
    \          } else {\n                sb.Append(c);\n            }\n          \
    \  last = c;\n        }\n        return sb.ToString();", "        var sb = new\
    \ StringBuilder();\n        var spaces = 0;\n        foreach (var c in text) {\n\
    \            if (c == ' ') {\n                spaces++;\n            } else {\n\
    \                if (spaces > 2) {\n                    sb.Append('-');\n    \
    \            } else {\n                    for (int i = 0; i < spaces; i++) {\n\
    \                        sb.Append('_');\n                    }\n            \
    \    }\n                spaces = 0;\n                sb.Append(c);\n         \
    \   }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n   \
    \     } else {\n            for (int i = 0; i < spaces; i++) {\n             \
    \   sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        // TODO: implement this method\n        //throw new NotImplementedException();\n\
    \        StringBuilder sb = new StringBuilder();\n        int count = 0;\n   \
    \     for (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ')\
    \ {\n                count++;\n                if (count == 1) {\n           \
    \         sb.Append('_');\n                }\n                else if (count ==\
    \ 2) {\n                    sb.Append('-');\n                }\n            }\n\
    \            else {\n                count = 0;\n                sb.Append(text[i]);\n\
    \            }\n        }\n        return sb.ToString();", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        string\
    \ result = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length;\
    \ i++)\n        {\n            if (text[i] == ' ')\n            {\n          \
    \      count++;\n                if (count > 2)\n                {\n         \
    \           result += '-';\n                    count = 0;\n                }\n\
    \                else\n                {\n                    result += '_';\n\
    \                }\n            }\n            else\n            {\n         \
    \       result += text[i];\n                count = 0;\n            }\n      \
    \  }\n        return result;", "        // TODO: Implement this method\n     \
    \   return \"\";", "        if (text == null)\n            return null;\n    \
    \    if (text.Length == 0)\n            return text;\n        var sb = new StringBuilder();\n\
    \        var prev = '\\0';\n        var count = 0;\n        foreach (var c in\
    \ text) {\n            if (c == ' ') {\n                count++;\n           \
    \     if (count == 1) {\n                    sb.Append('_');\n               \
    \ }\n            } else {\n                if (count > 2) {\n                \
    \    sb.Append('-');\n                } else if (count == 2) {\n             \
    \       sb.Append('_');\n                    sb.Append('_');\n               \
    \ }\n                count = 0;\n                sb.Append(c);\n            }\n\
    \        }\n        if (count > 2) {\n            sb.Append('-');\n        } else\
    \ if (count == 2) {\n            sb.Append('_');\n            sb.Append('_');\n\
    \        }\n        return sb.ToString();", "        var result = new StringBuilder();\n\
    \        var lastSpace = false;\n        var spaceCount = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n\
    \                if (spaceCount > 2) {\n                    if (!lastSpace) {\n\
    \                        result.Append('-');\n                        lastSpace\
    \ = true;\n                    }\n                } else {\n                 \
    \   result.Append('_');\n                    lastSpace = true;\n             \
    \   }\n            } else {\n                result.Append(c);\n             \
    \   lastSpace = false;\n                spaceCount = 0;\n            }\n     \
    \   }\n        return result.ToString();", "        StringBuilder sb = new StringBuilder();\n\
    \        bool space = false;\n        for (int i = 0; i < text.Length; i++) {\n\
    \            if (text[i] == ' ') {\n                if (space) {\n           \
    \         sb.Append('-');\n                } else {\n                    sb.Append('_');\n\
    \                    space = true;\n                }\n            } else {\n\
    \                sb.Append(text[i]);\n                space = false;\n       \
    \     }\n        }\n        return sb.ToString();", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        return\
    \ text.Replace(\" \", \"_\").Replace(\"__\", \"-\");", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        string\
    \ result = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length;\
    \ i++)\n        {\n            if (text[i] == ' ')\n            {\n          \
    \      count++;\n                if (count == 1)\n                {\n        \
    \            result += \"_\";\n                }\n                else if (count\
    \ == 2)\n                {\n                    result += \"-\";\n           \
    \     }\n            }\n            else\n            {\n                count\
    \ = 0;\n                result += text[i];\n            }\n        }\n       \
    \ return result;", "        StringBuilder sb = new StringBuilder();\n        bool\
    \ space = false;\n        for (int i = 0; i < text.Length; i++) {\n          \
    \  if (text[i] == ' ') {\n                if (space) {\n                    sb.Append('-');\n\
    \                } else {\n                    sb.Append('_');\n             \
    \       space = true;\n                }\n            } else {\n             \
    \   sb.Append(text[i]);\n                space = false;\n            }\n     \
    \   }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        var spaces = 0;\n        foreach (var c in text) {\n            if (c\
    \ == ' ') {\n                spaces++;\n            } else {\n               \
    \ if (spaces > 2) {\n                    sb.Append('-');\n                } else\
    \ {\n                    for (int i = 0; i < spaces; i++) {\n                \
    \        sb.Append('_');\n                    }\n                }\n         \
    \       spaces = 0;\n                sb.Append(c);\n            }\n        }\n\
    \        if (spaces > 2) {\n            sb.Append('-');\n        } else {\n  \
    \          for (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", "        var sb = new\
    \ StringBuilder();\n        var last = ' ';\n        var count = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                if (last ==\
    \ ' ') {\n                    count++;\n                } else {\n           \
    \         count = 1;\n                }\n            } else {\n              \
    \  if (count > 2) {\n                    sb.Append('-');\n                } else\
    \ {\n                    for (int i = 0; i < count; i++) {\n                 \
    \       sb.Append('_');\n                    }\n                }\n          \
    \      count = 0;\n            }\n            if (c != ' ') {\n              \
    \  sb.Append(c);\n            }\n            last = c;\n        }\n        if\
    \ (count > 2) {\n            sb.Append('-');\n        } else {\n            for\
    \ (int i = 0; i < count; i++) {\n                sb.Append('_');\n           \
    \ }\n        }\n        return sb.ToString();", "        string result = \"\"\
    ;\n        int spaces = 0;\n        for (int i = 0; i < text.Length; i++) {\n\
    \            if (text[i] == ' ') {\n                spaces++;\n              \
    \  if (spaces == 1) {\n                    result += '_';\n                }\n\
    \            } else {\n                if (spaces > 2) {\n                   \
    \ result += '-';\n                } else {\n                    for (int j = 0;\
    \ j < spaces; j++) {\n                        result += '_';\n               \
    \     }\n                }\n                spaces = 0;\n                result\
    \ += text[i];\n            }\n        }\n        if (spaces > 2) {\n         \
    \   result += '-';\n        } else {\n            for (int j = 0; j < spaces;\
    \ j++) {\n                result += '_';\n            }\n        }\n        return\
    \ result;", "        var sb = new StringBuilder();\n        var spaceCount = 0;\n\
    \        foreach (var c in text) {\n            if (c == ' ') {\n            \
    \    spaceCount++;\n                if (spaceCount == 1) {\n                 \
    \   sb.Append('_');\n                }\n            } else {\n               \
    \ if (spaceCount > 2) {\n                    sb.Append('-');\n               \
    \ } else {\n                    for (int i = 0; i < spaceCount; i++) {\n     \
    \                   sb.Append('_');\n                    }\n                }\n\
    \                spaceCount = 0;\n                sb.Append(c);\n            }\n\
    \        }\n        if (spaceCount > 2) {\n            sb.Append('-');\n     \
    \   } else {\n            for (int i = 0; i < spaceCount; i++) {\n           \
    \     sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        // TODO: Implement this method\n        //throw new NotImplementedException();\n\
    \        string result = \"\";\n        int count = 0;\n        for (int i = 0;\
    \ i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n        \
    \    {\n                count++;\n                if (count == 1)\n          \
    \      {\n                    result += '_';\n                }\n            \
    \    else if (count == 2)\n                {\n                    result += '-';\n\
    \                }\n            }\n            else\n            {\n         \
    \       count = 0;\n                result += text[i];\n            }\n      \
    \  }\n        return result;", "        var sb = new StringBuilder();\n      \
    \  var spaces = 0;\n        foreach (var ch in text) {\n            if (ch ==\
    \ ' ') {\n                spaces++;\n            } else {\n                if\
    \ (spaces > 2) {\n                    sb.Append('-');\n                } else\
    \ {\n                    for (int i = 0; i < spaces; i++) {\n                \
    \        sb.Append('_');\n                    }\n                }\n         \
    \       spaces = 0;\n                sb.Append(ch);\n            }\n        }\n\
    \        if (spaces > 2) {\n            sb.Append('-');\n        } else {\n  \
    \          for (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        int count = 0;\n        for (int i = 0; i\
    \ < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n\
    \                if (count == 1) {\n                    sb.Append('_');\n    \
    \            }\n            } else {\n                if (count > 2) {\n     \
    \               sb.Append('-');\n                } else {\n                  \
    \  for (int j = 0; j < count; j++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                count = 0;\n      \
    \          sb.Append(text[i]);\n            }\n        }\n        if (count >\
    \ 2) {\n            sb.Append('-');\n        } else {\n            for (int j\
    \ = 0; j < count; j++) {\n                sb.Append('_');\n            }\n   \
    \     }\n        return sb.ToString();", "        // TODO: Implement this method\n\
    \        //throw new NotImplementedException();\n        string result = \"\"\
    ;\n        int count = 0;\n        for (int i = 0; i < text.Length; i++)\n   \
    \     {\n            if (text[i] == ' ')\n            {\n                count++;\n\
    \                if (count > 2)\n                {\n                    result\
    \ += '-';\n                    count = 0;\n                }\n               \
    \ else\n                {\n                    result += '_';\n              \
    \  }\n            }\n            else\n            {\n                result +=\
    \ text[i];\n                count = 0;\n            }\n        }\n        return\
    \ result;", "        var sb = new StringBuilder();\n        var spaces = 0;\n\
    \        foreach (var c in text) {\n            if (c == ' ') {\n            \
    \    spaces++;\n            } else {\n                if (spaces > 2) {\n    \
    \                sb.Append('-');\n                } else {\n                 \
    \   for (int i = 0; i < spaces; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                spaces = 0;\n     \
    \           sb.Append(c);\n            }\n        }\n        if (spaces > 2) {\n\
    \            sb.Append('-');\n        } else {\n            for (int i = 0; i\
    \ < spaces; i++) {\n                sb.Append('_');\n            }\n        }\n\
    \        return sb.ToString();", "        var sb = new StringBuilder();\n    \
    \    var spaces = 0;\n        foreach (var ch in text) {\n            if (ch ==\
    \ ' ') {\n                spaces++;\n            } else {\n                if\
    \ (spaces > 2) {\n                    sb.Append('-');\n                } else\
    \ {\n                    for (int i = 0; i < spaces; i++) {\n                \
    \        sb.Append('_');\n                    }\n                }\n         \
    \       spaces = 0;\n                sb.Append(ch);\n            }\n        }\n\
    \        if (spaces > 2) {\n            sb.Append('-');\n        } else {\n  \
    \          for (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", "        var sb = new\
    \ StringBuilder();\n        var lastSpace = false;\n        var consecutiveSpaces\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           consecutiveSpaces++;\n                if (consecutiveSpaces > 2) {\n\
    \                    if (!lastSpace) {\n                        sb.Append('-');\n\
    \                        lastSpace = true;\n                    }\n          \
    \      } else {\n                    sb.Append('_');\n                    lastSpace\
    \ = true;\n                }\n            } else {\n                consecutiveSpaces\
    \ = 0;\n                sb.Append(c);\n                lastSpace = false;\n  \
    \          }\n        }\n        return sb.ToString();", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        string\
    \ result = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length;\
    \ i++)\n        {\n            if (text[i] == ' ')\n            {\n          \
    \      count++;\n                if (count == 1)\n                {\n        \
    \            result += \"_\";\n                }\n                else if (count\
    \ == 2)\n                {\n                    result += \"-\";\n           \
    \     }\n            }\n            else\n            {\n                count\
    \ = 0;\n                result += text[i];\n            }\n        }\n       \
    \ return result;", "        var sb = new StringBuilder();\n        var spaces\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           spaces++;\n            } else {\n                if (spaces == 1)\
    \ {\n                    sb.Append('_');\n                } else if (spaces >\
    \ 1) {\n                    sb.Append('-');\n                }\n             \
    \   sb.Append(c);\n                spaces = 0;\n            }\n        }\n   \
    \     if (spaces == 1) {\n            sb.Append('_');\n        } else if (spaces\
    \ > 1) {\n            sb.Append('-');\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 2) {\n                   \
    \ sb.Append('-');\n                } else {\n                    for (int i =\
    \ 0; i < spaces; i++) {\n                        sb.Append('_');\n           \
    \         }\n                }\n                spaces = 0;\n                sb.Append(c);\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int i = 0; i < spaces; i++) {\n          \
    \      sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 2) {\n                   \
    \ sb.Append('-');\n                } else {\n                    for (int i =\
    \ 0; i < spaces; i++) {\n                        sb.Append('_');\n           \
    \         }\n                }\n                spaces = 0;\n                sb.Append(c);\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int i = 0; i < spaces; i++) {\n          \
    \      sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var lastChar = ' ';\n        var\
    \ spaceCount = 0;\n        foreach (var c in text) {\n            if (c == ' ')\
    \ {\n                spaceCount++;\n                if (spaceCount > 2) {\n  \
    \                  sb.Append('-');\n                    spaceCount = 0;\n    \
    \            }\n            } else {\n                if (spaceCount > 0) {\n\
    \                    sb.Append('_');\n                    spaceCount = 0;\n  \
    \              }\n                sb.Append(c);\n            }\n        }\n  \
    \      if (spaceCount > 0) {\n            sb.Append('_');\n        }\n       \
    \ return sb.ToString();", "        // TODO: Implement this method\n        //throw\
    \ new NotImplementedException();\n        string result = \"\";\n        int count\
    \ = 0;\n        for (int i = 0; i < text.Length; i++)\n        {\n           \
    \ if (text[i] == ' ')\n            {\n                count++;\n             \
    \   if (count == 1)\n                {\n                    result += '_';\n \
    \               }\n                else if (count == 2)\n                {\n \
    \                   result += '-';\n                }\n            }\n       \
    \     else\n            {\n                count = 0;\n                result\
    \ += text[i];\n            }\n        }\n        return result;", "        //\
    \ TODO: Implement this method\n        //throw new NotImplementedException();\n\
    \        StringBuilder sb = new StringBuilder();\n        int i = 0;\n       \
    \ while (i < text.Length) {\n            if (text[i] == ' ') {\n             \
    \   sb.Append('_');\n                i++;\n                while (i < text.Length\
    \ && text[i] == ' ') {\n                    sb.Append('-');\n                \
    \    i++;\n                }\n            } else {\n                sb.Append(text[i]);\n\
    \                i++;\n            }\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var spaceCount = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n\
    \                if (spaceCount == 1) {\n                    sb.Append('_');\n\
    \                }\n            } else {\n                if (spaceCount > 2)\
    \ {\n                    sb.Append('-');\n                } else if (spaceCount\
    \ == 2) {\n                    sb.Append('_');\n                    sb.Append('_');\n\
    \                }\n                spaceCount = 0;\n                sb.Append(c);\n\
    \            }\n        }\n        if (spaceCount > 2) {\n            sb.Append('-');\n\
    \        } else if (spaceCount == 2) {\n            sb.Append('_');\n        \
    \    sb.Append('_');\n        }\n        return sb.ToString();", "        var\
    \ sb = new StringBuilder();\n        var spaces = 0;\n        foreach (var c in\
    \ text) {\n            if (c == ' ') {\n                spaces++;\n          \
    \  } else {\n                if (spaces > 2) {\n                    sb.Append('-');\n\
    \                } else {\n                    sb.Append('_', spaces);\n     \
    \           }\n                spaces = 0;\n                sb.Append(c);\n  \
    \          }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            sb.Append('_', spaces);\n        }\n        return\
    \ sb.ToString();", "        // TODO: Implement this method\n        //throw new\
    \ NotImplementedException();\n        StringBuilder sb = new StringBuilder();\n\
    \        int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n   \
    \         if (text[i] == ' ') {\n                count++;\n                if\
    \ (count == 1) {\n                    sb.Append('_');\n                }\n   \
    \             else if (count > 2) {\n                    sb.Append('-');\n   \
    \             }\n            }\n            else {\n                count = 0;\n\
    \                sb.Append(text[i]);\n            }\n        }\n        return\
    \ sb.ToString();", "        // TODO: Implement this method\n        //throw new\
    \ NotImplementedException();\n        string result = \"\";\n        int count\
    \ = 0;\n        for (int i = 0; i < text.Length; i++)\n        {\n           \
    \ if (text[i] == ' ')\n            {\n                count++;\n             \
    \   if (count > 2)\n                {\n                    result += '-';\n  \
    \                  count = 0;\n                }\n                else\n     \
    \           {\n                    result += '_';\n                }\n       \
    \     }\n            else\n            {\n                result += text[i];\n\
    \                count = 0;\n            }\n        }\n        return result;",
  '        return text.Replace(" ", "_").Replace("__", "-");', "        StringBuilder\
    \ sb = new StringBuilder();\n        bool space = false;\n        for (int i =\
    \ 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n            \
    \    if (space) {\n                    sb.Append('-');\n                } else\
    \ {\n                    sb.Append('_');\n                    space = true;\n\
    \                }\n            } else {\n                sb.Append(text[i]);\n\
    \                space = false;\n            }\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var prev = ' ';\n        var count\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           if (prev == ' ') {\n                    count++;\n               \
    \ } else {\n                    count = 1;\n                }\n            } else\
    \ {\n                if (count > 2) {\n                    sb.Append('-');\n \
    \               } else {\n                    sb.Append('_', count);\n       \
    \         }\n                count = 0;\n            }\n            sb.Append(c);\n\
    \            prev = c;\n        }\n        if (count > 2) {\n            sb.Append('-');\n\
    \        } else {\n            sb.Append('_', count);\n        }\n        return\
    \ sb.ToString();", "        var sb = new StringBuilder();\n        var spaces\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           spaces++;\n            } else {\n                if (spaces > 2) {\n\
    \                    sb.Append('-');\n                } else {\n             \
    \       for (int i = 0; i < spaces; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                spaces = 0;\n     \
    \           sb.Append(c);\n            }\n        }\n        if (spaces > 2) {\n\
    \            sb.Append('-');\n        } else {\n            for (int i = 0; i\
    \ < spaces; i++) {\n                sb.Append('_');\n            }\n        }\n\
    \        return sb.ToString();", "        var sb = new StringBuilder();\n    \
    \    var spaces = 0;\n        foreach (var c in text) {\n            if (c ==\
    \ ' ') {\n                spaces++;\n            } else {\n                if\
    \ (spaces > 2) {\n                    sb.Append('-');\n                } else\
    \ {\n                    for (int i = 0; i < spaces; i++) {\n                \
    \        sb.Append('_');\n                    }\n                }\n         \
    \       spaces = 0;\n                sb.Append(c);\n            }\n        }\n\
    \        if (spaces > 2) {\n            sb.Append('-');\n        } else {\n  \
    \          for (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", '        return text.Replace("
    ", "_").Replace("__", "-");', "        var sb = new StringBuilder();\n       \
    \ var spaces = 0;\n        foreach (var c in text) {\n            if (c == ' ')\
    \ {\n                spaces++;\n            } else {\n                if (spaces\
    \ > 2) {\n                    sb.Append('-');\n                } else {\n    \
    \                for (int i = 0; i < spaces; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                spaces = 0;\n     \
    \           sb.Append(c);\n            }\n        }\n        if (spaces > 2) {\n\
    \            sb.Append('-');\n        } else {\n            for (int i = 0; i\
    \ < spaces; i++) {\n                sb.Append('_');\n            }\n        }\n\
    \        return sb.ToString();", "        // TODO: Implement this method\n   \
    \     //throw new NotImplementedException();\n        StringBuilder sb = new StringBuilder();\n\
    \        int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n   \
    \         if (text[i] == ' ') {\n                count++;\n                if\
    \ (count > 2) {\n                    sb.Append('-');\n                    count\
    \ = 0;\n                }\n            } else {\n                if (count > 0)\
    \ {\n                    sb.Append('_', count);\n                    count = 0;\n\
    \                }\n                sb.Append(text[i]);\n            }\n     \
    \   }\n        if (count > 0) {\n            sb.Append('_', count);\n        }\n\
    \        return sb.ToString();", "        // TODO: implement this method\n   \
    \     //throw new NotImplementedException();\n        string result = \"\";\n\
    \        int count = 0;\n        for (int i = 0; i < text.Length; i++)\n     \
    \   {\n            if (text[i] == ' ')\n            {\n                count++;\n\
    \                if (count == 1)\n                {\n                    result\
    \ += '_';\n                }\n                else if (count == 2)\n         \
    \       {\n                    result += '-';\n                }\n           \
    \ }\n            else\n            {\n                count = 0;\n           \
    \     result += text[i];\n            }\n        }\n        return result;", " \
    \       // TODO: Implement this method\n        //throw new NotImplementedException();\n\
    \        return text.Replace(\" \", \"_\").Replace(\"__\", \"-\");", "       \
    \ var result = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces == 1) {\n                  \
    \  result.Append('_');\n                } else if (spaces > 1) {\n           \
    \         result.Append('-');\n                }\n                result.Append(c);\n\
    \                spaces = 0;\n            }\n        }\n        if (spaces ==\
    \ 1) {\n            result.Append('_');\n        } else if (spaces > 1) {\n  \
    \          result.Append('-');\n        }\n        return result.ToString();",
  "        // TODO: Implement this method\n        //throw new NotImplementedException();\n\
    \        string result = \"\";\n        int count = 0;\n        for (int i = 0;\
    \ i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n        \
    \    {\n                count++;\n                if (count == 1)\n          \
    \      {\n                    result += '_';\n                }\n            \
    \    else if (count == 2)\n                {\n                    result += '-';\n\
    \                }\n            }\n            else\n            {\n         \
    \       count = 0;\n                result += text[i];\n            }\n      \
    \  }\n        return result;", "        string result = \"\";\n        int count\
    \ = 0;\n        for (int i = 0; i < text.Length; i++) {\n            if (text[i]\
    \ == ' ') {\n                count++;\n                if (count == 1) {\n   \
    \                 result += '_';\n                }\n            } else {\n  \
    \              if (count > 2) {\n                    result += '-';\n        \
    \        } else {\n                    for (int j = 0; j < count; j++) {\n   \
    \                     result += '_';\n                    }\n                }\n\
    \                count = 0;\n                result += text[i];\n            }\n\
    \        }\n        if (count > 2) {\n            result += '-';\n        } else\
    \ {\n            for (int j = 0; j < count; j++) {\n                result +=\
    \ '_';\n            }\n        }\n        return result;", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        string\
    \ result = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length;\
    \ i++)\n        {\n            if (text[i] == ' ')\n            {\n          \
    \      count++;\n                if (count == 1)\n                {\n        \
    \            result += '_';\n                }\n                else if (count\
    \ == 2)\n                {\n                    result += '-';\n             \
    \   }\n            }\n            else\n            {\n                count =\
    \ 0;\n                result += text[i];\n            }\n        }\n        return\
    \ result;", "        // TODO: Implement this method\n        //throw new NotImplementedException();\n\
    \        string result = \"\";\n        int count = 0;\n        for (int i = 0;\
    \ i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n        \
    \    {\n                count++;\n                if (count == 1)\n          \
    \      {\n                    result += \"_\";\n                }\n          \
    \      else if (count == 2)\n                {\n                    result +=\
    \ \"-\";\n                }\n            }\n            else\n            {\n\
    \                count = 0;\n                result += text[i];\n            }\n\
    \        }\n        return result;", "        StringBuilder sb = new StringBuilder();\n\
    \        int spaces = 0;\n        for (int i = 0; i < text.Length; i++) {\n  \
    \          if (text[i] == ' ') {\n                spaces++;\n            } else\
    \ {\n                if (spaces > 2) {\n                    sb.Append('-');\n\
    \                } else {\n                    for (int j = 0; j < spaces; j++)\
    \ {\n                        sb.Append('_');\n                    }\n        \
    \        }\n                spaces = 0;\n                sb.Append(text[i]);\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int j = 0; j < spaces; j++) {\n          \
    \      sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 2) {\n                   \
    \ sb.Append('-');\n                } else {\n                    for (int i =\
    \ 0; i < spaces; i++) {\n                        sb.Append('_');\n           \
    \         }\n                }\n                spaces = 0;\n                sb.Append(c);\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int i = 0; i < spaces; i++) {\n          \
    \      sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 2) {\n                   \
    \ sb.Append('-');\n                } else {\n                    for (int i =\
    \ 0; i < spaces; i++) {\n                        sb.Append('_');\n           \
    \         }\n                }\n                spaces = 0;\n                sb.Append(c);\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int i = 0; i < spaces; i++) {\n          \
    \      sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        // TODO: Implement this method\n        //throw new NotImplementedException();\n\
    \        string result = \"\";\n        int count = 0;\n        for (int i = 0;\
    \ i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n        \
    \    {\n                count++;\n                if (count == 1)\n          \
    \      {\n                    result += '_';\n                }\n            \
    \    else if (count == 2)\n                {\n                    result += '-';\n\
    \                }\n            }\n            else\n            {\n         \
    \       count = 0;\n                result += text[i];\n            }\n      \
    \  }\n        return result;", "        var sb = new StringBuilder();\n      \
    \  var spaces = 0;\n        foreach (var c in text) {\n            if (c == '\
    \ ') {\n                spaces++;\n            } else {\n                if (spaces\
    \ > 2) {\n                    sb.Append('-');\n                } else {\n    \
    \                for (int i = 0; i < spaces; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                spaces = 0;\n     \
    \           sb.Append(c);\n            }\n        }\n        if (spaces > 2) {\n\
    \            sb.Append('-');\n        } else {\n            for (int i = 0; i\
    \ < spaces; i++) {\n                sb.Append('_');\n            }\n        }\n\
    \        return sb.ToString();", "        var result = new StringBuilder();\n\
    \        var spaces = 0;\n        foreach (var c in text) {\n            if (c\
    \ == ' ') {\n                spaces++;\n            } else {\n               \
    \ if (spaces > 2) {\n                    result.Append('-');\n               \
    \ } else {\n                    result.Append('_', spaces);\n                }\n\
    \                spaces = 0;\n                result.Append(c);\n            }\n\
    \        }\n        if (spaces > 2) {\n            result.Append('-');\n     \
    \   } else {\n            result.Append('_', spaces);\n        }\n        return\
    \ result.ToString();", "        var sb = new StringBuilder();\n        var lastSpace\
    \ = false;\n        var consecutiveSpaces = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                consecutiveSpaces++;\n     \
    \           if (consecutiveSpaces > 2) {\n                    if (!lastSpace)\
    \ {\n                        sb.Append('-');\n                        lastSpace\
    \ = true;\n                    }\n                } else {\n                 \
    \   sb.Append('_');\n                    lastSpace = true;\n                }\n\
    \            } else {\n                consecutiveSpaces = 0;\n              \
    \  sb.Append(c);\n                lastSpace = false;\n            }\n        }\n\
    \        return sb.ToString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n   \
    \         if (text[i] == ' ') {\n                count++;\n                if\
    \ (count > 2) {\n                    sb.Append('-');\n                    count\
    \ = 0;\n                }\n            } else {\n                if (count > 0)\
    \ {\n                    sb.Append('_', count);\n                    count = 0;\n\
    \                }\n                sb.Append(text[i]);\n            }\n     \
    \   }\n        if (count > 0) {\n            sb.Append('_', count);\n        }\n\
    \        return sb.ToString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n   \
    \         if (text[i] == ' ') {\n                count++;\n                if\
    \ (count > 2) {\n                    sb.Append('-');\n                    count\
    \ = 0;\n                }\n            } else {\n                if (count > 0)\
    \ {\n                    sb.Append('_', count);\n                    count = 0;\n\
    \                }\n                sb.Append(text[i]);\n            }\n     \
    \   }\n        if (count > 0) {\n            sb.Append('_', count);\n        }\n\
    \        return sb.ToString();", "        var sb = new StringBuilder();\n    \
    \    var spaceCount = 0;\n        foreach (var c in text) {\n            if (c\
    \ == ' ') {\n                spaceCount++;\n                if (spaceCount ==\
    \ 1) {\n                    sb.Append('_');\n                }\n            }\
    \ else {\n                if (spaceCount > 2) {\n                    sb.Append('-');\n\
    \                } else {\n                    for (int i = 0; i < spaceCount;\
    \ i++) {\n                        sb.Append('_');\n                    }\n   \
    \             }\n                spaceCount = 0;\n                sb.Append(c);\n\
    \            }\n        }\n        if (spaceCount > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int i = 0; i < spaceCount; i++) {\n      \
    \          sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 2) {\n                   \
    \ sb.Append('-');\n                } else {\n                    for (int i =\
    \ 0; i < spaces; i++) {\n                        sb.Append('_');\n           \
    \         }\n                }\n                spaces = 0;\n                sb.Append(c);\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int i = 0; i < spaces; i++) {\n          \
    \      sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 2) {\n                   \
    \ sb.Append('-');\n                } else {\n                    for (int i =\
    \ 0; i < spaces; i++) {\n                        sb.Append('_');\n           \
    \         }\n                }\n                spaces = 0;\n                sb.Append(c);\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int i = 0; i < spaces; i++) {\n          \
    \      sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        // TODO: Implement this method\n        //throw new NotImplementedException();\n\
    \        string result = \"\";\n        int count = 0;\n        for (int i = 0;\
    \ i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n        \
    \    {\n                count++;\n                if (count > 2)\n           \
    \     {\n                    result += '-';\n                    count = 0;\n\
    \                }\n                else\n                {\n                \
    \    result += '_';\n                }\n            }\n            else\n    \
    \        {\n                result += text[i];\n                count = 0;\n \
    \           }\n        }\n        return result;", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        return\
    \ text.Replace(\" \", \"_\").Replace(\"__\", \"_-\");", "        var sb = new\
    \ StringBuilder();\n        var lastSpace = false;\n        var consecutiveSpaces\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           consecutiveSpaces++;\n                lastSpace = true;\n        \
    \    } else {\n                if (lastSpace) {\n                    if (consecutiveSpaces\
    \ > 2) {\n                        sb.Append('-');\n                    } else\
    \ {\n                        for (int i = 0; i < consecutiveSpaces; i++) {\n \
    \                           sb.Append('_');\n                        }\n     \
    \               }\n                    consecutiveSpaces = 0;\n              \
    \  }\n                lastSpace = false;\n                sb.Append(c);\n    \
    \        }\n        }\n        if (lastSpace) {\n            if (consecutiveSpaces\
    \ > 2) {\n                sb.Append('-');\n            } else {\n            \
    \    for (int i = 0; i < consecutiveSpaces; i++) {\n                    sb.Append('_');\n\
    \                }\n            }\n        }\n        return sb.ToString();",
  "        // TODO: Implement this method\n        //throw new NotImplementedException();\n\
    \        string result = \"\";\n        int count = 0;\n        for (int i = 0;\
    \ i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n        \
    \    {\n                count++;\n                if (count > 2)\n           \
    \     {\n                    result += '-';\n                    count = 0;\n\
    \                }\n                else\n                {\n                \
    \    result += '_';\n                }\n            }\n            else\n    \
    \        {\n                result += text[i];\n                count = 0;\n \
    \           }\n        }\n        return result;", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        string\
    \ result = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length;\
    \ i++)\n        {\n            if (text[i] == ' ')\n            {\n          \
    \      count++;\n                if (count > 2)\n                {\n         \
    \           result += '-';\n                    count = 0;\n                }\n\
    \                else\n                {\n                    result += '_';\n\
    \                }\n            }\n            else\n            {\n         \
    \       result += text[i];\n                count = 0;\n            }\n      \
    \  }\n        return result;", "        var sb = new StringBuilder();\n      \
    \  var prev = ' ';\n        var count = 0;\n        foreach (var c in text) {\n\
    \            if (c == ' ') {\n                if (prev == ' ') {\n           \
    \         count++;\n                } else {\n                    count = 1;\n\
    \                }\n            } else {\n                if (count > 2) {\n \
    \                   sb.Append('-');\n                } else {\n              \
    \      sb.Append('_', count);\n                }\n                count = 0;\n\
    \            }\n            sb.Append(c);\n            prev = c;\n        }\n\
    \        if (count > 2) {\n            sb.Append('-');\n        } else {\n   \
    \         sb.Append('_', count);\n        }\n        return sb.ToString();", " \
    \       var result = new StringBuilder();\n        var spaceCount = 0;\n     \
    \   foreach (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n\
    \                if (spaceCount == 1) {\n                    result.Append('_');\n\
    \                }\n            } else {\n                if (spaceCount > 2)\
    \ {\n                    result.Append('-');\n                } else {\n     \
    \               for (int i = 0; i < spaceCount; i++) {\n                     \
    \   result.Append('_');\n                    }\n                }\n          \
    \      spaceCount = 0;\n                result.Append(c);\n            }\n   \
    \     }\n        if (spaceCount > 2) {\n            result.Append('-');\n    \
    \    } else {\n            for (int i = 0; i < spaceCount; i++) {\n          \
    \      result.Append('_');\n            }\n        }\n        return result.ToString();",
  "        var sb = new StringBuilder();\n        var spaces = 0;\n        for (int\
    \ i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n        \
    \        spaces++;\n            } else {\n                if (spaces > 2) {\n\
    \                    sb.Append('-');\n                } else {\n             \
    \       for (int j = 0; j < spaces; j++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                spaces = 0;\n     \
    \           sb.Append(text[i]);\n            }\n        }\n        if (spaces\
    \ > 2) {\n            sb.Append('-');\n        } else {\n            for (int\
    \ j = 0; j < spaces; j++) {\n                sb.Append('_');\n            }\n\
    \        }\n        return sb.ToString();", "        // TODO: Implement this method\n\
    \        //throw new NotImplementedException();\n        string result = \"\"\
    ;\n        int count = 0;\n        for (int i = 0; i < text.Length; i++)\n   \
    \     {\n            if (text[i] == ' ')\n            {\n                count++;\n\
    \                if (count == 1)\n                {\n                    result\
    \ += \"_\";\n                }\n                else if (count > 2)\n        \
    \        {\n                    result += \"-\";\n                }\n        \
    \    }\n            else\n            {\n                count = 0;\n        \
    \        result += text[i];\n            }\n        }\n        return result;",
  "        StringBuilder sb = new StringBuilder();\n        int count = 0;\n     \
    \   for (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n\
    \                count++;\n                if (count == 1) {\n               \
    \     sb.Append('_');\n                }\n            } else {\n             \
    \   if (count > 2) {\n                    sb.Append('-');\n                } else\
    \ {\n                    for (int j = 0; j < count; j++) {\n                 \
    \       sb.Append('_');\n                    }\n                }\n          \
    \      count = 0;\n                sb.Append(text[i]);\n            }\n      \
    \  }\n        if (count > 2) {\n            sb.Append('-');\n        } else {\n\
    \            for (int j = 0; j < count; j++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", "        var result\
    \ = new StringBuilder();\n        var spaces = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                spaces++;\n            } else\
    \ {\n                if (spaces == 1) {\n                    result.Append('_');\n\
    \                } else if (spaces > 1) {\n                    result.Append('-');\n\
    \                }\n                result.Append(c);\n                spaces\
    \ = 0;\n            }\n        }\n        if (spaces == 1) {\n            result.Append('_');\n\
    \        } else if (spaces > 1) {\n            result.Append('-');\n        }\n\
    \        return result.ToString();", "        var sb = new StringBuilder();\n\
    \        var last = ' ';\n        var count = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                count++;\n                if\
    \ (count == 2) {\n                    sb.Append('-');\n                    count\
    \ = 0;\n                }\n            } else {\n                if (last == '\
    \ ') {\n                    sb.Append('_');\n                }\n             \
    \   sb.Append(c);\n                count = 0;\n            }\n            last\
    \ = c;\n        }\n        if (last == ' ') {\n            sb.Append('_');\n \
    \       }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        var prev = ' ';\n        var count = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                if (prev == ' ') {\n       \
    \             count++;\n                } else {\n                    count =\
    \ 1;\n                }\n            } else {\n                if (count > 2)\
    \ {\n                    sb.Append('-');\n                } else {\n         \
    \           for (int i = 0; i < count; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                count = 0;\n      \
    \      }\n            prev = c;\n            sb.Append(c);\n        }\n      \
    \  return sb.ToString();", "        var sb = new StringBuilder();\n        var\
    \ count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n\
    \                count++;\n                if (count == 2) {\n               \
    \     sb.Append('-');\n                    count = 0;\n                }\n   \
    \         } else {\n                if (count == 1) {\n                    sb.Append('_');\n\
    \                }\n                count = 0;\n                sb.Append(c);\n\
    \            }\n        }\n        if (count == 1) {\n            sb.Append('_');\n\
    \        }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        var spaces = 0;\n        foreach (var ch in text) {\n            if (ch\
    \ == ' ') {\n                spaces++;\n            } else {\n               \
    \ if (spaces > 2) {\n                    sb.Append('-');\n                } else\
    \ {\n                    for (int i = 0; i < spaces; i++) {\n                \
    \        sb.Append('_');\n                    }\n                }\n         \
    \       spaces = 0;\n                sb.Append(ch);\n            }\n        }\n\
    \        if (spaces > 2) {\n            sb.Append('-');\n        } else {\n  \
    \          for (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        StringBuilder\
    \ sb = new StringBuilder();\n        int count = 0;\n        for (int i = 0; i\
    \ < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n\
    \                if (count > 2) {\n                    sb.Append('-');\n     \
    \               count = 0;\n                }\n            } else {\n        \
    \        if (count > 0) {\n                    sb.Append('_', count);\n      \
    \              count = 0;\n                }\n                sb.Append(text[i]);\n\
    \            }\n        }\n        if (count > 0) {\n            sb.Append('_',\
    \ count);\n        }\n        return sb.ToString();", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        StringBuilder\
    \ sb = new StringBuilder();\n        int count = 0;\n        for (int i = 0; i\
    \ < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n\
    \                if (count == 1) {\n                    sb.Append('_');\n    \
    \            }\n                else if (count > 2) {\n                    sb.Append('-');\n\
    \                }\n            }\n            else {\n                count =\
    \ 0;\n                sb.Append(text[i]);\n            }\n        }\n        return\
    \ sb.ToString();", "        string result = \"\";\n        int count = 0;\n  \
    \      for (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ')\
    \ {\n                count++;\n                if (count == 1) {\n           \
    \         result += \"_\";\n                }\n            } else {\n        \
    \        if (count > 2) {\n                    result += \"-\";\n            \
    \    } else {\n                    for (int j = 0; j < count; j++) {\n       \
    \                 result += \"_\";\n                    }\n                }\n\
    \                count = 0;\n                result += text[i];\n            }\n\
    \        }\n        if (count > 2) {\n            result += \"-\";\n        }\
    \ else {\n            for (int j = 0; j < count; j++) {\n                result\
    \ += \"_\";\n            }\n        }\n        return result;", "        var sb\
    \ = new StringBuilder();\n        var lastSpace = false;\n        foreach (var\
    \ c in text) {\n            if (c == ' ') {\n                if (lastSpace) {\n\
    \                    sb.Append('-');\n                } else {\n             \
    \       sb.Append('_');\n                }\n                lastSpace = true;\n\
    \            } else {\n                sb.Append(c);\n                lastSpace\
    \ = false;\n            }\n        }\n        return sb.ToString();", "      \
    \  var sb = new StringBuilder();\n        bool lastWasSpace = false;\n       \
    \ bool lastWasDoubleSpace = false;\n        foreach (var c in text) {\n      \
    \      if (c == ' ') {\n                if (lastWasSpace) {\n                \
    \    if (!lastWasDoubleSpace) {\n                        sb.Append('-');\n   \
    \                     lastWasDoubleSpace = true;\n                    }\n    \
    \            } else {\n                    sb.Append('_');\n                 \
    \   lastWasSpace = true;\n                }\n            } else {\n          \
    \      sb.Append(c);\n                lastWasSpace = false;\n                lastWasDoubleSpace\
    \ = false;\n            }\n        }\n        return sb.ToString();", "      \
    \  var result = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 2) {\n                   \
    \ result.Append('-');\n                } else {\n                    result.Append('_',\
    \ spaces);\n                }\n                spaces = 0;\n                result.Append(c);\n\
    \            }\n        }\n        if (spaces > 2) {\n            result.Append('-');\n\
    \        } else {\n            result.Append('_', spaces);\n        }\n      \
    \  return result.ToString();", "        var sb = new StringBuilder();\n      \
    \  var prev = ' ';\n        var count = 0;\n        foreach (var c in text) {\n\
    \            if (c == ' ') {\n                count++;\n                if (count\
    \ == 1) {\n                    sb.Append('_');\n                }\n          \
    \  } else {\n                if (count > 2) {\n                    sb.Append('-');\n\
    \                } else if (count == 2) {\n                    sb.Append('_');\n\
    \                    sb.Append('_');\n                }\n                sb.Append(c);\n\
    \                count = 0;\n            }\n        }\n        if (count > 2)\
    \ {\n            sb.Append('-');\n        } else if (count == 2) {\n         \
    \   sb.Append('_');\n            sb.Append('_');\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var spaceCount = 0;\n        for\
    \ (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n   \
    \             spaceCount++;\n            } else {\n                if (spaceCount\
    \ > 2) {\n                    sb.Append('-');\n                } else {\n    \
    \                for (int j = 0; j < spaceCount; j++) {\n                    \
    \    sb.Append('_');\n                    }\n                }\n             \
    \   spaceCount = 0;\n                sb.Append(text[i]);\n            }\n    \
    \    }\n        if (spaceCount > 2) {\n            sb.Append('-');\n        }\
    \ else {\n            for (int j = 0; j < spaceCount; j++) {\n               \
    \ sb.Append('_');\n            }\n        }\n        return sb.ToString();", " \
    \       // TODO: Implement this method\n        //throw new NotImplementedException();\n\
    \        string result = \"\";\n        int count = 0;\n        for (int i = 0;\
    \ i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n        \
    \    {\n                count++;\n                if (count == 1)\n          \
    \      {\n                    result += '_';\n                }\n            \
    \    else if (count > 2)\n                {\n                    result += '-';\n\
    \                }\n            }\n            else\n            {\n         \
    \       count = 0;\n                result += text[i];\n            }\n      \
    \  }\n        return result;", "        var sb = new StringBuilder();\n      \
    \  var spaces = 0;\n        foreach (var c in text) {\n            if (c == '\
    \ ') {\n                spaces++;\n            } else {\n                if (spaces\
    \ > 2) {\n                    sb.Append('-');\n                } else {\n    \
    \                for (int i = 0; i < spaces; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                spaces = 0;\n     \
    \           sb.Append(c);\n            }\n        }\n        if (spaces > 2) {\n\
    \            sb.Append('-');\n        } else {\n            for (int i = 0; i\
    \ < spaces; i++) {\n                sb.Append('_');\n            }\n        }\n\
    \        return sb.ToString();", "        StringBuilder sb = new StringBuilder();\n\
    \        bool space = false;\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                if (space) {\n                    sb.Append('-');\n\
    \                } else {\n                    sb.Append('_');\n             \
    \       space = true;\n                }\n            } else {\n             \
    \   sb.Append(c);\n                space = false;\n            }\n        }\n\
    \        return sb.ToString();", "        var sb = new StringBuilder();\n    \
    \    var lastSpace = false;\n        foreach (var c in text) {\n            if\
    \ (c == ' ') {\n                if (lastSpace) {\n                    sb.Append('-');\n\
    \                } else {\n                    sb.Append('_');\n             \
    \   }\n                lastSpace = true;\n            } else {\n             \
    \   sb.Append(c);\n                lastSpace = false;\n            }\n       \
    \ }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        var spaces = 0;\n        foreach (var c in text) {\n            if (c\
    \ == ' ') {\n                spaces++;\n            } else {\n               \
    \ if (spaces > 2) {\n                    sb.Append('-');\n                } else\
    \ {\n                    for (int i = 0; i < spaces; i++) {\n                \
    \        sb.Append('_');\n                    }\n                }\n         \
    \       spaces = 0;\n                sb.Append(c);\n            }\n        }\n\
    \        if (spaces > 2) {\n            sb.Append('-');\n        } else {\n  \
    \          for (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        StringBuilder\
    \ sb = new StringBuilder();\n        int count = 0;\n        for (int i = 0; i\
    \ < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n\
    \                if (count > 2) {\n                    sb.Append('-');\n     \
    \               count = 0;\n                }\n            } else {\n        \
    \        if (count > 0) {\n                    sb.Append('_', count);\n      \
    \              count = 0;\n                }\n                sb.Append(text[i]);\n\
    \            }\n        }\n        if (count > 0) {\n            sb.Append('_',\
    \ count);\n        }\n        return sb.ToString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        int count = 0;\n        for (int i = 0; i <\
    \ text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n\
    \                if (count > 2) {\n                    sb.Append('-');\n     \
    \               count = 0;\n                }\n            } else {\n        \
    \        if (count > 0) {\n                    sb.Append('_', count);\n      \
    \              count = 0;\n                }\n                sb.Append(text[i]);\n\
    \            }\n        }\n        if (count > 0) {\n            sb.Append('_',\
    \ count);\n        }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        var spaces = 0;\n        foreach (var c in text) {\n            if (c\
    \ == ' ') {\n                spaces++;\n            } else {\n               \
    \ if (spaces == 1) {\n                    sb.Append('_');\n                } else\
    \ if (spaces > 1) {\n                    sb.Append('-');\n                }\n\
    \                sb.Append(c);\n                spaces = 0;\n            }\n \
    \       }\n        if (spaces == 1) {\n            sb.Append('_');\n        }\
    \ else if (spaces > 1) {\n            sb.Append('-');\n        }\n        return\
    \ sb.ToString();", "        // TODO: Implement this method\n        //throw new\
    \ NotImplementedException();\n        string result = \"\";\n        int count\
    \ = 0;\n        for (int i = 0; i < text.Length; i++)\n        {\n           \
    \ if (text[i] == ' ')\n            {\n                count++;\n             \
    \   if (count == 1)\n                {\n                    result += '_';\n \
    \               }\n                else if (count > 2)\n                {\n  \
    \                  result += '-';\n                }\n            }\n        \
    \    else\n            {\n                count = 0;\n                result +=\
    \ text[i];\n            }\n        }\n        return result;", "        var sb\
    \ = new StringBuilder();\n        var lastChar = ' ';\n        var consecutiveSpaces\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           consecutiveSpaces++;\n                if (consecutiveSpaces > 2) {\n\
    \                    sb.Append('-');\n                    consecutiveSpaces =\
    \ 0;\n                }\n            } else {\n                if (consecutiveSpaces\
    \ > 0) {\n                    sb.Append('_');\n                    consecutiveSpaces\
    \ = 0;\n                }\n                sb.Append(c);\n            }\n    \
    \    }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        var spaceCount = 0;\n        foreach (var c in text) {\n            if\
    \ (c == ' ') {\n                spaceCount++;\n                if (spaceCount\
    \ == 1) {\n                    sb.Append('_');\n                }\n          \
    \  } else {\n                if (spaceCount > 1) {\n                    sb.Append('-');\n\
    \                }\n                sb.Append(c);\n                spaceCount\
    \ = 0;\n            }\n        }\n        return sb.ToString();", "        var\
    \ sb = new StringBuilder();\n        var spaces = 0;\n        foreach (var c in\
    \ text) {\n            if (c == ' ') {\n                spaces++;\n          \
    \  } else {\n                if (spaces > 2) {\n                    sb.Append('-');\n\
    \                } else {\n                    for (int i = 0; i < spaces; i++)\
    \ {\n                        sb.Append('_');\n                    }\n        \
    \        }\n                spaces = 0;\n                sb.Append(c);\n     \
    \       }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int i = 0; i < spaces; i++) {\n          \
    \      sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 2) {\n                   \
    \ sb.Append('-');\n                } else {\n                    for (int i =\
    \ 0; i < spaces; i++) {\n                        sb.Append('_');\n           \
    \         }\n                }\n                spaces = 0;\n                sb.Append(c);\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int i = 0; i < spaces; i++) {\n          \
    \      sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        // your code here\n        return \"\";", "        // TODO: Implement this\
    \ method\n        //throw new NotImplementedException();\n        StringBuilder\
    \ sb = new StringBuilder();\n        int count = 0;\n        for (int i = 0; i\
    \ < text.Length; i++) {\n            if (text[i] == ' ') {\n                count++;\n\
    \                if (count == 1) {\n                    sb.Append('_');\n    \
    \            }\n                else if (count > 2) {\n                    sb.Append('-');\n\
    \                }\n            }\n            else {\n                sb.Append(text[i]);\n\
    \                count = 0;\n            }\n        }\n        return sb.ToString();",
  "        // TODO: Implement this method\n        //throw new NotImplementedException();\n\
    \        string result = \"\";\n        int count = 0;\n        for (int i = 0;\
    \ i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n        \
    \    {\n                count++;\n                if (count == 1)\n          \
    \      {\n                    result += '_';\n                }\n            \
    \    else if (count == 2)\n                {\n                    result += '-';\n\
    \                }\n            }\n            else\n            {\n         \
    \       count = 0;\n                result += text[i];\n            }\n      \
    \  }\n        return result;", "        var sb = new StringBuilder();\n      \
    \  var spaces = 0;\n        foreach (var c in text) {\n            if (c == '\
    \ ') {\n                spaces++;\n            } else {\n                if (spaces\
    \ > 2) {\n                    sb.Append('-');\n                } else {\n    \
    \                for (int i = 0; i < spaces; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                spaces = 0;\n     \
    \           sb.Append(c);\n            }\n        }\n        if (spaces > 2) {\n\
    \            sb.Append('-');\n        } else {\n            for (int i = 0; i\
    \ < spaces; i++) {\n                sb.Append('_');\n            }\n        }\n\
    \        return sb.ToString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int spaces = 0;\n        foreach (char c in text) {\n            if (c\
    \ == ' ') {\n                spaces++;\n            } else {\n               \
    \ if (spaces == 1) {\n                    sb.Append('_');\n                } else\
    \ if (spaces > 1) {\n                    sb.Append('-');\n                }\n\
    \                sb.Append(c);\n                spaces = 0;\n            }\n \
    \       }\n        if (spaces == 1) {\n            sb.Append('_');\n        }\
    \ else if (spaces > 1) {\n            sb.Append('-');\n        }\n        return\
    \ sb.ToString();", "        var sb = new StringBuilder();\n        var spaces\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           spaces++;\n            } else {\n                if (spaces > 2) {\n\
    \                    sb.Append('-');\n                } else {\n             \
    \       for (int i = 0; i < spaces; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                spaces = 0;\n     \
    \           sb.Append(c);\n            }\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces == 1) {\n                  \
    \  sb.Append('_');\n                } else if (spaces > 1) {\n               \
    \     sb.Append('-');\n                }\n                sb.Append(c);\n    \
    \            spaces = 0;\n            }\n        }\n        if (spaces == 1) {\n\
    \            sb.Append('_');\n        } else if (spaces > 1) {\n            sb.Append('-');\n\
    \        }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        var spaces = 0;\n        foreach (var c in text) {\n            if (c\
    \ == ' ') {\n                spaces++;\n            } else {\n               \
    \ if (spaces > 2) {\n                    sb.Append('-');\n                } else\
    \ {\n                    for (int i = 0; i < spaces; i++) {\n                \
    \        sb.Append('_');\n                    }\n                }\n         \
    \       spaces = 0;\n                sb.Append(c);\n            }\n        }\n\
    \        if (spaces > 2) {\n            sb.Append('-');\n        } else {\n  \
    \          for (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        return\
    \ text.Replace(\" \", \"_\").Replace(\"__\", \"-\");", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        string\
    \ result = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length;\
    \ i++)\n        {\n            if (text[i] == ' ')\n            {\n          \
    \      count++;\n                if (count == 1)\n                {\n        \
    \            result += '_';\n                }\n                else if (count\
    \ == 2)\n                {\n                    result += '-';\n             \
    \   }\n            }\n            else\n            {\n                count =\
    \ 0;\n                result += text[i];\n            }\n        }\n        return\
    \ result;", "        var sb = new StringBuilder();\n        var spaces = 0;\n\
    \        foreach (var c in text) {\n            if (c == ' ') {\n            \
    \    spaces++;\n            } else {\n                if (spaces > 2) {\n    \
    \                sb.Append('-');\n                } else {\n                 \
    \   for (int i = 0; i < spaces; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                spaces = 0;\n     \
    \           sb.Append(c);\n            }\n        }\n        if (spaces > 2) {\n\
    \            sb.Append('-');\n        } else {\n            for (int i = 0; i\
    \ < spaces; i++) {\n                sb.Append('_');\n            }\n        }\n\
    \        return sb.ToString();", "        var sb = new StringBuilder();\n    \
    \    var spaces = 0;\n        foreach (var c in text) {\n            if (c ==\
    \ ' ') {\n                spaces++;\n            } else {\n                if\
    \ (spaces > 2) {\n                    sb.Append('-');\n                } else\
    \ {\n                    for (int i = 0; i < spaces; i++) {\n                \
    \        sb.Append('_');\n                    }\n                }\n         \
    \       spaces = 0;\n                sb.Append(c);\n            }\n        }\n\
    \        if (spaces > 2) {\n            sb.Append('-');\n        } else {\n  \
    \          for (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        string\
    \ result = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length;\
    \ i++)\n        {\n            if (text[i] == ' ')\n            {\n          \
    \      count++;\n                if (count == 1)\n                {\n        \
    \            result += '_';\n                }\n                else if (count\
    \ == 2)\n                {\n                    result += '-';\n             \
    \   }\n            }\n            else\n            {\n                count =\
    \ 0;\n                result += text[i];\n            }\n        }\n        return\
    \ result;", "        string result = \"\";\n        int count = 0;\n        for\
    \ (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n   \
    \             count++;\n                if (count > 2) {\n                   \
    \ result += '-';\n                    count = 0;\n                }\n        \
    \    } else {\n                if (count > 0) {\n                    result +=\
    \ '_';\n                    count = 0;\n                }\n                result\
    \ += text[i];\n            }\n        }\n        if (count > 0) {\n          \
    \  result += '_';\n        }\n        return result;", "        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        StringBuilder\
    \ sb = new StringBuilder();\n        bool lastWasSpace = false;\n        for (int\
    \ i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n        \
    \        if (lastWasSpace) {\n                    sb.Append('-');\n          \
    \      } else {\n                    sb.Append('_');\n                }\n    \
    \            lastWasSpace = true;\n            } else {\n                sb.Append(text[i]);\n\
    \                lastWasSpace = false;\n            }\n        }\n        return\
    \ sb.ToString();", "        var sb = new StringBuilder();\n        var spaces\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           spaces++;\n            } else {\n                if (spaces > 0) {\n\
    \                    if (spaces > 2) {\n                        sb.Append('-');\n\
    \                    } else {\n                        sb.Append('_', spaces);\n\
    \                    }\n                    spaces = 0;\n                }\n \
    \               sb.Append(c);\n            }\n        }\n        if (spaces >\
    \ 0) {\n            if (spaces > 2) {\n                sb.Append('-');\n     \
    \       } else {\n                sb.Append('_', spaces);\n            }\n   \
    \     }\n        return sb.ToString();", "        // TODO: Implement this method\n\
    \        //throw new NotImplementedException();\n        string result = \"\"\
    ;\n        int count = 0;\n        for (int i = 0; i < text.Length; i++)\n   \
    \     {\n            if (text[i] == ' ')\n            {\n                count++;\n\
    \                if (count > 2)\n                {\n                    result\
    \ += '-';\n                    count = 0;\n                }\n               \
    \ else\n                {\n                    result += '_';\n              \
    \  }\n            }\n            else\n            {\n                result +=\
    \ text[i];\n                count = 0;\n            }\n        }\n        return\
    \ result;", "        // TODO: Implement this method\n        //throw new NotImplementedException();\n\
    \        StringBuilder sb = new StringBuilder();\n        int count = 0;\n   \
    \     for (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ')\
    \ {\n                count++;\n                if (count > 2) {\n            \
    \        sb.Append('-');\n                    count = 0;\n                }\n\
    \            } else {\n                if (count == 1) {\n                   \
    \ sb.Append(' ');\n                } else if (count == 2) {\n                \
    \    sb.Append(\"__\");\n                }\n                count = 0;\n     \
    \           sb.Append(text[i]);\n            }\n        }\n        if (count ==\
    \ 1) {\n            sb.Append(' ');\n        } else if (count == 2) {\n      \
    \      sb.Append(\"__\");\n        }\n        return sb.ToString();", "      \
    \  var sb = new StringBuilder();\n        var spaceCount = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n\
    \                if (spaceCount == 1) {\n                    sb.Append('_');\n\
    \                }\n            } else {\n                if (spaceCount > 2)\
    \ {\n                    sb.Append('-');\n                } else {\n         \
    \           for (int i = 0; i < spaceCount; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                spaceCount = 0;\n \
    \               sb.Append(c);\n            }\n        }\n        if (spaceCount\
    \ > 2) {\n            sb.Append('-');\n        } else {\n            for (int\
    \ i = 0; i < spaceCount; i++) {\n                sb.Append('_');\n           \
    \ }\n        }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        var spaces = 0;\n        foreach (var c in text) {\n            if (c\
    \ == ' ') {\n                spaces++;\n            } else {\n               \
    \ if (spaces == 1) {\n                    sb.Append('_');\n                } else\
    \ if (spaces > 1) {\n                    sb.Append('-');\n                }\n\
    \                sb.Append(c);\n                spaces = 0;\n            }\n \
    \       }\n        if (spaces == 1) {\n            sb.Append('_');\n        }\
    \ else if (spaces > 1) {\n            sb.Append('-');\n        }\n        return\
    \ sb.ToString();", "        var sb = new StringBuilder();\n        var spaces\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           spaces++;\n            } else {\n                if (spaces > 2) {\n\
    \                    sb.Append('-');\n                } else {\n             \
    \       for (int i = 0; i < spaces; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                spaces = 0;\n     \
    \           sb.Append(c);\n            }\n        }\n        if (spaces > 2) {\n\
    \            sb.Append('-');\n        } else {\n            for (int i = 0; i\
    \ < spaces; i++) {\n                sb.Append('_');\n            }\n        }\n\
    \        return sb.ToString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n   \
    \         if (text[i] == ' ') {\n                count++;\n                if\
    \ (count > 2) {\n                    sb.Append('-');\n                    count\
    \ = 0;\n                }\n            } else {\n                if (count > 0)\
    \ {\n                    sb.Append('_', count);\n                    count = 0;\n\
    \                }\n                sb.Append(text[i]);\n            }\n     \
    \   }\n        if (count > 0) {\n            sb.Append('_', count);\n        }\n\
    \        return sb.ToString();", "        StringBuilder sb = new StringBuilder();\n\
    \        bool prevSpace = false;\n        int spaces = 0;\n        foreach (char\
    \ c in text) {\n            if (c == ' ') {\n                spaces++;\n     \
    \           if (spaces > 2) {\n                    if (!prevSpace) {\n       \
    \                 sb.Append('-');\n                        prevSpace = true;\n\
    \                    }\n                } else {\n                    sb.Append('_');\n\
    \                    prevSpace = true;\n                }\n            } else\
    \ {\n                sb.Append(c);\n                prevSpace = false;\n     \
    \           spaces = 0;\n            }\n        }\n        return sb.ToString();",
  "        StringBuilder sb = new StringBuilder();\n        int spaces = 0;\n    \
    \    for (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ')\
    \ {\n                spaces++;\n            } else {\n                if (spaces\
    \ > 2) {\n                    sb.Append('-');\n                } else {\n    \
    \                for (int j = 0; j < spaces; j++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                spaces = 0;\n     \
    \           sb.Append(text[i]);\n            }\n        }\n        if (spaces\
    \ > 2) {\n            sb.Append('-');\n        } else {\n            for (int\
    \ j = 0; j < spaces; j++) {\n                sb.Append('_');\n            }\n\
    \        }\n        return sb.ToString();", '        return text.Replace(" ",
    "_").Replace("__", "-");', "        StringBuilder sb = new StringBuilder();\n\
    \        bool space = false;\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                if (space) {\n                    sb.Append('-');\n\
    \                } else {\n                    sb.Append('_');\n             \
    \       space = true;\n                }\n            } else {\n             \
    \   sb.Append(c);\n                space = false;\n            }\n        }\n\
    \        return sb.ToString();", "        // TODO: implement this method\n   \
    \     //throw new NotImplementedException();\n        string result = \"\";\n\
    \        int count = 0;\n        for (int i = 0; i < text.Length; i++)\n     \
    \   {\n            if (text[i] == ' ')\n            {\n                count++;\n\
    \                if (count == 1)\n                {\n                    result\
    \ += '_';\n                }\n                else if (count == 2)\n         \
    \       {\n                    result += '-';\n                }\n           \
    \ }\n            else\n            {\n                count = 0;\n           \
    \     result += text[i];\n            }\n        }\n        return result;", " \
    \       var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var ch in text) {\n            if (ch == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 2) {\n                   \
    \ sb.Append('-');\n                } else {\n                    for (int i =\
    \ 0; i < spaces; i++) {\n                        sb.Append('_');\n           \
    \         }\n                }\n                spaces = 0;\n                sb.Append(ch);\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int i = 0; i < spaces; i++) {\n          \
    \      sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        // TODO: Implement this method\n        //throw new NotImplementedException();\n\
    \        string result = \"\";\n        int count = 0;\n        for (int i = 0;\
    \ i < text.Length; i++)\n        {\n            if (text[i] == ' ')\n        \
    \    {\n                count++;\n                if (count > 2)\n           \
    \     {\n                    result += '-';\n                    count = 0;\n\
    \                }\n                else\n                {\n                \
    \    result += '_';\n                }\n            }\n            else\n    \
    \        {\n                result += text[i];\n                count = 0;\n \
    \           }\n        }\n        return result;", "        // TODO: implement\
    \ this method\n        //throw new NotImplementedException();\n        string\
    \ result = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length;\
    \ i++)\n        {\n            if (text[i] == ' ')\n            {\n          \
    \      count++;\n                if (count == 1)\n                {\n        \
    \            result += \"_\";\n                }\n                else if (count\
    \ > 2)\n                {\n                    result += \"-\";\n            \
    \    }\n            }\n            else\n            {\n                count\
    \ = 0;\n                result += text[i];\n            }\n        }\n       \
    \ return result;", "        var sb = new StringBuilder();\n        var spaces\
    \ = 0;\n        for (int i = 0; i < text.Length; i++) {\n            if (text[i]\
    \ == ' ') {\n                spaces++;\n            } else {\n               \
    \ if (spaces == 1) {\n                    sb.Append('_');\n                } else\
    \ if (spaces > 1) {\n                    sb.Append('-');\n                }\n\
    \                sb.Append(text[i]);\n                spaces = 0;\n          \
    \  }\n        }\n        if (spaces == 1) {\n            sb.Append('_');\n   \
    \     } else if (spaces > 1) {\n            sb.Append('-');\n        }\n     \
    \   return sb.ToString();", "        var sb = new StringBuilder();\n        var\
    \ spaceCount = 0;\n        foreach (var c in text) {\n            if (c == ' ')\
    \ {\n                spaceCount++;\n                if (spaceCount == 1) {\n \
    \                   sb.Append('_');\n                }\n            } else {\n\
    \                if (spaceCount > 2) {\n                    sb.Append('-');\n\
    \                } else {\n                    for (int i = 0; i < spaceCount;\
    \ i++) {\n                        sb.Append('_');\n                    }\n   \
    \             }\n                spaceCount = 0;\n                sb.Append(c);\n\
    \            }\n        }\n        if (spaceCount > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int i = 0; i < spaceCount; i++) {\n      \
    \          sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        StringBuilder sb = new StringBuilder();\n        int spaces = 0;\n    \
    \    foreach (char c in text) {\n            if (c == ' ') {\n               \
    \ spaces++;\n            } else {\n                if (spaces > 2) {\n       \
    \             sb.Append('-');\n                } else {\n                    for\
    \ (int i = 0; i < spaces; i++) {\n                        sb.Append('_');\n  \
    \                  }\n                }\n                spaces = 0;\n       \
    \         sb.Append(c);\n            }\n        }\n        if (spaces > 2) {\n\
    \            sb.Append('-');\n        } else {\n            for (int i = 0; i\
    \ < spaces; i++) {\n                sb.Append('_');\n            }\n        }\n\
    \        return sb.ToString();", "        StringBuilder sb = new StringBuilder();\n\
    \        bool lastSpace = false;\n        for (int i = 0; i < text.Length; i++)\
    \ {\n            if (text[i] == ' ') {\n                if (lastSpace) {\n   \
    \                 sb.Append('-');\n                } else {\n                \
    \    sb.Append('_');\n                }\n                lastSpace = true;\n \
    \           } else {\n                sb.Append(text[i]);\n                lastSpace\
    \ = false;\n            }\n        }\n        return sb.ToString();", "      \
    \  StringBuilder sb = new StringBuilder();\n        bool prevSpace = false;\n\
    \        foreach (char c in text) {\n            if (c == ' ') {\n           \
    \     if (prevSpace) {\n                    sb.Append('-');\n                }\
    \ else {\n                    sb.Append('_');\n                }\n           \
    \     prevSpace = true;\n            } else {\n                sb.Append(c);\n\
    \                prevSpace = false;\n            }\n        }\n        return\
    \ sb.ToString();", "        var sb = new StringBuilder();\n        var spaces\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           spaces++;\n            } else {\n                if (spaces == 1)\
    \ {\n                    sb.Append('_');\n                } else if (spaces >\
    \ 1) {\n                    sb.Append('-');\n                }\n             \
    \   sb.Append(c);\n                spaces = 0;\n            }\n        }\n   \
    \     if (spaces == 1) {\n            sb.Append('_');\n        } else if (spaces\
    \ > 1) {\n            sb.Append('-');\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 2) {\n                   \
    \ sb.Append('-');\n                } else {\n                    for (int i =\
    \ 0; i < spaces; i++) {\n                        sb.Append('_');\n           \
    \         }\n                }\n                spaces = 0;\n                sb.Append(c);\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int i = 0; i < spaces; i++) {\n          \
    \      sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 2) {\n                   \
    \ sb.Append('-');\n                } else {\n                    for (int i =\
    \ 0; i < spaces; i++) {\n                        sb.Append('_');\n           \
    \         }\n                }\n                spaces = 0;\n                sb.Append(c);\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int i = 0; i < spaces; i++) {\n          \
    \      sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        StringBuilder sb = new StringBuilder();\n        int spaces = 0;\n    \
    \    for (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ')\
    \ {\n                spaces++;\n            } else {\n                if (spaces\
    \ > 2) {\n                    sb.Append('-');\n                } else {\n    \
    \                for (int j = 0; j < spaces; j++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                spaces = 0;\n     \
    \           sb.Append(text[i]);\n            }\n        }\n        if (spaces\
    \ > 2) {\n            sb.Append('-');\n        } else {\n            for (int\
    \ j = 0; j < spaces; j++) {\n                sb.Append('_');\n            }\n\
    \        }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        var spaces = 0;\n        foreach (var c in text) {\n            if (c\
    \ == ' ') {\n                spaces++;\n            } else {\n               \
    \ if (spaces > 2) {\n                    sb.Append('-');\n                } else\
    \ {\n                    for (int i = 0; i < spaces; i++) {\n                \
    \        sb.Append('_');\n                    }\n                }\n         \
    \       spaces = 0;\n                sb.Append(c);\n            }\n        }\n\
    \        if (spaces > 2) {\n            sb.Append('-');\n        } else {\n  \
    \          for (int i = 0; i < spaces; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", "        // TODO: implement\
    \ this method\n        //throw new NotImplementedException();\n        return\
    \ text.Replace(\" \", \"_\").Replace(\"__\", \"-\");", "        string result\
    \ = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length; i++)\
    \ {\n            if (text[i] == ' ') {\n                count++;\n           \
    \     if (count == 1) {\n                    result += '_';\n                }\n\
    \            } else {\n                if (count > 2) {\n                    result\
    \ += '-';\n                } else {\n                    for (int j = 0; j < count;\
    \ j++) {\n                        result += '_';\n                    }\n    \
    \            }\n                count = 0;\n                result += text[i];\n\
    \            }\n        }\n        if (count > 2) {\n            result += '-';\n\
    \        } else {\n            for (int j = 0; j < count; j++) {\n           \
    \     result += '_';\n            }\n        }\n        return result;", "   \
    \     var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 2) {\n                   \
    \ sb.Append('-');\n                } else {\n                    for (int i =\
    \ 0; i < spaces; i++) {\n                        sb.Append('_');\n           \
    \         }\n                }\n                spaces = 0;\n                sb.Append(c);\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int i = 0; i < spaces; i++) {\n          \
    \      sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 2) {\n                   \
    \ sb.Append('-');\n                } else {\n                    for (int i =\
    \ 0; i < spaces; i++) {\n                        sb.Append('_');\n           \
    \         }\n                }\n                spaces = 0;\n                sb.Append(c);\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else {\n            for (int i = 0; i < spaces; i++) {\n          \
    \      sb.Append('_');\n            }\n        }\n        return sb.ToString();"]
stop_tokens:
- "\n    }\n"

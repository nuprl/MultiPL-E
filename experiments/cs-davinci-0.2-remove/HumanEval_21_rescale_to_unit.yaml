name: HumanEval_21_rescale_to_unit
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given list of numbers (of at least two elements), apply a linear\
  \ transform to that list,\n    // such that the smallest number will become 0 and\
  \ the largest will become 1\n    public static List<float> RescaleToUnit(List<float>\
  \ numbers) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(RescaleToUnit((new\
  \ List<float>(new float[]{(float)2.0f, (float)49.9f}))).Equals((new List<float>(new\
  \ float[]{(float)0.0f, (float)1.0f}))));\n    Debug.Assert(RescaleToUnit((new List<float>(new\
  \ float[]{(float)100.0f, (float)49.9f}))).Equals((new List<float>(new float[]{(float)1.0f,\
  \ (float)0.0f}))));\n    Debug.Assert(RescaleToUnit((new List<float>(new float[]{(float)1.0f,\
  \ (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f}))).Equals((new List<float>(new\
  \ float[]{(float)0.0f, (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f}))));\n\
  \    Debug.Assert(RescaleToUnit((new List<float>(new float[]{(float)2.0f, (float)1.0f,\
  \ (float)5.0f, (float)3.0f, (float)4.0f}))).Equals((new List<float>(new float[]{(float)0.25f,\
  \ (float)0.0f, (float)1.0f, (float)0.5f, (float)0.75f}))));\n    Debug.Assert(RescaleToUnit((new\
  \ List<float>(new float[]{(float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
  \ (float)14.0f}))).Equals((new List<float>(new float[]{(float)0.25f, (float)0.0f,\
  \ (float)1.0f, (float)0.5f, (float)0.75f}))));\n    }\n\n}\n"
completions: ["        float min = numbers.Min();\n        float max = numbers.Max();\n\
    \        List<float> result = new List<float>();\n        foreach (float number\
    \ in numbers) {\n            result.Add((number - min) / (max - min));\n     \
    \   }\n        return result;", "        float min = numbers.Min();\n        float\
    \ max = numbers.Max();\n        float range = max - min;\n        return numbers.Select(x\
    \ => (x - min) / range).ToList();", "        float min = numbers.Min();\n    \
    \    float max = numbers.Max();\n        float scale = max - min;\n        return\
    \ numbers.Select(x => (x - min) / scale).ToList();", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float range = max - min;\n      \
    \  return numbers.Select(x => (x - min) / range).ToList();", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        float scale =\
    \ max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        var min = numbers.Min();\n        var max = numbers.Max();\n        var\
    \ result = new List<float>();\n        foreach (var number in numbers) {\n   \
    \         result.Add((number - min) / (max - min));\n        }\n        return\
    \ result;", "        var result = new List<float>();\n        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float range = max - min;\n      \
    \  foreach (var number in numbers) {\n            result.Add((number - min) /\
    \ range);\n        }\n        return result;", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float range = max - min;\n      \
    \  return numbers.Select(x => (x - min) / range).ToList();", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        float range =\
    \ max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  List<float> result = new List<float>();\n        foreach (float number in numbers)\
    \ {\n            result.Add((number - min) / (max - min));\n        }\n      \
    \  return result;", "        float min = numbers.Min();\n        float max = numbers.Max();\n\
    \        float range = max - min;\n        List<float> result = new List<float>();\n\
    \        foreach (float number in numbers) {\n            result.Add((number -\
    \ min) / range);\n        }\n        return result;", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        return numbers.Select(x => (x - min)\
    \ / (max - min)).ToList();", "        float min = numbers.Min();\n        float\
    \ max = numbers.Max();\n        return numbers.Select(x => (x - min) / (max -\
    \ min)).ToList();", "        float min = numbers.Min();\n        float max = numbers.Max();\n\
    \        return numbers.Select(x => (x - min) / (max - min)).ToList();", "   \
    \     float min = numbers.Min();\n        float max = numbers.Max();\n       \
    \ float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        List<float> result = new List<float>();\n\
    \        foreach (float number in numbers) {\n            result.Add((number -\
    \ min) / scale);\n        }\n        return result;", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float range = max - min;\n      \
    \  return numbers.Select(x => (x - min) / range).ToList();", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        return numbers.Select(x\
    \ => (x - min) / (max - min)).ToList();", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float range = max - min;\n      \
    \  return numbers.Select(x => (x - min) / range).ToList();", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        float range =\
    \ max - min;\n        List<float> result = new List<float>();\n        foreach\
    \ (float number in numbers) {\n            result.Add((number - min) / range);\n\
    \        }\n        return result;", "        float min = numbers.Min();\n   \
    \     float max = numbers.Max();\n        float scale = max - min;\n        return\
    \ numbers.Select(x => (x - min) / scale).ToList();", "        var min = numbers.Min();\n\
    \        var max = numbers.Max();\n        var range = max - min;\n        return\
    \ numbers.Select(x => (x - min) / range).ToList();", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float range = max - min;\n      \
    \  return numbers.Select(x => (x - min) / range).ToList();", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        return numbers.Select(x\
    \ => (x - min) / (max - min)).ToList();", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        return numbers.Select(x => (x - min)\
    \ / (max - min)).ToList();", "        float min = numbers.Min();\n        float\
    \ max = numbers.Max();\n        float range = max - min;\n        return numbers.Select(x\
    \ => (x - min) / range).ToList();", "        float min = numbers.Min();\n    \
    \    float max = numbers.Max();\n        List<float> result = new List<float>();\n\
    \        foreach (float number in numbers) {\n            result.Add((number -\
    \ min) / (max - min));\n        }\n        return result;", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        float scale =\
    \ max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  return numbers.Select(x => (x - min) / (max - min)).ToList();", "        float\
    \ min = numbers.Min();\n        float max = numbers.Max();\n        float range\
    \ = max - min;\n        return numbers.Select(n => (n - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = 1 / (max - min);\n        return numbers.Select(x => (x - min)\
    \ * scale).ToList();", "        float min = numbers.Min();\n        float max\
    \ = numbers.Max();\n        float range = max - min;\n        return numbers.Select(x\
    \ => (x - min) / range).ToList();", "        float min = numbers.Min();\n    \
    \    float max = numbers.Max();\n        float scale = max - min;\n        return\
    \ numbers.Select(x => (x - min) / scale).ToList();", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float range = max - min;\n      \
    \  return numbers.Select(x => (x - min) / range).ToList();", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        float range =\
    \ max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = 1.0f / (max - min);\n        return numbers.Select(x => (x -\
    \ min) * scale).ToList();", "        float min = numbers.Min();\n        float\
    \ max = numbers.Max();\n        float range = max - min;\n        List<float>\
    \ result = new List<float>();\n        foreach (float number in numbers) {\n \
    \           result.Add((number - min) / range);\n        }\n        return result;",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  return numbers.Select(x => (x - min) / (max - min)).ToList();", "        float\
    \ min = numbers.Min();\n        float max = numbers.Max();\n        return numbers.Select(x\
    \ => (x - min) / (max - min)).ToList();", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float range = max - min;\n      \
    \  return numbers.Select(x => (x - min) / range).ToList();", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        float scale =\
    \ max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  List<float> result = new List<float>();\n        foreach (float number in numbers)\
    \ {\n            result.Add((number - min) / (max - min));\n        }\n      \
    \  return result;", "        float min = numbers.Min();\n        float max = numbers.Max();\n\
    \        float range = max - min;\n        return numbers.Select(x => (x - min)\
    \ / range).ToList();", "        float min = numbers.Min();\n        float max\
    \ = numbers.Max();\n        float range = max - min;\n        return numbers.Select(x\
    \ => (x - min) / range).ToList();", "        float min = numbers.Min();\n    \
    \    float max = numbers.Max();\n        float range = max - min;\n        return\
    \ numbers.Select(x => (x - min) / range).ToList();", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float scale = max - min;\n      \
    \  return numbers.Select(x => (x - min) / scale).ToList();", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        if (min == max)\
    \ {\n            return numbers.Select(x => 0.5f).ToList();\n        }\n     \
    \   return numbers.Select(x => (x - min) / (max - min)).ToList();", "        float\
    \ min = numbers.Min();\n        float max = numbers.Max();\n        float scale\
    \ = max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  List<float> result = new List<float>();\n        foreach (float number in numbers)\
    \ {\n            result.Add((number - min) / (max - min));\n        }\n      \
    \  return result;", "        float min = numbers.Min();\n        float max = numbers.Max();\n\
    \        float scale = max - min;\n        return numbers.Select(x => (x - min)\
    \ / scale).ToList();", "        float min = numbers.Min();\n        float max\
    \ = numbers.Max();\n        float scale = 1 / (max - min);\n        return numbers.Select(x\
    \ => (x - min) * scale).ToList();", "        float min = numbers.Min();\n    \
    \    float max = numbers.Max();\n        float range = max - min;\n        return\
    \ numbers.Select(x => (x - min) / range).ToList();", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float range = max - min;\n      \
    \  return numbers.Select(x => (x - min) / range).ToList();", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        float range =\
    \ max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        var min = numbers.Min();\n        var max = numbers.Max();\n        var\
    \ result = new List<float>();\n        foreach (var n in numbers) {\n        \
    \    result.Add((n - min) / (max - min));\n        }\n        return result;",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  List<float> result = new List<float>();\n        foreach (float number in numbers)\
    \ {\n            result.Add((number - min) / (max - min));\n        }\n      \
    \  return result;", "        float min = numbers.Min();\n        float max = numbers.Max();\n\
    \        float scale = max - min;\n        return numbers.Select(x => (x - min)\
    \ / scale).ToList();", "        float min = numbers.Min();\n        float max\
    \ = numbers.Max();\n        return numbers.Select(x => (x - min) / (max - min)).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        var min = numbers.Min();\n        var max = numbers.Max();\n        var\
    \ result = new List<float>();\n        foreach (var number in numbers) {\n   \
    \         result.Add((number - min) / (max - min));\n        }\n        return\
    \ result;", "        float min = numbers.Min();\n        float max = numbers.Max();\n\
    \        float scale = max - min;\n        List<float> result = new List<float>();\n\
    \        foreach (float number in numbers) {\n            result.Add((number -\
    \ min) / scale);\n        }\n        return result;", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float scale = max - min;\n      \
    \  List<float> result = new List<float>();\n        foreach (float number in numbers)\
    \ {\n            result.Add((number - min) / scale);\n        }\n        return\
    \ result;", "        float min = numbers.Min();\n        float max = numbers.Max();\n\
    \        float scale = max - min;\n        return numbers.Select(x => (x - min)\
    \ / scale).ToList();", "        float min = numbers.Min();\n        float max\
    \ = numbers.Max();\n        return numbers.Select(x => (x - min) / (max - min)).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float diff = max - min;\n        return numbers.Select(x => (x - min) / diff).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        List<float> result = new List<float>();\n\
    \        foreach (float number in numbers) {\n            result.Add((number -\
    \ min) / range);\n        }\n        return result;", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float range = max - min;\n      \
    \  return numbers.Select(x => (x - min) / range).ToList();", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        float range =\
    \ max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  List<float> result = new List<float>();\n        foreach (float number in numbers)\
    \ {\n            result.Add((number - min) / (max - min));\n        }\n      \
    \  return result;", "        float min = numbers.Min();\n        float max = numbers.Max();\n\
    \        float scale = max - min;\n        List<float> result = new List<float>();\n\
    \        foreach (float number in numbers) {\n            result.Add((number -\
    \ min) / scale);\n        }\n        return result;", "        var min = numbers.Min();\n\
    \        var max = numbers.Max();\n        var result = new List<float>();\n \
    \       foreach (var n in numbers) {\n            result.Add((n - min) / (max\
    \ - min));\n        }\n        return result;", "        var min = numbers.Min();\n\
    \        var max = numbers.Max();\n        var result = new List<float>();\n \
    \       foreach (var n in numbers) {\n            result.Add((n - min) / (max\
    \ - min));\n        }\n        return result;", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float scale = 1 / (max - min);\n\
    \        return numbers.Select(x => (x - min) * scale).ToList();", "        float\
    \ min = numbers.Min();\n        float max = numbers.Max();\n        float range\
    \ = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        return numbers.Select(n => (n - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        return numbers.Select(n => (n - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  return numbers.Select(x => (x - min) / (max - min)).ToList();", "        float\
    \ min = numbers.Min();\n        float max = numbers.Max();\n        float range\
    \ = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        List<float> result = new List<float>();\n\
    \        foreach (float number in numbers) {\n            result.Add((number -\
    \ min) / range);\n        }\n        return result;", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        return numbers.Select(x => (x - min)\
    \ / (max - min)).ToList();", "        float min = numbers.Min();\n        float\
    \ max = numbers.Max();\n        float range = max - min;\n        return numbers.Select(n\
    \ => (n - min) / range).ToList();", "        float min = numbers.Min();\n    \
    \    float max = numbers.Max();\n        List<float> result = new List<float>();\n\
    \        foreach (float number in numbers) {\n            result.Add((number -\
    \ min) / (max - min));\n        }\n        return result;", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        float scale =\
    \ max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        List<float> result = new List<float>();\n\
    \        foreach (float number in numbers) {\n            result.Add((number -\
    \ min) / scale);\n        }\n        return result;", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float range = max - min;\n      \
    \  return numbers.Select(x => (x - min) / range).ToList();", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        return numbers.Select(x\
    \ => (x - min) / (max - min)).ToList();", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float range = max - min;\n      \
    \  return numbers.Select(x => (x - min) / range).ToList();", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        return numbers.Select(x\
    \ => (x - min) / (max - min)).ToList();", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        return numbers.Select(x => (x - min)\
    \ / (max - min)).ToList();", "        float min = numbers.Min();\n        float\
    \ max = numbers.Max();\n        float range = max - min;\n        return numbers.Select(x\
    \ => (x - min) / range).ToList();", "        float min = numbers.Min();\n    \
    \    float max = numbers.Max();\n        return numbers.Select(x => (x - min)\
    \ / (max - min)).ToList();", "        float min = numbers.Min();\n        float\
    \ max = numbers.Max();\n        float scale = max - min;\n        return numbers.Select(n\
    \ => (n - min) / scale).ToList();", "        float min = numbers.Min();\n    \
    \    float max = numbers.Max();\n        List<float> result = new List<float>();\n\
    \        foreach (float number in numbers) {\n            result.Add((number -\
    \ min) / (max - min));\n        }\n        return result;", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        float scale =\
    \ max - min;\n        return numbers.Select(n => (n - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float diff = max - min;\n        return numbers.Select(x => (x - min) / diff).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  List<float> result = new List<float>();\n        foreach (float number in numbers)\
    \ {\n            result.Add((number - min) / (max - min));\n        }\n      \
    \  return result;", "        float min = numbers.Min();\n        float max = numbers.Max();\n\
    \        float range = max - min;\n        return numbers.Select(x => (x - min)\
    \ / range).ToList();", "        float min = numbers.Min();\n        float max\
    \ = numbers.Max();\n        float range = max - min;\n        List<float> result\
    \ = new List<float>();\n        foreach (float number in numbers) {\n        \
    \    result.Add((number - min) / range);\n        }\n        return result;",
  "        var min = numbers.Min();\n        var max = numbers.Max();\n        var\
    \ result = new List<float>();\n        foreach (var number in numbers) {\n   \
    \         result.Add((number - min) / (max - min));\n        }\n        return\
    \ result;", "        float min = numbers.Min();\n        float max = numbers.Max();\n\
    \        float range = max - min;\n        return numbers.Select(n => (n - min)\
    \ / range).ToList();", "        var min = numbers.Min();\n        var max = numbers.Max();\n\
    \        var result = new List<float>();\n        foreach (var number in numbers)\
    \ {\n            result.Add((number - min) / (max - min));\n        }\n      \
    \  return result;", "        float min = numbers.Min();\n        float max = numbers.Max();\n\
    \        return numbers.Select(n => (n - min) / (max - min)).ToList();", "   \
    \     float min = numbers.Min();\n        float max = numbers.Max();\n       \
    \ float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        List<float> result = new List<float>();\n\
    \        foreach (float number in numbers) {\n            result.Add((number -\
    \ min) / range);\n        }\n        return result;", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        List<float> result = new List<float>();\n\
    \        foreach (float number in numbers) {\n            result.Add((number -\
    \ min) / (max - min));\n        }\n        return result;", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        float range =\
    \ max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = 1 / (max - min);\n        List<float> result = new List<float>();\n\
    \        foreach (float number in numbers) {\n            result.Add((number -\
    \ min) * scale);\n        }\n        return result;", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float range = max - min;\n      \
    \  List<float> result = new List<float>();\n        foreach (float number in numbers)\
    \ {\n            result.Add((number - min) / range);\n        }\n        return\
    \ result;", "        float min = numbers.Min();\n        float max = numbers.Max();\n\
    \        float range = max - min;\n        return numbers.Select(x => (x - min)\
    \ / range).ToList();", "        float min = numbers.Min();\n        float max\
    \ = numbers.Max();\n        List<float> result = new List<float>();\n        foreach\
    \ (float number in numbers) {\n            result.Add((number - min) / (max -\
    \ min));\n        }\n        return result;", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float scale = max - min;\n      \
    \  List<float> result = new List<float>();\n        foreach (float number in numbers)\
    \ {\n            result.Add((number - min) / scale);\n        }\n        return\
    \ result;", "        float min = numbers.Min();\n        float max = numbers.Max();\n\
    \        float scale = max - min;\n        return numbers.Select(x => (x - min)\
    \ / scale).ToList();", "        float min = numbers.Min();\n        float max\
    \ = numbers.Max();\n        float scale = 1 / (max - min);\n        return numbers.Select(x\
    \ => (x - min) * scale).ToList();", "        float min = numbers.Min();\n    \
    \    float max = numbers.Max();\n        float range = max - min;\n        return\
    \ numbers.Select(x => (x - min) / range).ToList();", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float range = max - min;\n      \
    \  return numbers.Select(x => (x - min) / range).ToList();", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        float scale =\
    \ max - min;\n        List<float> result = new List<float>();\n        foreach\
    \ (float number in numbers) {\n            result.Add((number - min) / scale);\n\
    \        }\n        return result;", "        float min = numbers.Min();\n   \
    \     float max = numbers.Max();\n        return numbers.Select(x => (x - min)\
    \ / (max - min)).ToList();", "        float min = numbers.Min();\n        float\
    \ max = numbers.Max();\n        float range = max - min;\n        return numbers.Select(x\
    \ => (x - min) / range).ToList();", "        float min = numbers.Min();\n    \
    \    float max = numbers.Max();\n        return numbers.Select(x => (x - min)\
    \ / (max - min)).ToList();", "        float min = numbers.Min();\n        float\
    \ max = numbers.Max();\n        float scale = max - min;\n        List<float>\
    \ result = new List<float>();\n        foreach (float number in numbers) {\n \
    \           result.Add((number - min) / scale);\n        }\n        return result;",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        List<float> result = new List<float>();\n\
    \        foreach (float number in numbers) {\n            result.Add((number -\
    \ min) / scale);\n        }\n        return result;", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float range = max - min;\n      \
    \  return numbers.Select(x => (x - min) / range).ToList();", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        float range =\
    \ max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  List<float> result = new List<float>();\n        foreach (float number in numbers)\
    \ {\n            result.Add((number - min) / (max - min));\n        }\n      \
    \  return result;", "        float min = numbers.Min();\n        float max = numbers.Max();\n\
    \        float range = max - min;\n        return numbers.Select(n => (n - min)\
    \ / range).ToList();", "        float min = numbers.Min();\n        float max\
    \ = numbers.Max();\n        return numbers.Select(x => (x - min) / (max - min)).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  List<float> result = new List<float>();\n        foreach (float number in numbers)\
    \ {\n            result.Add((number - min) / (max - min));\n        }\n      \
    \  return result;", "        float min = numbers.Min();\n        float max = numbers.Max();\n\
    \        float range = max - min;\n        return numbers.Select(x => (x - min)\
    \ / range).ToList();", "        float min = numbers.Min();\n        float max\
    \ = numbers.Max();\n        float scale = 1 / (max - min);\n        return numbers.Select(n\
    \ => (n - min) * scale).ToList();", "        float min = numbers.Min();\n    \
    \    float max = numbers.Max();\n        float range = max - min;\n        return\
    \ numbers.Select(x => (x - min) / range).ToList();", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float scale = max - min;\n      \
    \  return numbers.Select(x => (x - min) / scale).ToList();", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        List<float> result\
    \ = new List<float>();\n        foreach (float number in numbers) {\n        \
    \    result.Add((number - min) / (max - min));\n        }\n        return result;",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  return numbers.Select(x => (x - min) / (max - min)).ToList();", "        var\
    \ min = numbers.Min();\n        var max = numbers.Max();\n        var result =\
    \ new List<float>();\n        foreach (var number in numbers) {\n            result.Add((number\
    \ - min) / (max - min));\n        }\n        return result;", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        float range =\
    \ max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = 1 / (max - min);\n        return numbers.Select(x => (x - min)\
    \ * scale).ToList();", "        float min = numbers.Min();\n        float max\
    \ = numbers.Max();\n        float scale = max - min;\n        return numbers.Select(x\
    \ => (x - min) / scale).ToList();", "        float min = numbers.Min();\n    \
    \    float max = numbers.Max();\n        float scale = max - min;\n        return\
    \ numbers.Select(x => (x - min) / scale).ToList();", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float scale = max - min;\n      \
    \  return numbers.Select(x => (x - min) / scale).ToList();", "        var min\
    \ = numbers.Min();\n        var max = numbers.Max();\n        var result = new\
    \ List<float>();\n        foreach (var number in numbers) {\n            result.Add((number\
    \ - min) / (max - min));\n        }\n        return result;", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        List<float> result\
    \ = new List<float>();\n        foreach (float n in numbers) {\n            result.Add((n\
    \ - min) / (max - min));\n        }\n        return result;", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        float scale =\
    \ 1 / (max - min);\n        return numbers.Select(x => (x - min) * scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  return numbers.Select(x => (x - min) / (max - min)).ToList();", "        float\
    \ min = numbers.Min();\n        float max = numbers.Max();\n        float range\
    \ = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  return numbers.Select(x => (x - min) / (max - min)).ToList();", "        float\
    \ min = numbers.Min();\n        float max = numbers.Max();\n        float range\
    \ = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        return numbers.Select(x => (x - min) / scale).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = max - min;\n        List<float> result = new List<float>();\n\
    \        foreach (float number in numbers) {\n            result.Add((number -\
    \ min) / scale);\n        }\n        return result;", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        return numbers.Select(x => (x - min)\
    \ / (max - min)).ToList();", "        float min = numbers.Min();\n        float\
    \ max = numbers.Max();\n        return numbers.Select(x => (x - min) / (max -\
    \ min)).ToList();", "        var min = numbers.Min();\n        var max = numbers.Max();\n\
    \        var result = new List<float>();\n        foreach (var n in numbers) {\n\
    \            result.Add((n - min) / (max - min));\n        }\n        return result;",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(n => (n - min) / range).ToList();",
  "        var min = numbers.Min();\n        var max = numbers.Max();\n        var\
    \ result = new List<float>();\n        foreach (var number in numbers) {\n   \
    \         result.Add((number - min) / (max - min));\n        }\n        return\
    \ result;", "        float min = numbers.Min();\n        float max = numbers.Max();\n\
    \        float range = max - min;\n        return numbers.Select(x => (x - min)\
    \ / range).ToList();", "        float min = numbers.Min();\n        float max\
    \ = numbers.Max();\n        float range = max - min;\n        List<float> result\
    \ = new List<float>();\n        foreach (float x in numbers) {\n            result.Add((x\
    \ - min) / range);\n        }\n        return result;", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float scale = 1 / (max - min);\n\
    \        return numbers.Select(x => (x - min) * scale).ToList();", "        float\
    \ min = numbers.Min();\n        float max = numbers.Max();\n        float range\
    \ = max - min;\n        return numbers.Select(n => (n - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float scale = 1 / (max - min);\n        return numbers.Select(x => (x - min)\
    \ * scale).ToList();", "        float min = numbers.Min();\n        float max\
    \ = numbers.Max();\n        float range = max - min;\n        return numbers.Select(x\
    \ => (x - min) / range).ToList();", "        float min = numbers.Min();\n    \
    \    float max = numbers.Max();\n        float range = max - min;\n        return\
    \ numbers.Select(x => (x - min) / range).ToList();", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float scale = 1 / (max - min);\n\
    \        return numbers.Select(x => (x - min) * scale).ToList();", "        float\
    \ min = numbers.Min();\n        float max = numbers.Max();\n        List<float>\
    \ result = new List<float>();\n        foreach (float number in numbers) {\n \
    \           result.Add((number - min) / (max - min));\n        }\n        return\
    \ result;", "        float min = numbers.Min();\n        float max = numbers.Max();\n\
    \        float range = max - min;\n        return numbers.Select(x => (x - min)\
    \ / range).ToList();", "        float min = numbers.Min();\n        float max\
    \ = numbers.Max();\n        return numbers.Select(x => (x - min) / (max - min)).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        return numbers.Select(x => (x - min) / range).ToList();",
  "        float min = numbers.Min();\n        float max = numbers.Max();\n      \
    \  float range = max - min;\n        List<float> result = new List<float>();\n\
    \        foreach (float number in numbers) {\n            result.Add((number -\
    \ min) / range);\n        }\n        return result;", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float range = max - min;\n      \
    \  return numbers.Select(x => (x - min) / range).ToList();", "        float min\
    \ = numbers.Min();\n        float max = numbers.Max();\n        return numbers.Select(x\
    \ => (x - min) / (max - min)).ToList();", "        float min = numbers.Min();\n\
    \        float max = numbers.Max();\n        float range = max - min;\n      \
    \  return numbers.Select(x => (x - min) / range).ToList();"]
stop_tokens:
- "\n    }\n"

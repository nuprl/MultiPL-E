name: HumanEval_142_sum_squares
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // \"\n    // This function will take a list of integers. For all\
  \ entries in the list, the function shall square the integer entry if its index\
  \ is a \n    // multiple of 3 and will cube the integer entry if its index is a\
  \ multiple of 4 and not a multiple of 3. The function will not \n    // change the\
  \ entries in the list whose indexes are not a multiple of 3 or 4. The function shall\
  \ then return the sum of all entries. \n    // Examples:\n    public static long\
  \ SumSquares(List<long> lst) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSquares((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (6L));\n    Debug.Assert(SumSquares((new\
  \ List<long>(new long[]{(long)1L, (long)4L, (long)9L}))) == (14L));\n    Debug.Assert(SumSquares((new\
  \ List<long>())) == (0L));\n    Debug.Assert(SumSquares((new List<long>(new long[]{(long)1L,\
  \ (long)1L, (long)1L, (long)1L, (long)1L, (long)1L, (long)1L, (long)1L, (long)1L})))\
  \ == (9L));\n    Debug.Assert(SumSquares((new List<long>(new long[]{(long)-1L, (long)-1L,\
  \ (long)-1L, (long)-1L, (long)-1L, (long)-1L, (long)-1L, (long)-1L, (long)-1L})))\
  \ == (-3L));\n    Debug.Assert(SumSquares((new List<long>(new long[]{(long)0L})))\
  \ == (0L));\n    Debug.Assert(SumSquares((new List<long>(new long[]{(long)-1L, (long)-5L,\
  \ (long)2L, (long)-1L, (long)-5L}))) == (-126L));\n    Debug.Assert(SumSquares((new\
  \ List<long>(new long[]{(long)-56L, (long)-99L, (long)1L, (long)0L, (long)-2L})))\
  \ == (3030L));\n    Debug.Assert(SumSquares((new List<long>(new long[]{(long)-1L,\
  \ (long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)-1L})))\
  \ == (0L));\n    Debug.Assert(SumSquares((new List<long>(new long[]{(long)-16L,\
  \ (long)-9L, (long)-2L, (long)36L, (long)36L, (long)26L, (long)-20L, (long)25L,\
  \ (long)-40L, (long)20L, (long)-4L, (long)12L, (long)-26L, (long)35L, (long)37L})))\
  \ == (-14196L));\n    Debug.Assert(SumSquares((new List<long>(new long[]{(long)-1L,\
  \ (long)-3L, (long)17L, (long)-1L, (long)-15L, (long)13L, (long)-1L, (long)14L,\
  \ (long)-14L, (long)-12L, (long)-5L, (long)14L, (long)-14L, (long)6L, (long)13L,\
  \ (long)11L, (long)16L, (long)16L, (long)4L, (long)10L}))) == (-1448L));\n    }\n\
  \n}\n"
completions: ["        long sum = 0;\n        for (int i = 0; i < lst.Count; i++)\
    \ {\n            if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n\
    \            } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i]\
    \ * lst[i];\n            } else {\n                sum += lst[i];\n          \
    \  }\n        }\n        return sum;", "        long sum = 0;\n        for (int\
    \ i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n              \
    \  sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n           \
    \     sum += lst[i] * lst[i] * lst[i];\n            } else {\n               \
    \ sum += lst[i];\n            }\n        }\n        return sum;", "        long\
    \ sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n            if (i %\
    \ 3 == 0) {\n                sum += lst[i] * lst[i];\n            } else if (i\
    \ % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n            }\
    \ else {\n                sum += lst[i];\n            }\n        }\n        return\
    \ sum;", "        long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n\
    \            if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n    \
    \        } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        // \"\n        // The function will take a\
    \ list of integers. For all entries in the list, the function shall square the\
    \ integer entry if its index is a \n        // multiple of 3 and will cube the\
    \ integer entry if its index is a multiple of 4 and not a multiple of 3. The function\
    \ will not \n        // change the entries in the list whose indexes are not a\
    \ multiple of 3 or 4. The function shall then return the sum of all entries. \n\
    \        // Examples:\n        // SumSquares([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\
    \ = 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 = 385\n        // SumSquares([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]) = 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 +\
    \ 81 + 100 = 385\n        // SumSquares([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20]) = 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 +\
    \ 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 = 3385\n   \
    \     // SumSquares([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14,\
    \ -15, -16, -17, -18, -19, -20]) = 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100\
    \ + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 = 3385\n       \
    \ // \"\n        long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n\
    \            if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n    \
    \        } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum +=", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        // \"\n        // This\
    \ function will take a list of integers. For all entries in the list, the function\
    \ shall square the integer entry if its index is a \n        // multiple of 3\
    \ and will cube the integer entry if its index is a multiple of 4 and not a multiple\
    \ of 3. The function will not \n        // change the entries in the list whose\
    \ indexes are not a multiple of 3 or 4. The function shall then return the sum\
    \ of all entries. \n        // Examples:\n        // SumSquares([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]) = 1 + 4 + 9 + 8 + 27 + 16 + 125 + 64 + 729 + 100 = 1030\n \
    \       // SumSquares([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20]) = 1 + 4 + 9 + 8 + 27 + 16 + 125 + 64 + 729 + 100 + 11 + 12\
    \ + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 = 1094\n        // SumSquares([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30]) = 1 + 4 + 9 + 8 + 27 + 16 + 125 + 64 + 729 + 100\
    \ + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 22 + 23 + 24 + 25 +\
    \ 26 + 27 + 28 + 29 + 30 = 1160\n        // SumSquares([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]) = 1 + 4 + 9 + 8 + 27 + 16 +\
    \ 125 + 64 + 729 + 100 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21\
    \ + 22 + 23", "        long sum = 0;\n        for (int i = 0; i < lst.Count; i++)\
    \ {\n            if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n\
    \            } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i]\
    \ * lst[i];\n            } else {\n                sum += lst[i];\n          \
    \  }\n        }\n        return sum;", "        long sum = 0;\n        for (int\
    \ i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n              \
    \  sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n           \
    \     sum += lst[i] * lst[i] * lst[i];\n            } else {\n               \
    \ sum += lst[i];\n            }\n        }\n        return sum;", "        long\
    \ sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n            if (i %\
    \ 3 == 0) {\n                sum += lst[i] * lst[i];\n            } else if (i\
    \ % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n            }\
    \ else {\n                sum += lst[i];\n            }\n        }\n        return\
    \ sum;", "        long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n\
    \            if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n    \
    \        } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", '        return
    lst.Select((x, i) => i % 3 == 0 ? x * x : i % 4 == 0 ? x * x * x : x).Sum();',
  "        long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n        \
    \    if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n            }\
    \ else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n \
    \           } else {\n                sum += lst[i];\n            }\n        }\n\
    \        return sum;", "        long sum = 0;\n        for (int i = 0; i < lst.Count;\
    \ i++) {\n            if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n\
    \            } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i]\
    \ * lst[i];\n            } else {\n                sum += lst[i];\n          \
    \  }\n        }\n        return sum;", "        long sum = 0;\n        for (int\
    \ i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n              \
    \  sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n           \
    \     sum += lst[i] * lst[i] * lst[i];\n            } else {\n               \
    \ sum += lst[i];\n            }\n        }\n        return sum;", "        long\
    \ sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n            if (i %\
    \ 3 == 0) {\n                sum += lst[i] * lst[i];\n            } else if (i\
    \ % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n            }\
    \ else {\n                sum += lst[i];\n            }\n        }\n        return\
    \ sum;", "        long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n\
    \            if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n    \
    \        } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for (int i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n   \
    \             sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n\
    \                sum += lst[i] * lst[i] * lst[i];\n            } else {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n       \
    \     if (i % 3 == 0) {\n                sum += lst[i] * lst[i];\n           \
    \ } else if (i % 4 == 0) {\n                sum += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                sum += lst[i];\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ lst.Count; i++) {\n            if (i % 3 == 0) {\n                sum += lst[i]\
    \ * lst[i];\n            } else if (i % 4 == 0) {\n                sum += lst[i]\
    \ * lst[i] * lst[i];\n            } else {\n                sum += lst[i];\n \
    \           }\n        }\n        return sum;", "        // \"\n        // >>>\
    \ SumSquares([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n        // 585\n        // >>>\
    \ SumSquares([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20])\n        // 7305\n        // \"\n        long sum = 0;\n        for (int\
    \ i = 0; i < lst.Count; i++) {\n            if (i % 3 == 0) {\n              \
    \  sum += lst[i] * lst[i];\n            } else if (i % 4 == 0) {\n           \
    \     sum += lst[i] * lst[i] * lst[i];\n            } else {\n               \
    \ sum += lst[i];\n            }\n        }\n        return sum;"]
stop_tokens:
- "\n    }\n"

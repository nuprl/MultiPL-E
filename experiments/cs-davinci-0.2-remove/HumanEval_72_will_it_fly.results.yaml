language: cs
name: HumanEval_72_will_it_fly
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdc21e10b9484333986ad4e9af7e3322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdc21e10b9484333986ad4e9af7e3322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        long sum = 0;\n        for (int\
    \ i = 0; i < q.Count; i++) {\n            sum += q[i];\n        }\n        if\
    \ (sum > w) {\n            return false;\n        }\n        for (int i = 0; i\
    \ < q.Count / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i]) {\n     \
    \           return false;\n            }\n        }\n        return true;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n \
    \   Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L})), (5L))\
    \ == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L})),\
    \ (5L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (1L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})), (6L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)5L})), (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ae30933de6284c37805364b93a529560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ae30933de6284c37805364b93a529560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        foreach (long l in q) {\n\
    \            sum += l;\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        int i = 0;\n        int j = q.Count - 1;\n      \
    \  while (i < j) {\n            if (q[i] != q[j]) {\n                return false;\n\
    \            }\n            i++;\n            j--;\n        }\n        return\
    \ true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n \
    \   Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L})), (5L))\
    \ == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L})),\
    \ (5L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (1L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})), (6L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)5L})), (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        // You can add other functions\
    \ if you need to.\n        // You can add other classes if you need to.\n    \
    \    // You can use the .NET Framework 4.5.\n        // You can use the .NET Framework\
    \ 4.0 if you target the .NET Framework 4.\n        // You can use the .NET Framework\
    \ 3.5 if you target the .NET Framework 3.5.\n        // You can use the .NET Framework\
    \ 3.0 if you target the .NET Framework 3.0.\n        // You can use the .NET Framework\
    \ 2.0 if you target the .NET Framework 2.0.\n        // You can use the .NET Framework\
    \ 1.1 if you target the .NET Framework 1.1.\n        // You can use the .NET Framework\
    \ 1.0 if you target the .NET Framework 1.0.\n        // You can use the .NET Framework\
    \ 4 Client Profile if you target the .NET Framework 4 Client Profile.\n      \
    \  // You can use the .NET Framework 3.5 Client Profile if you target the .NET\
    \ Framework 3.5 Client Profile.\n        // You can use the .NET Framework 3.0\
    \ Client Profile if you target the .NET Framework 3.0 Client Profile.\n      \
    \  // You can use the .NET Framework 2.0 Client Profile if you target the .NET\
    \ Framework 2.0 Client Profile.\n        // You can use the .NET Framework 1.1\
    \ Client Profile if you target the .NET Framework 1.1 Client Profile.\n      \
    \  // You can use the .NET Framework 1.0 Client Profile if you target the .NET\
    \ Framework 1.0 Client Profile.\n        // You can use the .NET Framework 4.5.1\
    \ if you target the .NET Framework 4.5.1.\n        // You can use the .NET Framework\
    \ 4.5 if you target the .NET Framework 4.5.\n        // You can use the .NET Framework\
    \ 4.0 if you target the .NET Framework 4.\n        // You can use the .NET Framework\
    \ 3.5 if you target the .NET Framework 3.5.\n        // You can use the .NET Framework\
    \ 3.0 if you target the .NET Framework 3.0.\n        // You can use the .NET Framework\
    \ 2.0 if you target the .NET Framework 2.0.\n        // You can use the .NET Framework\
    \ 1.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n \
    \   Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L})), (5L))\
    \ == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L})),\
    \ (5L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (1L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})), (6L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)5L})), (5L)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_nihzj2d.cs(16,24): error CS0161: ''Problem.WillItFly(List<long>, long)'':
    not all code paths return a value

    '
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        foreach (long i in q) {\n\
    \            sum += i;\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        for (int i = 0; i < q.Count / 2; i++) {\n       \
    \     if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n     \
    \       }\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L, (long)2L,\
    \ (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        foreach (long i in q) {\n\
    \            sum += i;\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        int n = q.Count;\n        for (int i = 0; i < n /\
    \ 2; i++) {\n            if (q[i] != q[n - i - 1]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        long sum = 0;\n        for (int\
    \ i = 0; i < q.Count; i++) {\n            sum += q[i];\n        }\n        if\
    \ (sum > w) {\n            return false;\n        }\n        for (int i = 0; i\
    \ < q.Count / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i]) {\n     \
    \           return false;\n            }\n        }\n        return true;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n \
    \   Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L})), (5L))\
    \ == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L})),\
    \ (5L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (1L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})), (6L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)5L})), (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        return q.Sum() <= w && q.SequenceEqual(q.Reverse());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n \
    \   Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L})), (5L))\
    \ == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L})),\
    \ (5L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (1L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})), (6L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)5L})), (5L)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplas_9m_u.cs(17,48): error CS1503: Argument 2: cannot convert from ''void''
    to ''System.Collections.Generic.IEnumerable<long>''

    '
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here.\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49fb02928ed541b38702acdaa3e2fb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49fb02928ed541b38702acdaa3e2fb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b2da34f2f5824d0eb9694093371d058e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b2da34f2f5824d0eb9694093371d058e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        long sum = 0;\n        for (int i = 0; i < q.Count; i++) {\n \
    \           sum += q[i];\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        for (int i = 0; i < q.Count / 2; i++) {\n       \
    \     if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n     \
    \       }\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L, (long)2L,\
    \ (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) return false;\n\
    \        for (int i = 0; i < q.Count / 2; i++) {\n            if (q[i] != q[q.Count\
    \ - 1 - i]) return false;\n        }\n        return true;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here.\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49fb02928ed541b38702acdaa3e2fb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49fb02928ed541b38702acdaa3e2fb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here.\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49fb02928ed541b38702acdaa3e2fb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49fb02928ed541b38702acdaa3e2fb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here.\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49fb02928ed541b38702acdaa3e2fb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49fb02928ed541b38702acdaa3e2fb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        foreach (long i in q) {\n\
    \            sum += i;\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        if (q.Count == 1) {\n            return true;\n \
    \       }\n        int i1 = 0;\n        int i2 = q.Count - 1;\n        while (i1\
    \ < i2) {\n            if (q[i1] != q[i2]) {\n                return false;\n\
    \            }\n            i1++;\n            i2--;\n        }\n        return\
    \ true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n \
    \   Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L})), (5L))\
    \ == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L})),\
    \ (5L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (1L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})), (6L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)5L})), (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        foreach (long l in q) {\n\
    \            sum += l;\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        int i = 0;\n        int j = q.Count - 1;\n      \
    \  while (i < j) {\n            if (q[i] != q[j]) {\n                return false;\n\
    \            }\n            i++;\n            j--;\n        }\n        return\
    \ true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n \
    \   Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L})), (5L))\
    \ == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L})),\
    \ (5L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (1L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})), (6L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)5L})), (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here.\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49fb02928ed541b38702acdaa3e2fb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49fb02928ed541b38702acdaa3e2fb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        foreach (long i in q) {\n\
    \            sum += i;\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        for (int i = 0; i < q.Count / 2; i++) {\n       \
    \     if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n     \
    \       }\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L, (long)2L,\
    \ (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b2da34f2f5824d0eb9694093371d058e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b2da34f2f5824d0eb9694093371d058e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdc21e10b9484333986ad4e9af7e3322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdc21e10b9484333986ad4e9af7e3322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        long sum = 0;\n        for (int i =\
    \ 0; i < q.Count; i++) {\n            sum += q[i];\n        }\n        if (sum\
    \ > w) {\n            return false;\n        }\n        for (int i = 0; i < q.Count\
    \ / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i]) {\n               \
    \ return false;\n            }\n        }\n        return true;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here.\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49fb02928ed541b38702acdaa3e2fb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49fb02928ed541b38702acdaa3e2fb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here.\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49fb02928ed541b38702acdaa3e2fb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49fb02928ed541b38702acdaa3e2fb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        foreach (long l in q)\n\
    \        {\n            sum += l;\n        }\n        if (sum > w)\n        {\n\
    \            return false;\n        }\n        else\n        {\n            for\
    \ (int i = 0; i < q.Count / 2; i++)\n            {\n                if (q[i] !=\
    \ q[q.Count - 1 - i])\n                {\n                    return false;\n\
    \                }\n            }\n            return true;\n        }\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n \
    \   Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L})), (5L))\
    \ == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L})),\
    \ (5L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (1L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})), (6L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)5L})), (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b2da34f2f5824d0eb9694093371d058e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b2da34f2f5824d0eb9694093371d058e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        foreach (long i in q) {\n\
    \            sum += i;\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        for (int i = 0; i < q.Count / 2; i++) {\n       \
    \     if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n     \
    \       }\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L, (long)2L,\
    \ (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdc21e10b9484333986ad4e9af7e3322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdc21e10b9484333986ad4e9af7e3322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        long sum = 0;\n        for (int i = 0; i < q.Count; i++) {\n \
    \           sum += q[i];\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        for (int i = 0; i < q.Count / 2; i++) {\n       \
    \     if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n     \
    \       }\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L, (long)2L,\
    \ (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return true;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <48d47d062a634d259081751e6c6ef8dd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <48d47d062a634d259081751e6c6ef8dd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        long sum = 0;\n        for (int i = 0; i < q.Count; i++) {\n \
    \           sum += q[i];\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        for (int i = 0; i < q.Count / 2; i++) {\n       \
    \     if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n     \
    \       }\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L, (long)2L,\
    \ (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++)\n        {\n            sum += q[i];\n        }\n        if (sum <= w)\n\
    \        {\n            for (int i = 0; i < q.Count / 2; i++)\n            {\n\
    \                if (q[i] != q[q.Count - 1 - i])\n                {\n        \
    \            return false;\n                }\n            }\n            return\
    \ true;\n        }\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L, (long)2L,\
    \ (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ae30933de6284c37805364b93a529560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ae30933de6284c37805364b93a529560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        long sum = 0;\n        foreach (long i in q) {\n            sum\
    \ += i;\n        }\n        if (sum > w) {\n            return false;\n      \
    \  }\n        int len = q.Count;\n        for (int i = 0; i < len / 2; i++) {\n\
    \            if (q[i] != q[len - i - 1]) {\n                return false;\n  \
    \          }\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L, (long)2L,\
    \ (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b2da34f2f5824d0eb9694093371d058e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b2da34f2f5824d0eb9694093371d058e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        long sum = 0;\n        for (int i = 0; i < q.Count; i++) {\n \
    \           sum += q[i];\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        for (int i = 0; i < q.Count / 2; i++) {\n       \
    \     if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n     \
    \       }\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L, (long)2L,\
    \ (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        foreach (long l in q) {\n\
    \            sum += l;\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        for (int i = 0; i < q.Count / 2; i++) {\n       \
    \     if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n     \
    \       }\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L, (long)2L,\
    \ (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdc21e10b9484333986ad4e9af7e3322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdc21e10b9484333986ad4e9af7e3322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        return q.Sum() <= w && q.SequenceEqual(q.Reverse());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n \
    \   Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L})), (5L))\
    \ == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L})),\
    \ (5L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (1L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})), (6L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)5L})), (5L)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplas_9m_u.cs(17,48): error CS1503: Argument 2: cannot convert from ''void''
    to ''System.Collections.Generic.IEnumerable<long>''

    '
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        return q.Sum() <= w && q.SequenceEqual(q.Reverse());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n \
    \   Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L})), (5L))\
    \ == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L})),\
    \ (5L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (1L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})), (6L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)5L})), (5L)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplas_9m_u.cs(17,48): error CS1503: Argument 2: cannot convert from ''void''
    to ''System.Collections.Generic.IEnumerable<long>''

    '
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b2da34f2f5824d0eb9694093371d058e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b2da34f2f5824d0eb9694093371d058e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        foreach (long i in q)\n\
    \        {\n            sum += i;\n        }\n        if (sum > w)\n        {\n\
    \            return false;\n        }\n        else\n        {\n            int\
    \ len = q.Count;\n            for (int i = 0; i < len / 2; i++)\n            {\n\
    \                if (q[i] != q[len - i - 1])\n                {\n            \
    \        return false;\n                }\n            }\n            return true;\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n \
    \   Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L})), (5L))\
    \ == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L})),\
    \ (5L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (1L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})), (6L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)5L})), (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        foreach (long i in q) {\n\
    \            sum += i;\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        int n = q.Count;\n        for (int i = 0; i < n /\
    \ 2; i++) {\n            if (q[i] != q[n - i - 1]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        foreach (long l in q)\n\
    \        {\n            sum += l;\n        }\n        if (sum > w)\n        {\n\
    \            return false;\n        }\n        else\n        {\n            int\
    \ i = 0;\n            int j = q.Count - 1;\n            while (i < j)\n      \
    \      {\n                if (q[i] != q[j])\n                {\n             \
    \       return false;\n                }\n                i++;\n             \
    \   j--;\n            }\n            return true;\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        return q.Sum() <= w && q.SequenceEqual(q.Reverse());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n \
    \   Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L})), (5L))\
    \ == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L})),\
    \ (5L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (1L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})), (6L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)5L})), (5L)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplas_9m_u.cs(17,48): error CS1503: Argument 2: cannot convert from ''void''
    to ''System.Collections.Generic.IEnumerable<long>''

    '
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        bool isPalindrome = true;\n        for\
    \ (int i = 0; i < q.Count / 2; i++) {\n            if (q[i] != q[q.Count - 1 -\
    \ i]) {\n                isPalindrome = false;\n                break;\n     \
    \       }\n        }\n        return isPalindrome;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        foreach (long i in q) {\n\
    \            sum += i;\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        int l = q.Count;\n        for (int i = 0; i < l /\
    \ 2; i++) {\n            if (q[i] != q[l - i - 1]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976958
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L, (long)2L,\
    \ (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9adaecca28146768c7ae07912cc62dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9adaecca28146768c7ae07912cc62dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976958
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        long sum = 0;\n        for (int i = 0; i < q.Count; i++) {\n \
    \           sum += q[i];\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        for (int i = 0; i < q.Count / 2; i++) {\n       \
    \     if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n     \
    \       }\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L, (long)2L,\
    \ (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ae30933de6284c37805364b93a529560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ae30933de6284c37805364b93a529560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdc21e10b9484333986ad4e9af7e3322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdc21e10b9484333986ad4e9af7e3322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here.\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49fb02928ed541b38702acdaa3e2fb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49fb02928ed541b38702acdaa3e2fb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return true;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b7d47e9979964675a74dbb0e5437bf27>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b7d47e9979964675a74dbb0e5437bf27>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976958
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdc21e10b9484333986ad4e9af7e3322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdc21e10b9484333986ad4e9af7e3322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdc21e10b9484333986ad4e9af7e3322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdc21e10b9484333986ad4e9af7e3322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++)\n        {\n            sum += q[i];\n        }\n        if (sum > w)\n\
    \        {\n            return false;\n        }\n        for (int i = 0; i <\
    \ q.Count / 2; i++)\n        {\n            if (q[i] != q[q.Count - 1 - i])\n\
    \            {\n                return false;\n            }\n        }\n    \
    \    return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n \
    \   Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L})), (5L))\
    \ == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L})),\
    \ (5L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (1L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})), (6L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)5L})), (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here.\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49fb02928ed541b38702acdaa3e2fb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49fb02928ed541b38702acdaa3e2fb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdc21e10b9484333986ad4e9af7e3322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdc21e10b9484333986ad4e9af7e3322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5481398a754da48e17e5c4b86fed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        return q.Sum() <= w && q.SequenceEqual(q.Reverse());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n \
    \   Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L})), (5L))\
    \ == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L})),\
    \ (5L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (1L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})), (6L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)5L})), (5L)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplas_9m_u.cs(17,48): error CS1503: Argument 2: cannot convert from ''void''
    to ''System.Collections.Generic.IEnumerable<long>''

    '
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976957
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that returns True if the object q will\
    \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it\
    \ is a palindromic list) and the sum of its elements is less than or equal the\
    \ maximum possible weight w.\n    // Example:\n    // # 1+2 is less than the maximum\
    \ possible weight, but it's unbalanced.\n    // # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n    // # 3+2+3 is less than the maximum\
    \ possible weight, and it's balanced.\n    // # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    public static bool WillItFly(List<long> q, long\
    \ w) {\n        // Your code goes here.\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(WillItFly((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)1L, (long)2L})), (5L)) == (false));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L})), (5L)) == (true));\n    Debug.Assert(WillItFly((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (1L)) == (false));\n\
    \    Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (6L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)5L})),\
    \ (5L)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16ea59eb23af4adeab662fb89d76eb22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976957

language: cs
name: HumanEval_70_strange_sort_list
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  while (lst.Count > 0) {\n            if (i % 2 == 0) {\n                result.Add(lst[0]);\n\
    \                lst.RemoveAt(0);\n            } else {\n                result.Add(lst[lst.Count\
    \ - 1]);\n                lst.RemoveAt(lst.Count - 1);\n            }\n      \
    \      i++;\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b610a41723cc4a86b5ea0db05a64eb11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b610a41723cc4a86b5ea0db05a64eb11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Sort\
    \ the list first.\n        lst.Sort();\n        // Create a new list.\n      \
    \  List<long> newLst = new List<long>();\n        // Add the first element.\n\
    \        newLst.Add(lst[0]);\n        // Add the last element.\n        newLst.Add(lst[lst.Count\
    \ - 1]);\n        // Remove the first and last element from the list.\n      \
    \  lst.RemoveAt(0);\n        lst.RemoveAt(lst.Count - 1);\n        // While the\
    \ list is not empty.\n        while (lst.Count > 0) {\n            // Add the\
    \ first element.\n            newLst.Add(lst[0]);\n            // Remove the first\
    \ element.\n            lst.RemoveAt(0);\n            // If the list is empty,\
    \ break.\n            if (lst.Count == 0) break;\n            // Add the last\
    \ element.\n            newLst.Add(lst[lst.Count - 1]);\n            // Remove\
    \ the last element.\n            lst.RemoveAt(lst.Count - 1);\n        }\n   \
    \     // Return the new list.\n        return newLst;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d48c733a90684c66b2eff3a3ff1aa4cb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d48c733a90684c66b2eff3a3ff1aa4cb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        lst.Sort();\n        int i = 0;\n        int\
    \ j = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n\
    \            if (i != j) {\n                res.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return res;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        lst.Sort();\n        int i = 0;\n        int\
    \ j = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n\
    \            if (i != j) {\n                res.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return res;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        while (lst.Count > 0) {\n            long\
    \ min = lst.Min();\n            result.Add(min);\n            lst.Remove(min);\n\
    \            if (lst.Count == 0) break;\n            long max = lst.Max();\n \
    \           result.Add(max);\n            lst.Remove(max);\n        }\n      \
    \  return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f477f5dc5e0348b3b1c6b164e7ab9559>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f477f5dc5e0348b3b1c6b164e7ab9559>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ ret = new List<long>();\n        List<long> sorted = lst.OrderBy(x => x).ToList();\n\
    \        int i = 0;\n        while (sorted.Count > 0) {\n            if (i % 2\
    \ == 0) {\n                ret.Add(sorted[0]);\n                sorted.RemoveAt(0);\n\
    \            } else {\n                ret.Add(sorted[sorted.Count - 1]);\n  \
    \              sorted.RemoveAt(sorted.Count - 1);\n            }\n           \
    \ i++;\n        }\n        return ret;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7699d105a4ca47cdb1fce799e8f866ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7699d105a4ca47cdb1fce799e8f866ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        if (lst.Count == 0) return result;\n   \
    \     lst.Sort();\n        int i = 0;\n        int j = lst.Count - 1;\n      \
    \  while (i <= j) {\n            result.Add(lst[i]);\n            if (i != j)\
    \ result.Add(lst[j]);\n            i++;\n            j--;\n        }\n       \
    \ return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <be919cc957024b51b9ae50c0c196f200>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <be919cc957024b51b9ae50c0c196f200>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        var result\
    \ = new List<long>();\n        var sorted = lst.OrderBy(x => x).ToList();\n  \
    \      var min = 0;\n        var max = lst.Count - 1;\n        var i = 0;\n  \
    \      while (i < lst.Count) {\n            if (i % 2 == 0) {\n              \
    \  result.Add(sorted[min]);\n                min++;\n            } else {\n  \
    \              result.Add(sorted[max]);\n                max--;\n            }\n\
    \            i++;\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47bfcff576a04a0fa34f04a8c32ac0bf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47bfcff576a04a0fa34f04a8c32ac0bf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement strange sort.\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <273752934fff4adfb3e80cff6587a6d7>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <273752934fff4adfb3e80cff6587a6d7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        while (lst.Count > 0) {\n            long\
    \ min = lst.Min();\n            result.Add(min);\n            lst.Remove(min);\n\
    \            if (lst.Count > 0) {\n                long max = lst.Max();\n   \
    \             result.Add(max);\n                lst.Remove(max);\n           \
    \ }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d52ba47853da4674a63177c8c812a1d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d52ba47853da4674a63177c8c812a1d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Your\
    \ code here\n        return lst;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <59dded38be994aec885f9c8db3ed049c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <59dded38be994aec885f9c8db3ed049c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement strange sorting.\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <4486df48360b476a9578294e8391e88d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <4486df48360b476a9578294e8391e88d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        var sorted\
    \ = lst.OrderBy(x => x).ToList();\n        var result = new List<long>();\n  \
    \      var i = 0;\n        var j = sorted.Count - 1;\n        while (i <= j) {\n\
    \            result.Add(sorted[i]);\n            if (i != j) {\n             \
    \   result.Add(sorted[j]);\n            }\n            i++;\n            j--;\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6940e7afa30f449cbfdb00cf1d32e6f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6940e7afa30f449cbfdb00cf1d32e6f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Sort\
    \ the list.\n        lst.Sort();\n        // Create a new list.\n        List<long>\
    \ ret = new List<long>();\n        // While there are still elements in the list.\n\
    \        while (lst.Count > 0) {\n            // Add the minimum value to the\
    \ new list.\n            ret.Add(lst[0]);\n            // Remove the minimum value\
    \ from the list.\n            lst.RemoveAt(0);\n            // If there are still\
    \ elements in the list.\n            if (lst.Count > 0) {\n                //\
    \ Add the maximum value to the new list.\n                ret.Add(lst[lst.Count\
    \ - 1]);\n                // Remove the maximum value from the list.\n       \
    \         lst.RemoveAt(lst.Count - 1);\n            }\n        }\n        // Return\
    \ the new list.\n        return ret;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61df0612150640309a3e8a165636d156>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61df0612150640309a3e8a165636d156>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        List<long> remaining = new List<long>(lst);\n\
    \        while (remaining.Count > 0) {\n            long min = remaining.Min();\n\
    \            result.Add(min);\n            remaining.Remove(min);\n          \
    \  if (remaining.Count == 0) {\n                break;\n            }\n      \
    \      long max = remaining.Max();\n            result.Add(max);\n           \
    \ remaining.Remove(max);\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f955da75cd854cc497d76a8b34edf98c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f955da75cd854cc497d76a8b34edf98c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Write\
    \ your code here.\n        return new List<long>();\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <07011b71e42c446db3253479ffd78c95>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <07011b71e42c446db3253479ffd78c95>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        lst.Sort();\n        int i = 0;\n        int\
    \ j = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n\
    \            if (i != j) {\n                res.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return res;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Sort\
    \ the list\n        lst.Sort();\n        // Create new list\n        List<long>\
    \ newList = new List<long>();\n        // Create two indexes, one for the beginning\
    \ and one for the end\n        int start = 0;\n        int end = lst.Count - 1;\n\
    \        // While the start index is less than the end index\n        while (start\
    \ < end) {\n            // Add the maximum value to the new list\n           \
    \ newList.Add(lst[end]);\n            // Add the minimum value to the new list\n\
    \            newList.Add(lst[start]);\n            // Increment the start index\n\
    \            start++;\n            // Decrement the end index\n            end--;\n\
    \        }\n        // If the start index is equal to the end index\n        if\
    \ (start == end) {\n            // Add the value to the new list\n           \
    \ newList.Add(lst[start]);\n        }\n        // Return the new list\n      \
    \  return newList;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9cd2400d29f34d67b56fc20ed90ff1ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9cd2400d29f34d67b56fc20ed90ff1ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        lst.Sort();\n        int i = 0;\n        int\
    \ j = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n\
    \            if (i != j) {\n                res.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return res;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        if (lst.Count\
    \ == 0) return lst;\n        List<long> res = new List<long>();\n        res.Add(lst.Min());\n\
    \        lst.Remove(lst.Min());\n        while (lst.Count > 0) {\n           \
    \ res.Add(lst.Max());\n            lst.Remove(lst.Max());\n            if (lst.Count\
    \ == 0) break;\n            res.Add(lst.Min());\n            lst.Remove(lst.Min());\n\
    \        }\n        return res;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0961cfc290514a04b3cfe6da0a5e00f4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0961cfc290514a04b3cfe6da0a5e00f4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        var res\
    \ = new List<long>();\n        var min = lst.Min();\n        var max = lst.Max();\n\
    \        var minIndex = lst.IndexOf(min);\n        var maxIndex = lst.IndexOf(max);\n\
    \        res.Add(min);\n        res.Add(max);\n        lst.RemoveAt(minIndex);\n\
    \        lst.RemoveAt(maxIndex);\n        while (lst.Count > 0) {\n          \
    \  min = lst.Min();\n            max = lst.Max();\n            minIndex = lst.IndexOf(min);\n\
    \            maxIndex = lst.IndexOf(max);\n            res.Insert(0, min);\n \
    \           res.Add(max);\n            lst.RemoveAt(minIndex);\n            lst.RemoveAt(maxIndex);\n\
    \        }\n        return res;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].RemoveAt (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.StrangeSortList\
    \ (System.Collections.Generic.List`1[T] lst) [0x0003e] in <91da490bb8fb4e95ac8620534edcf774>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00017] in <91da490bb8fb4e95ac8620534edcf774>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].RemoveAt (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.StrangeSortList\
    \ (System.Collections.Generic.List`1[T] lst) [0x0003e] in <91da490bb8fb4e95ac8620534edcf774>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00017] in <91da490bb8fb4e95ac8620534edcf774>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Write\
    \ your code here\n        return null;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <9422d93278d54a1fab3bc57074ce79a2>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <9422d93278d54a1fab3bc57074ce79a2>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ ret = new List<long>();\n        while (lst.Count > 0) {\n            long min\
    \ = lst.Min();\n            ret.Add(min);\n            lst.Remove(min);\n    \
    \        if (lst.Count == 0)\n                break;\n            long max = lst.Max();\n\
    \            ret.Add(max);\n            lst.Remove(max);\n        }\n        return\
    \ ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9083fc42737947ed8c9be1c6b3fab042>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9083fc42737947ed8c9be1c6b3fab042>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Your\
    \ code goes here.\n        return lst;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6b52e1704f024177acb02dda886ed375>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6b52e1704f024177acb02dda886ed375>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976237
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Write\
    \ your code here.\n        return null;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <16e53aa9aec54b6b97480142a65ab5a2>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <16e53aa9aec54b6b97480142a65ab5a2>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Implement\
    \ strange sorting here.\n        return lst;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dfd583339b8b428db873312518170334>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dfd583339b8b428db873312518170334>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976237
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        var sorted\
    \ = lst.OrderBy(x => x).ToList();\n        var res = new List<long>();\n     \
    \   var i = 0;\n        while (sorted.Count > 0) {\n            res.Add(sorted[i]);\n\
    \            sorted.RemoveAt(i);\n            if (sorted.Count == 0) break;\n\
    \            i = sorted.Count - 1 - i;\n        }\n        return res;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.StrangeSortList\
    \ (System.Collections.Generic.List`1[T] lst) [0x00037] in <90f21d6daff8436185591f4b7286f120>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00017] in <90f21d6daff8436185591f4b7286f120>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.StrangeSortList\
    \ (System.Collections.Generic.List`1[T] lst) [0x00037] in <90f21d6daff8436185591f4b7286f120>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00017] in <90f21d6daff8436185591f4b7286f120>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Write\
    \ your code here\n        return lst;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5561be752ddc406e813379db5d39157d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5561be752ddc406e813379db5d39157d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        while (lst.Count > 0) {\n            long\
    \ min = lst.Min();\n            lst.Remove(min);\n            result.Add(min);\n\
    \            if (lst.Count == 0) break;\n            long max = lst.Max();\n \
    \           lst.Remove(max);\n            result.Add(max);\n        }\n      \
    \  return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f612e307c434a89abcf589ed002b3d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f612e307c434a89abcf589ed002b3d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976237
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  while (lst.Count > 0) {\n            result.Add(lst[i]);\n            lst.RemoveAt(i);\n\
    \            if (lst.Count > 0) {\n                result.Add(lst[lst.Count -\
    \ 1]);\n                lst.RemoveAt(lst.Count - 1);\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <213e1897c29040f1ba2e442ac0d8e8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <213e1897c29040f1ba2e442ac0d8e8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Write\
    \ your code here\n        List<long> result = new List<long>();\n        lst.Sort();\n\
    \        int i = 0;\n        int j = lst.Count - 1;\n        while (i <= j) {\n\
    \            result.Add(lst[i]);\n            if (i != j) {\n                result.Add(lst[j]);\n\
    \            }\n            i++;\n            j--;\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <371c4e0acb2b4a7a9b3d7e462ab91359>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <371c4e0acb2b4a7a9b3d7e462ab91359>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976238
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        lst.Sort();\n        int i = 0;\n        int\
    \ j = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n\
    \            if (i != j) {\n                res.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return res;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ implement strange sort\n        return lst;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <71dcbc852ddd44b0839793ef8ef86144>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <71dcbc852ddd44b0839793ef8ef86144>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  while (lst.Count > 0) {\n            if (i % 2 == 0) {\n                result.Add(lst[0]);\n\
    \                lst.RemoveAt(0);\n            } else {\n                result.Add(lst[lst.Count\
    \ - 1]);\n                lst.RemoveAt(lst.Count - 1);\n            }\n      \
    \      i++;\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b610a41723cc4a86b5ea0db05a64eb11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b610a41723cc4a86b5ea0db05a64eb11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Write\
    \ your code here\n        return null;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <9422d93278d54a1fab3bc57074ce79a2>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <9422d93278d54a1fab3bc57074ce79a2>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        lst.Sort();\n        int i = 0;\n        int\
    \ j = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n\
    \            if (i != j) {\n                res.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return res;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Write\
    \ your code here\n        return null;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <9422d93278d54a1fab3bc57074ce79a2>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <9422d93278d54a1fab3bc57074ce79a2>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        List<long> lst1 = new List<long>(lst);\n  \
    \      List<long> lst2 = new List<long>(lst);\n        lst1.Sort();\n        lst2.Sort();\n\
    \        lst2.Reverse();\n        int i = 0;\n        while (lst1.Count > 0) {\n\
    \            if (i % 2 == 0) {\n                res.Add(lst1[0]);\n          \
    \      lst1.RemoveAt(0);\n            } else {\n                res.Add(lst2[0]);\n\
    \                lst2.RemoveAt(0);\n            }\n            i++;\n        }\n\
    \        return res;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbbbf573c4054ef59b6b8b49f178d955>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbbbf573c4054ef59b6b8b49f178d955>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976238
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        var sorted\
    \ = lst.OrderBy(x => x).ToList();\n        var result = new List<long>();\n  \
    \      var i = 0;\n        var j = sorted.Count - 1;\n        while (i <= j) {\n\
    \            result.Add(sorted[i]);\n            if (i != j) {\n             \
    \   result.Add(sorted[j]);\n            }\n            i++;\n            j--;\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6940e7afa30f449cbfdb00cf1d32e6f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6940e7afa30f449cbfdb00cf1d32e6f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Sort\
    \ the list.\n        lst.Sort();\n        // Create a new list to hold the result.\n\
    \        List<long> result = new List<long>();\n        // Create two iterators,\
    \ one for the beginning of the list,\n        // and one for the end.\n      \
    \  int i = 0;\n        int j = lst.Count - 1;\n        // Loop until we have added\
    \ all the elements to the result list.\n        while (result.Count < lst.Count)\
    \ {\n            // Add the smallest element to the result list.\n           \
    \ result.Add(lst[i]);\n            // If there are still elements left in the\
    \ list, add the largest.\n            if (result.Count < lst.Count) {\n      \
    \          result.Add(lst[j]);\n            }\n            // Move the iterators\
    \ forward and backward.\n            i++;\n            j--;\n        }\n     \
    \   // Return the result list.\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a3d21c8f604f4b2ba13689729c95d908>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a3d21c8f604f4b2ba13689729c95d908>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976238
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        while (lst.Count > 0) {\n            long\
    \ min = lst.Min();\n            result.Add(min);\n            lst.Remove(min);\n\
    \            if (lst.Count > 0) {\n                long max = lst.Max();\n   \
    \             result.Add(max);\n                lst.Remove(max);\n           \
    \ }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d52ba47853da4674a63177c8c812a1d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d52ba47853da4674a63177c8c812a1d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Write\
    \ your code here\n        return null;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <9422d93278d54a1fab3bc57074ce79a2>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <9422d93278d54a1fab3bc57074ce79a2>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        lst.Sort();\n\
    \        List<long> res = new List<long>();\n        int i = 0;\n        int j\
    \ = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n \
    \           if (i != j) {\n                res.Add(lst[j]);\n            }\n \
    \           i++;\n            j--;\n        }\n        return res;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2a65cdac89fc435cb80f6575ff3d5594>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2a65cdac89fc435cb80f6575ff3d5594>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement strange sort.\n        return lst;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4bf0761e9cd5471f96a512c37688fcaa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4bf0761e9cd5471f96a512c37688fcaa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        List<long> lst2 = new List<long>(lst);\n  \
    \      lst2.Sort();\n        int i = 0;\n        while (lst2.Count > 0) {\n  \
    \          if (i % 2 == 0) {\n                res.Add(lst2[0]);\n            \
    \    lst2.RemoveAt(0);\n            } else {\n                res.Add(lst2[lst2.Count\
    \ - 1]);\n                lst2.RemoveAt(lst2.Count - 1);\n            }\n    \
    \        i++;\n        }\n        return res;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce7066a0ec7747e6a8d676eeb26d97d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce7066a0ec7747e6a8d676eeb26d97d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976238
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Write\
    \ your code here.\n        return null;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <16e53aa9aec54b6b97480142a65ab5a2>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <16e53aa9aec54b6b97480142a65ab5a2>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        List<long> lst1 = new List<long>(lst);\n  \
    \      List<long> lst2 = new List<long>(lst);\n        lst1.Sort();\n        lst2.Sort();\n\
    \        lst2.Reverse();\n        int i = 0;\n        while (lst1.Count > 0) {\n\
    \            if (i % 2 == 0) {\n                res.Add(lst1[0]);\n          \
    \      lst1.RemoveAt(0);\n            } else {\n                res.Add(lst2[0]);\n\
    \                lst2.RemoveAt(0);\n            }\n            i++;\n        }\n\
    \        return res;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbbbf573c4054ef59b6b8b49f178d955>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbbbf573c4054ef59b6b8b49f178d955>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976238
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        while (lst.Count > 0) {\n            long\
    \ min = lst.Min();\n            result.Add(min);\n            lst.Remove(min);\n\
    \            if (lst.Count > 0) {\n                long max = lst.Max();\n   \
    \             result.Add(max);\n                lst.Remove(max);\n           \
    \ }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d52ba47853da4674a63177c8c812a1d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d52ba47853da4674a63177c8c812a1d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        lst.Sort();\n        int i = 0;\n        int\
    \ j = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n\
    \            if (i != j) {\n                res.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return res;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        long min = lst.Min();\n        long max = lst.Max();\n\
    \        while (lst.Count > 0) {\n            res.Add(min);\n            lst.Remove(min);\n\
    \            if (lst.Count == 0) break;\n            res.Add(max);\n         \
    \   lst.Remove(max);\n            min = lst.Min();\n            max = lst.Max();\n\
    \        }\n        return res;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.Min (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00022] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.StrangeSortList\
    \ (System.Collections.Generic.List`1[T] lst) [0x00047] in <b81e0a3b56bf4cf3b03b774dddf11f94>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00017] in <b81e0a3b56bf4cf3b03b774dddf11f94>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence\
    \ contains no elements\n  at System.Linq.Enumerable.Min (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00022] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.StrangeSortList\
    \ (System.Collections.Generic.List`1[T] lst) [0x00047] in <b81e0a3b56bf4cf3b03b774dddf11f94>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00017] in <b81e0a3b56bf4cf3b03b774dddf11f94>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Sort\
    \ the list.\n        lst.Sort();\n        // Create a new list.\n        List<long>\
    \ result = new List<long>();\n        // While the list is not empty.\n      \
    \  while (lst.Count > 0) {\n            // Add the minimum value.\n          \
    \  result.Add(lst[0]);\n            // Remove the minimum value.\n           \
    \ lst.RemoveAt(0);\n            // If the list is not empty.\n            if (lst.Count\
    \ > 0) {\n                // Add the maximum value.\n                result.Add(lst[lst.Count\
    \ - 1]);\n                // Remove the maximum value.\n                lst.RemoveAt(lst.Count\
    \ - 1);\n            }\n        }\n        // Return the result.\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <298bb426f6ad4bc38b43fa9ef0852b8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <298bb426f6ad4bc38b43fa9ef0852b8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976238
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Write\
    \ your code here\n        List<long> result = new List<long>();\n        lst.Sort();\n\
    \        int i = 0;\n        while (lst.Count > 0) {\n            if (i % 2 ==\
    \ 0) {\n                result.Add(lst[0]);\n                lst.RemoveAt(0);\n\
    \            } else {\n                result.Add(lst[lst.Count - 1]);\n     \
    \           lst.RemoveAt(lst.Count - 1);\n            }\n            i++;\n  \
    \      }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6a104be0d5974d7789d4c5ea5abf91f4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6a104be0d5974d7789d4c5ea5abf91f4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976238
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        List<long> temp = new List<long>();\n  \
    \      temp.AddRange(lst);\n        while (temp.Count > 0) {\n            long\
    \ min = temp.Min();\n            result.Add(min);\n            temp.Remove(min);\n\
    \            if (temp.Count > 0) {\n                long max = temp.Max();\n \
    \               result.Add(max);\n                temp.Remove(max);\n        \
    \    }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <594d03fa8ac547cc8cc1624a1149bc50>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <594d03fa8ac547cc8cc1624a1149bc50>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976238
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ sorted = new List<long>();\n        while (lst.Count > 0) {\n            long\
    \ min = lst.Min();\n            sorted.Add(min);\n            lst.Remove(min);\n\
    \            if (lst.Count > 0) {\n                long max = lst.Max();\n   \
    \             sorted.Add(max);\n                lst.Remove(max);\n           \
    \ }\n        }\n        return sorted;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7f7142868e184bb487b0d4beff9a2d1b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7f7142868e184bb487b0d4beff9a2d1b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976238
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Write\
    \ your code here\n        return lst;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5561be752ddc406e813379db5d39157d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5561be752ddc406e813379db5d39157d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        lst.Sort();\n        int i = 0;\n        int\
    \ j = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n\
    \            if (i != j) {\n                res.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return res;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        lst.Sort();\n        int i = 0;\n        int\
    \ j = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n\
    \            if (i != j) {\n                res.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return res;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ ret = new List<long>();\n        lst.Sort();\n        int i = 0;\n        int\
    \ j = lst.Count - 1;\n        while (i <= j) {\n            ret.Add(lst[i]);\n\
    \            if (i != j) {\n                ret.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return ret;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7195c66e2ea4499f8c5316a5146be53e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7195c66e2ea4499f8c5316a5146be53e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976238
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        var result\
    \ = new List<long>();\n        var sorted = lst.OrderBy(x => x).ToList();\n  \
    \      var min = sorted.First();\n        var max = sorted.Last();\n        var\
    \ minIndex = lst.IndexOf(min);\n        var maxIndex = lst.IndexOf(max);\n   \
    \     var minRemaining = sorted.Skip(1).ToList();\n        var maxRemaining =\
    \ sorted.Take(sorted.Count - 1).ToList();\n        var minRemainingIndex = lst.IndexOf(minRemaining.First());\n\
    \        var maxRemainingIndex = lst.IndexOf(maxRemaining.Last());\n        result.Add(min);\n\
    \        result.Add(max);\n        while (minRemaining.Count > 0) {\n        \
    \    min = minRemaining.First();\n            max = maxRemaining.Last();\n   \
    \         minIndex = lst.IndexOf(min);\n            maxIndex = lst.IndexOf(max);\n\
    \            minRemaining = minRemaining.Skip(1).ToList();\n            maxRemaining\
    \ = maxRemaining.Take(maxRemaining.Count - 1).ToList();\n            minRemainingIndex\
    \ = lst.IndexOf(minRemaining.First());\n            maxRemainingIndex = lst.IndexOf(maxRemaining.Last());\n\
    \            result.Add(min);\n            result.Add(max);\n        }\n     \
    \   return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.StrangeSortList\
    \ (System.Collections.Generic.List`1[T] lst) [0x000ee] in <7560e59733b8405fbe0180780739bfad>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00017] in <7560e59733b8405fbe0180780739bfad>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence\
    \ contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.StrangeSortList\
    \ (System.Collections.Generic.List`1[T] lst) [0x000ee] in <7560e59733b8405fbe0180780739bfad>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00017] in <7560e59733b8405fbe0180780739bfad>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976238
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        List<long> lst2 = new List<long>(lst);\n  \
    \      while (lst2.Count > 0) {\n            long min = lst2.Min();\n        \
    \    res.Add(min);\n            lst2.Remove(min);\n            if (lst2.Count\
    \ > 0) {\n                long max = lst2.Max();\n                res.Add(max);\n\
    \                lst2.Remove(max);\n            }\n        }\n        return res;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7607e5f9126d4985a8a2ee75b1fc4c9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7607e5f9126d4985a8a2ee75b1fc4c9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976238
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Write\
    \ your code here\n        return lst;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5561be752ddc406e813379db5d39157d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5561be752ddc406e813379db5d39157d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement this method.\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <d39d31e042964593a7ecda7b99e864d9>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <d39d31e042964593a7ecda7b99e864d9>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        lst.Sort();\n        int i = 0;\n        int\
    \ j = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n\
    \            if (i != j) {\n                res.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return res;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement this method.\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b835b86b68e746acbf69334f7ff331d5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b835b86b68e746acbf69334f7ff331d5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976238
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Sort\
    \ the list.\n        lst.Sort();\n        // Create a new list.\n        List<long>\
    \ newList = new List<long>();\n        // Iterate through the list.\n        for\
    \ (int i = 0; i < lst.Count; i++) {\n            // If the index is even, add\
    \ the minimum value.\n            if (i % 2 == 0) {\n                newList.Add(lst[i\
    \ / 2]);\n            }\n            // If the index is odd, add the maximum value.\n\
    \            else {\n                newList.Add(lst[lst.Count - 1 - i / 2]);\n\
    \            }\n        }\n        // Return the new list.\n        return newList;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bb124a01bc04e3a954ca851f4806468>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bb124a01bc04e3a954ca851f4806468>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976238
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement strange sorting.\n        return lst;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <306adb32c0664c4daa42afba0145f5c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <306adb32c0664c4daa42afba0145f5c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        lst.Sort();\n        int i = 0;\n        int\
    \ j = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n\
    \            if (i != j) {\n                res.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return res;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        List<long> min = new List<long>();\n      \
    \  List<long> max = new List<long>();\n        for (int i = 0; i < lst.Count;\
    \ i++) {\n            if (i % 2 == 0) {\n                min.Add(lst[i]);\n  \
    \          } else {\n                max.Add(lst[i]);\n            }\n       \
    \ }\n        min.Sort();\n        max.Sort();\n        max.Reverse();\n      \
    \  for (int i = 0; i < min.Count; i++) {\n            res.Add(min[i]);\n     \
    \       if (i < max.Count) {\n                res.Add(max[i]);\n            }\n\
    \        }\n        return res;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaa7f4828ac54a8aa8a5e10d505f72e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaa7f4828ac54a8aa8a5e10d505f72e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        while (lst.Count > 0) {\n            long\
    \ min = lst.Min();\n            result.Add(min);\n            lst.Remove(min);\n\
    \            if (lst.Count > 0) {\n                long max = lst.Max();\n   \
    \             result.Add(max);\n                lst.Remove(max);\n           \
    \ }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d52ba47853da4674a63177c8c812a1d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d52ba47853da4674a63177c8c812a1d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        int i = 0;\n        while (lst.Count > 0)\
    \ {\n            if (i % 2 == 0) {\n                long min = lst.Min();\n  \
    \              result.Add(min);\n                lst.Remove(min);\n          \
    \  } else {\n                long max = lst.Max();\n                result.Add(max);\n\
    \                lst.Remove(max);\n            }\n            i++;\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <62856ae8811246e487e73106a53510a1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <62856ae8811246e487e73106a53510a1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Write\
    \ your code here\n        return lst;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5561be752ddc406e813379db5d39157d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5561be752ddc406e813379db5d39157d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976237
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        // Sort the list\n        lst.Sort();\n\
    \        // Start with the minimum value\n        result.Add(lst[0]);\n      \
    \  // Remove the minimum value from the list\n        lst.RemoveAt(0);\n     \
    \   // While there are still elements in the list\n        while (lst.Count >\
    \ 0) {\n            // Add the maximum value\n            result.Add(lst[lst.Count\
    \ - 1]);\n            // Remove the maximum value from the list\n            lst.RemoveAt(lst.Count\
    \ - 1);\n            // If there are still elements in the list\n            if\
    \ (lst.Count > 0) {\n                // Add the minimum value\n              \
    \  result.Add(lst[0]);\n                // Remove the minimum value from the list\n\
    \                lst.RemoveAt(0);\n            }\n        }\n        // Return\
    \ the result\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f6a7dc0a9c404238b5856af6f1c0dfc4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f6a7dc0a9c404238b5856af6f1c0dfc4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        lst.Sort();\n        int i = 0;\n        int\
    \ j = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n\
    \            if (i != j) {\n                res.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return res;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        List<long> temp = new List<long>();\n  \
    \      temp.AddRange(lst);\n        while (temp.Count > 0) {\n            long\
    \ min = temp.Min();\n            long max = temp.Max();\n            result.Add(min);\n\
    \            result.Add(max);\n            temp.Remove(min);\n            temp.Remove(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd8cde707e5e451fba70542ff4aaacca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd8cde707e5e451fba70542ff4aaacca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ ret = new List<long>();\n        while (lst.Count > 0) {\n            long min\
    \ = lst.Min();\n            ret.Add(min);\n            lst.Remove(min);\n    \
    \        if (lst.Count > 0) {\n                long max = lst.Max();\n       \
    \         ret.Add(max);\n                lst.Remove(max);\n            }\n   \
    \     }\n        return ret;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3365cdd4636949299cb6724f7564e1cc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3365cdd4636949299cb6724f7564e1cc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ ret = new List<long>();\n        List<long> lst2 = new List<long>(lst);\n  \
    \      while (lst2.Count > 0) {\n            long min = lst2.Min();\n        \
    \    ret.Add(min);\n            lst2.Remove(min);\n            if (lst2.Count\
    \ > 0) {\n                long max = lst2.Max();\n                ret.Add(max);\n\
    \                lst2.Remove(max);\n            }\n        }\n        return ret;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9337181dc22e464caba5ba84dbb0493b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9337181dc22e464caba5ba84dbb0493b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Your\
    \ code here.\n        return lst;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7274727040fb43138071c7fcb0cce03e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7274727040fb43138071c7fcb0cce03e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        long min = lst.Min();\n        long max\
    \ = lst.Max();\n        while (lst.Count > 0) {\n            result.Add(min);\n\
    \            lst.Remove(min);\n            if (lst.Count > 0) {\n            \
    \    result.Add(max);\n                lst.Remove(max);\n            }\n     \
    \       min = lst.Min();\n            max = lst.Max();\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.Min (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00022] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.StrangeSortList\
    \ (System.Collections.Generic.List`1[T] lst) [0x00047] in <b7b85c4d83ce4e7d98dd15776c493424>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00017] in <b7b85c4d83ce4e7d98dd15776c493424>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence\
    \ contains no elements\n  at System.Linq.Enumerable.Min (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00022] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.StrangeSortList\
    \ (System.Collections.Generic.List`1[T] lst) [0x00047] in <b7b85c4d83ce4e7d98dd15776c493424>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00017] in <b7b85c4d83ce4e7d98dd15776c493424>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Sort\
    \ the list.\n        lst.Sort();\n        // Create a new list to store the result.\n\
    \        List<long> result = new List<long>();\n        // Create two variables\
    \ to store the index of the minimum and maximum values.\n        int minIndex\
    \ = 0;\n        int maxIndex = lst.Count - 1;\n        // While the minimum index\
    \ is less than the maximum index.\n        while (minIndex < maxIndex) {\n   \
    \         // Add the minimum value to the result.\n            result.Add(lst[minIndex]);\n\
    \            // Add the maximum value to the result.\n            result.Add(lst[maxIndex]);\n\
    \            // Increment the minimum index.\n            minIndex++;\n      \
    \      // Decrement the maximum index.\n            maxIndex--;\n        }\n \
    \       // If the minimum index is equal to the maximum index,\n        // add\
    \ the value at the minimum index to the result.\n        if (minIndex == maxIndex)\
    \ {\n            result.Add(lst[minIndex]);\n        }\n        // Return the\
    \ result.\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <456ff825d89043e6a6dc9ddd545819a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <456ff825d89043e6a6dc9ddd545819a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Write\
    \ your code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        List<long> result = new List<long>();\n        lst.Sort();\n     \
    \   int i = 0;\n        while (lst.Count > 0) {\n            if (i % 2 == 0) {\n\
    \                result.Add(lst[0]);\n                lst.RemoveAt(0);\n     \
    \       } else {\n                result.Add(lst[lst.Count - 1]);\n          \
    \      lst.RemoveAt(lst.Count - 1);\n            }\n            i++;\n       \
    \ }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cdc57c3f82384b1faef81739012e2ac4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cdc57c3f82384b1faef81739012e2ac4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        lst.Sort();\n        int i = 0;\n        int\
    \ j = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n\
    \            if (i != j) {\n                res.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return res;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        lst.Sort();\n        int i = 0;\n        int\
    \ j = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n\
    \            if (i != j) {\n                res.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return res;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Sort\
    \ list.\n        lst.Sort();\n        // Create new list.\n        List<long>\
    \ newList = new List<long>();\n        // While there are still elements in the\
    \ list.\n        while (lst.Count > 0) {\n            // Add the minimum value.\n\
    \            newList.Add(lst[0]);\n            // Remove the minimum value.\n\
    \            lst.RemoveAt(0);\n            // If there are no more elements, break.\n\
    \            if (lst.Count == 0) break;\n            // Add the maximum value.\n\
    \            newList.Add(lst[lst.Count - 1]);\n            // Remove the maximum\
    \ value.\n            lst.RemoveAt(lst.Count - 1);\n        }\n        // Return\
    \ the new list.\n        return newList;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e59a97ca915c4527a3c46196f9389f5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e59a97ca915c4527a3c46196f9389f5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        List<long> remaining = new List<long>(lst);\n\
    \        while (remaining.Count > 0) {\n            long min = remaining.Min();\n\
    \            result.Add(min);\n            remaining.Remove(min);\n          \
    \  if (remaining.Count > 0) {\n                long max = remaining.Max();\n \
    \               result.Add(max);\n                remaining.Remove(max);\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <46ba7d65e79144c9aff3c915343b6b5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <46ba7d65e79144c9aff3c915343b6b5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        if (lst.Count == 0) return res;\n        lst.Sort();\n\
    \        int i = 0;\n        int j = lst.Count - 1;\n        while (i <= j) {\n\
    \            res.Add(lst[i]);\n            if (i != j) res.Add(lst[j]);\n    \
    \        i++;\n            j--;\n        }\n        return res;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <088d768a3c1e4b5eb9c6185591524e65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <088d768a3c1e4b5eb9c6185591524e65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        while (lst.Count > 0) {\n            long min\
    \ = lst.Min();\n            res.Add(min);\n            lst.Remove(min);\n    \
    \        if (lst.Count > 0) {\n                long max = lst.Max();\n       \
    \         res.Add(max);\n                lst.Remove(max);\n            }\n   \
    \     }\n        return res;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2483f0eef2a4c51934f210ab803ec02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2483f0eef2a4c51934f210ab803ec02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        List<long> lst2 = new List<long>(lst);\n\
    \        while (lst2.Count > 0) {\n            result.Add(lst2.Min());\n     \
    \       lst2.Remove(lst2.Min());\n            if (lst2.Count > 0) {\n        \
    \        result.Add(lst2.Max());\n                lst2.Remove(lst2.Max());\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3d9849ee5924a7fba818d75d05d1304>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3d9849ee5924a7fba818d75d05d1304>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ sorted = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  while (lst.Count > 0) {\n            if (i % 2 == 0) {\n                sorted.Add(lst[0]);\n\
    \                lst.RemoveAt(0);\n            } else {\n                sorted.Add(lst[lst.Count\
    \ - 1]);\n                lst.RemoveAt(lst.Count - 1);\n            }\n      \
    \      i++;\n        }\n        return sorted;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7de655c65ead40bc9623d395e52e7735>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7de655c65ead40bc9623d395e52e7735>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ sorted = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i < j) {\n            sorted.Add(lst[i]);\n\
    \            sorted.Add(lst[j]);\n            i++;\n            j--;\n       \
    \ }\n        if (i == j) {\n            sorted.Add(lst[i]);\n        }\n     \
    \   return sorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1c64ac636ca419f8ede4c9b734f7937>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1c64ac636ca419f8ede4c9b734f7937>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Write\
    \ your code here\n        return lst;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5561be752ddc406e813379db5d39157d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5561be752ddc406e813379db5d39157d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Sort\
    \ list.\n        lst.Sort();\n        // Create new list.\n        List<long>\
    \ newLst = new List<long>();\n        // While list is not empty.\n        while\
    \ (lst.Count > 0) {\n            // Add minimum value.\n            newLst.Add(lst[0]);\n\
    \            // Remove minimum value.\n            lst.RemoveAt(0);\n        \
    \    // If list is empty, break.\n            if (lst.Count == 0) {\n        \
    \        break;\n            }\n            // Add maximum value.\n          \
    \  newLst.Add(lst[lst.Count - 1]);\n            // Remove maximum value.\n   \
    \         lst.RemoveAt(lst.Count - 1);\n        }\n        // Return new list.\n\
    \        return newLst;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8ae4e43fa0064714986d572d792c5cd8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8ae4e43fa0064714986d572d792c5cd8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Write\
    \ your code here\n        return null;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <9422d93278d54a1fab3bc57074ce79a2>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <9422d93278d54a1fab3bc57074ce79a2>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement strange sort.\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <273752934fff4adfb3e80cff6587a6d7>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <273752934fff4adfb3e80cff6587a6d7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        lst.Sort();\n        int i = 0;\n        int\
    \ j = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n\
    \            if (i != j) {\n                res.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return res;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        lst.Sort();\n        int i = 0;\n        while\
    \ (lst.Count > 0) {\n            if (i % 2 == 0) {\n                res.Add(lst[0]);\n\
    \                lst.RemoveAt(0);\n            } else {\n                res.Add(lst[lst.Count\
    \ - 1]);\n                lst.RemoveAt(lst.Count - 1);\n            }\n      \
    \      i++;\n        }\n        return res;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ec84933708cd4d5ca24e511c68c16529>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ec84933708cd4d5ca24e511c68c16529>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        lst.Sort();\n        int i = 0;\n        int\
    \ j = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n\
    \            if (i != j) {\n                res.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return res;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Sort\
    \ the list.\n        lst.Sort();\n        // Create a new list.\n        List<long>\
    \ newList = new List<long>();\n        // Iterate through the list.\n        for\
    \ (int i = 0; i < lst.Count; i++) {\n            // If the index is even, add\
    \ the minimum value.\n            if (i % 2 == 0) {\n                newList.Add(lst[i]);\n\
    \            }\n            // If the index is odd, add the maximum value.\n \
    \           else {\n                newList.Add(lst[lst.Count - 1 - i]);\n   \
    \         }\n        }\n        // Return the new list.\n        return newList;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <93d5d44ac2e24824ba58369c494a224f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <93d5d44ac2e24824ba58369c494a224f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        var res\
    \ = new List<long>();\n        var min = lst.Min();\n        var max = lst.Max();\n\
    \        var minIndex = lst.IndexOf(min);\n        var maxIndex = lst.IndexOf(max);\n\
    \        res.Add(min);\n        res.Add(max);\n        lst.RemoveAt(minIndex);\n\
    \        lst.RemoveAt(maxIndex);\n        while (lst.Count > 0) {\n          \
    \  min = lst.Min();\n            max = lst.Max();\n            minIndex = lst.IndexOf(min);\n\
    \            maxIndex = lst.IndexOf(max);\n            res.Insert(0, min);\n \
    \           res.Add(max);\n            lst.RemoveAt(minIndex);\n            lst.RemoveAt(maxIndex);\n\
    \        }\n        return res;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].RemoveAt (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.StrangeSortList\
    \ (System.Collections.Generic.List`1[T] lst) [0x0003e] in <91da490bb8fb4e95ac8620534edcf774>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00017] in <91da490bb8fb4e95ac8620534edcf774>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].RemoveAt (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.StrangeSortList\
    \ (System.Collections.Generic.List`1[T] lst) [0x0003e] in <91da490bb8fb4e95ac8620534edcf774>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00017] in <91da490bb8fb4e95ac8620534edcf774>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement strange sort.\n        return lst;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4bf0761e9cd5471f96a512c37688fcaa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4bf0761e9cd5471f96a512c37688fcaa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ sorted = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  while (lst.Count > 0) {\n            if (i % 2 == 0) {\n                sorted.Add(lst[0]);\n\
    \                lst.RemoveAt(0);\n            } else {\n                sorted.Add(lst[lst.Count\
    \ - 1]);\n                lst.RemoveAt(lst.Count - 1);\n            }\n      \
    \      i++;\n        }\n        return sorted;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7de655c65ead40bc9623d395e52e7735>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7de655c65ead40bc9623d395e52e7735>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        var sorted\
    \ = lst.OrderBy(x => x).ToList();\n        var res = new List<long>();\n     \
    \   var i = 0;\n        var j = sorted.Count - 1;\n        while (i <= j) {\n\
    \            res.Add(sorted[i]);\n            if (i != j) {\n                res.Add(sorted[j]);\n\
    \            }\n            i++;\n            j--;\n        }\n        return\
    \ res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e21a78ddbaec4854a85b033fe26e0f89>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e21a78ddbaec4854a85b033fe26e0f89>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976240
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        List<long> lst2 = new List<long>(lst);\n  \
    \      lst2.Sort();\n        int i = 0;\n        while (lst2.Count > 0) {\n  \
    \          if (i % 2 == 0) {\n                res.Add(lst2[0]);\n            \
    \    lst2.RemoveAt(0);\n            } else {\n                res.Add(lst2[lst2.Count\
    \ - 1]);\n                lst2.RemoveAt(lst2.Count - 1);\n            }\n    \
    \        i++;\n        }\n        return res;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce7066a0ec7747e6a8d676eeb26d97d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce7066a0ec7747e6a8d676eeb26d97d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976238
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        if (lst.Count == 0) {\n            return\
    \ result;\n        }\n        long min = lst.Min();\n        long max = lst.Max();\n\
    \        result.Add(min);\n        lst.Remove(min);\n        while (lst.Count\
    \ > 0) {\n            if (lst.Count == 1) {\n                result.Add(lst[0]);\n\
    \                lst.RemoveAt(0);\n                break;\n            }\n   \
    \         if (lst.Count == 2) {\n                result.Add(lst[0]);\n       \
    \         result.Add(lst[1]);\n                lst.RemoveAt(0);\n            \
    \    lst.RemoveAt(0);\n                break;\n            }\n            long\
    \ min2 = lst.Min();\n            long max2 = lst.Max();\n            result.Add(max2);\n\
    \            lst.Remove(max2);\n            result.Add(min2);\n            lst.Remove(min2);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0be0d495a90f42118db79f698c811d4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0be0d495a90f42118db79f698c811d4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976240
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Sort\
    \ the list.\n        lst.Sort();\n        // Create a new list.\n        List<long>\
    \ res = new List<long>();\n        // While the list is not empty.\n        while\
    \ (lst.Count > 0) {\n            // Add the minimum value to the result.\n   \
    \         res.Add(lst[0]);\n            // Remove the minimum value from the list.\n\
    \            lst.RemoveAt(0);\n            // If the list is not empty.\n    \
    \        if (lst.Count > 0) {\n                // Add the maximum value to the\
    \ result.\n                res.Add(lst[lst.Count - 1]);\n                // Remove\
    \ the maximum value from the list.\n                lst.RemoveAt(lst.Count - 1);\n\
    \            }\n        }\n        // Return the result.\n        return res;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0026b71192c44ba28396b8534620df35>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0026b71192c44ba28396b8534620df35>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976240
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Implement\
    \ strange sorting here.\n        return lst;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dfd583339b8b428db873312518170334>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dfd583339b8b428db873312518170334>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Sort\
    \ the list.\n        lst.Sort();\n        // Create a new list.\n        List<long>\
    \ result = new List<long>();\n        // While the list is not empty.\n      \
    \  while (lst.Count > 0) {\n            // Add the minimum value to the result.\n\
    \            result.Add(lst[0]);\n            // Remove the minimum value from\
    \ the list.\n            lst.RemoveAt(0);\n            // If the list is empty,\
    \ break.\n            if (lst.Count == 0) break;\n            // Add the maximum\
    \ value to the result.\n            result.Add(lst[lst.Count - 1]);\n        \
    \    // Remove the maximum value from the list.\n            lst.RemoveAt(lst.Count\
    \ - 1);\n        }\n        // Return the result.\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fa7194ffaac141e3a14b808635c5b3d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fa7194ffaac141e3a14b808635c5b3d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976240
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        var sorted = lst.OrderBy(x => x).ToList();\n\
    \        int i = 0;\n        while (sorted.Count > 0) {\n            if (i % 2\
    \ == 0) {\n                result.Add(sorted[0]);\n                sorted.RemoveAt(0);\n\
    \            } else {\n                result.Add(sorted[sorted.Count - 1]);\n\
    \                sorted.RemoveAt(sorted.Count - 1);\n            }\n         \
    \   i++;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <064b7cf559a84d9a901eb433bd180796>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <064b7cf559a84d9a901eb433bd180796>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976240
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  while (lst.Count > 0) {\n            if (i % 2 == 0) {\n                result.Add(lst[0]);\n\
    \                lst.RemoveAt(0);\n            } else {\n                result.Add(lst[lst.Count\
    \ - 1]);\n                lst.RemoveAt(lst.Count - 1);\n            }\n      \
    \      i++;\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b610a41723cc4a86b5ea0db05a64eb11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b610a41723cc4a86b5ea0db05a64eb11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  while (lst.Count > 0) {\n            if (i % 2 == 0) {\n                result.Add(lst[0]);\n\
    \                lst.RemoveAt(0);\n            } else {\n                result.Add(lst[lst.Count\
    \ - 1]);\n                lst.RemoveAt(lst.Count - 1);\n            }\n      \
    \      i++;\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b610a41723cc4a86b5ea0db05a64eb11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b610a41723cc4a86b5ea0db05a64eb11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        var res\
    \ = new List<long>();\n        var min = lst.Min();\n        var max = lst.Max();\n\
    \        var minIndex = lst.IndexOf(min);\n        var maxIndex = lst.IndexOf(max);\n\
    \        var minCount = 0;\n        var maxCount = 0;\n        while (minCount\
    \ < lst.Count && maxCount < lst.Count) {\n            res.Add(min);\n        \
    \    res.Add(max);\n            minCount++;\n            maxCount++;\n       \
    \     min = lst.Skip(minIndex + 1).Min();\n            max = lst.Skip(maxIndex\
    \ + 1).Max();\n            minIndex = lst.IndexOf(min);\n            maxIndex\
    \ = lst.IndexOf(max);\n        }\n        return res;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.Max (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00022] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.StrangeSortList\
    \ (System.Collections.Generic.List`1[T] lst) [0x00064] in <f3506547076b4f1abc766cc1bbcebdb3>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00017] in <f3506547076b4f1abc766cc1bbcebdb3>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence\
    \ contains no elements\n  at System.Linq.Enumerable.Max (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00022] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.StrangeSortList\
    \ (System.Collections.Generic.List`1[T] lst) [0x00064] in <f3506547076b4f1abc766cc1bbcebdb3>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00017] in <f3506547076b4f1abc766cc1bbcebdb3>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976240
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  while (lst.Count > 0) {\n            if (i % 2 == 0) {\n                result.Add(lst[0]);\n\
    \                lst.RemoveAt(0);\n            } else {\n                result.Add(lst[lst.Count\
    \ - 1]);\n                lst.RemoveAt(lst.Count - 1);\n            }\n      \
    \      i++;\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b610a41723cc4a86b5ea0db05a64eb11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b610a41723cc4a86b5ea0db05a64eb11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Write\
    \ your code here\n        return lst;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5561be752ddc406e813379db5d39157d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5561be752ddc406e813379db5d39157d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement this.\n        return new List<long>();\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <63bfe2f2b85a4d3586c02cd16102a264>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <63bfe2f2b85a4d3586c02cd16102a264>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976240
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  while (lst.Count > 0) {\n            result.Add(lst[i]);\n            lst.RemoveAt(i);\n\
    \            if (lst.Count > 0) {\n                result.Add(lst[lst.Count -\
    \ 1]);\n                lst.RemoveAt(lst.Count - 1);\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <213e1897c29040f1ba2e442ac0d8e8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <213e1897c29040f1ba2e442ac0d8e8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Your\
    \ code here.\n        return lst;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7274727040fb43138071c7fcb0cce03e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7274727040fb43138071c7fcb0cce03e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        List<long> remaining = new List<long>(lst);\n\
    \        while (remaining.Count > 0) {\n            long min = remaining.Min();\n\
    \            long max = remaining.Max();\n            result.Add(min);\n     \
    \       result.Add(max);\n            remaining.Remove(min);\n            remaining.Remove(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab221d31b7c641fb8af05127c1583be2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab221d31b7c641fb8af05127c1583be2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976240
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        lst.Sort();\n\
    \        List<long> res = new List<long>();\n        int i = 0;\n        int j\
    \ = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n \
    \           if (i != j) {\n                res.Add(lst[j]);\n            }\n \
    \           i++;\n            j--;\n        }\n        return res;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2a65cdac89fc435cb80f6575ff3d5594>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2a65cdac89fc435cb80f6575ff3d5594>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        lst.Sort();\n        int i = 0;\n        int\
    \ j = lst.Count - 1;\n        while (i <= j) {\n            res.Add(lst[i]);\n\
    \            if (i != j) {\n                res.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return res;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73eeed641ea49f08bc9e5474ab378fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        List<long> temp = new List<long>();\n  \
    \      temp.AddRange(lst);\n        while (temp.Count > 0) {\n            long\
    \ min = temp.Min();\n            long max = temp.Max();\n            result.Add(min);\n\
    \            result.Add(max);\n            temp.Remove(min);\n            temp.Remove(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd8cde707e5e451fba70542ff4aaacca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd8cde707e5e451fba70542ff4aaacca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976239
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement strange sorting\n        return lst;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1987b94b3cb9408d9c524fd415928d53>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1987b94b3cb9408d9c524fd415928d53>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976240
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        // TODO: Implement StrangeSortList\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e41ba697f13b4168bf42182ef6a0fe1b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e41ba697f13b4168bf42182ef6a0fe1b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976240
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ ret = new List<long>();\n        int i = 0;\n        while (lst.Count > 0) {\n\
    \            if (i % 2 == 0) {\n                ret.Add(lst.Min());\n        \
    \        lst.Remove(lst.Min());\n            } else {\n                ret.Add(lst.Max());\n\
    \                lst.Remove(lst.Max());\n            }\n            i++;\n   \
    \     }\n        return ret;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b809790d05e430895e95c86860ee170>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b809790d05e430895e95c86860ee170>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976240
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  while (lst.Count > 0) {\n            result.Add(lst[i]);\n            lst.RemoveAt(i);\n\
    \            if (lst.Count == 0) break;\n            result.Add(lst[lst.Count\
    \ - 1]);\n            lst.RemoveAt(lst.Count - 1);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5ec3b2fe619a4c2eb029ab0412245389>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5ec3b2fe619a4c2eb029ab0412245389>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976240
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ res = new List<long>();\n        List<long> lst2 = new List<long>(lst);\n  \
    \      while (lst2.Count > 0) {\n            long min = lst2.Min();\n        \
    \    res.Add(min);\n            lst2.Remove(min);\n            if (lst2.Count\
    \ > 0) {\n                long max = lst2.Max();\n                res.Add(max);\n\
    \                lst2.Remove(max);\n            }\n        }\n        return res;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7607e5f9126d4985a8a2ee75b1fc4c9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7607e5f9126d4985a8a2ee75b1fc4c9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976238
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement this function.\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <58c7dbefa57448ecbc420d8d3fdc678c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <58c7dbefa57448ecbc420d8d3fdc678c>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976240
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Sort\
    \ the list.\n        lst.Sort();\n        // Create new list.\n        List<long>\
    \ result = new List<long>();\n        // Loop through the list.\n        for (int\
    \ i = 0; i < lst.Count; i++) {\n            // If i is even, add the minimum value\
    \ to the result.\n            if (i % 2 == 0) {\n                result.Add(lst[i\
    \ / 2]);\n            }\n            // If i is odd, add the maximum value to\
    \ the result.\n            else {\n                result.Add(lst[lst.Count -\
    \ 1 - i / 2]);\n            }\n        }\n        // Return the result.\n    \
    \    return result;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new List<long>(new\
    \ long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)5L, (long)2L, (long)4L, (long)3L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)6L,\
    \ (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L,\
    \ (long)7L, (long)8L}))).Equals((new List<long>(new long[]{(long)1L, (long)8L,\
    \ (long)2L, (long)7L, (long)3L, (long)6L, (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L,\
    \ (long)-5L, (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L,\
    \ (long)-5L, (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29d6c9f8ecd447e58eb1c005c3ca19f8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29d6c9f8ecd447e58eb1c005c3ca19f8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976240
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList.\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32998c42663c46cdb8ded9a66977dc71>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32998c42663c46cdb8ded9a66977dc71>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976240
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return new List<long>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a7642efd99f4817b99d156041e715ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Write\
    \ code here\n        List<long> result = new List<long>();\n        lst.Sort();\n\
    \        int i = 0;\n        int j = lst.Count - 1;\n        while (i <= j) {\n\
    \            result.Add(lst[i]);\n            if (i != j)\n                result.Add(lst[j]);\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9d68dc66c2dd49a2b8010acd045653b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9d68dc66c2dd49a2b8010acd045653b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976240
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  while (lst.Count > 0) {\n            if (i % 2 == 0) {\n                result.Add(lst[0]);\n\
    \                lst.RemoveAt(0);\n            } else {\n                result.Add(lst[lst.Count\
    \ - 1]);\n                lst.RemoveAt(lst.Count - 1);\n            }\n      \
    \      i++;\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b610a41723cc4a86b5ea0db05a64eb11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b610a41723cc4a86b5ea0db05a64eb11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  while (lst.Count > 0) {\n            if (i % 2 == 0) {\n                result.Add(lst[0]);\n\
    \                lst.RemoveAt(0);\n            } else {\n                result.Add(lst[lst.Count\
    \ - 1]);\n                lst.RemoveAt(lst.Count - 1);\n            }\n      \
    \      i++;\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b610a41723cc4a86b5ea0db05a64eb11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b610a41723cc4a86b5ea0db05a64eb11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement StrangeSortList\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <06898908699848759c87e2eb2cdc913a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <06898908699848759c87e2eb2cdc913a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  while (lst.Count > 0) {\n            if (i % 2 == 0) {\n                result.Add(lst[0]);\n\
    \                lst.RemoveAt(0);\n            } else {\n                result.Add(lst[lst.Count\
    \ - 1]);\n                lst.RemoveAt(lst.Count - 1);\n            }\n      \
    \      i++;\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b610a41723cc4a86b5ea0db05a64eb11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b610a41723cc4a86b5ea0db05a64eb11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // Sort\
    \ the list\n        lst.Sort();\n        // Create a new list\n        List<long>\
    \ result = new List<long>();\n        // While the list is not empty\n       \
    \ while (lst.Count > 0) {\n            // Add the minimum value\n            result.Add(lst[0]);\n\
    \            // Remove the minimum value\n            lst.RemoveAt(0);\n     \
    \       // If the list is empty, break\n            if (lst.Count == 0) break;\n\
    \            // Add the maximum value\n            result.Add(lst[lst.Count -\
    \ 1]);\n            // Remove the maximum value\n            lst.RemoveAt(lst.Count\
    \ - 1);\n        }\n        // Return the result\n        return result;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f7cf75a9e606409dbdab71f5852d4bc0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f7cf75a9e606409dbdab71f5852d4bc0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976240
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        var result\
    \ = new List<long>();\n        var min = lst.Min();\n        var max = lst.Max();\n\
    \        var minIndex = lst.IndexOf(min);\n        var maxIndex = lst.IndexOf(max);\n\
    \        var minRemaining = lst.Where((x, i) => i != minIndex).ToList();\n   \
    \     var maxRemaining = lst.Where((x, i) => i != maxIndex).ToList();\n      \
    \  result.Add(min);\n        result.Add(max);\n        while (minRemaining.Count\
    \ > 0) {\n            min = minRemaining.Min();\n            max = maxRemaining.Max();\n\
    \            minIndex = minRemaining.IndexOf(min);\n            maxIndex = maxRemaining.IndexOf(max);\n\
    \            minRemaining = minRemaining.Where((x, i) => i != minIndex).ToList();\n\
    \            maxRemaining = maxRemaining.Where((x, i) => i != maxIndex).ToList();\n\
    \            result.Add(min);\n            result.Add(max);\n        }\n     \
    \   return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1f4791e651d645abb16335e69a3bb430>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1f4791e651d645abb16335e69a3bb430>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976240
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        // TODO:\
    \ Implement strange sort.\n        return lst;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4bf0761e9cd5471f96a512c37688fcaa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4bf0761e9cd5471f96a512c37688fcaa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976237
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given list of integers, return list in strange order.\n\
    \    // Strange sorting, is when you start with the minimum value,\n    // then\
    \ maximum of the remaining integers, then minimum and so on.\n    // Examples:\n\
    \    public static List<long> StrangeSortList(List<long> lst) {\n        List<long>\
    \ result = new List<long>();\n        lst.Sort();\n        int i = 0;\n      \
    \  int j = lst.Count - 1;\n        while (i <= j) {\n            result.Add(lst[i]);\n\
    \            if (i != j) {\n                result.Add(lst[j]);\n            }\n\
    \            i++;\n            j--;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
    \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)5L, (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
    \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L,\
    \ (long)5L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
    \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
    \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
    \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
    \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
    \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5870b56e62e4340a319aa1862ab4439>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976236

name: HumanEval_111_histogram
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a string representing a space separated lowercase letters,\
  \ return a dictionary\n    // of the letter with the most repetition and containing\
  \ the corresponding count.\n    // If several letters have the same occurrence,\
  \ return all of them.\n    // Example:\n    public static Dictionary<string,long>\
  \ Histogram(string test) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"\
  a b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n\
  \    Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"\
  a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new\
  \ Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},\
  \ {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"\
  r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\"\
  )).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"\
  r t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\"\
  , 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n\
  \    Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\"\
  , 1L}})));\n    }\n\n}\n"
completions: ["        Dictionary<string,long> histogram = new Dictionary<string,long>();\n\
    \        Dictionary<string,long> result = new Dictionary<string,long>();\n   \
    \     foreach (char c in test) {\n            string s = c.ToString();\n     \
    \       if (histogram.ContainsKey(s)) {\n                histogram[s]++;\n   \
    \         } else {\n                histogram[s] = 1;\n            }\n       \
    \ }\n        long max = histogram.Values.Max();\n        foreach (KeyValuePair<string,long>\
    \ kvp in histogram) {\n            if (kvp.Value == max) {\n                result[kvp.Key]\
    \ = kvp.Value;\n            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       string s = c.ToString();\n            if (histogram.ContainsKey(s)) {\n\
    \                histogram[s]++;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        long max = histogram.Values.Max();\n\
    \        foreach (KeyValuePair<string,long> kvp in histogram) {\n            if\
    \ (kvp.Value == max) {\n                result[kvp.Key] = kvp.Value;\n       \
    \     }\n        }\n        return result;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       string s = c.ToString();\n            if (histogram.ContainsKey(s)) {\n\
    \                histogram[s]++;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        long max = histogram.Values.Max();\n\
    \        foreach (KeyValuePair<string,long> kvp in histogram) {\n            if\
    \ (kvp.Value == max) {\n                result[kvp.Key] = kvp.Value;\n       \
    \     }\n        }\n        return result;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]++;\n\
    \            } else {\n                hist[c.ToString()] = 1;\n            }\n\
    \        }\n        return hist;", "        var dict = new Dictionary<string,long>();\n\
    \        foreach (var c in test) {\n            if (dict.ContainsKey(c.ToString()))\
    \ {\n                dict[c.ToString()]++;\n            } else {\n           \
    \     dict[c.ToString()] = 1;\n            }\n        }\n        var max = dict.Values.Max();\n\
    \        var result = new Dictionary<string,long>();\n        foreach (var kvp\
    \ in dict) {\n            if (kvp.Value == max) {\n                result[kvp.Key]\
    \ = kvp.Value;\n            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]\
    \ += 1;\n            } else {\n                histogram[c.ToString()] = 1;\n\
    \            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            string s = c.ToString();\n            if (histogram.ContainsKey(s))\
    \ {\n                histogram[s]++;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]\
    \ += 1;\n            } else {\n                hist[c.ToString()] = 1;\n     \
    \       }\n        }\n        return hist;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        char[] letters = test.ToCharArray();\n\
    \        foreach (char letter in letters) {\n            if (histogram.ContainsKey(letter.ToString()))\
    \ {\n                histogram[letter.ToString()] += 1;\n            } else {\n\
    \                histogram.Add(letter.ToString(), 1);\n            }\n       \
    \ }\n        return histogram;", "        Dictionary<string,long> hist = new Dictionary<string,long>();\n\
    \        foreach (char c in test) {\n            if (hist.ContainsKey(c.ToString()))\
    \ {\n                hist[c.ToString()]++;\n            } else {\n           \
    \     hist[c.ToString()] = 1;\n            }\n        }\n        return hist;",
  "        Dictionary<string,long> result = new Dictionary<string,long>();\n     \
    \   Dictionary<string,long> dict = new Dictionary<string,long>();\n        foreach\
    \ (char c in test) {\n            if (dict.ContainsKey(c.ToString())) {\n    \
    \            dict[c.ToString()]++;\n            } else {\n                dict.Add(c.ToString(),\
    \ 1);\n            }\n        }\n        long max = dict.Values.Max();\n     \
    \   foreach (KeyValuePair<string,long> kvp in dict) {\n            if (kvp.Value\
    \ == max) {\n                result.Add(kvp.Key, kvp.Value);\n            }\n\
    \        }\n        return result;", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        string[] letters = test.Split('\
    \ ');\n        foreach (string letter in letters) {\n            if (histogram.ContainsKey(letter))\
    \ {\n                histogram[letter]++;\n            } else {\n            \
    \    histogram.Add(letter, 1);\n            }\n        }\n        return histogram;",
  "        Dictionary<string,long> result = new Dictionary<string,long>();\n     \
    \   Dictionary<string,long> histogram = new Dictionary<string,long>();\n     \
    \   foreach (char c in test) {\n            if (histogram.ContainsKey(c.ToString()))\
    \ {\n                histogram[c.ToString()]++;\n            } else {\n      \
    \          histogram[c.ToString()] = 1;\n            }\n        }\n        long\
    \ max = histogram.Values.Max();\n        foreach (KeyValuePair<string,long> pair\
    \ in histogram) {\n            if (pair.Value == max) {\n                result[pair.Key]\
    \ = pair.Value;\n            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        var hist = new Dictionary<string,long>();\n\
    \        foreach (var letter in test.Split(' ')) {\n            if (hist.ContainsKey(letter))\
    \ {\n                hist[letter]++;\n            } else {\n                hist[letter]\
    \ = 1;\n            }\n        }\n        return hist;", "        Dictionary<string,long>\
    \ dict = new Dictionary<string,long>();\n        string[] letters = test.Split('\
    \ ');\n        foreach (string letter in letters) {\n            if (dict.ContainsKey(letter))\
    \ {\n                dict[letter]++;\n            } else {\n                dict.Add(letter,\
    \ 1);\n            }\n        }\n        return dict;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]\
    \ += 1;\n            } else {\n                hist[c.ToString()] = 1;\n     \
    \       }\n        }\n        return hist;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            string s = c.ToString();\n            if (histogram.ContainsKey(s))\
    \ {\n                histogram[s]++;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]++;\n\
    \            } else {\n                hist[c.ToString()] = 1;\n            }\n\
    \        }\n        return hist;", "        Dictionary<string,long> result = new\
    \ Dictionary<string,long>();\n        Dictionary<string,long> histogram = new\
    \ Dictionary<string,long>();\n        foreach (char c in test) {\n           \
    \ string s = c.ToString();\n            if (histogram.ContainsKey(s)) {\n    \
    \            histogram[s]++;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        long max = 0;\n        foreach (KeyValuePair<string,long>\
    \ entry in histogram) {\n            if (entry.Value > max) {\n              \
    \  max = entry.Value;\n                result.Clear();\n                result.Add(entry.Key,\
    \ entry.Value);\n            } else if (entry.Value == max) {\n              \
    \  result.Add(entry.Key, entry.Value);\n            }\n        }\n        return\
    \ result;", "        var d = new Dictionary<string,long>();\n        foreach (var\
    \ c in test) {\n            if (d.ContainsKey(c.ToString())) {\n             \
    \   d[c.ToString()]++;\n            } else {\n                d[c.ToString()]\
    \ = 1;\n            }\n        }\n        var max = d.Values.Max();\n        var\
    \ res = new Dictionary<string,long>();\n        foreach (var k in d.Keys) {\n\
    \            if (d[k] == max) {\n                res[k] = max;\n            }\n\
    \        }\n        return res;", "        Dictionary<string,long> histogram =\
    \ new Dictionary<string,long>();\n        foreach (string letter in test.Split('\
    \ ')) {\n            if (histogram.ContainsKey(letter)) {\n                histogram[letter]\
    \ += 1;\n            } else {\n                histogram[letter] = 1;\n      \
    \      }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]\
    \ += 1;\n            } else {\n                histogram[c.ToString()] = 1;\n\
    \            }\n        }\n        long max = histogram.Values.Max();\n      \
    \  foreach (KeyValuePair<string,long> entry in histogram) {\n            if (entry.Value\
    \ == max) {\n                result[entry.Key] = entry.Value;\n            }\n\
    \        }\n        return result;", "        Dictionary<string,long> result =\
    \ new Dictionary<string,long>();\n        Dictionary<string,long> histogram =\
    \ new Dictionary<string,long>();\n        foreach (char c in test) {\n       \
    \     if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]\
    \ += 1;\n            } else {\n                histogram[c.ToString()] = 1;\n\
    \            }\n        }\n        long max = histogram.Values.Max();\n      \
    \  foreach (KeyValuePair<string,long> pair in histogram) {\n            if (pair.Value\
    \ == max) {\n                result[pair.Key] = pair.Value;\n            }\n \
    \       }\n        return result;", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        string[] letters = test.Split('\
    \ ');\n        foreach (string letter in letters) {\n            if (hist.ContainsKey(letter))\
    \ {\n                hist[letter]++;\n            } else {\n                hist[letter]\
    \ = 1;\n            }\n        }\n        return hist;", "        Dictionary<string,long>\
    \ res = new Dictionary<string,long>();\n        Dictionary<string,long> tmp =\
    \ new Dictionary<string,long>();\n        foreach (char c in test) {\n       \
    \     if (tmp.ContainsKey(c.ToString())) {\n                tmp[c.ToString()]++;\n\
    \            } else {\n                tmp[c.ToString()] = 1;\n            }\n\
    \        }\n        long max = tmp.Values.Max();\n        foreach (KeyValuePair<string,long>\
    \ kvp in tmp) {\n            if (kvp.Value == max) {\n                res[kvp.Key]\
    \ = kvp.Value;\n            }\n        }\n        return res;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (string s in test.Split('\
    \ ')) {\n            if (histogram.ContainsKey(s)) {\n                histogram[s]++;\n\
    \            } else {\n                histogram[s] = 1;\n            }\n    \
    \    }\n        long max = histogram.Values.Max();\n        foreach (KeyValuePair<string,long>\
    \ kvp in histogram) {\n            if (kvp.Value == max) {\n                result[kvp.Key]\
    \ = kvp.Value;\n            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]++;\n\
    \            } else {\n                hist[c.ToString()] = 1;\n            }\n\
    \        }\n        return hist;", "        Dictionary<string,long> result = new\
    \ Dictionary<string,long>();\n        Dictionary<string,long> histogram = new\
    \ Dictionary<string,long>();\n        foreach (char c in test) {\n           \
    \ if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram[c.ToString()] = 1;\n        \
    \    }\n        }\n        long max = histogram.Values.Max();\n        foreach\
    \ (KeyValuePair<string,long> kvp in histogram) {\n            if (kvp.Value ==\
    \ max) {\n                result[kvp.Key] = kvp.Value;\n            }\n      \
    \  }\n        return result;", "        Dictionary<string,long> histogram = new\
    \ Dictionary<string,long>();\n        foreach (char c in test) {\n           \
    \ string s = c.ToString();\n            if (histogram.ContainsKey(s)) {\n    \
    \            histogram[s]++;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        return histogram;", "        var dict\
    \ = new Dictionary<string,long>();\n        foreach (var c in test) {\n      \
    \      if (dict.ContainsKey(c.ToString())) {\n                dict[c.ToString()]++;\n\
    \            } else {\n                dict[c.ToString()] = 1;\n            }\n\
    \        }\n        var max = dict.Values.Max();\n        var result = new Dictionary<string,long>();\n\
    \        foreach (var kv in dict) {\n            if (kv.Value == max) {\n    \
    \            result[kv.Key] = kv.Value;\n            }\n        }\n        return\
    \ result;", "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n\
    \        foreach (char c in test) {\n            if (histogram.ContainsKey(c.ToString()))\
    \ {\n                histogram[c.ToString()]++;\n            } else {\n      \
    \          histogram.Add(c.ToString(), 1);\n            }\n        }\n       \
    \ return histogram;", "        Dictionary<string,long> result = new Dictionary<string,long>();\n\
    \        Dictionary<string,long> histogram = new Dictionary<string,long>();\n\
    \        foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))\
    \ {\n                histogram[letter]++;\n            } else {\n            \
    \    histogram[letter] = 1;\n            }\n        }\n        long max = histogram.Values.Max();\n\
    \        foreach (KeyValuePair<string,long> entry in histogram) {\n          \
    \  if (entry.Value == max) {\n                result[entry.Key] = entry.Value;\n\
    \            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            string s = c.ToString();\n            if (histogram.ContainsKey(s))\
    \ {\n                histogram[s]++;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ dict = new Dictionary<string,long>();\n        string[] words = test.Split('\
    \ ');\n        foreach (string word in words) {\n            if (dict.ContainsKey(word))\
    \ {\n                dict[word]++;\n            } else {\n                dict.Add(word,\
    \ 1);\n            }\n        }\n        return dict;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]++;\n\
    \            } else {\n                hist[c.ToString()] = 1;\n            }\n\
    \        }\n        return hist;", "        var histogram = new Dictionary<string,long>();\n\
    \        foreach (var c in test) {\n            if (histogram.ContainsKey(c.ToString()))\
    \ {\n                histogram[c.ToString()] += 1;\n            } else {\n   \
    \             histogram[c.ToString()] = 1;\n            }\n        }\n       \
    \ return histogram;", "        var result = new Dictionary<string,long>();\n \
    \       var max = 0;\n        foreach (var c in test) {\n            if (!result.ContainsKey(c.ToString()))\
    \ {\n                result[c.ToString()] = 0;\n            }\n            result[c.ToString()]++;\n\
    \            max = Math.Max(max, (int)result[c.ToString()]);\n        }\n    \
    \    var keys = new List<string>();\n        foreach (var k in result.Keys) {\n\
    \            if (result[k] == max) {\n                keys.Add(k);\n         \
    \   }\n        }\n        return new Dictionary<string,long>() { { string.Join(\"\
    \", keys), max } };", "        Dictionary<string,long> result = new Dictionary<string,long>();\n\
    \        Dictionary<string,long> histogram = new Dictionary<string,long>();\n\
    \        foreach (char c in test) {\n            string s = c.ToString();\n  \
    \          if (histogram.ContainsKey(s)) {\n                histogram[s]++;\n\
    \            } else {\n                histogram[s] = 1;\n            }\n    \
    \    }\n        long max = histogram.Values.Max();\n        foreach (KeyValuePair<string,long>\
    \ kvp in histogram) {\n            if (kvp.Value == max) {\n                result[kvp.Key]\
    \ = kvp.Value;\n            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]++;\n\
    \            } else {\n                hist[c.ToString()] = 1;\n            }\n\
    \        }\n        long max = hist.Values.Max();\n        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        foreach (KeyValuePair<string,long>\
    \ kvp in hist) {\n            if (kvp.Value == max) {\n                result[kvp.Key]\
    \ = kvp.Value;\n            }\n        }\n        return result;", "        var\
    \ dict = new Dictionary<string,long>();\n        foreach (var c in test) {\n \
    \           if (dict.ContainsKey(c.ToString())) {\n                dict[c.ToString()]++;\n\
    \            } else {\n                dict[c.ToString()] = 1;\n            }\n\
    \        }\n        var max = dict.Values.Max();\n        return dict.Where(x\
    \ => x.Value == max).ToDictionary(x => x.Key, x => x.Value);", "        var dict\
    \ = new Dictionary<string,long>();\n        foreach (var letter in test) {\n \
    \           if (dict.ContainsKey(letter.ToString())) {\n                dict[letter.ToString()]++;\n\
    \            } else {\n                dict[letter.ToString()] = 1;\n        \
    \    }\n        }\n        var max = dict.Values.Max();\n        var keys = dict.Where(x\
    \ => x.Value == max).Select(x => x.Key).ToList();\n        return new Dictionary<string,long>()\
    \ { { string.Join(\"\", keys), max } };", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       string s = c.ToString();\n            if (histogram.ContainsKey(s)) {\n\
    \                histogram[s]++;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        long max = histogram.Values.Max();\n\
    \        foreach (string key in histogram.Keys) {\n            if (histogram[key]\
    \ == max) {\n                result[key] = max;\n            }\n        }\n  \
    \      return result;", "        Dictionary<string,long> result = new Dictionary<string,long>();\n\
    \        Dictionary<string,long> hist = new Dictionary<string,long>();\n     \
    \   foreach (char c in test) {\n            string s = c.ToString();\n       \
    \     if (hist.ContainsKey(s)) {\n                hist[s]++;\n            } else\
    \ {\n                hist[s] = 1;\n            }\n        }\n        long max\
    \ = hist.Values.Max();\n        foreach (KeyValuePair<string,long> kvp in hist)\
    \ {\n            if (kvp.Value == max) {\n                result[kvp.Key] = kvp.Value;\n\
    \            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       string key = c.ToString();\n            if (histogram.ContainsKey(key))\
    \ {\n                histogram[key]++;\n            } else {\n               \
    \ histogram[key] = 1;\n            }\n        }\n        long max = histogram.Values.Max();\n\
    \        foreach (KeyValuePair<string,long> entry in histogram) {\n          \
    \  if (entry.Value == max) {\n                result[entry.Key] = entry.Value;\n\
    \            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (string letter in test.Split('\
    \ ')) {\n            if (histogram.ContainsKey(letter)) {\n                histogram[letter]++;\n\
    \            } else {\n                histogram[letter] = 1;\n            }\n\
    \        }\n        long max = histogram.Values.Max();\n        foreach (KeyValuePair<string,long>\
    \ pair in histogram) {\n            if (pair.Value == max) {\n               \
    \ result[pair.Key] = pair.Value;\n            }\n        }\n        return result;",
  "        Dictionary<string,long> hist = new Dictionary<string,long>();\n       \
    \ foreach (char c in test) {\n            string s = c.ToString();\n         \
    \   if (hist.ContainsKey(s)) {\n                hist[s]++;\n            } else\
    \ {\n                hist[s] = 1;\n            }\n        }\n        return hist;",
  "        Dictionary<string,long> hist = new Dictionary<string,long>();\n       \
    \ foreach (char c in test) {\n            if (hist.ContainsKey(c.ToString()))\
    \ {\n                hist[c.ToString()]++;\n            } else {\n           \
    \     hist[c.ToString()] = 1;\n            }\n        }\n        return hist;",
  "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n  \
    \      foreach (char c in test) {\n            string s = c.ToString();\n    \
    \        if (histogram.ContainsKey(s)) {\n                histogram[s]++;\n  \
    \          } else {\n                histogram[s] = 1;\n            }\n      \
    \  }\n        return histogram;", "        Dictionary<string,long> hist = new\
    \ Dictionary<string,long>();\n        foreach (char c in test) {\n           \
    \ if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]++;\n\
    \            } else {\n                hist[c.ToString()] = 1;\n            }\n\
    \        }\n        long max = hist.Values.Max();\n        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        foreach (KeyValuePair<string,long>\
    \ kvp in hist) {\n            if (kvp.Value == max) {\n                result[kvp.Key]\
    \ = kvp.Value;\n            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]\
    \ += 1;\n            } else {\n                histogram[c.ToString()] = 1;\n\
    \            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        string[] letters = test.Split('\
    \ ');\n        foreach (string letter in letters) {\n            if (histogram.ContainsKey(letter))\
    \ {\n                histogram[letter] += 1;\n            } else {\n         \
    \       histogram[letter] = 1;\n            }\n        }\n        return histogram;",
  "        var result = new Dictionary<string,long>();\n        var max = 0;\n   \
    \     foreach (var c in test) {\n            if (!result.ContainsKey(c.ToString()))\
    \ {\n                result[c.ToString()] = 0;\n            }\n            result[c.ToString()]++;\n\
    \            if (result[c.ToString()] > max) {\n                max = (int)result[c.ToString()];\n\
    \            }\n        }\n        var result2 = new Dictionary<string,long>();\n\
    \        foreach (var k in result.Keys) {\n            if (result[k] == max) {\n\
    \                result2[k] = result[k];\n            }\n        }\n        return\
    \ result2;", "        Dictionary<string,long> hist = new Dictionary<string,long>();\n\
    \        foreach (char c in test) {\n            if (hist.ContainsKey(c.ToString()))\
    \ {\n                hist[c.ToString()]++;\n            } else {\n           \
    \     hist[c.ToString()] = 1;\n            }\n        }\n        return hist;",
  "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n  \
    \      foreach (char c in test) {\n            if (histogram.ContainsKey(c.ToString()))\
    \ {\n                histogram[c.ToString()]++;\n            } else {\n      \
    \          histogram.Add(c.ToString(), 1);\n            }\n        }\n       \
    \ return histogram;", "        Dictionary<string,long> hist = new Dictionary<string,long>();\n\
    \        foreach (char c in test) {\n            if (hist.ContainsKey(c.ToString()))\
    \ {\n                hist[c.ToString()]++;\n            } else {\n           \
    \     hist[c.ToString()] = 1;\n            }\n        }\n        return hist;",
  "        Dictionary<string,long> hist = new Dictionary<string,long>();\n       \
    \ foreach (char c in test) {\n            if (hist.ContainsKey(c.ToString()))\
    \ {\n                hist[c.ToString()] += 1;\n            } else {\n        \
    \        hist[c.ToString()] = 1;\n            }\n        }\n        return hist;",
  "        Dictionary<string,long> hist = new Dictionary<string,long>();\n       \
    \ foreach (char c in test) {\n            if (hist.ContainsKey(c.ToString()))\
    \ {\n                hist[c.ToString()]++;\n            } else {\n           \
    \     hist[c.ToString()] = 1;\n            }\n        }\n        return hist;",
  "        Dictionary<string,long> result = new Dictionary<string,long>();\n     \
    \   Dictionary<string,long> histogram = new Dictionary<string,long>();\n     \
    \   foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))\
    \ {\n                histogram[letter] += 1;\n            } else {\n         \
    \       histogram[letter] = 1;\n            }\n        }\n        long max = histogram.Values.Max();\n\
    \        foreach (KeyValuePair<string,long> pair in histogram) {\n           \
    \ if (pair.Value == max) {\n                result[pair.Key] = pair.Value;\n \
    \           }\n        }\n        return result;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram[c.ToString()] = 1;\n        \
    \    }\n        }\n        long max = 0;\n        foreach (KeyValuePair<string,long>\
    \ kvp in histogram) {\n            if (kvp.Value > max) {\n                max\
    \ = kvp.Value;\n            }\n        }\n        foreach (KeyValuePair<string,long>\
    \ kvp in histogram) {\n            if (kvp.Value == max) {\n                result[kvp.Key]\
    \ = kvp.Value;\n            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]++;\n\
    \            } else {\n                hist[c.ToString()] = 1;\n            }\n\
    \        }\n        return hist;", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        long max = 0;\n        foreach\
    \ (char c in test) {\n            string s = c.ToString();\n            if (histogram.ContainsKey(s))\
    \ {\n                histogram[s]++;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n            if (histogram[s] > max) {\n               \
    \ max = histogram[s];\n            }\n        }\n        foreach (KeyValuePair<string,long>\
    \ kvp in histogram) {\n            if (kvp.Value == max) {\n                result[kvp.Key]\
    \ = kvp.Value;\n            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]\
    \ += 1;\n            } else {\n                hist[c.ToString()] = 1;\n     \
    \       }\n        }\n        return hist;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]++;\n\
    \            } else {\n                hist[c.ToString()] = 1;\n            }\n\
    \        }\n        return hist;", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        string[] words = test.Split(' ');\n\
    \        foreach (string word in words) {\n            if (histogram.ContainsKey(word))\
    \ {\n                histogram[word] += 1;\n            } else {\n           \
    \     histogram[word] = 1;\n            }\n        }\n        return histogram;",
  "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n  \
    \      foreach (char c in test) {\n            if (histogram.ContainsKey(c.ToString()))\
    \ {\n                histogram[c.ToString()]++;\n            } else {\n      \
    \          histogram.Add(c.ToString(), 1);\n            }\n        }\n       \
    \ return histogram;", "        Dictionary<string,long> hist = new Dictionary<string,long>();\n\
    \        foreach (char c in test) {\n            if (hist.ContainsKey(c.ToString()))\
    \ {\n                hist[c.ToString()]++;\n            } else {\n           \
    \     hist[c.ToString()] = 1;\n            }\n        }\n        return hist;",
  "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n  \
    \      foreach (char c in test) {\n            if (histogram.ContainsKey(c.ToString()))\
    \ {\n                histogram[c.ToString()]++;\n            } else {\n      \
    \          histogram.Add(c.ToString(), 1);\n            }\n        }\n       \
    \ return histogram;", "        Dictionary<string,long> hist = new Dictionary<string,long>();\n\
    \        foreach (char c in test) {\n            string s = c.ToString();\n  \
    \          if (hist.ContainsKey(s)) {\n                hist[s]++;\n          \
    \  } else {\n                hist[s] = 1;\n            }\n        }\n        return\
    \ hist;", "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n\
    \        foreach (char c in test) {\n            if (histogram.ContainsKey(c.ToString()))\
    \ {\n                histogram[c.ToString()] += 1;\n            } else {\n   \
    \             histogram[c.ToString()] = 1;\n            }\n        }\n       \
    \ return histogram;", "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n\
    \        foreach (char c in test) {\n            if (histogram.ContainsKey(c.ToString()))\n\
    \                histogram[c.ToString()]++;\n            else\n              \
    \  histogram.Add(c.ToString(), 1);\n        }\n        return histogram;", " \
    \       Dictionary<string,long> histogram = new Dictionary<string,long>();\n \
    \       foreach (char c in test) {\n            if (histogram.ContainsKey(c.ToString()))\
    \ {\n                histogram[c.ToString()]++;\n            } else {\n      \
    \          histogram.Add(c.ToString(), 1);\n            }\n        }\n       \
    \ return histogram;", "        Dictionary<string,long> hist = new Dictionary<string,long>();\n\
    \        foreach (char c in test) {\n            if (hist.ContainsKey(c.ToString()))\
    \ {\n                hist[c.ToString()] += 1;\n            } else {\n        \
    \        hist[c.ToString()] = 1;\n            }\n        }\n        return hist;",
  "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n  \
    \      foreach (char c in test) {\n            if (histogram.ContainsKey(c.ToString()))\
    \ {\n                histogram[c.ToString()]++;\n            } else {\n      \
    \          histogram.Add(c.ToString(), 1);\n            }\n        }\n       \
    \ return histogram;", "        Dictionary<string,long> hist = new Dictionary<string,long>();\n\
    \        foreach (char c in test) {\n            if (hist.ContainsKey(c.ToString()))\
    \ {\n                hist[c.ToString()]++;\n            } else {\n           \
    \     hist[c.ToString()] = 1;\n            }\n        }\n        long max = hist.Values.Max();\n\
    \        Dictionary<string,long> result = new Dictionary<string,long>();\n   \
    \     foreach (KeyValuePair<string,long> kvp in hist) {\n            if (kvp.Value\
    \ == max) {\n                result[kvp.Key] = kvp.Value;\n            }\n   \
    \     }\n        return result;", "        Dictionary<string,long> histogram =\
    \ new Dictionary<string,long>();\n        foreach (char c in test) {\n       \
    \     if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]\
    \ += 1;\n            } else {\n                histogram[c.ToString()] = 1;\n\
    \            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]++;\n\
    \            } else {\n                hist[c.ToString()] = 1;\n            }\n\
    \        }\n        return hist;", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        var hist = new Dictionary<string,long>();\n\
    \        foreach (var c in test) {\n            if (!hist.ContainsKey(c.ToString()))\
    \ {\n                hist[c.ToString()] = 0;\n            }\n            hist[c.ToString()]++;\n\
    \        }\n        return hist;", "        var histogram = new Dictionary<string,long>();\n\
    \        foreach (var letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))\
    \ {\n                histogram[letter]++;\n            } else {\n            \
    \    histogram[letter] = 1;\n            }\n        }\n        return histogram;",
  "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n  \
    \      foreach (char c in test) {\n            if (histogram.ContainsKey(c.ToString()))\
    \ {\n                histogram[c.ToString()]++;\n            } else {\n      \
    \          histogram.Add(c.ToString(), 1);\n            }\n        }\n       \
    \ return histogram;", "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n\
    \        string[] letters = test.Split(' ');\n        foreach (string letter in\
    \ letters) {\n            if (histogram.ContainsKey(letter)) {\n             \
    \   histogram[letter]++;\n            } else {\n                histogram.Add(letter,\
    \ 1);\n            }\n        }\n        long max = histogram.Values.Max();\n\
    \        Dictionary<string,long> result = new Dictionary<string,long>();\n   \
    \     foreach (KeyValuePair<string,long> entry in histogram) {\n            if\
    \ (entry.Value == max) {\n                result.Add(entry.Key, entry.Value);\n\
    \            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        string[] letters = test.Split('\
    \ ');\n        foreach (string letter in letters) {\n            if (histogram.ContainsKey(letter))\
    \ {\n                histogram[letter]++;\n            } else {\n            \
    \    histogram.Add(letter, 1);\n            }\n        }\n        return histogram;",
  "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n  \
    \      foreach (char c in test) {\n            string s = c.ToString();\n    \
    \        if (histogram.ContainsKey(s)) {\n                histogram[s]++;\n  \
    \          } else {\n                histogram[s] = 1;\n            }\n      \
    \  }\n        return histogram;", "        Dictionary<string,long> hist = new\
    \ Dictionary<string,long>();\n        foreach (char c in test) {\n           \
    \ string s = c.ToString();\n            if (hist.ContainsKey(s)) {\n         \
    \       hist[s]++;\n            } else {\n                hist[s] = 1;\n     \
    \       }\n        }\n        return hist;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]\
    \ += 1;\n            } else {\n                histogram[c.ToString()] = 1;\n\
    \            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram[c.ToString()] = 1;\n        \
    \    }\n        }\n        long max = histogram.Values.Max();\n        foreach\
    \ (KeyValuePair<string,long> pair in histogram) {\n            if (pair.Value\
    \ == max) {\n                result[pair.Key] = pair.Value;\n            }\n \
    \       }\n        return result;", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]\
    \ += 1;\n            } else {\n                histogram[c.ToString()] = 1;\n\
    \            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]++;\n\
    \            } else {\n                hist[c.ToString()] = 1;\n            }\n\
    \        }\n        return hist;", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       string key = c.ToString();\n            if (histogram.ContainsKey(key))\
    \ {\n                histogram[key] += 1;\n            } else {\n            \
    \    histogram[key] = 1;\n            }\n        }\n        return histogram;",
  "        Dictionary<string,long> result = new Dictionary<string,long>();\n     \
    \   Dictionary<string,long> histogram = new Dictionary<string,long>();\n     \
    \   foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))\
    \ {\n                histogram[letter]++;\n            } else {\n            \
    \    histogram[letter] = 1;\n            }\n        }\n        long max = histogram.Values.Max();\n\
    \        foreach (KeyValuePair<string,long> entry in histogram) {\n          \
    \  if (entry.Value == max) {\n                result[entry.Key] = entry.Value;\n\
    \            }\n        }\n        return result;", "        var dict = new Dictionary<string,long>();\n\
    \        foreach (var c in test) {\n            if (dict.ContainsKey(c.ToString()))\
    \ {\n                dict[c.ToString()] += 1;\n            } else {\n        \
    \        dict[c.ToString()] = 1;\n            }\n        }\n        var max =\
    \ dict.Values.Max();\n        var result = new Dictionary<string,long>();\n  \
    \      foreach (var kv in dict) {\n            if (kv.Value == max) {\n      \
    \          result[kv.Key] = kv.Value;\n            }\n        }\n        return\
    \ result;", "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n\
    \        foreach (char c in test) {\n            string s = c.ToString();\n  \
    \          if (histogram.ContainsKey(s)) {\n                histogram[s]++;\n\
    \            } else {\n                histogram[s] = 1;\n            }\n    \
    \    }\n        return histogram;", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       string s = c.ToString();\n            if (histogram.ContainsKey(s)) {\n\
    \                histogram[s]++;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> hist\
    \ = new Dictionary<string,long>();\n        foreach (string s in test.Split('\
    \ ')) {\n            if (hist.ContainsKey(s)) {\n                hist[s]++;\n\
    \            } else {\n                hist[s] = 1;\n            }\n        }\n\
    \        long max = hist.Values.Max();\n        foreach (string s in hist.Keys)\
    \ {\n            if (hist[s] == max) {\n                result[s] = max;\n   \
    \         }\n        }\n        return result;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]++;\n\
    \            } else {\n                hist[c.ToString()] = 1;\n            }\n\
    \        }\n        return hist;", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> hist\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       string s = c.ToString();\n            if (hist.ContainsKey(s)) {\n   \
    \             hist[s]++;\n            } else {\n                hist[s] = 1;\n\
    \            }\n        }\n        long max = hist.Values.Max();\n        foreach\
    \ (KeyValuePair<string,long> kvp in hist) {\n            if (kvp.Value == max)\
    \ {\n                result[kvp.Key] = kvp.Value;\n            }\n        }\n\
    \        return result;", "        var histogram = new Dictionary<string,long>();\n\
    \        foreach (var letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))\
    \ {\n                histogram[letter]++;\n            } else {\n            \
    \    histogram[letter] = 1;\n            }\n        }\n        return histogram;",
  "        Dictionary<string,long> result = new Dictionary<string,long>();\n     \
    \   Dictionary<string,long> histogram = new Dictionary<string,long>();\n     \
    \   foreach (char c in test) {\n            if (histogram.ContainsKey(c.ToString()))\
    \ {\n                histogram[c.ToString()]++;\n            } else {\n      \
    \          histogram[c.ToString()] = 1;\n            }\n        }\n        long\
    \ max = histogram.Values.Max();\n        foreach (KeyValuePair<string,long> kvp\
    \ in histogram) {\n            if (kvp.Value == max) {\n                result[kvp.Key]\
    \ = kvp.Value;\n            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       string s = c.ToString();\n            if (histogram.ContainsKey(s)) {\n\
    \                histogram[s] += 1;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        long max = histogram.Values.Max();\n\
    \        foreach (KeyValuePair<string,long> kvp in histogram) {\n            if\
    \ (kvp.Value == max) {\n                result[kvp.Key] = kvp.Value;\n       \
    \     }\n        }\n        return result;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        long max = 0;\n        foreach\
    \ (char c in test) {\n            if (histogram.ContainsKey(c.ToString())) {\n\
    \                histogram[c.ToString()]++;\n            } else {\n          \
    \      histogram.Add(c.ToString(), 1);\n            }\n        }\n        foreach\
    \ (KeyValuePair<string,long> kvp in histogram) {\n            if (kvp.Value >\
    \ max) {\n                max = kvp.Value;\n                result.Clear();\n\
    \                result.Add(kvp.Key, kvp.Value);\n            } else if (kvp.Value\
    \ == max) {\n                result.Add(kvp.Key, kvp.Value);\n            }\n\
    \        }\n        return result;", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]\
    \ += 1;\n            } else {\n                histogram[c.ToString()] = 1;\n\
    \            }\n        }\n        long max = histogram.Values.Max();\n      \
    \  foreach (KeyValuePair<string,long> kvp in histogram) {\n            if (kvp.Value\
    \ == max) {\n                result[kvp.Key] = kvp.Value;\n            }\n   \
    \     }\n        return result;", "        Dictionary<string,long> histogram =\
    \ new Dictionary<string,long>();\n        foreach (char c in test) {\n       \
    \     string s = c.ToString();\n            if (histogram.ContainsKey(s)) {\n\
    \                histogram[s] += 1;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ dict = new Dictionary<string,long>();\n        string[] letters = test.Split('\
    \ ');\n        foreach (string letter in letters) {\n            if (dict.ContainsKey(letter))\
    \ {\n                dict[letter]++;\n            } else {\n                dict.Add(letter,\
    \ 1);\n            }\n        }\n        return dict;", "        var dict = new\
    \ Dictionary<string,long>();\n        foreach (var c in test) {\n            if\
    \ (dict.ContainsKey(c.ToString())) {\n                dict[c.ToString()]++;\n\
    \            } else {\n                dict[c.ToString()] = 1;\n            }\n\
    \        }\n        return dict;", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]\
    \ += 1;\n            } else {\n                histogram[c.ToString()] = 1;\n\
    \            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            string s = c.ToString();\n            if (histogram.ContainsKey(s))\
    \ {\n                histogram[s]++;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> hist\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]++;\n\
    \            } else {\n                hist[c.ToString()] = 1;\n            }\n\
    \        }\n        long max = hist.Values.Max();\n        foreach (KeyValuePair<string,long>\
    \ kvp in hist) {\n            if (kvp.Value == max) {\n                result[kvp.Key]\
    \ = kvp.Value;\n            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        string[] letters = test.Split('\
    \ ');\n        foreach (string letter in letters) {\n            if (hist.ContainsKey(letter))\
    \ {\n                hist[letter]++;\n            } else {\n                hist[letter]\
    \ = 1;\n            }\n        }\n        return hist;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]\
    \ += 1;\n            } else {\n                hist[c.ToString()] = 1;\n     \
    \       }\n        }\n        return hist;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            string s = c.ToString();\n            if (histogram.ContainsKey(s))\
    \ {\n                histogram[s]++;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       string s = c.ToString();\n            if (histogram.ContainsKey(s)) {\n\
    \                histogram[s]++;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        long max = histogram.Values.Max();\n\
    \        foreach (KeyValuePair<string,long> pair in histogram) {\n           \
    \ if (pair.Value == max) {\n                result[pair.Key] = pair.Value;\n \
    \           }\n        }\n        return result;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            string s = c.ToString();\n            if (histogram.ContainsKey(s))\
    \ {\n                histogram[s]++;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]++;\n\
    \            } else {\n                hist[c.ToString()] = 1;\n            }\n\
    \        }\n        return hist;", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> temp\
    \ = new Dictionary<string,long>();\n        long max = 0;\n        foreach (char\
    \ c in test) {\n            if (temp.ContainsKey(c.ToString())) {\n          \
    \      temp[c.ToString()]++;\n            } else {\n                temp.Add(c.ToString(),\
    \ 1);\n            }\n            if (temp[c.ToString()] > max) {\n          \
    \      max = temp[c.ToString()];\n            }\n        }\n        foreach (KeyValuePair<string,long>\
    \ kvp in temp) {\n            if (kvp.Value == max) {\n                result.Add(kvp.Key,\
    \ kvp.Value);\n            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            string key = c.ToString();\n            if (histogram.ContainsKey(key))\
    \ {\n                histogram[key]++;\n            } else {\n               \
    \ histogram.Add(key, 1);\n            }\n        }\n        long max = histogram.Values.Max();\n\
    \        foreach (KeyValuePair<string,long> pair in histogram) {\n           \
    \ if (pair.Value == max) {\n                result.Add(pair.Key, pair.Value);\n\
    \            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        string[] letters = test.Split('\
    \ ');\n        foreach (string letter in letters) {\n            if (histogram.ContainsKey(letter))\
    \ {\n                histogram[letter]++;\n            } else {\n            \
    \    histogram.Add(letter, 1);\n            }\n        }\n        return histogram;",
  "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n  \
    \      foreach (char c in test) {\n            if (histogram.ContainsKey(c.ToString()))\
    \ {\n                histogram[c.ToString()]++;\n            } else {\n      \
    \          histogram.Add(c.ToString(), 1);\n            }\n        }\n       \
    \ return histogram;", "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n\
    \        foreach (char c in test) {\n            if (histogram.ContainsKey(c.ToString()))\
    \ {\n                histogram[c.ToString()]++;\n            } else {\n      \
    \          histogram.Add(c.ToString(), 1);\n            }\n        }\n       \
    \ return histogram;", "        var dict = new Dictionary<string,long>();\n   \
    \     foreach (var c in test) {\n            if (dict.ContainsKey(c.ToString()))\
    \ {\n                dict[c.ToString()]++;\n            } else {\n           \
    \     dict[c.ToString()] = 1;\n            }\n        }\n        var max = dict.Values.Max();\n\
    \        var result = new Dictionary<string,long>();\n        foreach (var kv\
    \ in dict) {\n            if (kv.Value == max) {\n                result[kv.Key]\
    \ = kv.Value;\n            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]++;\n\
    \            } else {\n                hist[c.ToString()] = 1;\n            }\n\
    \        }\n        return hist;", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]++;\n\
    \            } else {\n                hist[c.ToString()] = 1;\n            }\n\
    \        }\n        return hist;", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       string s = c.ToString();\n            if (histogram.ContainsKey(s)) {\n\
    \                histogram[s] += 1;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]\
    \ += 1;\n            } else {\n                histogram[c.ToString()] = 1;\n\
    \            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (string letter in test.Split('\
    \ ')) {\n            if (histogram.ContainsKey(letter)) {\n                histogram[letter]++;\n\
    \            } else {\n                histogram[letter] = 1;\n            }\n\
    \        }\n        long max = histogram.Values.Max();\n        foreach (KeyValuePair<string,long>\
    \ entry in histogram) {\n            if (entry.Value == max) {\n             \
    \   result[entry.Key] = entry.Value;\n            }\n        }\n        return\
    \ result;", "        Dictionary<string,long> result = new Dictionary<string,long>();\n\
    \        Dictionary<string,long> histogram = new Dictionary<string,long>();\n\
    \        foreach (char c in test) {\n            string s = c.ToString();\n  \
    \          if (histogram.ContainsKey(s)) {\n                histogram[s] += 1;\n\
    \            } else {\n                histogram[s] = 1;\n            }\n    \
    \    }\n        long max = histogram.Values.Max();\n        foreach (KeyValuePair<string,long>\
    \ kvp in histogram) {\n            if (kvp.Value == max) {\n                result[kvp.Key]\
    \ = kvp.Value;\n            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram[c.ToString()] = 1;\n        \
    \    }\n        }\n        long max = 0;\n        foreach (KeyValuePair<string,long>\
    \ kvp in histogram) {\n            if (kvp.Value > max) {\n                max\
    \ = kvp.Value;\n            }\n        }\n        foreach (KeyValuePair<string,long>\
    \ kvp in histogram) {\n            if (kvp.Value == max) {\n                result[kvp.Key]\
    \ = kvp.Value;\n            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            string key = c.ToString();\n            if (hist.ContainsKey(key))\
    \ {\n                hist[key]++;\n            } else {\n                hist[key]\
    \ = 1;\n            }\n        }\n        return hist;", "        var dict = new\
    \ Dictionary<string,long>();\n        foreach (var c in test) {\n            if\
    \ (dict.ContainsKey(c.ToString())) {\n                dict[c.ToString()]++;\n\
    \            } else {\n                dict[c.ToString()] = 1;\n            }\n\
    \        }\n        var max = dict.Values.Max();\n        var keys = dict.Where(kvp\
    \ => kvp.Value == max).Select(kvp => kvp.Key).ToList();\n        return new Dictionary<string,long>\
    \ { { string.Join(\"\", keys), max } };", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (string letter in test.Split('\
    \ ')) {\n            if (histogram.ContainsKey(letter)) {\n                histogram[letter]++;\n\
    \            } else {\n                histogram[letter] = 1;\n            }\n\
    \        }\n        long max = histogram.Values.Max();\n        foreach (KeyValuePair<string,long>\
    \ pair in histogram) {\n            if (pair.Value == max) {\n               \
    \ result[pair.Key] = pair.Value;\n            }\n        }\n        return result;",
  "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n  \
    \      foreach (char c in test) {\n            string s = c.ToString();\n    \
    \        if (histogram.ContainsKey(s)) {\n                histogram[s] += 1;\n\
    \            } else {\n                histogram[s] = 1;\n            }\n    \
    \    }\n        return histogram;", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ result = new Dictionary<string,long>();\n        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (string letter in test.Split('\
    \ ')) {\n            if (histogram.ContainsKey(letter)) {\n                histogram[letter]++;\n\
    \            } else {\n                histogram[letter] = 1;\n            }\n\
    \        }\n        long max = histogram.Values.Max();\n        foreach (string\
    \ letter in histogram.Keys) {\n            if (histogram[letter] == max) {\n \
    \               result[letter] = max;\n            }\n        }\n        return\
    \ result;", "        Dictionary<string,long> result = new Dictionary<string,long>();\n\
    \        Dictionary<string,long> histogram = new Dictionary<string,long>();\n\
    \        long max = 0;\n        foreach (char c in test) {\n            if (histogram.ContainsKey(c.ToString()))\
    \ {\n                histogram[c.ToString()]++;\n            } else {\n      \
    \          histogram[c.ToString()] = 1;\n            }\n            if (histogram[c.ToString()]\
    \ > max) {\n                max = histogram[c.ToString()];\n            }\n  \
    \      }\n        foreach (string key in histogram.Keys) {\n            if (histogram[key]\
    \ == max) {\n                result[key] = max;\n            }\n        }\n  \
    \      return result;", "        Dictionary<string,long> result = new Dictionary<string,long>();\n\
    \        Dictionary<string,long> temp = new Dictionary<string,long>();\n     \
    \   long max = 0;\n        foreach (char c in test) {\n            string s =\
    \ c.ToString();\n            if (temp.ContainsKey(s)) {\n                temp[s]++;\n\
    \            } else {\n                temp[s] = 1;\n            }\n         \
    \   if (temp[s] > max) {\n                max = temp[s];\n            }\n    \
    \    }\n        foreach (KeyValuePair<string,long> kvp in temp) {\n          \
    \  if (kvp.Value == max) {\n                result[kvp.Key] = kvp.Value;\n   \
    \         }\n        }\n        return result;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            string s = c.ToString();\n            if (hist.ContainsKey(s)) {\n\
    \                hist[s]++;\n            } else {\n                hist[s] = 1;\n\
    \            }\n        }\n        return hist;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        var dict = new Dictionary<string,long>();\n\
    \        var max = 0L;\n        foreach (var c in test) {\n            if (!dict.ContainsKey(c.ToString()))\
    \ {\n                dict[c.ToString()] = 0;\n            }\n            dict[c.ToString()]++;\n\
    \            max = Math.Max(max, dict[c.ToString()]);\n        }\n        var\
    \ result = new Dictionary<string,long>();\n        foreach (var kv in dict) {\n\
    \            if (kv.Value == max) {\n                result[kv.Key] = kv.Value;\n\
    \            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ dict = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (dict.ContainsKey(c.ToString())) {\n                dict[c.ToString()]++;\n\
    \            } else {\n                dict.Add(c.ToString(), 1);\n          \
    \  }\n        }\n        return dict;", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       string s = c.ToString();\n            if (histogram.ContainsKey(s)) {\n\
    \                histogram[s]++;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]++;\n\
    \            } else {\n                hist[c.ToString()] = 1;\n            }\n\
    \        }\n        return hist;", "        Dictionary<string,long> result = new\
    \ Dictionary<string,long>();\n        Dictionary<string,long> histogram = new\
    \ Dictionary<string,long>();\n        foreach (char c in test) {\n           \
    \ if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram[c.ToString()] = 1;\n        \
    \    }\n        }\n        long max = histogram.Values.Max();\n        foreach\
    \ (KeyValuePair<string,long> kvp in histogram) {\n            if (kvp.Value ==\
    \ max) {\n                result[kvp.Key] = kvp.Value;\n            }\n      \
    \  }\n        return result;", "        Dictionary<string,long> result = new Dictionary<string,long>();\n\
    \        Dictionary<string,long> histogram = new Dictionary<string,long>();\n\
    \        foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))\
    \ {\n                histogram[letter]++;\n            } else {\n            \
    \    histogram[letter] = 1;\n            }\n        }\n        long max = histogram.Values.Max();\n\
    \        foreach (string letter in histogram.Keys) {\n            if (histogram[letter]\
    \ == max) {\n                result[letter] = max;\n            }\n        }\n\
    \        return result;", "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n\
    \        foreach (char c in test) {\n            if (histogram.ContainsKey(c.ToString()))\
    \ {\n                histogram[c.ToString()]++;\n            } else {\n      \
    \          histogram.Add(c.ToString(), 1);\n            }\n        }\n       \
    \ return histogram;", "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n\
    \        foreach (char c in test) {\n            string s = c.ToString();\n  \
    \          if (histogram.ContainsKey(s)) {\n                histogram[s] += 1;\n\
    \            } else {\n                histogram[s] = 1;\n            }\n    \
    \    }\n        return histogram;", "        Dictionary<string,long> histogram\
    \ = new Dictionary<string,long>();\n        foreach (char c in test) {\n     \
    \       string s = c.ToString();\n            if (histogram.ContainsKey(s)) {\n\
    \                histogram[s] += 1;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            string s = c.ToString();\n            if (histogram.ContainsKey(s))\
    \ {\n                histogram[s]++;\n            } else {\n                histogram[s]\
    \ = 1;\n            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            string key = c.ToString();\n            if (histogram.ContainsKey(key))\
    \ {\n                histogram[key]++;\n            } else {\n               \
    \ histogram[key] = 1;\n            }\n        }\n        return histogram;", " \
    \       Dictionary<string,long> hist = new Dictionary<string,long>();\n      \
    \  foreach (char c in test) {\n            if (hist.ContainsKey(c.ToString()))\
    \ {\n                hist[c.ToString()]++;\n            } else {\n           \
    \     hist[c.ToString()] = 1;\n            }\n        }\n        return hist;",
  "        Dictionary<string,long> result = new Dictionary<string,long>();\n     \
    \   Dictionary<string,long> histogram = new Dictionary<string,long>();\n     \
    \   foreach (char c in test) {\n            if (histogram.ContainsKey(c.ToString()))\
    \ {\n                histogram[c.ToString()] += 1;\n            } else {\n   \
    \             histogram[c.ToString()] = 1;\n            }\n        }\n       \
    \ long max = histogram.Values.Max();\n        foreach (KeyValuePair<string,long>\
    \ kvp in histogram) {\n            if (kvp.Value == max) {\n                result[kvp.Key]\
    \ = kvp.Value;\n            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            string s = c.ToString();\n            if (hist.ContainsKey(s)) {\n\
    \                hist[s]++;\n            } else {\n                hist[s] = 1;\n\
    \            }\n        }\n        return hist;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]\
    \ += 1;\n            } else {\n                hist[c.ToString()] = 1;\n     \
    \       }\n        }\n        return hist;", "        Dictionary<string,long>\
    \ hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n\
    \            if (hist.ContainsKey(c.ToString())) {\n                hist[c.ToString()]++;\n\
    \            } else {\n                hist[c.ToString()] = 1;\n            }\n\
    \        }\n        return hist;", "        var dict = new Dictionary<string,long>();\n\
    \        foreach (var c in test) {\n            if (dict.ContainsKey(c.ToString()))\
    \ {\n                dict[c.ToString()]++;\n            } else {\n           \
    \     dict[c.ToString()] = 1;\n            }\n        }\n        var max = dict.Values.Max();\n\
    \        var result = new Dictionary<string,long>();\n        foreach (var kv\
    \ in dict) {\n            if (kv.Value == max) {\n                result[kv.Key]\
    \ = kv.Value;\n            }\n        }\n        return result;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]++;\n\
    \            } else {\n                histogram.Add(c.ToString(), 1);\n     \
    \       }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        foreach (char c in test)\
    \ {\n            if (histogram.ContainsKey(c.ToString())) {\n                histogram[c.ToString()]\
    \ += 1;\n            } else {\n                histogram[c.ToString()] = 1;\n\
    \            }\n        }\n        return histogram;", "        Dictionary<string,long>\
    \ histogram = new Dictionary<string,long>();\n        string[] letters = test.Split('\
    \ ');\n        foreach (string letter in letters) {\n            if (histogram.ContainsKey(letter))\
    \ {\n                histogram[letter] += 1;\n            } else {\n         \
    \       histogram[letter] = 1;\n            }\n        }\n        return histogram;",
  "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n  \
    \      foreach (char c in test) {\n            if (histogram.ContainsKey(c.ToString()))\
    \ {\n                histogram[c.ToString()] += 1;\n            } else {\n   \
    \             histogram[c.ToString()] = 1;\n            }\n        }\n       \
    \ return histogram;", "        Dictionary<string,long> hist = new Dictionary<string,long>();\n\
    \        foreach (char c in test) {\n            if (hist.ContainsKey(c.ToString()))\
    \ {\n                hist[c.ToString()]++;\n            } else {\n           \
    \     hist[c.ToString()] = 1;\n            }\n        }\n        return hist;",
  "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n  \
    \      foreach (char c in test) {\n            if (histogram.ContainsKey(c.ToString()))\
    \ {\n                histogram[c.ToString()]++;\n            } else {\n      \
    \          histogram.Add(c.ToString(), 1);\n            }\n        }\n       \
    \ return histogram;", "        Dictionary<string,long> hist = new Dictionary<string,long>();\n\
    \        foreach (char c in test) {\n            if (hist.ContainsKey(c.ToString()))\
    \ {\n                hist[c.ToString()]++;\n            } else {\n           \
    \     hist[c.ToString()] = 1;\n            }\n        }\n        return hist;"]
stop_tokens:
- "\n    }\n"

language: cs
name: HumanEval_112_reverse_delete
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <d9459407f97b4a979a8aa4a134c75cf3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <d9459407f97b4a979a8aa4a134c75cf3>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code goes here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e872706560e64833ab1d87bdd00f4d44>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e872706560e64833ab1d87bdd00f4d44>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code goes here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code goes here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code goes here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <d9459407f97b4a979a8aa4a134c75cf3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <d9459407f97b4a979a8aa4a134c75cf3>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code goes here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code goes here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e872706560e64833ab1d87bdd00f4d44>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e872706560e64833ab1d87bdd00f4d44>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ true);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7eb419ef3f274aea894d811ba7c87603>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7eb419ef3f274aea894d811ba7c87603>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code goes here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code goes here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // TODO: Implement this method\n        return new Tuple<string, bool>(\"\
    \", false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5d38fcf4b1444ffaa3f9d674a90fbee9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5d38fcf4b1444ffaa3f9d674a90fbee9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // your code here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d4aaf3e86fa24e14a73f0e18e2143781>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d4aaf3e86fa24e14a73f0e18e2143781>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <d9459407f97b4a979a8aa4a134c75cf3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <d9459407f97b4a979a8aa4a134c75cf3>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code goes here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code goes here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // TODO: implement\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <1a2806644e0546ae9cd30f406ff4fa80>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <1a2806644e0546ae9cd30f406ff4fa80>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code goes here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code goes here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e872706560e64833ab1d87bdd00f4d44>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e872706560e64833ab1d87bdd00f4d44>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code goes here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return new Tuple<string, bool>(\"\", false);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27f60f2522a64a2695f6efa838e58538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Solution\n        // We can use a hash table to store the characters\
    \ in c and then iterate through the characters in s and delete the characters\
    \ that are in c.\n        // We can use a hash table to store the characters in\
    \ c and then iterate through the characters in s and delete the characters that\
    \ are in c.\n        // We can use a hash table to store the characters in c and\
    \ then iterate through the characters in s and delete the characters that are\
    \ in c.\n        // We can use a hash table to store the characters in c and then\
    \ iterate through the characters in s and delete the characters that are in c.\n\
    \        // We can use a hash table to store the characters in c and then iterate\
    \ through the characters in s and delete the characters that are in c.\n     \
    \   // We can use a hash table to store the characters in c and then iterate through\
    \ the characters in s and delete the characters that are in c.\n        // We\
    \ can use a hash table to store the characters in c and then iterate through the\
    \ characters in s and delete the characters that are in c.\n        // We can\
    \ use a hash table to store the characters in c and then iterate through the characters\
    \ in s and delete the characters that are in c.\n        // We can use a hash\
    \ table to store the characters in c and then iterate through the characters in\
    \ s and delete the characters that are in c.\n        // We can use a hash table\
    \ to store the characters in c and then iterate through the characters in s and\
    \ delete the characters that are in c.\n        // We can use a hash table to\
    \ store the characters in c and then iterate through the characters in s and delete\
    \ the characters that are in c.\n        // We can use a hash table to store the\
    \ characters in c and then iterate through the characters in s and delete the\
    \ characters that are in c.\n        // We can use a hash table to store the characters\
    \ in c and then iterate through the characters in s and delete the characters\
    \ that are in c.\n        // We can use a hash table to store the characters in\
    \ c and then iterate through the characters in s and delete the characters that\
    \ are in c.\n        // We can use a hash table to store the characters in c and\
    \ then iterate through the characters in s and delete the characters that are\
    \ in c.\n        // We can use a hash table to store the characters\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjjnef4gy.cs(15,39): error CS0161: ''Problem.ReverseDelete(string, string)'':
    not all code paths return a value

    '
  timestamp: 1660015749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <d9459407f97b4a979a8aa4a134c75cf3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <d9459407f97b4a979a8aa4a134c75cf3>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code goes here\n        // Hint: use StringBuilder\n        return\
    \ new Tuple<string, bool>(\"\", false);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f9685b36221b46d593403ab0ab3827b9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f9685b36221b46d593403ab0ab3827b9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code goes here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <b0f87f5b2030460f87a6f3c89991dde0>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"\
    ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <143e65d409024eaa887729efcd8a2e63>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Your code here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"abcde\"), (\"ae\")).Equals((Tuple.Create(\"\
    bcd\", false))));\n    Debug.Assert(ReverseDelete((\"abcdef\"), (\"b\")).Equals((Tuple.Create(\"\
    acdef\", false))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"\
    cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"dwik\"), (\"w\")).Equals((Tuple.Create(\"\
    dik\", false))));\n    Debug.Assert(ReverseDelete((\"a\"), (\"a\")).Equals((Tuple.Create(\"\
    \", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"\")).Equals((Tuple.Create(\"\
    abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"abcdedcba\"), (\"v\"\
    )).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0001b] in <f48c9250e8af402c8e7cd620fc60a422>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Task\n    // We are given two strings s and c, you have\
    \ to deleted all the characters in s that are equal to any character in c\n  \
    \  // then check if the result string is palindrome.\n    // A string is called\
    \ palindrome if it reads the same backward as forward.\n    // You should return\
    \ a tuple containing the result string and True/False for the check.\n    // Example\n\
    \    public static Tuple<string, bool> ReverseDelete(string s, string c) {\n \
    \       // Write your code here\n        return new Tuple<string, bool>(\"\",\
    \ false);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseDelete((\"\
    abcde\"), (\"ae\")).Equals((Tuple.Create(\"bcd\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdef\"), (\"b\")).Equals((Tuple.Create(\"acdef\", false))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"ab\")).Equals((Tuple.Create(\"cdedc\", true))));\n    Debug.Assert(ReverseDelete((\"\
    dwik\"), (\"w\")).Equals((Tuple.Create(\"dik\", false))));\n    Debug.Assert(ReverseDelete((\"\
    a\"), (\"a\")).Equals((Tuple.Create(\"\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    abcdedcba\"), (\"v\")).Equals((Tuple.Create(\"abcdedcba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    vabba\"), (\"v\")).Equals((Tuple.Create(\"abba\", true))));\n    Debug.Assert(ReverseDelete((\"\
    mamma\"), (\"mia\")).Equals((Tuple.Create(\"\", true))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01073e3782e544aa96343190dde31fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015750

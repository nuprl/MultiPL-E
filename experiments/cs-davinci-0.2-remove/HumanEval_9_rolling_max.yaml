name: HumanEval_9_rolling_max
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // From a given list of integers, generate a list of rolling maximum\
  \ element found until given moment\n    // in the sequence.\n    public static List<long>\
  \ RollingMax(List<long> numbers) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
  \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
  \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
  \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new\
  \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
  \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
  \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
  \    }\n\n}\n"
completions: ["        List<long> result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            if (numbers[i] > max) {\n                max = numbers[i];\n    \
    \        }\n            result.Add(max);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            max = Math.Max(max, numbers[i]);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var max = long.MinValue;\n        foreach (var n in numbers) {\n    \
    \        max = Math.Max(max, n);\n            result.Add(max);\n        }\n  \
    \      return result;", "        var result = new List<long>();\n        long\
    \ max = long.MinValue;\n        foreach (var number in numbers) {\n          \
    \  if (number > max) {\n                max = number;\n            }\n       \
    \     result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        var max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;",
  "        var result = new List<long>();\n        long max = numbers[0];\n      \
    \  result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n     \
    \       max = Math.Max(max, numbers[i]);\n            result.Add(max);\n     \
    \   }\n        return result;", "        var result = new List<long>();\n    \
    \    long max = numbers[0];\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n  \
    \          result.Add(max);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long max = numbers[0];\n        for (int\
    \ i = 0; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n    \
    \            max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var max = long.MinValue;\n        foreach (var n in numbers) {\n    \
    \        max = Math.Max(max, n);\n            result.Add(max);\n        }\n  \
    \      return result;", "        var result = new List<long>();\n        var max\
    \ = long.MinValue;\n        foreach (var number in numbers) {\n            if\
    \ (number > max) {\n                max = number;\n            }\n           \
    \ result.Add(max);\n        }\n        return result;", "        var result =\
    \ new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;",
  "        var result = new List<long>();\n        long max = numbers[0];\n      \
    \  result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n     \
    \       if (numbers[i] > max) {\n                max = numbers[i];\n         \
    \   }\n            result.Add(max);\n        }\n        return result;", "   \
    \     List<long> maxes = new List<long>();\n        long max = long.MinValue;\n\
    \        foreach (long number in numbers) {\n            max = Math.Max(max, number);\n\
    \            maxes.Add(max);\n        }\n        return maxes;", "        var\
    \ max = new List<long>();\n        long currentMax = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            if (number > currentMax) {\n        \
    \        currentMax = number;\n            }\n            max.Add(currentMax);\n\
    \        }\n        return max;", "        var result = new List<long>();\n  \
    \      long max = long.MinValue;\n        foreach (var n in numbers) {\n     \
    \       max = Math.Max(max, n);\n            result.Add(max);\n        }\n   \
    \     return result;", "        var result = new List<long>();\n        long max\
    \ = numbers[0];\n        result.Add(max);\n        for (int i = 1; i < numbers.Count;\
    \ i++) {\n            max = Math.Max(max, numbers[i]);\n            result.Add(max);\n\
    \        }\n        return result;", "        var maxes = new List<long>();\n\
    \        long max = numbers[0];\n        maxes.Add(max);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n        \
    \        max = numbers[i];\n            }\n            maxes.Add(max);\n     \
    \   }\n        return maxes;", "        var result = new List<long>();\n     \
    \   long max = numbers[0];\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n           \
    \     max = numbers[i];\n            }\n            result.Add(max);\n       \
    \ }\n        return result;", "        var result = new List<long>();\n      \
    \  var max = long.MinValue;\n        foreach (var number in numbers) {\n     \
    \       max = Math.Max(max, number);\n            result.Add(max);\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long max = long.MinValue;\n        foreach (long number in numbers) {\n\
    \            if (number > max) {\n                max = number;\n            }\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = long.MinValue;\n        foreach (long number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        var maxes = new List<long>();\n    \
    \    long max = long.MinValue;\n        foreach (var n in numbers) {\n       \
    \     max = Math.Max(max, n);\n            maxes.Add(max);\n        }\n      \
    \  return maxes;", "        var maxes = new List<long>();\n        long max =\
    \ long.MinValue;\n        foreach (var number in numbers) {\n            max =\
    \ Math.Max(max, number);\n            maxes.Add(max);\n        }\n        return\
    \ maxes;", "        var result = new List<long>();\n        var max = long.MinValue;\n\
    \        foreach (var n in numbers) {\n            max = Math.Max(max, n);\n \
    \           result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        var max = long.MinValue;\n        foreach (var\
    \ n in numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = long.MinValue;\n        foreach (var n in numbers) {\n   \
    \         max = Math.Max(max, n);\n            result.Add(max);\n        }\n \
    \       return result;", "        var result = new List<long>();\n        long\
    \ max = numbers[0];\n        result.Add(max);\n        for (int i = 1; i < numbers.Count;\
    \ i++) {\n            if (numbers[i] > max) {\n                max = numbers[i];\n\
    \            }\n            result.Add(max);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = long.MinValue;\n\
    \        foreach (long number in numbers) {\n            max = Math.Max(max, number);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        var max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        var max\
    \ = new List<long>();\n        long currentMax = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            currentMax = Math.Max(currentMax, number);\n\
    \            max.Add(currentMax);\n        }\n        return max;", "        var\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var max = new List<long>();\n  \
    \      long currMax = numbers[0];\n        max.Add(currMax);\n        for (int\
    \ i = 1; i < numbers.Count; i++) {\n            currMax = Math.Max(currMax, numbers[i]);\n\
    \            max.Add(currMax);\n        }\n        return max;", "        var\
    \ result = new List<long>();\n        var max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        var max = long.MinValue;\n        foreach (var\
    \ number in numbers) {\n            max = Math.Max(max, number);\n           \
    \ result.Add(max);\n        }\n        return result;", "        var max = new\
    \ List<long>();\n        long currentMax = long.MinValue;\n        foreach (var\
    \ n in numbers) {\n            if (n > currentMax) {\n                currentMax\
    \ = n;\n            }\n            max.Add(currentMax);\n        }\n        return\
    \ max;", "        var result = new List<long>();\n        var max = long.MinValue;\n\
    \        foreach (var number in numbers) {\n            max = Math.Max(max, number);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;",
  "        var result = new List<long>();\n        var max = numbers[0];\n       \
    \ result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n      \
    \      max = Math.Max(max, numbers[i]);\n            result.Add(max);\n      \
    \  }\n        return result;", "        var result = new List<long>();\n     \
    \   long max = numbers[0];\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n  \
    \          result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = long.MinValue;\n        foreach\
    \ (var n in numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = long.MinValue;\n        foreach (var n in numbers) {\n   \
    \         max = Math.Max(max, n);\n            result.Add(max);\n        }\n \
    \       return result;", "        var result = new List<long>();\n        long\
    \ max = long.MinValue;\n        foreach (var n in numbers) {\n            max\
    \ = Math.Max(max, n);\n            result.Add(max);\n        }\n        return\
    \ result;", "        var max = new List<long>();\n        long m = long.MinValue;\n\
    \        foreach (var n in numbers) {\n            m = Math.Max(m, n);\n     \
    \       max.Add(m);\n        }\n        return max;", "        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var n in numbers)\
    \ {\n            max = Math.Max(max, n);\n            result.Add(max);\n     \
    \   }\n        return result;", "        var result = new List<long>();\n    \
    \    long max = numbers[0];\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n  \
    \          result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;",
  "        var result = new List<long>();\n        long max = numbers[0];\n      \
    \  result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n     \
    \       max = Math.Max(max, numbers[i]);\n            result.Add(max);\n     \
    \   }\n        return result;", "        var result = new List<long>();\n    \
    \    long max = numbers[0];\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n           \
    \     max = numbers[i];\n            }\n            result.Add(max);\n       \
    \ }\n        return result;", "        var result = new List<long>();\n      \
    \  var max = long.MinValue;\n        foreach (var number in numbers) {\n     \
    \       max = Math.Max(max, number);\n            result.Add(max);\n        }\n\
    \        return result;", "        var result = new List<long>();\n        long\
    \ max = long.MinValue;\n        foreach (var n in numbers) {\n            max\
    \ = Math.Max(max, n);\n            result.Add(max);\n        }\n        return\
    \ result;", "        var max = new List<long>();\n        var currentMax = long.MinValue;\n\
    \        foreach (var n in numbers) {\n            currentMax = Math.Max(currentMax,\
    \ n);\n            max.Add(currentMax);\n        }\n        return max;", "  \
    \      var result = new List<long>();\n        long currentMax = numbers[0];\n\
    \        result.Add(currentMax);\n        for (int i = 1; i < numbers.Count; i++)\
    \ {\n            currentMax = Math.Max(currentMax, numbers[i]);\n            result.Add(currentMax);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = long.MinValue;\n        foreach (var number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = long.MinValue;\n        foreach (long number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     long max = numbers[0];\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n  \
    \          result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        var max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;",
  "        var result = new List<long>();\n        var max = long.MinValue;\n    \
    \    foreach (var n in numbers) {\n            max = Math.Max(max, n);\n     \
    \       result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        long max = long.MinValue;\n        foreach (var\
    \ n in numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var max = long.MinValue;\n        foreach (var number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     var max = long.MinValue;\n        foreach (var number in numbers) {\n  \
    \          if (number > max) {\n                max = number;\n            }\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            if (number > max) {\n               \
    \ max = number;\n            }\n            result.Add(max);\n        }\n    \
    \    return result;", "        var result = new List<long>();\n        long max\
    \ = 0;\n        foreach (var n in numbers) {\n            max = Math.Max(max,\
    \ n);\n            result.Add(max);\n        }\n        return result;", "   \
    \     var max = new List<long>();\n        var currentMax = long.MinValue;\n \
    \       foreach (var number in numbers) {\n            currentMax = Math.Max(currentMax,\
    \ number);\n            max.Add(currentMax);\n        }\n        return max;",
  "        var result = new List<long>();\n        long max = long.MinValue;\n   \
    \     foreach (var n in numbers) {\n            max = Math.Max(max, n);\n    \
    \        result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        var max = long.MinValue;\n        foreach (var\
    \ number in numbers) {\n            if (number > max) {\n                max =\
    \ number;\n            }\n            result.Add(max);\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long max =\
    \ long.MinValue;\n        foreach (long number in numbers) {\n            max\
    \ = Math.Max(max, number);\n            result.Add(max);\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            if (numbers[i] > max) {\n                max = numbers[i];\n    \
    \        }\n            result.Add(max);\n        }\n        return result;",
  "        var result = new List<long>();\n        long max = numbers[0];\n      \
    \  result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n     \
    \       if (numbers[i] > max) {\n                max = numbers[i];\n         \
    \   }\n            result.Add(max);\n        }\n        return result;", "   \
    \     var result = new List<long>();\n        long max = long.MinValue;\n    \
    \    foreach (var number in numbers) {\n            max = Math.Max(max, number);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        var max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = long.MinValue;\n        foreach (var number in numbers) {\n\
    \            if (number > max) {\n                max = number;\n            }\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        long max = long.MinValue;\n        foreach (var\
    \ number in numbers) {\n            max = Math.Max(max, number);\n           \
    \ result.Add(max);\n        }\n        return result;", "        List<long> maxes\
    \ = new List<long>();\n        long max = numbers[0];\n        maxes.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            maxes.Add(max);\n        }\n        return maxes;",
  "        var max = new List<long>();\n        long currentMax = long.MinValue;\n\
    \        foreach (var number in numbers) {\n            currentMax = Math.Max(currentMax,\
    \ number);\n            max.Add(currentMax);\n        }\n        return max;",
  "        var max = new List<long>();\n        long currentMax = numbers[0];\n  \
    \      max.Add(currentMax);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            currentMax = Math.Max(currentMax, numbers[i]);\n            max.Add(currentMax);\n\
    \        }\n        return max;", "        var result = new List<long>();\n  \
    \      long max = long.MinValue;\n        foreach (var n in numbers) {\n     \
    \       max = Math.Max(max, n);\n            result.Add(max);\n        }\n   \
    \     return result;", "        var result = new List<long>();\n        long max\
    \ = numbers[0];\n        result.Add(max);\n        for (int i = 1; i < numbers.Count;\
    \ i++) {\n            if (numbers[i] > max) {\n                max = numbers[i];\n\
    \            }\n            result.Add(max);\n        }\n        return result;",
  "        var maxes = new List<long>();\n        long max = long.MinValue;\n    \
    \    foreach (var number in numbers) {\n            max = Math.Max(max, number);\n\
    \            maxes.Add(max);\n        }\n        return maxes;", "        var\
    \ result = new List<long>();\n        long max = long.MinValue;\n        foreach\
    \ (var n in numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var max = long.MinValue;\n        foreach (var number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     long max = long.MinValue;\n        foreach (var number in numbers) {\n \
    \           max = Math.Max(max, number);\n            result.Add(max);\n     \
    \   }\n        return result;", "        var result = new List<long>();\n    \
    \    long max = long.MinValue;\n        foreach (var n in numbers) {\n       \
    \     max = Math.Max(max, n);\n            result.Add(max);\n        }\n     \
    \   return result;", "        var result = new List<long>();\n        long max\
    \ = numbers[0];\n        result.Add(max);\n        for (int i = 1; i < numbers.Count;\
    \ i++) {\n            max = Math.Max(max, numbers[i]);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = long.MinValue;\n        foreach (var number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = long.MinValue;\n        foreach (long number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     var max = long.MinValue;\n        foreach (var number in numbers) {\n  \
    \          if (number > max) {\n                max = number;\n            }\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;",
  "        var result = new List<long>();\n        long max = long.MinValue;\n   \
    \     foreach (var number in numbers) {\n            max = Math.Max(max, number);\n\
    \            result.Add(max);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var max = long.MinValue;\n        foreach (var number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        var max = new List<long>();\n      \
    \  long currentMax = long.MinValue;\n        foreach (var number in numbers) {\n\
    \            currentMax = Math.Max(currentMax, number);\n            max.Add(currentMax);\n\
    \        }\n        return max;", "        var result = new List<long>();\n  \
    \      var max = long.MinValue;\n        foreach (var n in numbers) {\n      \
    \      max = Math.Max(max, n);\n            result.Add(max);\n        }\n    \
    \    return result;", "        var max = new List<long>();\n        long currentMax\
    \ = long.MinValue;\n        foreach (var number in numbers) {\n            if\
    \ (number > currentMax) {\n                currentMax = number;\n            }\n\
    \            max.Add(currentMax);\n        }\n        return max;", "        var\
    \ result = new List<long>();\n        long max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        long max = 0;\n        foreach (var n in numbers)\
    \ {\n            max = Math.Max(max, n);\n            result.Add(max);\n     \
    \   }\n        return result;", "        var result = new List<long>();\n    \
    \    long max = numbers[0];\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n           \
    \     max = numbers[i];\n            }\n            result.Add(max);\n       \
    \ }\n        return result;", "        var result = new List<long>();\n      \
    \  long max = long.MinValue;\n        foreach (var number in numbers) {\n    \
    \        max = Math.Max(max, number);\n            result.Add(max);\n        }\n\
    \        return result;", "        var result = new List<long>();\n        long\
    \ max = numbers[0];\n        result.Add(max);\n        for (int i = 1; i < numbers.Count;\
    \ i++) {\n            max = Math.Max(max, numbers[i]);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var max = long.MinValue;\n        foreach (var number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     long max = numbers[0];\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n  \
    \          result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        var max = long.MinValue;\n        foreach\
    \ (var n in numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = long.MinValue;\n        foreach (var n in numbers) {\n   \
    \         max = Math.Max(max, n);\n            result.Add(max);\n        }\n \
    \       return result;", "        var max = new List<long>();\n        long currMax\
    \ = numbers[0];\n        max.Add(currMax);\n        for (int i = 1; i < numbers.Count;\
    \ i++) {\n            if (numbers[i] > currMax) {\n                currMax = numbers[i];\n\
    \            }\n            max.Add(currMax);\n        }\n        return max;",
  "        var result = new List<long>();\n        long max = 0;\n        foreach\
    \ (var number in numbers) {\n            if (number > max) {\n               \
    \ max = number;\n            }\n            result.Add(max);\n        }\n    \
    \    return result;", "        var result = new List<long>();\n        var max\
    \ = long.MinValue;\n        foreach (var number in numbers) {\n            max\
    \ = Math.Max(max, number);\n            result.Add(max);\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        long max = long.MinValue;\n\
    \        foreach (var n in numbers) {\n            max = Math.Max(max, n);\n \
    \           result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        var max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;",
  "        var result = new List<long>();\n        long max = numbers[0];\n      \
    \  result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n     \
    \       max = Math.Max(max, numbers[i]);\n            result.Add(max);\n     \
    \   }\n        return result;", "        var result = new List<long>();\n    \
    \    long max = long.MinValue;\n        foreach (var n in numbers) {\n       \
    \     max = Math.Max(max, n);\n            result.Add(max);\n        }\n     \
    \   return result;", "        var result = new List<long>();\n        long max\
    \ = long.MinValue;\n        foreach (var num in numbers) {\n            max =\
    \ Math.Max(max, num);\n            result.Add(max);\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        long max = 0;\n \
    \       foreach (var number in numbers) {\n            max = Math.Max(max, number);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ max = new List<long>();\n        long currMax = numbers[0];\n        max.Add(currMax);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            currMax = Math.Max(currMax,\
    \ numbers[i]);\n            max.Add(currMax);\n        }\n        return max;",
  "        var result = new List<long>();\n        long max = numbers[0];\n      \
    \  result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n     \
    \       if (numbers[i] > max) {\n                max = numbers[i];\n         \
    \   }\n            result.Add(max);\n        }\n        return result;", "   \
    \     var result = new List<long>();\n        long max = long.MinValue;\n    \
    \    foreach (var n in numbers) {\n            max = Math.Max(max, n);\n     \
    \       result.Add(max);\n        }\n        return result;", "        var max\
    \ = new List<long>();\n        long currentMax = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            if (number > currentMax) {\n        \
    \        currentMax = number;\n            }\n            max.Add(currentMax);\n\
    \        }\n        return max;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var result = new List<long>();\n \
    \       var max = long.MinValue;\n        foreach (var n in numbers) {\n     \
    \       max = Math.Max(max, n);\n            result.Add(max);\n        }\n   \
    \     return result;", "        var result = new List<long>();\n        long max\
    \ = long.MinValue;\n        foreach (var number in numbers) {\n            max\
    \ = Math.Max(max, number);\n            result.Add(max);\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        var max = long.MinValue;\n\
    \        foreach (var number in numbers) {\n            if (number > max) {\n\
    \                max = number;\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n\
    \            result.Add(max);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var max = new List<long>();\n  \
    \      long currentMax = numbers[0];\n        max.Add(currentMax);\n        for\
    \ (int i = 1; i < numbers.Count; i++) {\n            currentMax = Math.Max(currentMax,\
    \ numbers[i]);\n            max.Add(currentMax);\n        }\n        return max;",
  "        var result = new List<long>();\n        long max = 0;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        var max = long.MinValue;\n        foreach (var\
    \ number in numbers) {\n            max = Math.Max(max, number);\n           \
    \ result.Add(max);\n        }\n        return result;", "        var max = new\
    \ List<long>();\n        long currMax = long.MinValue;\n        foreach (var n\
    \ in numbers) {\n            currMax = Math.Max(currMax, n);\n            max.Add(currMax);\n\
    \        }\n        return max;", "        List<long> result = new List<long>();\n\
    \        long max = long.MinValue;\n        foreach (long number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     var max = numbers[0];\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n  \
    \          result.Add(max);\n        }\n        return result;", "        var\
    \ max = new List<long>();\n        long currentMax = long.MinValue;\n        foreach\
    \ (var n in numbers) {\n            currentMax = Math.Max(currentMax, n);\n  \
    \          max.Add(currentMax);\n        }\n        return max;", "        var\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;",
  "        var max = new List<long>();\n        long currentMax = long.MinValue;\n\
    \        foreach (var number in numbers) {\n            if (number > currentMax)\
    \ {\n                currentMax = number;\n            }\n            max.Add(currentMax);\n\
    \        }\n        return max;", "        List<long> result = new List<long>();\n\
    \        long max = long.MinValue;\n        foreach (long number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     var max = long.MinValue;\n        foreach (var number in numbers) {\n  \
    \          max = Math.Max(max, number);\n            result.Add(max);\n      \
    \  }\n        return result;", "        var result = new List<long>();\n     \
    \   long max = numbers[0];\n        for (int i = 0; i < numbers.Count; i++) {\n\
    \            max = Math.Max(max, numbers[i]);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var max = long.MinValue;\n        foreach (var number in numbers) {\n\
    \            if (number > max) {\n                max = number;\n            }\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ max = new List<long>();\n        long currentMax = numbers[0];\n        max.Add(currentMax);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > currentMax) {\n                currentMax = numbers[i];\n            }\n \
    \           max.Add(currentMax);\n        }\n        return max;", "        var\
    \ max = new List<long>();\n        long currentMax = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            currentMax = Math.Max(currentMax, number);\n\
    \            max.Add(currentMax);\n        }\n        return max;", "        var\
    \ max = new List<long>();\n        long currentMax = numbers[0];\n        max.Add(currentMax);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > currentMax) {\n                currentMax = numbers[i];\n            }\n \
    \           max.Add(currentMax);\n        }\n        return max;", "        List<long>\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var max = new List<long>();\n  \
    \      long currentMax = long.MinValue;\n        foreach (var number in numbers)\
    \ {\n            currentMax = Math.Max(currentMax, number);\n            max.Add(currentMax);\n\
    \        }\n        return max;", "        var max = new List<long>();\n     \
    \   var currentMax = long.MinValue;\n        foreach (var number in numbers) {\n\
    \            if (number > currentMax) {\n                currentMax = number;\n\
    \            }\n            max.Add(currentMax);\n        }\n        return max;",
  "        var result = new List<long>();\n        long max = long.MinValue;\n   \
    \     for (int i = 0; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;",
  "        var result = new List<long>();\n        var max = long.MinValue;\n    \
    \    foreach (var number in numbers) {\n            max = Math.Max(max, number);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;",
  "        var result = new List<long>();\n        long max = numbers[0];\n      \
    \  result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n     \
    \       if (numbers[i] > max) {\n                max = numbers[i];\n         \
    \   }\n            result.Add(max);\n        }\n        return result;", "   \
    \     var result = new List<long>();\n        long max = long.MinValue;\n    \
    \    foreach (var number in numbers) {\n            max = Math.Max(max, number);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = numbers[0];\n        for (int\
    \ i = 0; i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        var max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var result = new List<long>();\n \
    \       long max = numbers[0];\n        result.Add(max);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n        \
    \        max = numbers[i];\n            }\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     var max = long.MinValue;\n        foreach (var n in numbers) {\n       \
    \     max = Math.Max(max, n);\n            result.Add(max);\n        }\n     \
    \   return result;", "        var result = new List<long>();\n        var max\
    \ = numbers[0];\n        result.Add(max);\n        for (int i = 1; i < numbers.Count;\
    \ i++) {\n            if (numbers[i] > max) {\n                max = numbers[i];\n\
    \            }\n            result.Add(max);\n        }\n        return result;",
  "        var result = new List<long>();\n        long max = long.MinValue;\n   \
    \     foreach (var number in numbers) {\n            max = Math.Max(max, number);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        long max = long.MinValue;\n        foreach (var\
    \ number in numbers) {\n            max = Math.Max(max, number);\n           \
    \ result.Add(max);\n        }\n        return result;", "        var result =\
    \ new List<long>();\n        long max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            if (number > max) {\n                max = number;\n\
    \            }\n            result.Add(max);\n        }\n        return result;",
  "        var result = new List<long>();\n        long max = long.MinValue;\n   \
    \     foreach (var n in numbers) {\n            max = Math.Max(max, n);\n    \
    \        result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        long max = long.MinValue;\n        foreach (var\
    \ number in numbers) {\n            max = Math.Max(max, number);\n           \
    \ result.Add(max);\n        }\n        return result;", "        var max = new\
    \ List<long>();\n        var currentMax = long.MinValue;\n        foreach (var\
    \ number in numbers) {\n            currentMax = Math.Max(currentMax, number);\n\
    \            max.Add(currentMax);\n        }\n        return max;", "        List<long>\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = long.MinValue;\n        foreach (var number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     var max = long.MinValue;\n        foreach (var number in numbers) {\n  \
    \          max = Math.Max(max, number);\n            result.Add(max);\n      \
    \  }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = long.MinValue;\n        foreach (long number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = long.MinValue;\n        foreach (long number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     long max = long.MinValue;\n        foreach (var n in numbers) {\n      \
    \      max = Math.Max(max, n);\n            result.Add(max);\n        }\n    \
    \    return result;", "        var max = new List<long>();\n        var currentMax\
    \ = long.MinValue;\n        foreach (var number in numbers) {\n            currentMax\
    \ = Math.Max(currentMax, number);\n            max.Add(currentMax);\n        }\n\
    \        return max;", "        var result = new List<long>();\n        var max\
    \ = long.MinValue;\n        foreach (var number in numbers) {\n            if\
    \ (number > max) {\n                max = number;\n            }\n           \
    \ result.Add(max);\n        }\n        return result;", "        var max = new\
    \ List<long>();\n        long current = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            current = Math.Max(current, number);\n          \
    \  max.Add(current);\n        }\n        return max;", "        var max = new\
    \ List<long>();\n        long currentMax = long.MinValue;\n        foreach (var\
    \ number in numbers) {\n            if (number > currentMax) {\n             \
    \   currentMax = number;\n            }\n            max.Add(currentMax);\n  \
    \      }\n        return max;", "        var result = new List<long>();\n    \
    \    long max = 0;\n        foreach (var number in numbers) {\n            max\
    \ = Math.Max(max, number);\n            result.Add(max);\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        long max = long.MinValue;\n\
    \        foreach (var number in numbers) {\n            max = Math.Max(max, number);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        var max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        var max = long.MinValue;\n        foreach (var\
    \ n in numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = long.MinValue;\n        foreach\
    \ (var n in numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = long.MinValue;\n        foreach (var number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     var max = long.MinValue;\n        foreach (var number in numbers) {\n  \
    \          max = Math.Max(max, number);\n            result.Add(max);\n      \
    \  }\n        return result;", "        var max = new List<long>();\n        var\
    \ currentMax = numbers[0];\n        max.Add(currentMax);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            if (numbers[i] > currentMax) {\n \
    \               currentMax = numbers[i];\n            }\n            max.Add(currentMax);\n\
    \        }\n        return max;", "        var result = new List<long>();\n  \
    \      long max = long.MinValue;\n        foreach (var n in numbers) {\n     \
    \       if (n > max) {\n                max = n;\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var max = long.MinValue;\n        foreach (var n in numbers) {\n    \
    \        max = Math.Max(max, n);\n            result.Add(max);\n        }\n  \
    \      return result;", "        var result = new List<long>();\n        long\
    \ max = numbers[0];\n        result.Add(max);\n        for (int i = 1; i < numbers.Count;\
    \ i++) {\n            if (numbers[i] > max) {\n                max = numbers[i];\n\
    \            }\n            result.Add(max);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            if (numbers[i] > max) {\n                max = numbers[i];\n    \
    \        }\n            result.Add(max);\n        }\n        return result;",
  "        var max = new List<long>();\n        long currentMax = long.MinValue;\n\
    \        foreach (var number in numbers) {\n            if (number > currentMax)\
    \ {\n                currentMax = number;\n            }\n            max.Add(currentMax);\n\
    \        }\n        return max;", "        var max = numbers[0];\n        var\
    \ result = new List<long>();\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n           \
    \     max = numbers[i];\n            }\n            result.Add(max);\n       \
    \ }\n        return result;", "        var result = new List<long>();\n      \
    \  long max = numbers[0];\n        result.Add(max);\n        for (int i = 1; i\
    \ < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n    \
    \        result.Add(max);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = long.MinValue;\n        foreach (var number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     long currentMax = long.MinValue;\n        foreach (var number in numbers)\
    \ {\n            currentMax = Math.Max(currentMax, number);\n            result.Add(currentMax);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var max = long.MinValue;\n        foreach (var number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;"]
stop_tokens:
- "\n    }\n"

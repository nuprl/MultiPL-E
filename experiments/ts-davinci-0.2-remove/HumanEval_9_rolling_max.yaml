name: HumanEval_9_rolling_max
language: ts
prompt: "//From a given list of integers, generate a list of rolling maximum element\
  \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers: number[]):\
  \ number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
  \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
  \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
  \ 3, 3, 100, 100]);\n}\n\ntest();"
completions: ["    let result: number[] = [];\n    let max: number = numbers[0];\n\
    \    result.push(max);\n    for (let i = 1; i < numbers.length; i++) {\n     \
    \   if (numbers[i] > max) {\n            max = numbers[i];\n        }\n      \
    \  result.push(max);\n    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n\
    \    let result = [max_so_far];\n    for (let i = 1; i < numbers.length; i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push(max_so_far);\n    }\n    return result;\n}\n",
  "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
    \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push(max);\n   \
    \ }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i]\
    \ > max_so_far) {\n            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let max_so_far\
    \ = numbers[0];\n    let max_so_far_index = 0;\n    let result = [max_so_far];\n\
    \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] >= max_so_far)\
    \ {\n            max_so_far = numbers[i];\n            max_so_far_index = i;\n\
    \        }\n        result.push(max_so_far);\n    }\n    return result;\n}\n",
  "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
    \ i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far) {\n\
    \            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let max_list\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        max_list.push(max_so_far);\n    }\n    return max_list;\n}\n", "    let\
    \ max = -Infinity;\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        max = Math.max(max, numbers[i]);\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    const result: number[] = [];\n    let max:\
    \ number = numbers[0];\n    result.push(max);\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n   \
    \     }\n        result.push(max);\n    }\n    return result;\n}\n", "    let\
    \ result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
    \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push(max);\n   \
    \ }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        let current\
    \ = numbers[i];\n        if (current > max_so_far) {\n            max_so_far =\
    \ current;\n        }\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n", "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for\
    \ (let i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far,\
    \ numbers[i]);\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n", "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for\
    \ (let i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far,\
    \ numbers[i]);\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n", "    let max_so_far = numbers[0];\n    let max_so_far_index = 0;\n    let\
    \ result = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i]\
    \ > max_so_far) {\n            max_so_far = numbers[i];\n            max_so_far_index\
    \ = i;\n        }\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n", "    let max_so_far = -Infinity;\n    let result = [];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let result:\
    \ number[] = [];\n    let max = numbers[0];\n    result.push(max);\n    for (let\
    \ i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n       \
    \     max = numbers[i];\n        }\n        result.push(max);\n    }\n    return\
    \ result;\n}\n", "    let result: number[] = [];\n    let max: number = numbers[0];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push(max);\n   \
    \ }\n    return result;\n}\n", "    let result: number[] = [];\n    let max =\
    \ numbers[0];\n    result.push(max);\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n   \
    \     }\n        result.push(max);\n    }\n    return result;\n}\n", "    let\
    \ result: number[] = [];\n    let max: number = numbers[0];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n           \
    \ max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
    }\n", "    let max_so_far = -Infinity;\n    let result = [];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let result:\
    \ number[] = [];\n    let max_so_far: number = numbers[0];\n    result.push(max_so_far);\n\
    \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far)\
    \ {\n            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let max\
    \ = numbers[0];\n    let result = [max];\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n   \
    \     }\n        result.push(max);\n    }\n    return result;\n}\n", "    let\
    \ max_so_far = -Infinity;\n    return numbers.map(n => {\n        if (n > max_so_far)\
    \ {\n            max_so_far = n;\n        }\n        return max_so_far;\n    });\n\
    }\n", "    let max_so_far = numbers[0];\n    let result = [];\n    for (let i\
    \ = 0; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let max_so_far\
    \ = numbers[0];\n    let result = [max_so_far];\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        max_so_far =\
    \ Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let result: number[] = [];\n    let max: number\
    \ = numbers[0];\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i]\
    \ > max) {\n            max = numbers[i];\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = -Infinity;\n    return\
    \ numbers.map(n => {\n        max_so_far = Math.max(max_so_far, n);\n        return\
    \ max_so_far;\n    });\n}\n", "    let result: number[] = [];\n    let max: number\
    \ = numbers[0];\n    result.push(max);\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n   \
    \     }\n        result.push(max);\n    }\n    return result;\n}\n", "    let\
    \ result: number[] = [];\n    let max = numbers[0];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n   \
    \     }\n        result.push(max);\n    }\n    return result;\n}\n", "    let\
    \ max_so_far = -Infinity;\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let result:\
    \ number[] = [];\n    let max: number = numbers[0];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n   \
    \     }\n        result.push(max);\n    }\n    return result;\n}\n", "    let\
    \ max = numbers[0];\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n   \
    \     }\n        result.push(max);\n    }\n    return result;\n}\n", "    const\
    \ result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n \
    \   for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push(max);\n   \
    \ }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let max_so_far\
    \ = numbers[0];\n    let result = [max_so_far];\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push(max_so_far);\n    }\n    return result;\n}\n",
  "    let max_so_far = numbers[0];\n    let max_so_far_index = 0;\n    let result\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i]\
    \ >= max_so_far) {\n            max_so_far = numbers[i];\n            max_so_far_index\
    \ = i;\n        }\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n", "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for\
    \ (let i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far,\
    \ numbers[i]);\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n", "    const result: number[] = [];\n    let max = -Infinity;\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        max = Math.max(max, numbers[i]);\n\
    \        result.push(max);\n    }\n    return result;\n}\n", "    let max_so_far\
    \ = numbers[0];\n    let max_so_far_index = 0;\n    let result = [];\n    for\
    \ (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far)\
    \ {\n            max_so_far = numbers[i];\n            max_so_far_index = i;\n\
    \        }\n        result.push(max_so_far);\n    }\n    return result;\n}\n",
  "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
    \ i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far) {\n\
    \            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let max_list\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        max_list.push(max_so_far);\n    }\n    return max_list;\n}\n", "    const\
    \ result: number[] = [];\n    let max = numbers[0];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n   \
    \     }\n        result.push(max);\n    }\n    return result;\n}\n", "    let\
    \ max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let i = 1;\
    \ i < numbers.length; i++) {\n        if (numbers[i] > max_so_far) {\n       \
    \     max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max = numbers[0];\n    let result =\
    \ [max];\n    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i]\
    \ > max) {\n            max = numbers[i];\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max = numbers[0];\n    let result = [max];\n\
    \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push(max);\n   \
    \ }\n    return result;\n}\n", "    let result: number[] = [];\n    let max =\
    \ -Infinity;\n    for (let i = 0; i < numbers.length; i++) {\n        max = Math.max(max,\
    \ numbers[i]);\n        result.push(max);\n    }\n    return result;\n}\n", " \
    \   let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
    \ i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far) {\n\
    \            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    const result: number[] = [];\n    let max\
    \ = -Infinity;\n    for (let i = 0; i < numbers.length; i++) {\n        max =\
    \ Math.max(max, numbers[i]);\n        result.push(max);\n    }\n    return result;\n\
    }\n", "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for\
    \ (let i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far,\
    \ numbers[i]);\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n", "    let result: number[] = [];\n    let max_so_far: number = numbers[0];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far)\
    \ {\n            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let max_so_far_index\
    \ = 0;\n    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n\
    \        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \            max_so_far_index = i;\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = -Infinity;\n    return numbers.map(n\
    \ => {\n        if (n > max_so_far) {\n            max_so_far = n;\n        }\n\
    \        return max_so_far;\n    });\n}\n", "    let max_so_far = numbers[0];\n\
    \    let result = [max_so_far];\n    for (let i = 1; i < numbers.length; i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push(max_so_far);\n    }\n    return result;\n}\n",
  "    let max_so_far = numbers[0];\n    let max_so_far_index = 0;\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        \
    \    max_so_far_index = i;\n        }\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let max_so_far_index\
    \ = 0;\n    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n\
    \        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \            max_so_far_index = i;\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max = numbers[0];\n    let result = [];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push(max);\n   \
    \ }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i]\
    \ > max_so_far) {\n            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        max_so_far =\
    \ Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = 0;\n    let result = [];\n  \
    \  for (let i = 0; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far,\
    \ numbers[i]);\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n", "    let max: number = numbers[0];\n    let result: number[] = [];\n   \
    \ for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
    \            max = numbers[i];\n        }\n        result.push(max);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    const result: number[] = [];\n    let max = numbers[0];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push(max);\n   \
    \ }\n    return result;\n}\n", "    const result: number[] = [];\n    let max\
    \ = numbers[0];\n    result.push(max);\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n   \
    \     }\n        result.push(max);\n    }\n    return result;\n}\n", "    let\
    \ result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
    \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push(max);\n   \
    \ }\n    return result;\n}\n", "    let result: number[] = [];\n    let max: number\
    \ = numbers[0];\n    result.push(max);\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n   \
    \     }\n        result.push(max);\n    }\n    return result;\n}\n", "    let\
    \ max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let i = 1;\
    \ i < numbers.length; i++) {\n        if (numbers[i] > max_so_far) {\n       \
    \     max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let max_so_far\
    \ = numbers[0];\n    let result = [max_so_far];\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push(max_so_far);\n    }\n    return result;\n}\n",
  "    let result: number[] = [];\n    let max = numbers[0];\n    for (let i = 0;\
    \ i < numbers.length; i++) {\n        if (numbers[i] > max) {\n            max\
    \ = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
    }\n", "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
    \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push(max);\n   \
    \ }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    return numbers.map(function\
    \ (number) {\n        if (number > max_so_far) {\n            max_so_far = number;\n\
    \        }\n        return max_so_far;\n    });\n}\n", "    let result: number[]\
    \ = [];\n    let max_so_far: number = -Infinity;\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        let current\
    \ = numbers[i];\n        if (current > max_so_far) {\n            max_so_far =\
    \ current;\n        }\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n", "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for\
    \ (let i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far,\
    \ numbers[i]);\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n", "    let max = numbers[0];\n    let result = [max];\n    for (let i = 1;\
    \ i < numbers.length; i++) {\n        if (numbers[i] > max) {\n            max\
    \ = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
    }\n", "    let result: number[] = [];\n    let max: number = numbers[0];\n   \
    \ for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
    \            max = numbers[i];\n        }\n        result.push(max);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i]\
    \ > max_so_far) {\n            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i]\
    \ > max_so_far) {\n            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    const\
    \ result: number[] = [];\n    let max = numbers[0];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n   \
    \     }\n        result.push(max);\n    }\n    return result;\n}\n", "    let\
    \ max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let i = 1;\
    \ i < numbers.length; i++) {\n        if (numbers[i] > max_so_far) {\n       \
    \     max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    const result: number[] = [];\n    let max\
    \ = -Infinity;\n    for (let i = 0; i < numbers.length; i++) {\n        max =\
    \ Math.max(max, numbers[i]);\n        result.push(max);\n    }\n    return result;\n\
    }\n", "    let result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
    \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push(max);\n   \
    \ }\n    return result;\n}\n", "    let result: number[] = [];\n    let max: number\
    \ = numbers[0];\n    result.push(max);\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n   \
    \     }\n        result.push(max);\n    }\n    return result;\n}\n", "    let\
    \ max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let i = 1;\
    \ i < numbers.length; i++) {\n        if (numbers[i] > max_so_far) {\n       \
    \     max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let result: number[] = [];\n    let max = numbers[0];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push(max);\n   \
    \ }\n    return result;\n}\n", "    let result: number[] = [];\n    let max: number\
    \ = numbers[0];\n    result.push(max);\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n   \
    \     }\n        result.push(max);\n    }\n    return result;\n}\n", "    let\
    \ max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let i = 1;\
    \ i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let max_so_far\
    \ = numbers[0];\n    let result = [max_so_far];\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push(max_so_far);\n    }\n    return result;\n}\n",
  "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
    \ i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far,\
    \ numbers[i]);\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n", "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for\
    \ (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far)\
    \ {\n            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        let\
    \ current = numbers[i];\n        if (current > max_so_far) {\n            max_so_far\
    \ = current;\n        }\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n", "    let max_so_far = numbers[0];\n    let maxes = [max_so_far];\n    for\
    \ (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far)\
    \ {\n            max_so_far = numbers[i];\n        }\n        maxes.push(max_so_far);\n\
    \    }\n    return maxes;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    const\
    \ result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n \
    \   for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push(max);\n   \
    \ }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i]\
    \ > max_so_far) {\n            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i]\
    \ > max_so_far) {\n            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    const result: number[] = [];\n    let max\
    \ = numbers[0];\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i]\
    \ > max) {\n            max = numbers[i];\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let max_so_far\
    \ = -Infinity;\n    return numbers.map(n => {\n        max_so_far = Math.max(max_so_far,\
    \ n);\n        return max_so_far;\n    });\n}\n", "    let max_so_far = numbers[0];\n\
    \    let result = [max_so_far];\n    for (let i = 1; i < numbers.length; i++)\
    \ {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let max_so_far\
    \ = -Infinity;\n    return numbers.map(n => {\n        if (n > max_so_far) {\n\
    \            max_so_far = n;\n        }\n        return max_so_far;\n    });\n\
    }\n", "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for\
    \ (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far)\
    \ {\n            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max: number = numbers[0];\n    let\
    \ result: number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n   \
    \     if (numbers[i] > max) {\n            max = numbers[i];\n        }\n    \
    \    result.push(max);\n    }\n    return result;\n}\n", "    let max_so_far =\
    \ numbers[0];\n    let result = [max_so_far];\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push(max_so_far);\n    }\n    return result;\n}\n",
  "    let max_so_far = numbers[0];\n    let max_so_far_index = 0;\n    let result\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i]\
    \ > max_so_far) {\n            max_so_far = numbers[i];\n            max_so_far_index\
    \ = i;\n        }\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n", "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for\
    \ (let i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far,\
    \ numbers[i]);\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n", "    let result: number[] = [];\n    let max = numbers[0];\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n       \
    \     max = numbers[i];\n        }\n        result.push(max);\n    }\n    return\
    \ result;\n}\n", "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n\
    \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far)\
    \ {\n            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max: number = numbers[0];\n    let\
    \ result: number[] = [max];\n    for (let i = 1; i < numbers.length; i++) {\n\
    \        if (numbers[i] > max) {\n            max = numbers[i];\n        }\n \
    \       result.push(max);\n    }\n    return result;\n}\n", "    const result:\
    \ number[] = [];\n    let max = numbers[0];\n    result.push(max);\n    for (let\
    \ i = 1; i < numbers.length; i++) {\n        max = Math.max(max, numbers[i]);\n\
    \        result.push(max);\n    }\n    return result;\n}\n", "    let max_so_far\
    \ = -Infinity;\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let max_so_far\
    \ = numbers[0];\n    let result = [max_so_far];\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let result: number[] = [];\n    let max: number\
    \ = -Infinity;\n    for (let i = 0; i < numbers.length; i++) {\n        max =\
    \ Math.max(max, numbers[i]);\n        result.push(max);\n    }\n    return result;\n\
    }\n", "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for\
    \ (let i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far,\
    \ numbers[i]);\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n", "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for\
    \ (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far)\
    \ {\n            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let max_so_far\
    \ = numbers[0];\n    let result = [max_so_far];\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push(max_so_far);\n    }\n    return result;\n}\n",
  "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
    \ i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far,\
    \ numbers[i]);\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n", "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for\
    \ (let i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far,\
    \ numbers[i]);\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n", "    let result: number[] = [];\n    let max: number = numbers[0];\n   \
    \ result.push(max);\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max) {\n            max = numbers[i];\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let max_so_far\
    \ = numbers[0];\n    let result = [max_so_far];\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push(max_so_far);\n    }\n    return result;\n}\n",
  "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
    \ i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far) {\n\
    \            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let max_so_far_index\
    \ = 0;\n    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n\
    \        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \            max_so_far_index = i;\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let max_so_far\
    \ = numbers[0];\n    let result = [max_so_far];\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let result: number[] = [];\n    let max: number\
    \ = numbers[0];\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i]\
    \ > max) {\n            max = numbers[i];\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i]\
    \ > max_so_far) {\n            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let max_so_far\
    \ = numbers[0];\n    let result = [max_so_far];\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push(max_so_far);\n    }\n    return result;\n}\n",
  "    let max: number[] = [];\n    let current_max: number = numbers[0];\n    max.push(current_max);\n\
    \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > current_max)\
    \ {\n            current_max = numbers[i];\n        }\n        max.push(current_max);\n\
    \    }\n    return max;\n}\n", "    let max_so_far = numbers[0];\n    let max_so_far_index\
    \ = 0;\n    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n\
    \        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \            max_so_far_index = i;\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let result: number[] = [];\n    let max: number\
    \ = numbers[0];\n    result.push(max);\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n   \
    \     }\n        result.push(max);\n    }\n    return result;\n}\n", "    const\
    \ result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n \
    \   for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push(max);\n   \
    \ }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result =\
    \ [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let max = numbers[0];\n    let result = [max];\n\
    \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push(max);\n   \
    \ }\n    return result;\n}\n", "    let result: number[] = [];\n    let max: number\
    \ = numbers[0];\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i]\
    \ > max) {\n            max = numbers[i];\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        max_so_far\
    \ = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n    }\n\
    \    return result;\n}\n", "    let result: number[] = [];\n    let max = numbers[0];\n\
    \    result.push(max);\n    for (let i = 1; i < numbers.length; i++) {\n     \
    \   if (numbers[i] > max) {\n            max = numbers[i];\n        }\n      \
    \  result.push(max);\n    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n\
    \    let result = [max_so_far];\n    for (let i = 1; i < numbers.length; i++)\
    \ {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let result:\
    \ number[] = [];\n    let max = numbers[0];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n   \
    \     }\n        result.push(max);\n    }\n    return result;\n}\n", "    const\
    \ result: number[] = [];\n    let max = numbers[0];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n   \
    \     }\n        result.push(max);\n    }\n    return result;\n}\n", "    let\
    \ max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let i = 1;\
    \ i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let max_so_far\
    \ = numbers[0];\n    let max_so_far_index = 0;\n    let result = [];\n    for\
    \ (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far)\
    \ {\n            max_so_far = numbers[i];\n            max_so_far_index = i;\n\
    \        }\n        result.push(max_so_far);\n    }\n    return result;\n}\n",
  "    let result: number[] = [];\n    let max = numbers[0];\n    for (let i = 0;\
    \ i < numbers.length; i++) {\n        if (numbers[i] > max) {\n            max\
    \ = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
    }\n", "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for\
    \ (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far)\
    \ {\n            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let max_so_far\
    \ = numbers[0];\n    let result = [max_so_far];\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let max_so_far\
    \ = numbers[0];\n    let result = [max_so_far];\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max: number = numbers[0];\n    let\
    \ result: number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n   \
    \     if (numbers[i] > max) {\n            max = numbers[i];\n        }\n    \
    \    result.push(max);\n    }\n    return result;\n}\n", "    let max_so_far =\
    \ numbers[0];\n    let result = [max_so_far];\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push(max_so_far);\n    }\n    return result;\n}\n",
  "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n       \
    \     max = numbers[i];\n        }\n        result.push(max);\n    }\n    return\
    \ result;\n}\n", "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n\
    \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far)\
    \ {\n            max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
    \    }\n    return result;\n}\n", "    let max_so_far = numbers[0];\n    let result\
    \ = [max_so_far];\n    for (let i = 1; i < numbers.length; i++) {\n        if\
    \ (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n        }\n\
    \        result.push(max_so_far);\n    }\n    return result;\n}\n", "    let result:\
    \ number[] = [];\n    let max: number = numbers[0];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        max = Math.max(max, numbers[i]);\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    let result: number[] = [];\n    let max:\
    \ number = -Infinity;\n    for (let i = 0; i < numbers.length; i++) {\n      \
    \  max = Math.max(max, numbers[i]);\n        result.push(max);\n    }\n    return\
    \ result;\n}\n", "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n\
    \    for (let i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far,\
    \ numbers[i]);\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n", "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for\
    \ (let i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far,\
    \ numbers[i]);\n        result.push(max_so_far);\n    }\n    return result;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

language: ts
name: HumanEval_19_sort_numbers
results:
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    return\
    \ nums_to_numbers[a] - nums_to_numbers[b];\n  });\n  return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptnxtgnw7.ts(7,12): error TS2304: Cannot find name
    ''nums_to_numbers''.

    ../../../../../tmp/tmptnxtgnw7.ts(7,33): error TS2304: Cannot find name ''nums_to_numbers''.

    '
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n    const nums\
    \ = numbers.split(' ');\n    const nums_obj = {\n        zero: 0,\n        one:\
    \ 1,\n        two: 2,\n        three: 3,\n        four: 4,\n        five: 5,\n\
    \        six: 6,\n        seven: 7,\n        eight: 8,\n        nine: 9\n    };\n\
    \    const nums_arr = nums.map(num => nums_obj[num]);\n    const sorted_nums =\
    \ nums_arr.sort((a, b) => a - b);\n    const sorted_nums_str = sorted_nums.map(num\
    \ => Object.keys(nums_obj).find(key => nums_obj[key] === num)).join(' ');\n  \
    \  return sorted_nums_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpezacj1k_.ts(20,74): error TS2339: Property ''find''
    does not exist on type ''string[]''.

    '
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    const\
    \ nums = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'];\n    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsArr = nums.map(num => numsObj[num]);\n\
    \  const sorted = numsArr.sort((a, b) => a - b);\n  const sortedNums = sorted.map(num\
    \ => {\n    for (let key in numsObj) {\n      if (numsObj[key] === num) {\n  \
    \      return key;\n      }\n    }\n  });\n  return sortedNums.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsToSort = nums.map(num => {\n    switch (num)\
    \ {\n      case 'zero':\n        return 0;\n      case 'one':\n        return\
    \ 1;\n      case 'two':\n        return 2;\n      case 'three':\n        return\
    \ 3;\n      case 'four':\n        return 4;\n      case 'five':\n        return\
    \ 5;\n      case 'six':\n        return 6;\n      case 'seven':\n        return\
    \ 7;\n      case 'eight':\n        return 8;\n      case 'nine':\n        return\
    \ 9;\n      default:\n        return 0;\n    }\n  });\n  const sorted = numsToSort.sort((a,\
    \ b) => a - b);\n  const sortedNums = sorted.map(num => {\n    switch (num) {\n\
    \      case 0:\n        return 'zero';\n      case 1:\n        return 'one';\n\
    \      case 2:\n        return 'two';\n      case 3:\n        return 'three';\n\
    \      case 4:\n        return 'four';\n      case 5:\n        return 'five';\n\
    \      case 6:\n        return 'six';\n      case 7:\n        return 'seven';\n\
    \      case 8:\n        return 'eight';\n      case 9:\n        return 'nine';\n\
    \      default:\n        return 'zero';\n    }\n  });\n  return sortedNums.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'zero'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpib1oo5nv.js:64:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpib1oo5nv.js:70:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'zero',\n\
    \  expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => nums_to_numbers[a]\
    \ - nums_to_numbers[b]);\n  return nums_sorted.join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpw_bqj6_1.ts(6,43): error TS2304: Cannot find name
    ''nums_to_numbers''.

    ../../../../../tmp/tmpw_bqj6_1.ts(6,64): error TS2304: Cannot find name ''nums_to_numbers''.

    '
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n    const nums:\
    \ string[] = numbers.split(' ');\n    const nums_sorted: string[] = nums.sort((a,\
    \ b) => {\n        const num_a: number = numeral_to_number(a);\n        const\
    \ num_b: number = numeral_to_number(b);\n        return num_a - num_b;\n    });\n\
    \    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp38p_q90u.ts(7,31): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmp38p_q90u.ts(8,31): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsToSort = nums.map(num => numMap[num]);\n\
    \  const sortedNums = numsToSort.sort((a, b) => a - b);\n  const sortedNumsStr\
    \ = sortedNums.map(num => {\n    for (const key in numMap) {\n      if (numMap[key]\
    \ === num) {\n        return key;\n      }\n    }\n  });\n  return sortedNumsStr.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four:\
    \ 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9,\n    };\n    return nums[a] - nums[b];\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsMapRev = {\n    0: 'zero',\n \
    \   1: 'one',\n    2: 'two',\n    3: 'three',\n    4: 'four',\n    5: 'five',\n\
    \    6: 'six',\n    7: 'seven',\n    8: 'eight',\n    9: 'nine',\n  };\n  const\
    \ numsNums = nums.map(num => numsMap[num]);\n  const numsNumsSorted = numsNums.sort((a,\
    \ b) => a - b);\n  const numsSorted = numsNumsSorted.map(num => numsMapRev[num]);\n\
    \  return numsSorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsArr = nums.map(num => numsMap[num]);\n\
    \  const sortedNums = numsArr.sort((a, b) => a - b);\n  const sortedNumsStr =\
    \ sortedNums.map(num => {\n    for (const key in numsMap) {\n      if (numsMap[key]\
    \ === num) {\n        return key;\n      }\n    }\n  });\n  return sortedNumsStr.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => numsToNums[a]\
    \ - numsToNums[b]);\n  return numsSorted.join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpouo0dwgt.ts(6,42): error TS2304: Cannot find name
    ''numsToNums''.

    ../../../../../tmp/tmpouo0dwgt.ts(6,58): error TS2304: Cannot find name ''numsToNums''.

    '
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    const\
    \ nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n\
    \      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9,\n    };\n    return nums_map[a] - nums_map[b];\n  });\n \
    \ return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsArr = nums.map(num => numsMap[num]);\n\
    \  const sortedNums = numsArr.sort((a, b) => a - b);\n  const sortedNumsStr =\
    \ sortedNums.map(num => {\n    for (const key in numsMap) {\n      if (numsMap[key]\
    \ === num) {\n        return key;\n      }\n    }\n  });\n  return sortedNumsStr.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsSorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return numsSorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsMapRev = {\n    0: 'zero',\n \
    \   1: 'one',\n    2: 'two',\n    3: 'three',\n    4: 'four',\n    5: 'five',\n\
    \    6: 'six',\n    7: 'seven',\n    8: 'eight',\n    9: 'nine',\n  };\n  const\
    \ numsInt = nums.map(num => numsMap[num]);\n  const sorted = numsInt.sort((a,\
    \ b) => a - b);\n  return sorted.map(num => numsMapRev[num]).join(' ');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n    let nums:\
    \ string[] = numbers.split(' ');\n    let nums_sorted: string[] = [];\n    let\
    \ nums_sorted_str: string = '';\n    let nums_sorted_str_final: string = '';\n\
    \    let nums_sorted_str_final_arr: string[] = [];\n    let nums_sorted_str_final_arr_final:\
    \ string[] = [];\n    let nums_sorted_str_final_arr_final_str: string = '';\n\
    \    let nums_sorted_str_final_arr_final_str_final: string = '';\n    let nums_sorted_str_final_arr_final_str_final_arr:\
    \ string[] = [];\n    let nums_sorted_str_final_arr_final_str_final_arr_final:\
    \ string[] = [];\n    let nums_sorted_str_final_arr_final_str_final_arr_final_str:\
    \ string = '';\n    let nums_sorted_str_final_arr_final_str_final_arr_final_str_final:\
    \ string = '';\n    let nums_sorted_str_final_arr_final_str_final_arr_final_str_final_arr:\
    \ string[] = [];\n    let nums_sorted_str_final_arr_final_str_final_arr_final_str_final_arr_final:\
    \ string[] = [];\n    let nums_sorted_str_final_arr_final_str_final_arr_final_str_final_arr_final_str:\
    \ string = '';\n    let nums_sorted_str_final_arr_final_str_final_arr_final_str_final_arr_final_str_final:\
    \ string = '';\n    let nums_sorted_str_final_arr_final_str_final_arr_final_str_final_arr_final_str_final_arr:\
    \ string[] = [];\n    let nums_sorted_str_final_arr_final_str_final_arr_final_str_final_arr_final_str_final_arr_final:\
    \ string[] = [];\n    let num\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwnfxsxfn.ts(37,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  return numbers\n\
    \    .split(\" \")\n    .map(num => {\n      switch (num) {\n        case \"zero\"\
    :\n          return 0;\n        case \"one\":\n          return 1;\n        case\
    \ \"two\":\n          return 2;\n        case \"three\":\n          return 3;\n\
    \        case \"four\":\n          return 4;\n        case \"five\":\n       \
    \   return 5;\n        case \"six\":\n          return 6;\n        case \"seven\"\
    :\n          return 7;\n        case \"eight\":\n          return 8;\n       \
    \ case \"nine\":\n          return 9;\n      }\n    })\n    .sort((a, b) => a\
    \ - b)\n    .map(num => {\n      switch (num) {\n        case 0:\n          return\
    \ \"zero\";\n        case 1:\n          return \"one\";\n        case 2:\n   \
    \       return \"two\";\n        case 3:\n          return \"three\";\n      \
    \  case 4:\n          return \"four\";\n        case 5:\n          return \"five\"\
    ;\n        case 6:\n          return \"six\";\n        case 7:\n          return\
    \ \"seven\";\n        case 8:\n          return \"eight\";\n        case 9:\n\
    \          return \"nine\";\n      }\n    })\n    .join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    return\
    \ numToNumeral(a) - numToNumeral(b);\n  });\n  return numsSorted.join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptn1zmxyq.ts(7,12): error TS2304: Cannot find name
    ''numToNumeral''.

    ../../../../../tmp/tmptn1zmxyq.ts(7,30): error TS2304: Cannot find name ''numToNumeral''.

    '
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const numeralMap\
    \ = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n \
    \   five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n\
    \  const nums = numbers.split(' ').map((num) => numeralMap[num]);\n  nums.sort((a,\
    \ b) => a - b);\n  return nums.map((num) => {\n    for (const key in numeralMap)\
    \ {\n      if (numeralMap[key] === num) {\n        return key;\n      }\n    }\n\
    \  }).join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsArr = nums.map(num => numsObj[num]);\n\
    \  const sorted = numsArr.sort((a, b) => a - b);\n  const sortedNums = sorted.map(num\
    \ => {\n    for (let key in numsObj) {\n      if (numsObj[key] === num) {\n  \
    \      return key;\n      }\n    }\n  });\n  return sortedNums.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    const\
    \ num_a = numeral_to_number(a);\n    const num_b = numeral_to_number(b);\n   \
    \ return num_a - num_b;\n  });\n  return nums_sorted.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp42deu07g.ts(7,19): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmp42deu07g.ts(8,19): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsMapReverse = {\n    0: 'zero',\n\
    \    1: 'one',\n    2: 'two',\n    3: 'three',\n    4: 'four',\n    5: 'five',\n\
    \    6: 'six',\n    7: 'seven',\n    8: 'eight',\n    9: 'nine',\n  };\n  const\
    \ numsInt = nums.map(num => numsMap[num]);\n  const numsSorted = numsInt.sort((a,\
    \ b) => a - b);\n  const numsSortedStr = numsSorted.map(num => numsMapReverse[num]);\n\
    \  return numsSortedStr.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => nums_to_numbers[a]\
    \ - nums_to_numbers[b]);\n  return nums_sorted.join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpw_bqj6_1.ts(6,43): error TS2304: Cannot find name
    ''nums_to_numbers''.

    ../../../../../tmp/tmpw_bqj6_1.ts(6,64): error TS2304: Cannot find name ''nums_to_numbers''.

    '
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four:\
    \ 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9,\n    };\n    return nums[a] - nums[b];\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    const\
    \ nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n\
    \      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9,\n    };\n    return nums_map[a] - nums_map[b];\n  });\n \
    \ return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsMap[a]\
    \ - numsMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n    let nums =\
    \ numbers.split(' ');\n    let nums_sorted = nums.sort((a, b) => {\n        let\
    \ num_a = numeral_to_number(a);\n        let num_b = numeral_to_number(b);\n \
    \       return num_a - num_b;\n    });\n    return nums_sorted.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbqkrtuuw.ts(7,21): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmpbqkrtuuw.ts(8,21): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums:\
    \ string[] = numbers.split(' ');\n  const nums_sorted: string[] = nums.sort((a,\
    \ b) => {\n    const nums_map: { [key: string]: number } = {\n      zero: 0,\n\
    \      one: 1,\n      two: 2,\n      three: 3,\n      four: 4,\n      five: 5,\n\
    \      six: 6,\n      seven: 7,\n      eight: 8,\n      nine: 9,\n    };\n   \
    \ return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    const\
    \ nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n\
    \      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9,\n    };\n    return nums_map[a] - nums_map[b];\n  });\n \
    \ return nums_sorted.join(' ');\n}\n\nconsole.log(sort_numbers('zero one two three\
    \ four five six seven eight nine'));\nconsole.log(sort_numbers('nine two five\
    \ four seven three zero eight six one'));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'zero one two three four five six seven eight nine

    zero one two three four five six seven eight nine

    '
  timestamp: 1660014415
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums:\
    \ string[] = numbers.split(' ');\n  const nums_sorted: string[] = nums.sort((a,\
    \ b) => {\n    const num_a: number = numeral_to_number(a);\n    const num_b: number\
    \ = numeral_to_number(b);\n    return num_a - num_b;\n  });\n  return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpml5xh8xq.ts(7,27): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmpml5xh8xq.ts(8,27): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four:\
    \ 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9,\n    };\n    return nums[a] - nums[b];\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const numsMap\
    \ = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four:\
    \ 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9,\n    };\n    return numsMap[a] - numsMap[b];\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsMap[a]\
    \ - numsMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsMap[a]\
    \ - numsMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    const\
    \ nums = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n  \
    \    four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n\
    \      nine: 9,\n    };\n    return nums[a] - nums[b];\n  });\n  return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sortedNums = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sortedNums.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsToSort = nums.map(num => {\n    switch (num)\
    \ {\n      case 'zero':\n        return 0;\n      case 'one':\n        return\
    \ 1;\n      case 'two':\n        return 2;\n      case 'three':\n        return\
    \ 3;\n      case 'four':\n        return 4;\n      case 'five':\n        return\
    \ 5;\n      case 'six':\n        return 6;\n      case 'seven':\n        return\
    \ 7;\n      case 'eight':\n        return 8;\n      case 'nine':\n        return\
    \ 9;\n    }\n  });\n  const sorted = numsToSort.sort((a, b) => a - b);\n  const\
    \ sortedNums = sorted.map(num => {\n    switch (num) {\n      case 0:\n      \
    \  return 'zero';\n      case 1:\n        return 'one';\n      case 2:\n     \
    \   return 'two';\n      case 3:\n        return 'three';\n      case 4:\n   \
    \     return 'four';\n      case 5:\n        return 'five';\n      case 6:\n \
    \       return 'six';\n      case 7:\n        return 'seven';\n      case 8:\n\
    \        return 'eight';\n      case 9:\n        return 'nine';\n    }\n  });\n\
    \  return sortedNums.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsToNums = {\n    zero: 0,\n    one: 1,\n   \
    \ two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9,\n  };\n  const numsToWords = {\n    0: 'zero',\n\
    \    1: 'one',\n    2: 'two',\n    3: 'three',\n    4: 'four',\n    5: 'five',\n\
    \    6: 'six',\n    7: 'seven',\n    8: 'eight',\n    9: 'nine',\n  };\n  const\
    \ numsArr = nums.map(num => numsToNums[num]);\n  const sortedNums = numsArr.sort((a,\
    \ b) => a - b);\n  const sortedWords = sortedNums.map(num => numsToWords[num]);\n\
    \  return sortedWords.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsSorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return numsSorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n    let nums =\
    \ numbers.split(' ');\n    let nums2 = nums.map(x => {\n        switch (x) {\n\
    \            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    });\n\
    \    nums2.sort((a, b) => a - b);\n    let nums3 = nums2.map(x => {\n        switch\
    \ (x) {\n            case 0:\n                return 'zero';\n            case\
    \ 1:\n                return 'one';\n            case 2:\n                return\
    \ 'two';\n            case 3:\n                return 'three';\n            case\
    \ 4:\n                return 'four';\n            case 5:\n                return\
    \ 'five';\n            case 6:\n                return 'six';\n            case\
    \ 7:\n                return 'seven';\n            case 8:\n                return\
    \ 'eight';\n            case 9:\n                return 'nine';\n        }\n \
    \   });\n    return nums3.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    const\
    \ num_a = numeral_to_number(a);\n    const num_b = numeral_to_number(b);\n   \
    \ return num_a - num_b;\n  });\n  return nums_sorted.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp42deu07g.ts(7,19): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmp42deu07g.ts(8,19): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n    const nums\
    \ = {\n        zero: 0,\n        one: 1,\n        two: 2,\n        three: 3,\n\
    \        four: 4,\n        five: 5,\n        six: 6,\n        seven: 7,\n    \
    \    eight: 8,\n        nine: 9\n    };\n    return numbers\n        .split(\"\
    \ \")\n        .sort((a, b) => nums[a] - nums[b])\n        .join(\" \");\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sortedNums = nums.sort((a, b) => numsMap[a]\
    \ - numsMap[b]);\n  return sortedNums.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n    const nums\
    \ = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n     \
    \   return num_to_int(a) - num_to_int(b);\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa0sd25i3.ts(7,16): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmpa0sd25i3.ts(7,32): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsArr = nums.map(num => numsObj[num]);\n\
    \  const sortedNums = numsArr.sort((a, b) => a - b);\n  const sortedNumsObj =\
    \ {\n    0: 'zero',\n    1: 'one',\n    2: 'two',\n    3: 'three',\n    4: 'four',\n\
    \    5: 'five',\n    6: 'six',\n    7: 'seven',\n    8: 'eight',\n    9: 'nine',\n\
    \  };\n  const sortedNumsStr = sortedNums.map(num => sortedNumsObj[num]).join('\
    \ ');\n  return sortedNumsStr;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsSorted = nums.sort((a, b) => numsMap[a]\
    \ - numsMap[b]);\n  return numsSorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sortedNums = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sortedNums.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    return\
    \ num_to_int(a) - num_to_int(b);\n  });\n  return nums_sorted.join(' ');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps97skc1w.ts(7,12): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmps97skc1w.ts(7,28): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four:\
    \ 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9,\n    };\n    return nums[a] - nums[b];\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums:\
    \ string[] = numbers.split(' ');\n  const numsMap: { [key: string]: number } =\
    \ {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n   \
    \ five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const\
    \ sortedNums: number[] = nums.map((num) => numsMap[num]).sort((a, b) => a - b);\n\
    \  return sortedNums.map((num) => Object.keys(numsMap).find((key) => numsMap[key]\
    \ === num)).join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqbfp7vkx.ts(19,55): error TS2339: Property ''find''
    does not exist on type ''string[]''.

    '
  timestamp: 1660014415
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    const\
    \ num_a = numeral_to_number(a);\n    const num_b = numeral_to_number(b);\n   \
    \ return num_a - num_b;\n  });\n  return nums_sorted.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp42deu07g.ts(7,19): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmp42deu07g.ts(8,19): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsSorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return numsSorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n    const nums\
    \ = numbers.split(' ').map(num => numToNumeral[num]);\n    nums.sort((a, b) =>\
    \ a - b);\n    return nums.map(num => numeralToNum[num]).join(' ');\n}\n\nconsole.log(sort_numbers(\"\
    nine two five four seven one three six eight zero\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbesm_xip.ts(5,48): error TS2304: Cannot find name
    ''numToNumeral''.

    ../../../../../tmp/tmpbesm_xip.ts(7,28): error TS2304: Cannot find name ''numeralToNum''.

    '
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const numsObj\
    \ = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four:\
    \ 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9,\n    };\n    return numsObj[a] - numsObj[b];\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsSorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return numsSorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsArr = nums.map(num => numsObj[num]);\n\
    \  const sorted = numsArr.sort((a, b) => a - b);\n  const sortedNums = sorted.map(num\
    \ => {\n    for (let key in numsObj) {\n      if (numsObj[key] === num) {\n  \
    \      return key;\n      }\n    }\n  });\n  return sortedNums.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    return\
    \ numToInt(a) - numToInt(b);\n  });\n  return numsSorted.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqaeya06d.ts(7,12): error TS2304: Cannot find name
    ''numToInt''.

    ../../../../../tmp/tmpqaeya06d.ts(7,26): error TS2304: Cannot find name ''numToInt''.

    '
  timestamp: 1660014415
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n    const nums\
    \ = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n     \
    \   const num_a = convert_to_number(a);\n        const num_b = convert_to_number(b);\n\
    \        return num_a - num_b;\n    });\n    return nums_sorted.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwt6jsu0w.ts(7,23): error TS2304: Cannot find name
    ''convert_to_number''.

    ../../../../../tmp/tmpwt6jsu0w.ts(8,23): error TS2304: Cannot find name ''convert_to_number''.

    '
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four:\
    \ 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9,\n    };\n    return nums[a] - nums[b];\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => nums_to_numbers[a]\
    \ - nums_to_numbers[b]);\n  return nums_sorted.join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpw_bqj6_1.ts(6,43): error TS2304: Cannot find name
    ''nums_to_numbers''.

    ../../../../../tmp/tmpw_bqj6_1.ts(6,64): error TS2304: Cannot find name ''nums_to_numbers''.

    '
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    return\
    \ numToNumeral[a] - numToNumeral[b];\n  });\n  return numsSorted.join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi0jv1y85.ts(7,12): error TS2304: Cannot find name
    ''numToNumeral''.

    ../../../../../tmp/tmpi0jv1y85.ts(7,30): error TS2304: Cannot find name ''numToNumeral''.

    '
  timestamp: 1660014419
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => nums_to_ints[a]\
    \ - nums_to_ints[b]);\n  return nums_sorted.join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjvjdqwm7.ts(6,43): error TS2304: Cannot find name
    ''nums_to_ints''.

    ../../../../../tmp/tmpjvjdqwm7.ts(6,61): error TS2304: Cannot find name ''nums_to_ints''.

    '
  timestamp: 1660014419
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n    const nums\
    \ = numbers.split(' ');\n    const sorted = nums.sort((a, b) => {\n        const\
    \ nums = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'];\n        return nums.indexOf(a) - nums.indexOf(b);\n    });\n    return\
    \ sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014420
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    const\
    \ num_a = numeral_to_number(a);\n    const num_b = numeral_to_number(b);\n   \
    \ return num_a - num_b;\n  });\n  return nums_sorted.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp42deu07g.ts(7,19): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmp42deu07g.ts(8,19): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => num_to_int(a)\
    \ - num_to_int(b));\n  return nums_sorted.join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbcw0qono.ts(6,43): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmpbcw0qono.ts(6,59): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1660014419
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    return\
    \ num_to_numeral(a) - num_to_numeral(b);\n  });\n  return nums_sorted.join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5qgz42ik.ts(7,12): error TS2304: Cannot find name
    ''num_to_numeral''.

    ../../../../../tmp/tmp5qgz42ik.ts(7,32): error TS2304: Cannot find name ''num_to_numeral''.

    '
  timestamp: 1660014419
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsSorted = nums.sort((a, b) => numsMap[a]\
    \ - numsMap[b]);\n  return numsSorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  let nums = numbers.split('\
    \ ');\n  let nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  let nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014420
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsMap[a]\
    \ - numsMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    return\
    \ nums_to_num(a) - nums_to_num(b);\n  });\n  return nums_sorted.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpiijchxqm.ts(7,12): error TS2304: Cannot find name
    ''nums_to_num''.

    ../../../../../tmp/tmpiijchxqm.ts(7,29): error TS2304: Cannot find name ''nums_to_num''.

    '
  timestamp: 1660014419
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const numsObj\
    \ = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four:\
    \ 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9,\n    };\n    return numsObj[a] - numsObj[b];\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    const\
    \ nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n\
    \      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9,\n    };\n    return nums_map[a] - nums_map[b];\n  });\n \
    \ return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    return\
    \ num_to_int(a) - num_to_int(b);\n  });\n  return nums_sorted.join(' ');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps97skc1w.ts(7,12): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmps97skc1w.ts(7,28): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const numMap\
    \ = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n \
    \   five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n\
    \  const nums = numbers.split(\" \");\n  const sortedNums = nums.sort((a, b) =>\
    \ numMap[a] - numMap[b]);\n  return sortedNums.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014420
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsMap[a]\
    \ - numsMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n    const nums\
    \ = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n     \
    \   const num_a = get_num(a);\n        const num_b = get_num(b);\n        return\
    \ num_a - num_b;\n    });\n    return nums_sorted.join(' ');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpubbadpya.ts(7,23): error TS2304: Cannot find name
    ''get_num''.

    ../../../../../tmp/tmpubbadpya.ts(8,23): error TS2304: Cannot find name ''get_num''.

    '
  timestamp: 1660014420
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => nums.indexOf(a)\
    \ - nums.indexOf(b));\n  return numsSorted.join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five zero four\
    \ seven nine eight'\n\nshould loosely deep-equal\n\n'zero four five seven eight\
    \ nine'\n    at test (/tmp/tmpssk0x9n0.js:15:12)\n    at Object.<anonymous> (/tmp/tmpssk0x9n0.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five zero\
    \ four seven nine eight',\n  expected: 'zero four five seven eight nine',\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014420
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsToNums = {\n    zero: 0,\n    one: 1,\n   \
    \ two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) =>\
    \ numsToNums[a] - numsToNums[b]);\n  return sorted.join(' ');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014420
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join('\
    \ ');\n}\n\nconsole.log(sort_numbers('zero one two three four five six seven eight\
    \ nine'));\nconsole.log(sort_numbers('nine two five four seven three zero eight\
    \ six one'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: 'zero one two three four five six seven eight nine

    zero one two three four five six seven eight nine

    '
  timestamp: 1660014420
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const numMap\
    \ = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n \
    \   five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n\
    \  const nums = numbers.split(\" \");\n  const numsArr = nums.map((num) => numMap[num]);\n\
    \  const sorted = numsArr.sort((a, b) => a - b);\n  const sortedNums = sorted.map((num)\
    \ => {\n    for (let key in numMap) {\n      if (numMap[key] === num) {\n    \
    \    return key;\n      }\n    }\n  });\n  return sortedNums.join(\" \");\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014420
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sortedNums = nums.sort((a, b) => numObj[a]\
    \ - numObj[b]);\n  return sortedNums.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014420
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    if (a ===\
    \ 'zero') {\n      return -1;\n    }\n    if (b === 'zero') {\n      return 1;\n\
    \    }\n    if (a === 'one') {\n      return -1;\n    }\n    if (b === 'one')\
    \ {\n      return 1;\n    }\n    if (a === 'two') {\n      return -1;\n    }\n\
    \    if (b === 'two') {\n      return 1;\n    }\n    if (a === 'three') {\n  \
    \    return -1;\n    }\n    if (b === 'three') {\n      return 1;\n    }\n   \
    \ if (a === 'four') {\n      return -1;\n    }\n    if (b === 'four') {\n    \
    \  return 1;\n    }\n    if (a === 'five') {\n      return -1;\n    }\n    if\
    \ (b === 'five') {\n      return 1;\n    }\n    if (a === 'six') {\n      return\
    \ -1;\n    }\n    if (b === 'six') {\n      return 1;\n    }\n    if (a === 'seven')\
    \ {\n      return -1;\n    }\n    if (b === 'seven') {\n      return 1;\n    }\n\
    \    if (a === 'eight') {\n      return -1;\n    }\n    if (b === 'eight') {\n\
    \      return 1;\n    }\n    if (a === 'nine') {\n      return -1;\n    }\n  \
    \  if (b === 'nine') {\n      return 1;\n    }\n    return 0;\n  });\n  return\
    \ numsSorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014420
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    const\
    \ num_a = number_to_numeral(a);\n    const num_b = number_to_numeral(b);\n   \
    \ return num_a - num_b;\n  });\n  return nums_sorted.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprhz32s18.ts(7,19): error TS2304: Cannot find name
    ''number_to_numeral''.

    ../../../../../tmp/tmprhz32s18.ts(8,19): error TS2304: Cannot find name ''number_to_numeral''.

    '
  timestamp: 1660014420
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n    const nums\
    \ = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n     \
    \   return num_to_int(a) - num_to_int(b);\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa0sd25i3.ts(7,16): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmpa0sd25i3.ts(7,32): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    const\
    \ nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n\
    \      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9,\n    };\n    return nums_map[a] - nums_map[b];\n  });\n \
    \ return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    return\
    \ nums_to_ints[a] - nums_to_ints[b];\n  });\n  return nums_sorted.join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5u36xch5.ts(7,12): error TS2304: Cannot find name
    ''nums_to_ints''.

    ../../../../../tmp/tmp5u36xch5.ts(7,30): error TS2304: Cannot find name ''nums_to_ints''.

    '
  timestamp: 1660014420
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    return\
    \ nums_to_numbers[a] - nums_to_numbers[b];\n  });\n  return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptnxtgnw7.ts(7,12): error TS2304: Cannot find name
    ''nums_to_numbers''.

    ../../../../../tmp/tmptnxtgnw7.ts(7,33): error TS2304: Cannot find name ''nums_to_numbers''.

    '
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = new Map([\n    ['zero', 0],\n    ['one',\
    \ 1],\n    ['two', 2],\n    ['three', 3],\n    ['four', 4],\n    ['five', 5],\n\
    \    ['six', 6],\n    ['seven', 7],\n    ['eight', 8],\n    ['nine', 9],\n  ]);\n\
    \  const sortedNums = nums.sort((a, b) => numsMap.get(a) - numsMap.get(b));\n\
    \  return sortedNums.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi_qkmwl3.ts(6,23): error TS2583: Cannot find name
    ''Map''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1660014420
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sortedNums = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sortedNums.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsArr = nums.map(num => numsMap[num]);\n\
    \  const sortedNums = numsArr.sort((a, b) => a - b);\n  const sortedNumsStr =\
    \ sortedNums.map(num => {\n    for (const key in numsMap) {\n      if (numsMap[key]\
    \ === num) {\n        return key;\n      }\n    }\n  });\n  return sortedNumsStr.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n    const nums\
    \ = numbers.split(' ');\n    const numMap = {\n        zero: 0,\n        one:\
    \ 1,\n        two: 2,\n        three: 3,\n        four: 4,\n        five: 5,\n\
    \        six: 6,\n        seven: 7,\n        eight: 8,\n        nine: 9\n    };\n\
    \    const sorted = nums.sort((a, b) => numMap[a] - numMap[b]);\n    return sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014420
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    return\
    \ numsToNums[a] - numsToNums[b];\n  });\n  return numsSorted.join(' ');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9svojb5j.ts(7,12): error TS2304: Cannot find name
    ''numsToNums''.

    ../../../../../tmp/tmp9svojb5j.ts(7,28): error TS2304: Cannot find name ''numsToNums''.

    '
  timestamp: 1660014420
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    const\
    \ num_a = numeral_to_number(a);\n    const num_b = numeral_to_number(b);\n   \
    \ return num_a - num_b;\n  });\n  return nums_sorted.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp42deu07g.ts(7,19): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmp42deu07g.ts(8,19): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const numMap\
    \ = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n \
    \   five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n\
    \  const nums = numbers.split(\" \");\n  const numsNums = nums.map((num) => numMap[num]);\n\
    \  const sorted = numsNums.sort((a, b) => a - b);\n  const sortedNums = sorted.map((num)\
    \ => {\n    for (let key in numMap) {\n      if (numMap[key] === num) {\n    \
    \    return key;\n      }\n    }\n  });\n  return sortedNums.join(\" \");\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014420
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsArr = nums.map(num => numsObj[num]);\n\
    \  const sortedNums = numsArr.sort((a, b) => a - b);\n  const sortedNumsStr =\
    \ sortedNums.map(num => {\n    for (let key in numsObj) {\n      if (numsObj[key]\
    \ === num) {\n        return key;\n      }\n    }\n  });\n  return sortedNumsStr.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014420
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sortedNums = nums.sort((a, b) => numsMap[a]\
    \ - numsMap[b]);\n  return sortedNums.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    const\
    \ nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n\
    \      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight:\
    \ 8,\n      nine: 9,\n    };\n    return nums_map[a] - nums_map[b];\n  });\n \
    \ return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  return nums\n    .map((num) => numsObj[num])\n\
    \    .sort((a, b) => a - b)\n    .map((num) => {\n      for (let key in numsObj)\
    \ {\n        if (numsObj[key] === num) {\n          return key;\n        }\n \
    \     }\n    })\n    .join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014420
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const numsObj\
    \ = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four:\
    \ 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9,\n    };\n    return numsObj[a] - numsObj[b];\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsSorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return numsSorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsSorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return numsSorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(' ');\n}\n\nconsole.log(sort_numbers('zero\
    \ one two three four five six seven eight nine'));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'zero one two three four five six seven eight nine

    '
  timestamp: 1660014423
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    return\
    \ nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five zero four\
    \ seven nine eight'\n\nshould loosely deep-equal\n\n'zero four five seven eight\
    \ nine'\n    at test (/tmp/tmpuebw7kgl.js:17:12)\n    at Object.<anonymous> (/tmp/tmpuebw7kgl.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five zero\
    \ four seven nine eight',\n  expected: 'zero four five seven eight nine',\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014424
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  return nums\n    .map((num) => numsObj[num])\n\
    \    .sort((a, b) => a - b)\n    .map((num) => Object.keys(numsObj).find((key)\
    \ => numsObj[key] === num))\n    .join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6otuox9t.ts(21,40): error TS2339: Property ''find''
    does not exist on type ''string[]''.

    '
  timestamp: 1660014423
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsArr = nums.map(num => numsObj[num]);\n\
    \  const sortedNums = numsArr.sort((a, b) => a - b);\n  const sortedNumsStr =\
    \ sortedNums.map(num => {\n    for (let key in numsObj) {\n      if (numsObj[key]\
    \ === num) {\n        return key;\n      }\n    }\n  });\n  return sortedNumsStr.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014420
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const numMap\
    \ = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n \
    \   five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n\
    \  const numArr = numbers.split(\" \");\n  const numArrNum = numArr.map((num)\
    \ => numMap[num]);\n  const sortedArr = numArrNum.sort((a, b) => a - b);\n  const\
    \ sortedArrStr = sortedArr.map((num) => {\n    for (let key in numMap) {\n   \
    \   if (numMap[key] === num) {\n        return key;\n      }\n    }\n  });\n \
    \ return sortedArrStr.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014424
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  return nums\n    .map((num) => numsObj[num])\n\
    \    .sort((a, b) => a - b)\n    .map((num) => Object.keys(numsObj).find((key)\
    \ => numsObj[key] === num))\n    .join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6otuox9t.ts(21,40): error TS2339: Property ''find''
    does not exist on type ''string[]''.

    '
  timestamp: 1660014423
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => num_to_int(a)\
    \ - num_to_int(b));\n  return nums_sorted.join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbcw0qono.ts(6,43): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmpbcw0qono.ts(6,59): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1660014419
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsMap[a]\
    \ - numsMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four:\
    \ 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9,\n    };\n    return nums[a] - nums[b];\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    return\
    \ num_to_numeral[a] - num_to_numeral[b];\n  });\n  return nums_sorted.join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpq4_y8v0r.ts(7,12): error TS2304: Cannot find name
    ''num_to_numeral''.

    ../../../../../tmp/tmpq4_y8v0r.ts(7,32): error TS2304: Cannot find name ''num_to_numeral''.

    '
  timestamp: 1660014424
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four:\
    \ 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9,\n    };\n    return nums[a] - nums[b];\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    return\
    \ numToNum(a) - numToNum(b);\n  });\n  return numsSorted.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcqyr3c36.ts(7,12): error TS2304: Cannot find name
    ''numToNum''.

    ../../../../../tmp/tmpcqyr3c36.ts(7,26): error TS2304: Cannot find name ''numToNum''.

    '
  timestamp: 1660014424
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n    const nums\
    \ = numbers.split(' ');\n    const numsToSort = nums.map(num => {\n        switch\
    \ (num) {\n            case 'zero':\n                return 0;\n            case\
    \ 'one':\n                return 1;\n            case 'two':\n               \
    \ return 2;\n            case 'three':\n                return 3;\n          \
    \  case 'four':\n                return 4;\n            case 'five':\n       \
    \         return 5;\n            case 'six':\n                return 6;\n    \
    \        case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    });\n    const sortedNums = numsToSort.sort((a, b) => a - b);\n\
    \    const sortedNumsToWords = sortedNums.map(num => {\n        switch (num) {\n\
    \            case 0:\n                return 'zero';\n            case 1:\n  \
    \              return 'one';\n            case 2:\n                return 'two';\n\
    \            case 3:\n                return 'three';\n            case 4:\n \
    \               return 'four';\n            case 5:\n                return 'five';\n\
    \            case 6:\n                return 'six';\n            case 7:\n   \
    \             return 'seven';\n            case 8:\n                return 'eight';\n\
    \            case 9:\n                return 'nine';\n        }\n    });\n   \
    \ return sortedNumsToWords.join(' ');\n}\n\nconsole.log(sort_numbers('nine two\
    \ five three six eight four seven one zero'));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'zero one two three four five six seven eight nine

    '
  timestamp: 1660014424
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const sorted = nums.sort((a, b) => numToNum(a) - numToNum(b));\n\
    \  return sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy2bkmfbx.ts(6,38): error TS2304: Cannot find name
    ''numToNum''.

    ../../../../../tmp/tmpy2bkmfbx.ts(6,52): error TS2304: Cannot find name ''numToNum''.

    '
  timestamp: 1660014424
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsMap[a]\
    \ - numsMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => numsToNums[a]\
    \ - numsToNums[b]);\n  return numsSorted.join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpouo0dwgt.ts(6,42): error TS2304: Cannot find name
    ''numsToNums''.

    ../../../../../tmp/tmpouo0dwgt.ts(6,58): error TS2304: Cannot find name ''numsToNums''.

    '
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  let nums = numbers.split('\
    \ ');\n  let nums_sorted = nums.sort((a, b) => {\n    return nums_to_numbers[a]\
    \ - nums_to_numbers[b];\n  });\n  return nums_sorted.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3tql459f.ts(7,12): error TS2304: Cannot find name
    ''nums_to_numbers''.

    ../../../../../tmp/tmp3tql459f.ts(7,33): error TS2304: Cannot find name ''nums_to_numbers''.

    '
  timestamp: 1660014424
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    const\
    \ nums = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n  \
    \    four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n\
    \      nine: 9,\n    };\n    return nums[a] - nums[b];\n  });\n  return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014415
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    return\
    \ numToInt(a) - numToInt(b);\n  });\n  return nums_sorted.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpynbl81rb.ts(7,12): error TS2304: Cannot find name
    ''numToInt''.

    ../../../../../tmp/tmpynbl81rb.ts(7,26): error TS2304: Cannot find name ''numToInt''.

    '
  timestamp: 1660014424
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    const\
    \ num_a = numeral_to_number(a);\n    const num_b = numeral_to_number(b);\n   \
    \ return num_a - num_b;\n  });\n  return nums_sorted.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp42deu07g.ts(7,19): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmp42deu07g.ts(8,19): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n    const nums:\
    \ string[] = numbers.split(' ');\n    const nums_sorted: string[] = nums.sort((a,\
    \ b) => {\n        return num_to_int(a) - num_to_int(b);\n    });\n    return\
    \ nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyvw_6lna.ts(7,16): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmpyvw_6lna.ts(7,32): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1660014424
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  return nums\n    .map((num) => numsObj[num])\n\
    \    .sort((a, b) => a - b)\n    .map((num) => Object.keys(numsObj).find((key)\
    \ => numsObj[key] === num))\n    .join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6otuox9t.ts(21,40): error TS2339: Property ''find''
    does not exist on type ''string[]''.

    '
  timestamp: 1660014423
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n    const nums\
    \ = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n     \
    \   const num_a = numeral_to_number(a);\n        const num_b = numeral_to_number(b);\n\
    \        return num_a - num_b;\n    });\n    return nums_sorted.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppmfcjzkr.ts(7,23): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmppmfcjzkr.ts(8,23): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1660014424
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n    const nums\
    \ = numbers.split(' ');\n    const nums_sorted = nums.sort((a, b) => {\n     \
    \   const nums = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'];\n        return nums.indexOf(a) - nums.indexOf(b);\n    });\n\
    \    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014424
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    return\
    \ nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five zero four\
    \ seven nine eight'\n\nshould loosely deep-equal\n\n'zero four five seven eight\
    \ nine'\n    at test (/tmp/tmpuebw7kgl.js:17:12)\n    at Object.<anonymous> (/tmp/tmpuebw7kgl.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five zero\
    \ four seven nine eight',\n  expected: 'zero four five seven eight nine',\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014424
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  return numbers\n\
    \    .split(\" \")\n    .map(n => {\n      switch (n) {\n        case \"zero\"\
    :\n          return 0;\n        case \"one\":\n          return 1;\n        case\
    \ \"two\":\n          return 2;\n        case \"three\":\n          return 3;\n\
    \        case \"four\":\n          return 4;\n        case \"five\":\n       \
    \   return 5;\n        case \"six\":\n          return 6;\n        case \"seven\"\
    :\n          return 7;\n        case \"eight\":\n          return 8;\n       \
    \ case \"nine\":\n          return 9;\n      }\n    })\n    .sort((a, b) => a\
    \ - b)\n    .map(n => {\n      switch (n) {\n        case 0:\n          return\
    \ \"zero\";\n        case 1:\n          return \"one\";\n        case 2:\n   \
    \       return \"two\";\n        case 3:\n          return \"three\";\n      \
    \  case 4:\n          return \"four\";\n        case 5:\n          return \"five\"\
    ;\n        case 6:\n          return \"six\";\n        case 7:\n          return\
    \ \"seven\";\n        case 8:\n          return \"eight\";\n        case 9:\n\
    \          return \"nine\";\n      }\n    })\n    .join(\" \");\n}\n\nconsole.log(sort_numbers(\"\
    nine two five three six eight four seven one zero\"));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'zero one two three four five six seven eight nine

    '
  timestamp: 1660014424
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    return\
    \ nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five zero four\
    \ seven nine eight'\n\nshould loosely deep-equal\n\n'zero four five seven eight\
    \ nine'\n    at test (/tmp/tmpuebw7kgl.js:17:12)\n    at Object.<anonymous> (/tmp/tmpuebw7kgl.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five zero\
    \ four seven nine eight',\n  expected: 'zero four five seven eight nine',\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014424
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsArr = nums.map(num => numsMap[num]);\n\
    \  numsArr.sort((a, b) => a - b);\n  return numsArr.map(num => {\n    for (const\
    \ key in numsMap) {\n      if (numsMap[key] === num) {\n        return key;\n\
    \      }\n    }\n  }).join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014424
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const numMap\
    \ = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n \
    \   five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n\
    \  const nums = numbers.split(\" \");\n  const numsSorted = nums.sort((a, b) =>\
    \ numMap[a] - numMap[b]);\n  return numsSorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014424
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const sorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014424
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    return\
    \ nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five zero four\
    \ seven nine eight'\n\nshould loosely deep-equal\n\n'zero four five seven eight\
    \ nine'\n    at test (/tmp/tmpuebw7kgl.js:17:12)\n    at Object.<anonymous> (/tmp/tmpuebw7kgl.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five zero\
    \ four seven nine eight',\n  expected: 'zero four five seven eight nine',\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014424
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n    let nums =\
    \ numbers.split(' ');\n    let numMap = {\n        'zero': 0,\n        'one':\
    \ 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n        'five':\
    \ 5,\n        'six': 6,\n        'seven': 7,\n        'eight': 8,\n        'nine':\
    \ 9\n    };\n    let numsSorted = nums.sort((a, b) => {\n        return numMap[a]\
    \ - numMap[b];\n    });\n    return numsSorted.join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014424
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    const nums\
    \ = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\
    \    return nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    return\
    \ numsToNums[a] - numsToNums[b];\n  });\n  return numsSorted.join(' ');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9svojb5j.ts(7,12): error TS2304: Cannot find name
    ''numsToNums''.

    ../../../../../tmp/tmp9svojb5j.ts(7,28): error TS2304: Cannot find name ''numsToNums''.

    '
  timestamp: 1660014420
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const nums_sorted = nums.sort((a, b) => {\n    const\
    \ num_a = convert_to_num(a);\n    const num_b = convert_to_num(b);\n    return\
    \ num_a - num_b;\n  });\n  return nums_sorted.join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0r906glo.ts(7,19): error TS2304: Cannot find name
    ''convert_to_num''.

    ../../../../../tmp/tmp0r906glo.ts(8,19): error TS2304: Cannot find name ''convert_to_num''.

    '
  timestamp: 1660014424
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  return nums\n    .map((num) => numsObj[num])\n\
    \    .sort((a, b) => a - b)\n    .map((num) => Object.keys(numsObj).find((key)\
    \ => numsObj[key] === num))\n    .join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6otuox9t.ts(21,40): error TS2339: Property ''find''
    does not exist on type ''string[]''.

    '
  timestamp: 1660014423
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsSorted = nums.sort((a, b) => {\n    return\
    \ nums.indexOf(a) - nums.indexOf(b);\n  });\n  return numsSorted.join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five zero four\
    \ seven nine eight'\n\nshould loosely deep-equal\n\n'zero four five seven eight\
    \ nine'\n    at test (/tmp/tmpuebw7kgl.js:17:12)\n    at Object.<anonymous> (/tmp/tmpuebw7kgl.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five zero\
    \ four seven nine eight',\n  expected: 'zero four five seven eight nine',\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014424
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const numsSorted = nums.sort((a, b) => numMap[a]\
    \ - numMap[b]);\n  return numsSorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunction sort_numbers(numbers: string): string {\n  const nums =\
    \ numbers.split(' ');\n  const numsObj = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  const sorted = nums.sort((a, b) => numsObj[a]\
    \ - numsObj[b]);\n  return sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014410

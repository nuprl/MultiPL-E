name: HumanEval_159_eat
language: ts
prompt: "//You're a hungry rabbit, and you already have eaten a certain number of\
  \ carrots,\n// but now you need to eat more carrots to complete the day's meals.\n\
  // you should return an array of [ total number of eaten carrots after your meals,\n\
  // the number of carrots left after your meals ]\n// if there are not enough remaining\
  \ carrots, you will eat all remaining carrots, but will still be hungry.\n// Example:\n\
  // Variables:\n// @number : integer\n// the number of carrots that you have eaten.\n\
  // @need : integer\n// the number of carrots that you need to eat.\n// @remaining\
  \ : integer\n// the number of remaining carrots thet exist in stock\n// Constrain:\n\
  // * 0 <= number <= 1000\n// * 0 <= need <= 1000\n// * 0 <= remaining <= 1000\n\
  // Have fun :)\nfunction eat(number: number, need: number, remaining: number): number[]\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = eat;\n  assert.deepEqual(candidate(5, 6, 10),[11,\
  \ 4]);\n  assert.deepEqual(candidate(4, 8, 9),[12, 1]);\n  assert.deepEqual(candidate(1,\
  \ 10, 10),[11, 0]);\n  assert.deepEqual(candidate(2, 11, 5),[7, 0]);\n  assert.deepEqual(candidate(4,\
  \ 5, 7),[9, 2]);\n  assert.deepEqual(candidate(4, 5, 1),[5, 0]);\n}\n\ntest();"
completions: ["  const total = number + remaining;\n  const eaten = total < need ?\
    \ total : need;\n  return [eaten, total - eaten];\n}\n\nconsole.log(eat(0, 10,\
    \ 10), [10, 0]);\nconsole.log(eat(0, 10, 5), [5, 0]);\nconsole.log(eat(5, 10,\
    \ 5), [10, 0]);\nconsole.log(eat(5, 10, 0), [5, 0]);\nconsole.log(eat(5, 5, 10),\
    \ [5, 5]);\nconsole.log(eat(5, 5, 0), [5, 0]);\nconsole.log(eat(5, 0, 10), [5,\
    \ 5]);\nconsole.log(eat(5, 0, 0), [5, 0]);\nconsole.log(eat(0, 5, 10), [5, 5]);\n\
    console.log(eat(0, 5, 0), [0, 0]);\nconsole.log(eat(0, 0, 10), [0, 10]);\nconsole.log(eat(0,\
    \ 0, 0), [0, 0]);", "  const totalEaten = number + Math.min(need, remaining);\n\
    \  const remainingCarrots = remaining - Math.min(need, remaining);\n  return [totalEaten,\
    \ remainingCarrots];\n}\n\nconsole.log(eat(0, 10, 10));\nconsole.log(eat(10, 10,\
    \ 10));\nconsole.log(eat(10, 10, 0));\nconsole.log(eat(10, 0, 10));\nconsole.log(eat(10,\
    \ 0, 0));\nconsole.log(eat(0, 0, 10));\nconsole.log(eat(0, 0, 0));", "  const\
    \ eaten = number + Math.min(need, remaining);\n  const left = Math.max(0, remaining\
    \ - need);\n  return [eaten, left];\n}\n", "  const total = number + remaining;\n\
    \  const eaten = total >= need ? need : total;\n  const left = total - eaten;\n\
    \  return [eaten, left];\n}\n", "  const total = number + remaining;\n  const\
    \ eaten = total >= need ? need : total;\n  const left = total >= need ? total\
    \ - need : 0;\n  return [eaten, left];\n}\n\nconsole.log(eat(0, 10, 10), [10,\
    \ 0]);\nconsole.log(eat(0, 10, 5), [5, 0]);\nconsole.log(eat(5, 10, 5), [10, 0]);\n\
    console.log(eat(5, 10, 0), [5, 0]);\nconsole.log(eat(5, 10, 15), [10, 5]);\nconsole.log(eat(5,\
    \ 10, 20), [10, 10]);\nconsole.log(eat(5, 10, 25), [10, 15]);\nconsole.log(eat(5,\
    \ 10, 30), [10, 20]);\nconsole.log(eat(5, 10, 35), [10, 25]);\nconsole.log(eat(5,\
    \ 10, 40), [10, 30]);\nconsole.log(eat(5, 10, 45), [10, 35]);\nconsole.log(eat(5,\
    \ 10, 50), [10, 40]);\nconsole.log(eat(5, 10, 55), [10, 45]);\nconsole.log(eat(5,\
    \ 10, 60), [10, 50]);\nconsole.log(eat(5, 10, 65), [10, 55]);\nconsole.log(eat(5,\
    \ 10, 70), [10, 60]);\nconsole.log(eat(5, 10, 75), [10, 65]);\nconsole.log(eat(5,\
    \ 10, 80), [10, 70]);\nconsole.log(eat(5, 10, 85), [10, 75]);\nconsole.log(eat(5,\
    \ 10, 90), [10, 80]);\nconsole.log(eat(5, 10, 95), [10, 85]);\nconsole.log(eat(5,\
    \ 10, 100), [10, 90]);\nconsole.log(eat(5, 10, 105), [10, 95]);\nconsole.log(eat(5,\
    \ 10, 110), [10, 100]);\nconsole.log(eat(5, 10, 115), [10, 105]);\nconsole.log(eat(5,\
    \ 10, 120),", "  const total = number + remaining;\n  if (total >= need) {\n \
    \   return [need, total - need];\n  } else {\n    return [total, 0];\n  }\n}\n",
  "  let eaten = number + need;\n  let left = remaining - need;\n  if (left < 0) {\n\
    \    eaten = number + remaining;\n    left = 0;\n  }\n  return [eaten, left];\n\
    }\n\nconsole.log(eat(10, 5, 5), [15, 0]);\nconsole.log(eat(10, 5, 10), [15, 0]);\n\
    console.log(eat(10, 5, 15), [15, 5]);\nconsole.log(eat(10, 5, 20), [15, 10]);\n\
    console.log(eat(10, 5, 25), [15, 15]);\nconsole.log(eat(10, 5, 30), [15, 20]);\n\
    console.log(eat(10, 5, 35), [15, 25]);\nconsole.log(eat(10, 5, 40), [15, 30]);\n\
    console.log(eat(10, 5, 45), [15, 35]);\nconsole.log(eat(10, 5, 50), [15, 40]);\n\
    console.log(eat(10, 5, 55), [15, 45]);\nconsole.log(eat(10, 5, 60), [15, 50]);\n\
    console.log(eat(10, 5, 65), [15, 55]);\nconsole.log(eat(10, 5, 70), [15, 60]);\n\
    console.log(eat(10, 5, 75), [15, 65]);\nconsole.log(eat(10, 5, 80), [15, 70]);\n\
    console.log(eat(10, 5, 85), [15, 75]);\nconsole.log(eat(10, 5, 90), [15, 80]);\n\
    console.log(eat(10, 5, 95), [15, 85]);\nconsole.log(eat(10, 5, 100), [15, 90]);\n\
    console.log(eat(10, 5, 105), [15, 95]);\nconsole.log(eat(10, 5, 110), [15, 100]);\n\
    console.log(eat(10, 5, 115), [15, 105]);\nconsole.log(eat(10, 5, 120), [15, 110]);\n\
    console.log(eat(10, 5, 125), [15, 115]);\nconsole.log(eat", "  return [\n    number\
    \ + Math.min(need, remaining),\n    remaining - Math.min(need, remaining)\n  ];\n\
    }\n\nconsole.log(eat(10, 10, 50), [20, 40]);\nconsole.log(eat(0, 50, 50), [50,\
    \ 0]);\nconsole.log(eat(10, 50, 10), [20, 0]);\nconsole.log(eat(10, 10, 10), [20,\
    \ 0]);\nconsole.log(eat(0, 10, 10), [10, 0]);\nconsole.log(eat(10, 0, 10), [10,\
    \ 10]);\nconsole.log(eat(0, 0, 10), [0, 10]);\nconsole.log(eat(10, 0, 0), [10,\
    \ 0]);\nconsole.log(eat(0, 10, 0), [0, 0]);\nconsole.log(eat(0, 0, 0), [0, 0]);",
  "  let eaten = number + need;\n  let left = remaining - need;\n  if (left < 0) {\n\
    \    eaten = eaten + left;\n    left = 0;\n  }\n  return [eaten, left];\n}\n",
  "  const total = number + remaining;\n  const eaten = total >= need ? need : total;\n\
    \  const left = total - eaten;\n  return [eaten, left];\n}\n", "  const total\
    \ = number + remaining;\n  const eaten = total >= need ? need : total;\n  const\
    \ left = total - eaten;\n  return [eaten, left];\n}\n\nconsole.log(eat(0, 10,\
    \ 10), [10, 0]);\nconsole.log(eat(0, 10, 0), [0, 0]);\nconsole.log(eat(10, 0,\
    \ 10), [10, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10, 10,\
    \ 10), [10, 10]);\nconsole.log(eat(10, 10, 20), [20, 0]);\nconsole.log(eat(10,\
    \ 20, 10), [20, 0]);\nconsole.log(eat(10, 20, 20), [20, 10]);\nconsole.log(eat(10,\
    \ 20, 30), [30, 0]);\nconsole.log(eat(10, 30, 20), [30, 0]);\nconsole.log(eat(10,\
    \ 30, 30), [30, 10]);\nconsole.log(eat(10, 30, 40), [40, 0]);\nconsole.log(eat(10,\
    \ 40, 30), [40, 0]);\nconsole.log(eat(10, 40, 40), [40, 10]);\nconsole.log(eat(10,\
    \ 40, 50), [50, 0]);\nconsole.log(eat(10, 50, 40), [50, 0]);\nconsole.log(eat(10,\
    \ 50, 50), [50, 10]);\nconsole.log(eat(10, 50, 60), [60, 0]);\nconsole.log(eat(10,\
    \ 60, 50), [60, 0]);\nconsole.log(eat(10, 60, 60), [60, 10]);\nconsole.log(eat(10,\
    \ 60, 70), [70, 0]);\nconsole.log(eat(10, 70, 60), [70, 0]);\nconsole.log(eat(10,\
    \ 70, 70), [70, 10]);\nconsole.log(eat(10, 70, 80), [80, 0]);\nconsole.log(eat(10,\
    \ 80, 70), [80, 0]);\nconsole.log(eat(10, 80, 80), [80, 10]);\n", "  let eaten\
    \ = number + need;\n  let left = remaining - need;\n  if (left < 0) {\n    eaten\
    \ = remaining + number;\n    left = 0;\n  }\n  return [eaten, left];\n}\n\nconsole.log(eat(10,\
    \ 10, 10));\nconsole.log(eat(0, 10, 10));\nconsole.log(eat(10, 0, 10));\nconsole.log(eat(10,\
    \ 10, 0));\nconsole.log(eat(10, 10, 20));\nconsole.log(eat(10, 10, 5));", "  let\
    \ total = number + remaining;\n  let left = total - need;\n  return left >= 0\
    \ ? [need, left] : [total, 0];\n}\n", "  const total = number + remaining;\n \
    \ const eaten = total >= need ? need : total;\n  const left = total - eaten;\n\
    \  return [eaten, left];\n}\n", "  const total = number + remaining;\n  const\
    \ eaten = total >= need ? need : total;\n  const left = total - eaten;\n  return\
    \ [eaten, left];\n}\n", "  const total = number + remaining;\n  const eaten =\
    \ total >= need ? need : total;\n  const left = total - eaten;\n  return [eaten,\
    \ left];\n}\n", "  if (number + remaining < need) {\n    return [number + remaining,\
    \ 0];\n  } else {\n    return [need, number + remaining - need];\n  }\n}\n\nconsole.log(eat(10,\
    \ 10, 10)); // [10, 0]\nconsole.log(eat(0, 10, 10)); // [10, 0]\nconsole.log(eat(10,\
    \ 0, 10)); // [10, 0]\nconsole.log(eat(10, 10, 0)); // [10, 0]\nconsole.log(eat(0,\
    \ 0, 10)); // [0, 10]\nconsole.log(eat(0, 0, 0)); // [0, 0]\nconsole.log(eat(10,\
    \ 10, 20)); // [20, 10]\nconsole.log(eat(10, 20, 10)); // [20, 0]\nconsole.log(eat(10,\
    \ 20, 20)); // [30, 0]\nconsole.log(eat(10, 20, 30)); // [40, 0]\nconsole.log(eat(10,\
    \ 30, 20)); // [30, 10]\nconsole.log(eat(10, 30, 30)); // [40, 0]\nconsole.log(eat(10,\
    \ 30, 40)); // [50, 0]\nconsole.log(eat(10, 40, 30)); // [40, 10]\nconsole.log(eat(10,\
    \ 40, 40)); // [50, 0]\nconsole.log(eat(10, 40, 50)); // [60, 0]\nconsole.log(eat(10,\
    \ 50, 40)); // [50, 10]\nconsole.log(eat(10, 50, 50)); // [60, 0]\nconsole.log(eat(10,\
    \ 50, 60)); // [70, 0]\nconsole.log(eat(10, 60, 50)); // [60, 10]\nconsole.log(eat(10,\
    \ 60, 60)); // [70, 0]\nconsole.log(eat(10, 60, 70)); // [80, 0]\nconsole.log(eat(10,\
    \ 70, 60)); // [70, 10]\nconsole.log(eat(10, 70, 70)); // [80, 0]\nconsole.log(eat(10,\
    \ 70, 80", "  const total = number + remaining;\n  const eaten = total >= need\
    \ ? need : total;\n  const left = total >= need ? total - need : 0;\n  return\
    \ [eaten, left];\n}\n", "  const total = number + remaining;\n  const eaten =\
    \ total >= need ? need : total;\n  const left = total - eaten;\n  return [eaten,\
    \ left];\n}\n\nconsole.log(eat(0, 10, 10), [10, 0]);\nconsole.log(eat(10, 10,\
    \ 0), [10, 0]);\nconsole.log(eat(10, 10, 10), [10, 0]);\nconsole.log(eat(10, 10,\
    \ 20), [10, 10]);\nconsole.log(eat(10, 20, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 20, 20), [20, 0]);\nconsole.log(eat(10, 20, 30), [20, 10]);\nconsole.log(eat(10,\
    \ 30, 20), [30, 0]);\nconsole.log(eat(10, 30, 30), [30, 0]);\nconsole.log(eat(10,\
    \ 30, 40), [30, 10]);\nconsole.log(eat(10, 40, 30), [40, 0]);\nconsole.log(eat(10,\
    \ 40, 40), [40, 0]);\nconsole.log(eat(10, 40, 50), [40, 10]);\nconsole.log(eat(10,\
    \ 50, 40), [50, 0]);\nconsole.log(eat(10, 50, 50), [50, 0]);\nconsole.log(eat(10,\
    \ 50, 60), [50, 10]);\nconsole.log(eat(10, 60, 50), [60, 0]);\nconsole.log(eat(10,\
    \ 60, 60), [60, 0]);\nconsole.log(eat(10, 60, 70), [60, 10]);\nconsole.log(eat(10,\
    \ 70, 60), [70, 0]);\nconsole.log(eat(10, 70, 70), [70, 0]);\nconsole.log(eat(10,\
    \ 70, 80), [70, 10]);\nconsole.log(eat(10, 80, 70), [80, 0]);\nconsole.log(eat(10,\
    \ 80, 80), [80, 0]);\nconsole.log(eat(10, 80, 90), [80, 10]);\nconsole.log(eat(10,\
    \ 90, 80), [90, 0]);\n", "  let total = number + remaining;\n  let left = total\
    \ - need;\n  if (left < 0) {\n    return [total, 0];\n  } else {\n    return [total,\
    \ left];\n  }\n}\n\nconsole.log(eat(10, 10, 10));\nconsole.log(eat(10, 10, 0));\n\
    console.log(eat(10, 10, 5));\nconsole.log(eat(10, 10, 15));\nconsole.log(eat(10,\
    \ 5, 10));\nconsole.log(eat(10, 5, 0));\nconsole.log(eat(10, 5, 5));\nconsole.log(eat(10,\
    \ 5, 15));\nconsole.log(eat(10, 0, 10));\nconsole.log(eat(10, 0, 0));\nconsole.log(eat(10,\
    \ 0, 5));\nconsole.log(eat(10, 0, 15));\nconsole.log(eat(0, 10, 10));\nconsole.log(eat(0,\
    \ 10, 0));\nconsole.log(eat(0, 10, 5));\nconsole.log(eat(0, 10, 15));\nconsole.log(eat(0,\
    \ 5, 10));\nconsole.log(eat(0, 5, 0));\nconsole.log(eat(0, 5, 5));\nconsole.log(eat(0,\
    \ 5, 15));\nconsole.log(eat(0, 0, 10));\nconsole.log(eat(0, 0, 0));\nconsole.log(eat(0,\
    \ 0, 5));\nconsole.log(eat(0, 0, 15));", "  let total = number + remaining;\n\
    \  if (total < need) {\n    return [total, 0];\n  } else {\n    return [need,\
    \ total - need];\n  }\n}\n\nconsole.log(eat(10, 5, 15));\nconsole.log(eat(0, 1,\
    \ 3));\nconsole.log(eat(10, 10, 10));\nconsole.log(eat(0, 10, 10));", "  const\
    \ total = number + remaining;\n  const eaten = total >= need ? need : total;\n\
    \  const left = total - eaten;\n  return [eaten, left];\n}\n\nconsole.log(eat(0,\
    \ 10, 10), [10, 0]);\nconsole.log(eat(0, 10, 0), [0, 0]);\nconsole.log(eat(0,\
    \ 10, 5), [5, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 5), [10, 5]);\nconsole.log(eat(10, 10, 10), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 15), [10, 5]);\nconsole.log(eat(10, 5, 10), [5, 5]);\nconsole.log(eat(10,\
    \ 5, 5), [5, 0]);\nconsole.log(eat(10, 5, 0), [0, 0]);\nconsole.log(eat(10, 0,\
    \ 10), [0, 10]);\nconsole.log(eat(10, 0, 5), [0, 5]);\nconsole.log(eat(10, 0,\
    \ 0), [0, 0]);", "  const total = number + remaining;\n  const eaten = total >=\
    \ need ? need : total;\n  const left = total - eaten;\n  return [eaten, left];\n\
    }\n", "  const eaten = number + Math.min(need, remaining);\n  const left = remaining\
    \ - Math.min(need, remaining);\n  return [eaten, left];\n}\n", "  let eaten =\
    \ number + need;\n  let left = remaining - need;\n  if (left < 0) {\n    eaten\
    \ = eaten + left;\n    left = 0;\n  }\n  return [eaten, left];\n}\n", "  const\
    \ eaten = number + need;\n  const left = remaining - need;\n  return eaten > remaining\
    \ ? [remaining, 0] : [eaten, left];\n}\n\nconsole.log(eat(0, 10, 10), [10, 0]);\n\
    console.log(eat(0, 10, 5), [5, 0]);\nconsole.log(eat(10, 10, 0), [20, 0]);\nconsole.log(eat(50,\
    \ 10, 20), [60, 10]);\nconsole.log(eat(10, 50, 20), [20, 0]);\nconsole.log(eat(10,\
    \ 200, 20), [20, 0]);", "  const eaten = number + need;\n  const left = remaining\
    \ - need;\n  return eaten > remaining ? [remaining, 0] : [eaten, left];\n}\n",
  "  const total = number + remaining;\n  const eaten = total >= need ? need : total;\n\
    \  const left = total - eaten;\n  return [eaten, left];\n}\n", "  if (number +\
    \ remaining >= need) {\n    return [need, number + remaining - need];\n  } else\
    \ {\n    return [number + remaining, 0];\n  }\n}\n", "  const total = number +\
    \ remaining;\n  const eaten = total >= need ? need : total;\n  const left = total\
    \ - eaten;\n  return [eaten, left];\n}\n", "  return [number + Math.min(need,\
    \ remaining), Math.max(0, remaining - need)];\n}\n", "  let total = number + remaining;\n\
    \  if (total >= need) {\n    return [need, total - need];\n  } else {\n    return\
    \ [total, 0];\n  }\n}\n", "  if (number + remaining < need) {\n    return [number\
    \ + remaining, 0];\n  }\n  return [need, number + remaining - need];\n}\n\nconsole.log(eat(10,\
    \ 5, 10), [15, 0]);\nconsole.log(eat(10, 10, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 15, 10), [20, 5]);\nconsole.log(eat(10, 20, 10), [20, 10]);\nconsole.log(eat(10,\
    \ 25, 10), [20, 15]);\nconsole.log(eat(10, 30, 10), [20, 20]);\nconsole.log(eat(10,\
    \ 35, 10), [20, 25]);\nconsole.log(eat(10, 40, 10), [20, 30]);\nconsole.log(eat(10,\
    \ 45, 10), [20, 35]);\nconsole.log(eat(10, 50, 10), [20, 40]);\nconsole.log(eat(10,\
    \ 55, 10), [20, 45]);\nconsole.log(eat(10, 60, 10), [20, 50]);\nconsole.log(eat(10,\
    \ 65, 10), [20, 55]);\nconsole.log(eat(10, 70, 10), [20, 60]);\nconsole.log(eat(10,\
    \ 75, 10), [20, 65]);\nconsole.log(eat(10, 80, 10), [20, 70]);\nconsole.log(eat(10,\
    \ 85, 10), [20, 75]);\nconsole.log(eat(10, 90, 10), [20, 80]);\nconsole.log(eat(10,\
    \ 95, 10), [20, 85]);\nconsole.log(eat(10, 100, 10), [20, 90]);\nconsole.log(eat(10,\
    \ 105, 10), [20, 95]);\nconsole.log(eat(10, 110, 10), [20, 100]);\nconsole.log(eat(10,\
    \ 115, 10), [20, 105]);\nconsole.log(eat(10, 120, 10), [20, 110]);\nconsole.log(eat(10,\
    \ 125, 10), [20, 115]);\nconsole.log(eat(10, 130, 10), [20, 120]);\nconsole.log(",
  "  const total = number + remaining;\n  if (total >= need) {\n    return [need,\
    \ total - need];\n  } else {\n    return [total, 0];\n  }\n}\n\nconsole.log(eat(10,\
    \ 10, 0), [10, 0]);\nconsole.log(eat(10, 10, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 10, 20), [20, 10]);\nconsole.log(eat(10, 10, 30), [30, 20]);\nconsole.log(eat(10,\
    \ 10, 40), [40, 30]);\nconsole.log(eat(10, 10, 50), [50, 40]);\nconsole.log(eat(10,\
    \ 10, 60), [60, 50]);\nconsole.log(eat(10, 10, 70), [70, 60]);\nconsole.log(eat(10,\
    \ 10, 80), [80, 70]);\nconsole.log(eat(10, 10, 90), [90, 80]);\nconsole.log(eat(10,\
    \ 10, 100), [100, 90]);\nconsole.log(eat(10, 10, 110), [110, 100]);\nconsole.log(eat(10,\
    \ 10, 120), [120, 110]);\nconsole.log(eat(10, 10, 130), [130, 120]);\nconsole.log(eat(10,\
    \ 10, 140), [140, 130]);\nconsole.log(eat(10, 10, 150), [150, 140]);\nconsole.log(eat(10,\
    \ 10, 160), [160, 150]);\nconsole.log(eat(10, 10, 170), [170, 160]);\nconsole.log(eat(10,\
    \ 10, 180), [180, 170]);\nconsole.log(eat(10, 10, 190), [190, 180]);\nconsole.log(eat(10,\
    \ 10, 200), [200, 190]);\nconsole.log(eat(10, 10, 210), [210, 200]);\nconsole.log(eat(10,\
    \ 10, 220), [220, 210]);\nconsole.log(eat(10, 10, 230), [230, 220]);\nconsole.log(eat(10,\
    \ 10, 240), [240, 230]);\nconsole.log(eat(10, 10, 250), [250", "  const carrotsEaten\
    \ = number + Math.min(need, remaining);\n  const carrotsLeft = remaining - Math.min(need,\
    \ remaining);\n  return [carrotsEaten, carrotsLeft];\n}\n", "  const total = number\
    \ + remaining;\n  const eaten = total >= need ? need : total;\n  const left =\
    \ total >= need ? total - need : 0;\n  return [eaten, left];\n}\n", "    let eaten\
    \ = number + need;\n    let left = remaining - need;\n    if (left < 0) {\n  \
    \      eaten = eaten + left;\n        left = 0;\n    }\n    return [eaten, left];\n\
    }\n", "  const total = number + remaining;\n  const eaten = total > need ? need\
    \ : total;\n  const left = total > need ? total - need : 0;\n  return [eaten,\
    \ left];\n}\n", "    const total = number + remaining;\n    const eaten = total\
    \ >= need ? need : total;\n    const left = total - eaten;\n    return [eaten,\
    \ left];\n}\n\nconsole.log(eat(0, 10, 10));\nconsole.log(eat(10, 10, 0));\nconsole.log(eat(10,\
    \ 10, 10));\nconsole.log(eat(10, 5, 10));\nconsole.log(eat(10, 15, 10));\nconsole.log(eat(10,\
    \ 20, 10));\nconsole.log(eat(10, 25, 10));\nconsole.log(eat(10, 30, 10));\nconsole.log(eat(10,\
    \ 35, 10));\nconsole.log(eat(10, 40, 10));\nconsole.log(eat(10, 45, 10));\nconsole.log(eat(10,\
    \ 50, 10));\nconsole.log(eat(10, 55, 10));\nconsole.log(eat(10, 60, 10));\nconsole.log(eat(10,\
    \ 65, 10));\nconsole.log(eat(10, 70, 10));\nconsole.log(eat(10, 75, 10));\nconsole.log(eat(10,\
    \ 80, 10));\nconsole.log(eat(10, 85, 10));\nconsole.log(eat(10, 90, 10));\nconsole.log(eat(10,\
    \ 95, 10));\nconsole.log(eat(10, 100, 10));\nconsole.log(eat(10, 105, 10));\n\
    console.log(eat(10, 110, 10));\nconsole.log(eat(10, 115, 10));\nconsole.log(eat(10,\
    \ 120, 10));\nconsole.log(eat(10, 125, 10));\nconsole.log(eat(10, 130, 10));\n\
    console.log(eat(10, 135, 10));\nconsole.log(eat(10, 140, 10));\nconsole.log(eat(10,\
    \ 145, 10));\nconsole.log(eat(10, 150, 10));\nconsole.log(eat(10, 155, 10));\n\
    console.log(eat(10, 160, 10));\nconsole.log(eat(10, 165, 10));\nconsole.log(eat(10,\
    \ 170, 10));\n", "  let total = number + remaining;\n  let left = total - need;\n\
    \  if (left < 0) {\n    return [total, 0];\n  } else {\n    return [total, left];\n\
    \  }\n}\n\nconsole.log(eat(10, 5, 5));\nconsole.log(eat(10, 20, 5));\nconsole.log(eat(10,\
    \ 5, 20));\nconsole.log(eat(10, 20, 20));", "  let total = number + remaining;\n\
    \  let left = total - need;\n  if (left < 0) {\n    return [total, 0];\n  } else\
    \ {\n    return [total, left];\n  }\n}\n\nconsole.log(eat(10, 5, 15));\nconsole.log(eat(0,\
    \ 10, 15));\nconsole.log(eat(10, 10, 15));\nconsole.log(eat(10, 20, 15));", " \
    \ const total = number + remaining;\n  return [total, total >= need ? total -\
    \ need : 0];\n}\n", "  const total = number + remaining;\n  const eaten = total\
    \ >= need ? need : total;\n  const left = total - eaten;\n  return [eaten, left];\n\
    }\n", "  const total = number + remaining;\n  const eaten = total >= need ? need\
    \ : total;\n  const left = total >= need ? total - need : 0;\n  return [eaten,\
    \ left];\n}\n", "  const total = number + remaining;\n  const eaten = total >=\
    \ need ? need : total;\n  const left = total >= need ? total - need : 0;\n  return\
    \ [eaten, left];\n}\n", "  const total = number + remaining;\n  const eaten =\
    \ total >= need ? need : total;\n  const left = total - eaten;\n  return [eaten,\
    \ left];\n}\n", "  const total = number + remaining;\n  const eaten = total >=\
    \ need ? need : total;\n  const left = total - eaten;\n  return [eaten, left];\n\
    }\n", "  const eaten = number + need;\n  const left = eaten > remaining ? 0 :\
    \ remaining - eaten;\n  return [eaten, left];\n}\n\nconsole.log(eat(0, 0, 0));\
    \ // [0, 0]\nconsole.log(eat(0, 0, 10)); // [0, 10]\nconsole.log(eat(0, 10, 10));\
    \ // [10, 0]\nconsole.log(eat(0, 10, 5)); // [5, 0]\nconsole.log(eat(10, 0, 10));\
    \ // [10, 0]\nconsole.log(eat(10, 0, 5)); // [5, 0]\nconsole.log(eat(10, 10, 10));\
    \ // [20, 0]\nconsole.log(eat(10, 10, 5)); // [15, 0]\nconsole.log(eat(10, 5,\
    \ 10)); // [15, 0]\nconsole.log(eat(10, 5, 5)); // [15, 0]\nconsole.log(eat(5,\
    \ 10, 10)); // [15, 0]\nconsole.log(eat(5, 10, 5)); // [10, 0]\nconsole.log(eat(5,\
    \ 5, 10)); // [10, 5]\nconsole.log(eat(5, 5, 5)); // [10, 0]", "  if (number +\
    \ remaining < need) {\n    return [number + remaining, 0];\n  } else {\n    return\
    \ [need, number + remaining - need];\n  }\n}\n\nconsole.log(eat(10, 5, 5), [15,\
    \ 0]);\nconsole.log(eat(0, 10, 10), [10, 0]);\nconsole.log(eat(10, 10, 0), [10,\
    \ 0]);\nconsole.log(eat(10, 5, 10), [15, 5]);\nconsole.log(eat(10, 20, 10), [20,\
    \ 0]);", "    return [number + Math.min(need, remaining), Math.max(0, remaining\
    \ - need)];\n}\n", "  if (number + remaining < need) {\n    return [number + remaining,\
    \ 0];\n  } else {\n    return [need, number + remaining - need];\n  }\n}\n\nconsole.log(eat(10,\
    \ 10, 10));\nconsole.log(eat(0, 10, 10));\nconsole.log(eat(10, 0, 10));\nconsole.log(eat(10,\
    \ 10, 0));\nconsole.log(eat(10, 20, 10));\nconsole.log(eat(20, 10, 10));\nconsole.log(eat(10,\
    \ 10, 20));\nconsole.log(eat(10, 20, 20));\nconsole.log(eat(20, 10, 20));\nconsole.log(eat(20,\
    \ 20, 10));\nconsole.log(eat(20, 20, 20));", "  if (number + remaining < need)\
    \ {\n    return [number + remaining, 0];\n  }\n  return [need, number + remaining\
    \ - need];\n}\n\nconsole.log(eat(10, 10, 70), [20, 60]);\nconsole.log(eat(10,\
    \ 10, 10), [20, 0]);\nconsole.log(eat(0, 10, 10), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 0), [10, 0]);\nconsole.log(eat(10, 10, 20), [20, 10]);\nconsole.log(eat(10,\
    \ 5, 20), [15, 5]);\nconsole.log(eat(10, 20, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 20, 0), [10, 0]);\nconsole.log(eat(10, 5, 0), [10, 0]);\nconsole.log(eat(10,\
    \ 0, 0), [10, 0]);\nconsole.log(eat(0, 0, 10), [0, 10]);\nconsole.log(eat(0, 5,\
    \ 10), [5, 5]);\nconsole.log(eat(0, 10, 10), [10, 0]);\nconsole.log(eat(0, 20,\
    \ 10), [10, 0]);\nconsole.log(eat(0, 0, 0), [0, 0]);", "  const total = number\
    \ + remaining;\n  const eaten = total >= need ? need : total;\n  const left =\
    \ total - eaten;\n  return [eaten, left];\n}\n", "  const total = number + remaining;\n\
    \  const eaten = total >= need ? need : total;\n  const left = total - eaten;\n\
    \  return [eaten, left];\n}\n", "  const total = number + remaining;\n  const\
    \ eaten = total >= need ? need : total;\n  const left = total - eaten;\n  return\
    \ [eaten, left];\n}\n", "  const total = number + remaining;\n  const eaten =\
    \ total >= need ? need : total;\n  const left = total >= need ? total - need :\
    \ 0;\n  return [eaten, left];\n}\n", "  const total = number + remaining;\n  const\
    \ eaten = total >= need ? need : total;\n  const left = total >= need ? total\
    \ - need : 0;\n  return [eaten, left];\n}\n", "  const total = number + remaining;\n\
    \  const eaten = total >= need ? need : total;\n  const left = total - eaten;\n\
    \  return [eaten, left];\n}\n\nexport default eat;", "  const eaten = number +\
    \ need;\n  const left = remaining - need;\n  return eaten > remaining ? [remaining,\
    \ 0] : [eaten, left];\n}\n", "  const total = number + remaining;\n  const eaten\
    \ = total >= need ? need : total;\n  const left = total - eaten;\n  return [eaten,\
    \ left];\n}\n\nconsole.log(eat(0, 10, 10), [10, 0]);\nconsole.log(eat(0, 10, 0),\
    \ [0, 0]);\nconsole.log(eat(10, 0, 10), [10, 0]);\nconsole.log(eat(10, 10, 0),\
    \ [10, 0]);\nconsole.log(eat(10, 10, 10), [10, 10]);\nconsole.log(eat(10, 5, 10),\
    \ [15, 0]);\nconsole.log(eat(10, 15, 10), [20, 0]);\nconsole.log(eat(10, 20, 10),\
    \ [20, 10]);\nconsole.log(eat(10, 25, 10), [20, 0]);\nconsole.log(eat(10, 30,\
    \ 10), [20, 0]);\nconsole.log(eat(10, 35, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 40, 10), [20, 0]);\nconsole.log(eat(10, 45, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 50, 10), [20, 0]);\nconsole.log(eat(10, 55, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 60, 10), [20, 0]);\nconsole.log(eat(10, 65, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 70, 10), [20, 0]);\nconsole.log(eat(10, 75, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 80, 10), [20, 0]);\nconsole.log(eat(10, 85, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 90, 10), [20, 0]);\nconsole.log(eat(10, 95, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 100, 10), [20, 0]);\nconsole.log(eat(10, 105, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 110, 10), [20, 0]);\n", "  const total = number + remaining;\n  const eaten\
    \ = total >= need ? need : total;\n  const left = total >= need ? total - need\
    \ : 0;\n  return [eaten, left];\n}\n\nconsole.log(eat(10, 10, 10), [10, 0]);\n\
    console.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10, 10, 5), [15, 0]);\n\
    console.log(eat(10, 10, 15), [20, 5]);\nconsole.log(eat(10, 10, 20), [20, 10]);\n\
    console.log(eat(10, 10, 25), [20, 15]);\nconsole.log(eat(10, 10, 30), [20, 20]);\n\
    console.log(eat(10, 10, 35), [20, 25]);\nconsole.log(eat(10, 10, 40), [20, 30]);\n\
    console.log(eat(10, 10, 45), [20, 35]);\nconsole.log(eat(10, 10, 50), [20, 40]);\n\
    console.log(eat(10, 10, 55), [20, 45]);\nconsole.log(eat(10, 10, 60), [20, 50]);\n\
    console.log(eat(10, 10, 65), [20, 55]);\nconsole.log(eat(10, 10, 70), [20, 60]);\n\
    console.log(eat(10, 10, 75), [20, 65]);\nconsole.log(eat(10, 10, 80), [20, 70]);\n\
    console.log(eat(10, 10, 85), [20, 75]);\nconsole.log(eat(10, 10, 90), [20, 80]);\n\
    console.log(eat(10, 10, 95), [20, 85]);\nconsole.log(eat(10, 10, 100), [20, 90]);\n\
    console.log(eat(10, 10, 105), [20, 95]);\nconsole.log(eat(10, 10, 110), [20, 100]);\n\
    console.log(eat(10, 10, 115), [20, 105]);\nconsole.log(eat(10, 10, 120), [20,\
    \ 110]);\nconsole.log(eat(10, 10, 125),", "  const total = number + remaining;\n\
    \  const eaten = total >= need ? need : total;\n  const left = total - eaten;\n\
    \  return [eaten, left];\n}\n\nconsole.log(eat(0, 10, 5)); // [5, 0]\nconsole.log(eat(10,\
    \ 10, 0)); // [10, 0]\nconsole.log(eat(10, 10, 10)); // [10, 0]\nconsole.log(eat(10,\
    \ 10, 11)); // [10, 1]\nconsole.log(eat(5, 10, 5)); // [10, 0]\nconsole.log(eat(5,\
    \ 10, 6)); // [10, 1]\nconsole.log(eat(5, 10, 7)); // [10, 2]\nconsole.log(eat(5,\
    \ 10, 8)); // [10, 3]\nconsole.log(eat(5, 10, 9)); // [10, 4]\nconsole.log(eat(5,\
    \ 10, 10)); // [10, 5]\nconsole.log(eat(5, 10, 11)); // [10, 6]\nconsole.log(eat(5,\
    \ 10, 12)); // [10, 7]\nconsole.log(eat(5, 10, 13)); // [10, 8]\nconsole.log(eat(5,\
    \ 10, 14)); // [10, 9]\nconsole.log(eat(5, 10, 15)); // [10, 10]\nconsole.log(eat(5,\
    \ 10, 16)); // [10, 11]\nconsole.log(eat(5, 10, 17)); // [10, 12]\nconsole.log(eat(5,\
    \ 10, 18)); // [10, 13]\nconsole.log(eat(5, 10, 19)); // [10, 14]\nconsole.log(eat(5,\
    \ 10, 20)); // [10, 15]\nconsole.log(eat(5, 10, 21)); // [10, 16]\nconsole.log(eat(5,\
    \ 10, 22)); // [10, 17]\nconsole.log(eat(5, 10, 23)); // [10, 18]\nconsole.log(eat(5,\
    \ 10, 24)); // [10, 19]\nconsole.log(eat(5, 10, 25));", "  const total = number\
    \ + remaining;\n  const eaten = total >= need ? need : total;\n  const left =\
    \ total - eaten;\n  return [eaten, left];\n}\n\nconsole.log(eat(0, 10, 10), [10,\
    \ 0]);\nconsole.log(eat(0, 10, 5), [5, 0]);\nconsole.log(eat(10, 10, 0), [10,\
    \ 0]);\nconsole.log(eat(10, 10, 5), [10, 5]);\nconsole.log(eat(10, 5, 5), [5,\
    \ 0]);\nconsole.log(eat(10, 5, 10), [10, 0]);\nconsole.log(eat(10, 5, 15), [10,\
    \ 5]);\nconsole.log(eat(10, 15, 5), [15, 0]);\nconsole.log(eat(10, 15, 10), [15,\
    \ 0]);\nconsole.log(eat(10, 15, 15), [15, 0]);\nconsole.log(eat(10, 15, 20), [15,\
    \ 5]);\nconsole.log(eat(10, 20, 5), [15, 0]);\nconsole.log(eat(10, 20, 10), [20,\
    \ 0]);\nconsole.log(eat(10, 20, 15), [20, 0]);\nconsole.log(eat(10, 20, 20), [20,\
    \ 0]);\nconsole.log(eat(10, 20, 25), [20, 5]);\nconsole.log(eat(10, 25, 5), [15,\
    \ 0]);\nconsole.log(eat(10, 25, 10), [20, 0]);\nconsole.log(eat(10, 25, 15), [25,\
    \ 0]);\nconsole.log(eat(10, 25, 20), [25, 0]);\nconsole.log(eat(10, 25, 25), [25,\
    \ 0]);\nconsole.log(eat(10, 25, 30), [25, 5]);\nconsole.log(eat(10, 30, 5), [20,\
    \ 0]);\nconsole.log(eat(10, 30, 10), [25, 0]);\nconsole.log(eat(10, 30, 15), [30,\
    \ 0]);\nconsole.log(eat(10, 30, 20), [30, 0]);\n", "  let eaten = number + need;\n\
    \  let left = remaining - need;\n  if (left < 0) {\n    eaten = eaten + left;\n\
    \    left = 0;\n  }\n  return [eaten, left];\n}\n", "  const total = number +\
    \ remaining;\n  const eaten = total >= need ? need : total;\n  const left = total\
    \ - eaten;\n  return [eaten, left];\n}\n\nconsole.log(eat(0, 10, 10), [10, 0]);\n\
    console.log(eat(0, 10, 0), [0, 0]);\nconsole.log(eat(10, 0, 10), [10, 0]);\nconsole.log(eat(10,\
    \ 0, 0), [0, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 10), [20, 0]);\nconsole.log(eat(10, 5, 10), [15, 0]);\nconsole.log(eat(10,\
    \ 15, 10), [20, 0]);\nconsole.log(eat(10, 20, 10), [20, 10]);\nconsole.log(eat(10,\
    \ 25, 10), [20, 0]);\nconsole.log(eat(10, 30, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 35, 10), [20, 0]);\nconsole.log(eat(10, 40, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 45, 10), [20, 0]);\nconsole.log(eat(10, 50, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 55, 10), [20, 0]);\nconsole.log(eat(10, 60, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 65, 10), [20, 0]);\nconsole.log(eat(10, 70, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 75, 10), [20, 0]);\nconsole.log(eat(10, 80, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 85, 10), [20, 0]);\nconsole.log(eat(10, 90, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 95, 10), [20, 0]);\nconsole.log(eat(10, 100, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 105, 10), [20, 0]);\n", "  const eaten = Math.min(number + remaining, need);\n\
    \  return [eaten, eaten - need];\n}\n", "  let eaten = number + need;\n  if (eaten\
    \ > remaining) {\n    eaten = remaining;\n  }\n  return [eaten, remaining - eaten];\n\
    }\n", "    if (number + remaining < need) {\n        return [number + remaining,\
    \ 0];\n    }\n    return [need, number + remaining - need];\n}\n\nconsole.log(eat(10,\
    \ 10, 10));\nconsole.log(eat(0, 10, 10));\nconsole.log(eat(10, 0, 10));\nconsole.log(eat(10,\
    \ 10, 0));\nconsole.log(eat(10, 10, 5));\nconsole.log(eat(10, 10, 15));\nconsole.log(eat(10,\
    \ 10, 20));\nconsole.log(eat(10, 10, 25));\nconsole.log(eat(10, 10, 30));\nconsole.log(eat(10,\
    \ 10, 35));\nconsole.log(eat(10, 10, 40));\nconsole.log(eat(10, 10, 45));\nconsole.log(eat(10,\
    \ 10, 50));\nconsole.log(eat(10, 10, 55));\nconsole.log(eat(10, 10, 60));\nconsole.log(eat(10,\
    \ 10, 65));\nconsole.log(eat(10, 10, 70));\nconsole.log(eat(10, 10, 75));\nconsole.log(eat(10,\
    \ 10, 80));\nconsole.log(eat(10, 10, 85));\nconsole.log(eat(10, 10, 90));\nconsole.log(eat(10,\
    \ 10, 95));\nconsole.log(eat(10, 10, 100));\nconsole.log(eat(10, 10, 105));\n\
    console.log(eat(10, 10, 110));\nconsole.log(eat(10, 10, 115));\nconsole.log(eat(10,\
    \ 10, 120));\nconsole.log(eat(10, 10, 125));\nconsole.log(eat(10, 10, 130));\n\
    console.log(eat(10, 10, 135));\nconsole.log(eat(10, 10, 140));\nconsole.log(eat(10,\
    \ 10, 145));\nconsole.log(eat(10, 10, 150));\nconsole.log(eat(10, 10, 155));\n\
    console.log(eat(10, 10, 160));\nconsole.log(eat(10, 10, 165));\nconsole.log(",
  "  const total = number + remaining;\n  const eaten = total >= need ? need : total;\n\
    \  const left = total - eaten;\n  return [eaten, left];\n}\n", "  if (number +\
    \ remaining < need) {\n    return [number + remaining, 0];\n  }\n  return [need,\
    \ number + remaining - need];\n}\n\nconsole.log(eat(10, 5, 15), [15, 0]);\nconsole.log(eat(0,\
    \ 10, 15), [10, 5]);\nconsole.log(eat(10, 10, 15), [20, 5]);\nconsole.log(eat(10,\
    \ 15, 5), [15, 0]);\nconsole.log(eat(10, 5, 5), [15, 0]);\nconsole.log(eat(10,\
    \ 20, 15), [30, 0]);\nconsole.log(eat(50, 5, 15), [55, 0]);\nconsole.log(eat(10,\
    \ 5, 0), [10, 0]);\nconsole.log(eat(10, 5, -5), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 0), [20, 0]);\nconsole.log(eat(10, 15, 0), [25, 0]);\nconsole.log(eat(10,\
    \ 20, 0), [30, 0]);\nconsole.log(eat(10, 25, 0), [35, 0]);\nconsole.log(eat(10,\
    \ 30, 0), [40, 0]);\nconsole.log(eat(10, 35, 0), [45, 0]);\nconsole.log(eat(10,\
    \ 40, 0), [50, 0]);\nconsole.log(eat(10, 45, 0), [55, 0]);\nconsole.log(eat(10,\
    \ 50, 0), [60, 0]);\nconsole.log(eat(10, 55, 0), [65, 0]);\nconsole.log(eat(10,\
    \ 60, 0), [70, 0]);\nconsole.log(eat(10, 65, 0), [75, 0]);\nconsole.log(eat(10,\
    \ 70, 0), [80, 0]);\nconsole.log(eat(10, 75, 0), [85, 0]);\nconsole.log(eat(10,\
    \ 80, 0), [90, 0]);\nconsole.log(eat(10, 85, 0), [95, 0]);\nconsole.log(eat(10,\
    \ 90, 0), [100, 0]);\nconsole.log", "    let total = number + remaining;\n   \
    \ let left = total - need;\n    if (left < 0) {\n        return [total, 0];\n\
    \    } else {\n        return [need, left];\n    }\n}\n", "    let total = number\
    \ + remaining;\n    let left = total - need;\n    if (left < 0) {\n        return\
    \ [total, 0];\n    } else {\n        return [need, left];\n    }\n}\n\nconsole.log(eat(10,\
    \ 5, 10));\nconsole.log(eat(0, 10, 10));\nconsole.log(eat(10, 10, 0));\nconsole.log(eat(10,\
    \ 10, 10));\nconsole.log(eat(10, 20, 10));\nconsole.log(eat(10, 20, 0));", " \
    \ const total = number + remaining;\n  const eaten = total >= need ? need : total;\n\
    \  const left = total - eaten;\n  return [eaten, left];\n}\n", "  const eaten\
    \ = number + Math.min(need, remaining);\n  const left = Math.max(0, remaining\
    \ - need);\n  return [eaten, left];\n}\n", "  const eaten = number + need;\n \
    \ const left = remaining - need;\n  return eaten > remaining ? [eaten, 0] : [eaten,\
    \ left];\n}\n\nconsole.log(eat(0, 0, 0)); // [0, 0]\nconsole.log(eat(0, 0, 1));\
    \ // [0, 1]\nconsole.log(eat(0, 1, 0)); // [1, 0]\nconsole.log(eat(0, 1, 1));\
    \ // [1, 0]\nconsole.log(eat(1, 0, 0)); // [1, 0]\nconsole.log(eat(1, 0, 1));\
    \ // [1, 0]\nconsole.log(eat(1, 1, 0)); // [2, 0]\nconsole.log(eat(1, 1, 1));\
    \ // [2, 0]\nconsole.log(eat(1, 1, 2)); // [2, 1]\nconsole.log(eat(1, 2, 1));\
    \ // [3, 0]\nconsole.log(eat(1, 2, 2)); // [3, 0]\nconsole.log(eat(1, 2, 3));\
    \ // [3, 1]\nconsole.log(eat(1, 3, 2)); // [4, 0]\nconsole.log(eat(1, 3, 3));\
    \ // [4, 0]\nconsole.log(eat(1, 3, 4)); // [4, 1]\nconsole.log(eat(1, 4, 3));\
    \ // [5, 0]\nconsole.log(eat(1, 4, 4)); // [5, 0]\nconsole.log(eat(1, 4, 5));\
    \ // [5, 1]\nconsole.log(eat(1, 5, 4)); // [6, 0]\nconsole.log(eat(1, 5, 5));\
    \ // [6, 0]\nconsole.log(eat(1, 5, 6)); // [6, 1]\nconsole.log(eat(1, 6, 5));\
    \ // [7, 0]\nconsole.log(eat(1, 6, 6)); // [7, 0]\nconsole.log(eat(1, 6, 7));\
    \ // [7, 1]\nconsole.log(eat(1, 7, 6)); // [", "  const total = number + remaining;\n\
    \  const eaten = total >= need ? need : total;\n  const left = total - eaten;\n\
    \  return [eaten, left];\n}\n", "  if (number + remaining >= need) {\n    return\
    \ [need, number + remaining - need];\n  } else {\n    return [number + remaining,\
    \ 0];\n  }\n}\n", "  const eaten = number + need;\n  const left = remaining -\
    \ need;\n  return left < 0 ? [eaten, 0] : [eaten, left];\n}\n\nconsole.log(eat(10,\
    \ 5, 15), [15, 0]);\nconsole.log(eat(10, 5, 10), [15, 0]);\nconsole.log(eat(10,\
    \ 5, 5), [15, 0]);\nconsole.log(eat(10, 5, 0), [15, 0]);\nconsole.log(eat(10,\
    \ 5, -5), [15, 0]);\nconsole.log(eat(10, 5, -10), [15, 0]);\nconsole.log(eat(10,\
    \ 5, -15), [15, 0]);\nconsole.log(eat(10, 5, -20), [15, 0]);\nconsole.log(eat(10,\
    \ 5, -25), [15, 0]);\nconsole.log(eat(10, 5, -30), [15, 0]);\nconsole.log(eat(10,\
    \ 5, -35), [15, 0]);\nconsole.log(eat(10, 5, -40), [15, 0]);\nconsole.log(eat(10,\
    \ 5, -45), [15, 0]);\nconsole.log(eat(10, 5, -50), [15, 0]);\nconsole.log(eat(10,\
    \ 5, -55), [15, 0]);\nconsole.log(eat(10, 5, -60), [15, 0]);\nconsole.log(eat(10,\
    \ 5, -65), [15, 0]);\nconsole.log(eat(10, 5, -70), [15, 0]);\nconsole.log(eat(10,\
    \ 5, -75), [15, 0]);\nconsole.log(eat(10, 5, -80), [15, 0]);\nconsole.log(eat(10,\
    \ 5, -85), [15, 0]);\nconsole.log(eat(10, 5, -90), [15, 0]);\nconsole.log(eat(10,\
    \ 5, -95), [15, 0]);\nconsole.log(eat(10, 5, -100), [15, 0]);\nconsole.log(eat(10,\
    \ 5, -105), [15, 0]);", "  const total = number + remaining;\n  const eaten =\
    \ total >= need ? need : total;\n  const left = total - eaten;\n  return [eaten,\
    \ left];\n}\n", "  const total = number + remaining;\n  const eaten = total >=\
    \ need ? need : total;\n  const left = total - eaten;\n  return [eaten, left];\n\
    }\n", "  const total = number + remaining;\n  const eaten = total < need ? total\
    \ : need;\n  return [eaten, total - eaten];\n}\n\nconsole.log(eat(0, 10, 10),\
    \ [10, 0]);\nconsole.log(eat(0, 10, 0), [0, 0]);\nconsole.log(eat(10, 0, 10),\
    \ [10, 0]);\nconsole.log(eat(10, 0, 0), [0, 0]);\nconsole.log(eat(10, 10, 0),\
    \ [10, 0]);\nconsole.log(eat(10, 10, 10), [20, 0]);\nconsole.log(eat(10, 5, 10),\
    \ [15, 0]);\nconsole.log(eat(10, 5, 5), [15, 0]);\nconsole.log(eat(10, 5, 0),\
    \ [10, 0]);\nconsole.log(eat(10, 15, 0), [10, 0]);\nconsole.log(eat(10, 15, 5),\
    \ [15, 0]);\nconsole.log(eat(10, 15, 10), [20, 0]);\nconsole.log(eat(10, 15, 15),\
    \ [25, 0]);\nconsole.log(eat(10, 15, 20), [25, 5]);\nconsole.log(eat(10, 20, 0),\
    \ [10, 0]);\nconsole.log(eat(10, 20, 5), [15, 0]);\nconsole.log(eat(10, 20, 10),\
    \ [20, 0]);\nconsole.log(eat(10, 20, 15), [25, 0]);\nconsole.log(eat(10, 20, 20),\
    \ [30, 0]);\nconsole.log(eat(10, 20, 25), [30, 5]);\nconsole.log(eat(10, 25, 0),\
    \ [10, 0]);\nconsole.log(eat(10, 25, 5), [15, 0]);\nconsole.log(eat(10, 25, 10),\
    \ [20, 0]);\nconsole.log(eat(10, 25, 15), [25, 0]);\nconsole.log(eat(10, 25, 20),\
    \ [30, 0]);\nconsole.log(eat(10, 25, 25), [35, 0]);\nconsole.log(eat(10", "  const\
    \ eaten = number + Math.min(need, remaining);\n  const left = remaining - Math.min(need,\
    \ remaining);\n  return [eaten, left];\n}\n", "  const total = number + remaining;\n\
    \  const eaten = total >= need ? need : total;\n  const left = total - eaten;\n\
    \  return [eaten, left];\n}\n", "  let eaten = number + need;\n  let left = remaining\
    \ - need;\n  if (left < 0) {\n    eaten = eaten + left;\n    left = 0;\n  }\n\
    \  return [eaten, left];\n}\n", "  if (remaining < need) {\n    return [number\
    \ + remaining, 0];\n  } else {\n    return [number + need, remaining - need];\n\
    \  }\n}\n\nconsole.log(eat(0, 10, 10)); // [10, 0]\nconsole.log(eat(0, 10, 5));\
    \ // [5, 0]\nconsole.log(eat(10, 10, 0)); // [20, 0]\nconsole.log(eat(10, 10,\
    \ 10)); // [20, 0]\nconsole.log(eat(10, 10, 5)); // [15, 0]\nconsole.log(eat(10,\
    \ 5, 10)); // [15, 5]\nconsole.log(eat(10, 5, 5)); // [15, 0]\nconsole.log(eat(10,\
    \ 5, 0)); // [10, 0]\nconsole.log(eat(10, 0, 10)); // [10, 10]\nconsole.log(eat(10,\
    \ 0, 5)); // [10, 5]\nconsole.log(eat(10, 0, 0)); // [10, 0]\nconsole.log(eat(0,\
    \ 10, 0)); // [0, 0]\nconsole.log(eat(0, 0, 10)); // [0, 10]\nconsole.log(eat(0,\
    \ 0, 0)); // [0, 0]", "  const total = number + need;\n  const carrots = remaining\
    \ - need;\n  return [total, carrots];\n}\n", "  const total = number + remaining;\n\
    \  const eaten = total >= need ? need : total;\n  const left = total - eaten;\n\
    \  return [eaten, left];\n}\n", "  let total = number + remaining;\n  let left\
    \ = total - need;\n  if (left >= 0) {\n    return [need, left];\n  } else {\n\
    \    return [total, 0];\n  }\n}\n", "  const total = number + remaining;\n  const\
    \ eaten = total >= need ? need : total;\n  const left = total - eaten;\n  return\
    \ [eaten, left];\n}\n\nconsole.log(eat(0, 10, 10), [10, 0]);\nconsole.log(eat(0,\
    \ 10, 0), [0, 0]);\nconsole.log(eat(10, 0, 10), [10, 0]);\nconsole.log(eat(10,\
    \ 0, 0), [0, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 10), [20, 0]);\nconsole.log(eat(10, 20, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 20, 0), [10, 0]);\nconsole.log(eat(10, 20, 20), [30, 10]);\nconsole.log(eat(10,\
    \ 20, 30), [30, 20]);\nconsole.log(eat(10, 30, 20), [30, 10]);\nconsole.log(eat(10,\
    \ 30, 30), [40, 20]);\nconsole.log(eat(10, 30, 40), [40, 30]);\nconsole.log(eat(10,\
    \ 40, 30), [40, 20]);\nconsole.log(eat(10, 40, 40), [50, 30]);\nconsole.log(eat(10,\
    \ 40, 50), [50, 40]);\nconsole.log(eat(10, 50, 40), [50, 30]);\nconsole.log(eat(10,\
    \ 50, 50), [60, 40]);\nconsole.log(eat(10, 50, 60), [60, 50]);\nconsole.log(eat(10,\
    \ 60, 50), [60, 40]);\nconsole.log(eat(10, 60, 60), [70, 50]);\nconsole.log(eat(10,\
    \ 60, 70), [70, 60]);\nconsole.log(eat(10, 70, 60), [70, 50]);\nconsole.log(eat(10,\
    \ 70, 70), [80, 60]);\nconsole.log(eat(10, 70, 80), [80, 70]);\nconsole.log(eat(10,\
    \ 80, 70), [80, 60]);\n", "  const total = number + remaining;\n  const eaten\
    \ = total >= need ? need : total;\n  const left = total - eaten;\n  return [eaten,\
    \ left];\n}\n", "  const total = number + remaining;\n  const eaten = total >=\
    \ need ? need : total;\n  const left = total - eaten;\n  return [eaten, left];\n\
    }\n", "  const total = number + remaining;\n  const eaten = total >= need ? need\
    \ : total;\n  const left = total >= need ? total - need : 0;\n  return [eaten,\
    \ left];\n}\n", "  const eaten = Math.min(number + remaining, need);\n  return\
    \ [eaten, remaining - (eaten - number)];\n}\n", "    const eaten = Math.min(number\
    \ + remaining, need);\n    return [eaten, eaten - need];\n}\n", "  const total\
    \ = number + remaining;\n  const eaten = total > need ? need : total;\n  const\
    \ left = total > need ? total - need : 0;\n  return [eaten, left];\n}\n", "  const\
    \ total = number + remaining;\n  const eaten = need > total ? total : need;\n\
    \  return [eaten, total - eaten];\n}\n", "  let total = number + remaining;\n\
    \  if (total >= need) {\n    return [need, total - need];\n  } else {\n    return\
    \ [total, 0];\n  }\n}\n\nconsole.log(eat(10, 10, 50), [20, 40]);\nconsole.log(eat(0,\
    \ 10, 30), [30, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(0,\
    \ 10, 0), [0, 0]);\nconsole.log(eat(10, 0, 0), [10, 0]);\nconsole.log(eat(10,\
    \ 0, 30), [10, 30]);\nconsole.log(eat(50, 10, 30), [60, 20]);\nconsole.log(eat(50,\
    \ 10, 60), [60, 50]);\nconsole.log(eat(50, 10, 70), [60, 60]);\nconsole.log(eat(50,\
    \ 10, 80), [60, 70]);\nconsole.log(eat(50, 10, 90), [60, 80]);\nconsole.log(eat(50,\
    \ 10, 100), [60, 90]);\nconsole.log(eat(50, 10, 110), [60, 100]);\nconsole.log(eat(50,\
    \ 10, 120), [60, 110]);\nconsole.log(eat(50, 10, 130), [60, 120]);\nconsole.log(eat(50,\
    \ 10, 140), [60, 130]);\nconsole.log(eat(50, 10, 150), [60, 140]);\nconsole.log(eat(50,\
    \ 10, 160), [60, 150]);\nconsole.log(eat(50, 10, 170), [60, 160]);\nconsole.log(eat(50,\
    \ 10, 180), [60, 170]);\nconsole.log(eat(50, 10, 190), [60, 180]);\nconsole.log(eat(50,\
    \ 10, 200), [60, 190]);\nconsole.log(eat(50, 10, 210), [60, 200]);\nconsole.log(eat(50,\
    \ 10, 220), [60, 210]);\nconsole.log(eat(50, 10, 230), [60, 220]);\nconsole.log(eat(50,\
    \ 10, 240), [60", "  let total = number + remaining;\n  let left = total - need;\n\
    \  return left >= 0 ? [need, left] : [total, 0];\n}\n", "  let eaten = number\
    \ + need;\n  let left = remaining - need;\n  if (left < 0) {\n    eaten = eaten\
    \ + left;\n    left = 0;\n  }\n  return [eaten, left];\n}\n", "  if (number +\
    \ remaining >= need) {\n    return [need, number + remaining - need];\n  } else\
    \ {\n    return [number + remaining, 0];\n  }\n}\n\nconsole.log(eat(10, 10, 50),\
    \ [10, 40]);\nconsole.log(eat(0, 10, 30), [0, 20]);\nconsole.log(eat(10, 10, 0),\
    \ [10, 0]);\nconsole.log(eat(10, 10, 10), [10, 0]);\nconsole.log(eat(0, 10, 10),\
    \ [10, 0]);\nconsole.log(eat(10, 0, 10), [0, 10]);\nconsole.log(eat(10, 0, 0),\
    \ [0, 0]);\nconsole.log(eat(0, 0, 10), [0, 10]);\nconsole.log(eat(0, 0, 0), [0,\
    \ 0]);\nconsole.log(eat(0, 10, 0), [0, 0]);\nconsole.log(eat(0, 0, 0), [0, 0]);\n\
    console.log(eat(10, 10, 20), [10, 10]);\nconsole.log(eat(10, 20, 10), [20, 0]);\n\
    console.log(eat(10, 20, 20), [20, 0]);\nconsole.log(eat(10, 20, 30), [20, 10]);\n\
    console.log(eat(10, 20, 40), [20, 20]);\nconsole.log(eat(10, 20, 50), [20, 30]);\n\
    console.log(eat(10, 20, 60), [20, 40]);\nconsole.log(eat(10, 20, 70), [20, 50]);\n\
    console.log(eat(10, 20, 80), [20, 60]);\nconsole.log(eat(10, 20, 90), [20, 70]);\n\
    console.log(eat(10, 20, 100), [20, 80]);\nconsole.log(eat(10, 20, 110), [20, 90]);\n\
    console.log(eat(10, 20, 120), [20, 100]);\nconsole.log(eat(10, 20, 130), [20,\
    \ 110]);\nconsole.log(eat(10, 20, 140), [20, 120]);", "  const total = number\
    \ + remaining;\n  const eaten = total >= need ? need : total;\n  const left =\
    \ total >= need ? total - need : 0;\n  return [eaten, left];\n}\n\nconsole.log(eat(10,\
    \ 10, 10), [10, 0]);\nconsole.log(eat(0, 10, 10), [10, 0]);\nconsole.log(eat(10,\
    \ 0, 10), [10, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 1), [10, 1]);\nconsole.log(eat(10, 10, 9), [10, 9]);\nconsole.log(eat(10,\
    \ 10, 11), [10, 11]);\nconsole.log(eat(10, 10, 19), [10, 19]);\nconsole.log(eat(10,\
    \ 0, 19), [0, 19]);\nconsole.log(eat(10, 1, 19), [1, 19]);\nconsole.log(eat(10,\
    \ 9, 19), [9, 19]);\nconsole.log(eat(10, 11, 19), [10, 19]);\nconsole.log(eat(10,\
    \ 19, 19), [19, 0]);\nconsole.log(eat(0, 19, 19), [19, 0]);\nconsole.log(eat(1,\
    \ 19, 19), [19, 0]);\nconsole.log(eat(9, 19, 19), [19, 0]);\nconsole.log(eat(11,\
    \ 19, 19), [19, 0]);\nconsole.log(eat(19, 19, 19), [19, 0]);\nconsole.log(eat(19,\
    \ 0, 19), [0, 19]);\nconsole.log(eat(19, 1, 19), [1, 19]);\nconsole.log(eat(19,\
    \ 9, 19), [9, 19]);\nconsole.log(eat(19, 11, 19), [10, 19]);\nconsole.log(eat(19,\
    \ 19, 19), [19, 0]);\nconsole.log(eat(19, 19, 0), [19, 0]);\nconsole.log(eat(19,\
    \ 19, 1), [19, 1]);\nconsole.log(eat(19, 19, 9),", "  const total = number + remaining;\n\
    \  return [total, total >= need ? total - need : 0];\n}\n", "  const total = number\
    \ + remaining;\n  const eaten = Math.min(total, need);\n  const left = total -\
    \ eaten;\n  return [eaten, left];\n}\n", "  return [\n    number + Math.min(need,\
    \ remaining),\n    Math.max(0, remaining - need)\n  ];\n}\n\nconsole.log(eat(0,\
    \ 10, 10), [10, 0]);\nconsole.log(eat(0, 10, 5), [5, 0]);\nconsole.log(eat(10,\
    \ 10, 0), [20, 0]);\nconsole.log(eat(50, 10, 20), [60, 10]);\nconsole.log(eat(10,\
    \ 50, 20), [60, 0]);\nconsole.log(eat(10, 200, 20), [30, 0]);", "  const total\
    \ = number + remaining;\n  const eaten = total >= need ? need : total;\n  const\
    \ left = total - eaten;\n  return [eaten, left];\n}\n", "  const total = number\
    \ + remaining;\n  const eaten = total < need ? total : need;\n  return [eaten,\
    \ total - eaten];\n}\n", "  const total = number + remaining;\n  const eaten =\
    \ total >= need ? need : total;\n  const left = total - eaten;\n  return [eaten,\
    \ left];\n}\n", "  const total = number + remaining;\n  const eaten = total >=\
    \ need ? need : total;\n  const left = total - eaten;\n  return [eaten, left];\n\
    }\n", "  const total = number + remaining;\n  const eaten = total >= need ? need\
    \ : total;\n  const left = total >= need ? total - need : 0;\n  return [eaten,\
    \ left];\n}\n\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10, 10,\
    \ 10), [20, 0]);\nconsole.log(eat(10, 10, 20), [20, 10]);\nconsole.log(eat(10,\
    \ 20, 20), [30, 0]);\nconsole.log(eat(10, 20, 30), [30, 10]);\nconsole.log(eat(10,\
    \ 20, 40), [30, 20]);\nconsole.log(eat(10, 20, 50), [30, 30]);\nconsole.log(eat(10,\
    \ 20, 60), [30, 40]);\nconsole.log(eat(10, 20, 70), [30, 50]);\nconsole.log(eat(10,\
    \ 20, 80), [30, 60]);\nconsole.log(eat(10, 20, 90), [30, 70]);\nconsole.log(eat(10,\
    \ 20, 100), [30, 80]);\nconsole.log(eat(10, 20, 110), [30, 90]);\nconsole.log(eat(10,\
    \ 20, 120), [30, 100]);\nconsole.log(eat(10, 20, 130), [30, 110]);\nconsole.log(eat(10,\
    \ 20, 140), [30, 120]);\nconsole.log(eat(10, 20, 150), [30, 130]);\nconsole.log(eat(10,\
    \ 20, 160), [30, 140]);\nconsole.log(eat(10, 20, 170), [30, 150]);\nconsole.log(eat(10,\
    \ 20, 180), [30, 160]);\nconsole.log(eat(10, 20, 190), [30, 170]);\nconsole.log(eat(10,\
    \ 20, 200), [30, 180]);\nconsole.log(eat(10, 20, 210), [30, 190]);\nconsole.log(eat(10,\
    \ 20, 220), [30, 200]);\nconsole.log(eat(10, 20, 230), [30, 210]);\nconsole.log(eat(10,\
    \ 20, 240),", "  const total = number + remaining;\n  const eaten = total >= need\
    \ ? need : total;\n  const left = total - eaten;\n  return [eaten, left];\n}\n",
  "  const total = number + remaining;\n  const eaten = total >= need ? need : total;\n\
    \  const left = total - eaten;\n  return [eaten, left];\n}\n", "  const total\
    \ = number + remaining;\n  const eaten = total >= need ? need : total;\n  const\
    \ left = total - eaten;\n  return [eaten, left];\n}\n", "  const total = number\
    \ + remaining;\n  const left = total - need;\n  return left < 0 ? [total, 0] :\
    \ [need, left];\n}\n\nexport default eat;", "  const total = number + remaining;\n\
    \  const eaten = Math.min(total, need);\n  const left = total - eaten;\n  return\
    \ [eaten, left];\n}\n", "  const total = number + remaining;\n  const eaten =\
    \ total > need ? need : total;\n  const left = total > need ? total - need : 0;\n\
    \  return [eaten, left];\n}\n", "  if (number + remaining >= need) {\n    return\
    \ [need, number + remaining - need];\n  } else {\n    return [number + remaining,\
    \ 0];\n  }\n}\n\nconsole.log(eat(10, 10, 50), [10, 40]);\nconsole.log(eat(0, 10,\
    \ 30), [0, 30]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10, 10,\
    \ 10), [10, 0]);\nconsole.log(eat(0, 10, 10), [10, 0]);\nconsole.log(eat(10, 0,\
    \ 10), [0, 10]);\nconsole.log(eat(10, 20, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 20, 0), [10, 0]);\nconsole.log(eat(10, 20, 20), [20, 0]);\nconsole.log(eat(10,\
    \ 20, 30), [20, 10]);\nconsole.log(eat(10, 0, 0), [0, 0]);\nconsole.log(eat(0,\
    \ 0, 10), [0, 10]);\nconsole.log(eat(0, 0, 0), [0, 0]);\nconsole.log(eat(10, 5,\
    \ 20), [5, 15]);\nconsole.log(eat(10, 15, 20), [15, 5]);\nconsole.log(eat(10,\
    \ 25, 20), [25, 0]);\nconsole.log(eat(10, 35, 20), [30, 0]);\nconsole.log(eat(10,\
    \ 45, 20), [40, 0]);\nconsole.log(eat(10, 55, 20), [50, 0]);\nconsole.log(eat(10,\
    \ 65, 20), [60, 0]);\nconsole.log(eat(10, 75, 20), [70, 0]);\nconsole.log(eat(10,\
    \ 85, 20), [80, 0]);\nconsole.log(eat(10, 95, 20), [90, 0]);\nconsole.log(eat(10,\
    \ 105, 20), [100, 0]);\nconsole.log(eat(10, 115, 20), [110, 0]);\nconsole.log(eat(10,\
    \ 125, 20), [120, 0]);", "  const total = number + remaining;\n  const eaten =\
    \ total >= need ? need : total;\n  const left = total - eaten;\n  return [eaten,\
    \ left];\n}\n\nconsole.log(eat(0, 10, 10), [10, 0]);\nconsole.log(eat(0, 10, 5),\
    \ [5, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10, 10, 10),\
    \ [20, 0]);\nconsole.log(eat(10, 5, 10), [15, 0]);\nconsole.log(eat(10, 5, 5),\
    \ [15, 0]);\nconsole.log(eat(10, 5, 0), [10, 0]);\nconsole.log(eat(10, 0, 10),\
    \ [10, 10]);\nconsole.log(eat(10, 0, 5), [10, 5]);\nconsole.log(eat(10, 0, 0),\
    \ [10, 0]);\nconsole.log(eat(0, 0, 10), [0, 10]);\nconsole.log(eat(0, 0, 5), [0,\
    \ 5]);\nconsole.log(eat(0, 0, 0), [0, 0]);", "  const total = number + remaining;\n\
    \  const eaten = total >= need ? need : total;\n  const left = total - eaten;\n\
    \  return [eaten, left];\n}\n\nconsole.log(eat(10, 10, 10), [10, 0]);\nconsole.log(eat(0,\
    \ 10, 10), [10, 0]);\nconsole.log(eat(10, 0, 10), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 0), [10, 0]);\nconsole.log(eat(10, 0, 0), [0, 0]);\nconsole.log(eat(0, 0,\
    \ 0), [0, 0]);\nconsole.log(eat(0, 10, 0), [0, 0]);\nconsole.log(eat(0, 0, 10),\
    \ [0, 10]);\nconsole.log(eat(10, 10, 5), [15, 0]);\nconsole.log(eat(10, 5, 10),\
    \ [10, 5]);\nconsole.log(eat(10, 5, 5), [10, 0]);\nconsole.log(eat(10, 5, 0),\
    \ [5, 0]);\nconsole.log(eat(10, 0, 5), [5, 0]);\nconsole.log(eat(0, 5, 5), [5,\
    \ 0]);\nconsole.log(eat(0, 5, 0), [0, 0]);\nconsole.log(eat(0, 0, 5), [0, 5]);",
  "  let total = number + remaining;\n  let left = total - need;\n  if (left < 0)\
    \ {\n    left = 0;\n  }\n  return [total, left];\n}\n", "  const eaten = Math.min(need,\
    \ remaining);\n  return [number + eaten, remaining - eaten];\n}\n", "  const total\
    \ = number + remaining;\n  const eaten = total >= need ? need : total;\n  const\
    \ left = total - eaten;\n  return [eaten, left];\n}\n\nexport default eat;", " \
    \ let eaten = number + need;\n  let left = remaining - need;\n  if (eaten > remaining)\
    \ {\n    eaten = remaining;\n    left = 0;\n  }\n  return [eaten, left];\n}\n",
  "  const total = number + remaining;\n  const eaten = total >= need ? need : total;\n\
    \  const left = total - eaten;\n  return [eaten, left];\n}\n", "  const total\
    \ = number + remaining;\n  if (total >= need) {\n    return [need, total - need];\n\
    \  } else {\n    return [total, 0];\n  }\n}\n\nconsole.log(eat(10, 5, 15), [15,\
    \ 0]);\nconsole.log(eat(10, 15, 5), [10, 5]);\nconsole.log(eat(10, 5, 5), [10,\
    \ 0]);\nconsole.log(eat(10, 10, 10), [10, 0]);\nconsole.log(eat(10, 20, 10), [10,\
    \ 0]);\nconsole.log(eat(10, 20, 0), [10, 0]);\nconsole.log(eat(10, 20, 30), [20,\
    \ 10]);\nconsole.log(eat(10, 20, 40), [20, 20]);\nconsole.log(eat(10, 20, 50),\
    \ [20, 30]);\nconsole.log(eat(10, 20, 60), [20, 40]);\nconsole.log(eat(10, 20,\
    \ 70), [20, 50]);\nconsole.log(eat(10, 20, 80), [20, 60]);\nconsole.log(eat(10,\
    \ 20, 90), [20, 70]);\nconsole.log(eat(10, 20, 100), [20, 80]);\nconsole.log(eat(10,\
    \ 20, 110), [20, 90]);\nconsole.log(eat(10, 20, 120), [20, 100]);\nconsole.log(eat(10,\
    \ 20, 130), [20, 110]);\nconsole.log(eat(10, 20, 140), [20, 120]);\nconsole.log(eat(10,\
    \ 20, 150), [20, 130]);\nconsole.log(eat(10, 20, 160), [20, 140]);\nconsole.log(eat(10,\
    \ 20, 170), [20, 150]);\nconsole.log(eat(10, 20, 180), [20, 160]);\nconsole.log(eat(10,\
    \ 20, 190), [20, 170]);\nconsole.log(eat(10, 20, 200), [20, 180]);\nconsole.log(eat(10,\
    \ 20, 210), [20, 190]);\nconsole.log(eat(10, 20, 220), [20", "  const total =\
    \ number + need;\n  const left = total > remaining ? 0 : remaining - total;\n\
    \  return [total, left];\n}\n\nconsole.log(eat(10, 10, 50), [20, 20]);\nconsole.log(eat(0,\
    \ 30, 40), [30, 10]);\nconsole.log(eat(10, 50, 28), [58, 0]);", "  const total\
    \ = number + remaining;\n  const eaten = total < need ? total : need;\n  return\
    \ [eaten, total - eaten];\n}\n", "    return [number + Math.min(need, remaining),\
    \ Math.max(0, remaining - need)];\n}\n", "  if (number + remaining < need) {\n\
    \    return [number + remaining, 0];\n  } else {\n    return [need, number + remaining\
    \ - need];\n  }\n}\n\nconsole.log(eat(10, 10, 50), [20, 40]);\nconsole.log(eat(0,\
    \ 10, 30), [30, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(0,\
    \ 10, 0), [0, 0]);\nconsole.log(eat(10, 0, 0), [10, 0]);\nconsole.log(eat(0, 0,\
    \ 10), [0, 10]);\nconsole.log(eat(10, 20, 0), [10, 0]);\nconsole.log(eat(10, 20,\
    \ 10), [20, 0]);\nconsole.log(eat(10, 20, 30), [20, 20]);\nconsole.log(eat(50,\
    \ 20, 30), [20, 40]);\nconsole.log(eat(50, 20, 0), [50, 0]);\nconsole.log(eat(50,\
    \ 0, 0), [50, 0]);\nconsole.log(eat(0, 0, 0), [0, 0]);\nconsole.log(eat(0, 20,\
    \ 0), [0, 0]);\nconsole.log(eat(0, 20, 10), [10, 0]);\nconsole.log(eat(0, 20,\
    \ 30), [20, 10]);\nconsole.log(eat(0, 50, 30), [30, 0]);\nconsole.log(eat(0, 50,\
    \ 0), [0, 0]);\nconsole.log(eat(0, 50, 10), [10, 0]);\nconsole.log(eat(0, 50,\
    \ 20), [20, 0]);\nconsole.log(eat(0, 50, 50), [50, 0]);\nconsole.log(eat(0, 50,\
    \ 60), [50, 10]);\nconsole.log(eat(0, 50, 100), [50, 50]);\nconsole.log(eat(50,\
    \ 50, 0), [50, 0]);\nconsole.log(eat(50, 50, 10), [50, 0]);\nconsole.log(eat(50,\
    \ 50, 20), [50, 0]);", "  if (number + remaining < need) {\n    return [number\
    \ + remaining, 0];\n  } else {\n    return [need, number + remaining - need];\n\
    \  }\n}\n\nconsole.log(eat(10, 10, 10));\nconsole.log(eat(0, 10, 10));\nconsole.log(eat(10,\
    \ 0, 10));\nconsole.log(eat(10, 10, 0));\nconsole.log(eat(10, 10, 1));\nconsole.log(eat(10,\
    \ 10, 11));\nconsole.log(eat(10, 10, 12));\nconsole.log(eat(10, 10, 13));\nconsole.log(eat(10,\
    \ 10, 14));\nconsole.log(eat(10, 10, 15));\nconsole.log(eat(10, 10, 16));\nconsole.log(eat(10,\
    \ 10, 17));\nconsole.log(eat(10, 10, 18));\nconsole.log(eat(10, 10, 19));\nconsole.log(eat(10,\
    \ 10, 20));\nconsole.log(eat(10, 10, 21));\nconsole.log(eat(10, 10, 22));\nconsole.log(eat(10,\
    \ 10, 23));\nconsole.log(eat(10, 10, 24));\nconsole.log(eat(10, 10, 25));\nconsole.log(eat(10,\
    \ 10, 26));\nconsole.log(eat(10, 10, 27));\nconsole.log(eat(10, 10, 28));\nconsole.log(eat(10,\
    \ 10, 29));\nconsole.log(eat(10, 10, 30));\nconsole.log(eat(10, 10, 31));\nconsole.log(eat(10,\
    \ 10, 32));\nconsole.log(eat(10, 10, 33));\nconsole.log(eat(10, 10, 34));\nconsole.log(eat(10,\
    \ 10, 35));\nconsole.log(eat(10, 10, 36));\nconsole.log(eat(10, 10, 37));\nconsole.log(eat(10,\
    \ 10, 38));\nconsole.log(eat(10, 10, 39));\nconsole.log(eat(10, 10, 40));\nconsole.log(eat(10,\
    \ 10, 41));", "  const total = number + remaining;\n  const eaten = total >= need\
    \ ? need : total;\n  const left = total - eaten;\n  return [eaten, left];\n}\n",
  "    const total = number + remaining;\n    const eaten = total > need ? need :\
    \ total;\n    const left = total > need ? total - need : 0;\n    return [eaten,\
    \ left];\n}\n\nconsole.log(eat(0, 10, 10)); // [10, 0]\nconsole.log(eat(10, 0,\
    \ 10)); // [10, 0]\nconsole.log(eat(10, 10, 0)); // [10, 0]\nconsole.log(eat(10,\
    \ 10, 10)); // [20, 0]\nconsole.log(eat(10, 20, 10)); // [20, 10]\nconsole.log(eat(10,\
    \ 20, 20)); // [30, 0]\nconsole.log(eat(10, 20, 30)); // [30, 20]\nconsole.log(eat(10,\
    \ 20, 40)); // [40, 0]\nconsole.log(eat(10, 20, 50)); // [50, 0]\nconsole.log(eat(10,\
    \ 20, 60)); // [60, 0]\nconsole.log(eat(10, 20, 70)); // [70, 0]\nconsole.log(eat(10,\
    \ 20, 80)); // [80, 0]\nconsole.log(eat(10, 20, 90)); // [90, 0]\nconsole.log(eat(10,\
    \ 20, 100)); // [100, 0]\nconsole.log(eat(10, 20, 110)); // [110, 0]\nconsole.log(eat(10,\
    \ 20, 120)); // [120, 0]\nconsole.log(eat(10, 20, 130)); // [130, 0]\nconsole.log(eat(10,\
    \ 20, 140)); // [140, 0]\nconsole.log(eat(10, 20, 150)); // [150, 0]\nconsole.log(eat(10,\
    \ 20, 160)); // [160, 0]\nconsole.log(eat(10, 20, 170)); // [170, 0]\nconsole.log(eat(10,\
    \ 20, 180)); // [180, 0]\nconsole.log(eat(10, 20, 190)); // [190, 0]\nconsole.log(eat(10,\
    \ 20, 200)); // [200, 0]\nconsole.log(eat(", "  const eaten = number + need;\n\
    \  const left = remaining - need;\n  return eaten > remaining ? [remaining, 0]\
    \ : [eaten, left];\n}\n", "  const total = number + remaining;\n  const eaten\
    \ = need <= total ? need : total;\n  return [eaten, total - eaten];\n}\n", " \
    \ const total = number + remaining;\n  const eaten = total >= need ? need : total;\n\
    \  const left = total - eaten;\n  return [eaten, left];\n}\n\nconsole.log(eat(0,\
    \ 10, 10), [10, 0]);\nconsole.log(eat(0, 10, 5), [5, 0]);\nconsole.log(eat(5,\
    \ 10, 5), [10, 0]);\nconsole.log(eat(5, 10, 0), [5, 0]);\nconsole.log(eat(5, 10,\
    \ 15), [10, 5]);\nconsole.log(eat(5, 10, 20), [10, 10]);\nconsole.log(eat(5, 10,\
    \ 25), [10, 15]);\nconsole.log(eat(5, 10, 30), [10, 20]);\nconsole.log(eat(5,\
    \ 10, 35), [10, 25]);\nconsole.log(eat(5, 10, 40), [10, 30]);\nconsole.log(eat(5,\
    \ 10, 45), [10, 35]);\nconsole.log(eat(5, 10, 50), [10, 40]);\nconsole.log(eat(5,\
    \ 10, 55), [10, 45]);\nconsole.log(eat(5, 10, 60), [10, 50]);\nconsole.log(eat(5,\
    \ 10, 65), [10, 55]);\nconsole.log(eat(5, 10, 70), [10, 60]);\nconsole.log(eat(5,\
    \ 10, 75), [10, 65]);\nconsole.log(eat(5, 10, 80), [10, 70]);\nconsole.log(eat(5,\
    \ 10, 85), [10, 75]);\nconsole.log(eat(5, 10, 90), [10, 80]);\nconsole.log(eat(5,\
    \ 10, 95), [10, 85]);\nconsole.log(eat(5, 10, 100), [10, 90]);\nconsole.log(eat(5,\
    \ 10, 105), [10, 95]);\nconsole.log(eat(5, 10, 110), [10, 100]);\nconsole.log(eat(5,\
    \ 10, 115), [10, 105]);\nconsole.log(eat(5, 10, 120), [10, 110]);\n", "  const\
    \ total = number + remaining;\n  const left = total - need;\n  return left < 0\
    \ ? [total, 0] : [need, left];\n}\n\nconsole.log(eat(0, 0, 0), [0, 0]);\nconsole.log(eat(0,\
    \ 1, 0), [0, 0]);\nconsole.log(eat(0, 1, 1), [1, 0]);\nconsole.log(eat(0, 1, 2),\
    \ [1, 1]);\nconsole.log(eat(1, 0, 0), [1, 0]);\nconsole.log(eat(1, 0, 1), [1,\
    \ 0]);\nconsole.log(eat(1, 1, 0), [1, 0]);\nconsole.log(eat(1, 1, 1), [1, 0]);\n\
    console.log(eat(1, 1, 2), [1, 1]);\nconsole.log(eat(1, 2, 0), [1, 0]);\nconsole.log(eat(1,\
    \ 2, 1), [1, 0]);\nconsole.log(eat(1, 2, 2), [2, 0]);\nconsole.log(eat(1, 2, 3),\
    \ [2, 1]);\nconsole.log(eat(2, 0, 0), [2, 0]);\nconsole.log(eat(2, 0, 1), [2,\
    \ 0]);\nconsole.log(eat(2, 1, 0), [2, 0]);\nconsole.log(eat(2, 1, 1), [2, 0]);\n\
    console.log(eat(2, 1, 2), [2, 1]);\nconsole.log(eat(2, 2, 0), [2, 0]);\nconsole.log(eat(2,\
    \ 2, 1), [2, 0]);\nconsole.log(eat(2, 2, 2), [2, 0]);\nconsole.log(eat(2, 2, 3),\
    \ [2, 1]);\nconsole.log(eat(2, 3, 0), [2, 0]);\nconsole.log(eat(2, 3, 1), [2,\
    \ 0]);\nconsole.log(eat(2, 3, 2), [2, 0]);\nconsole.log(eat(2, 3, 3), [3, 0]);\n\
    console.log(", "  if (remaining < need) {\n    return [number + remaining, 0];\n\
    \  }\n  return [number + need, remaining - need];\n}\n\nconsole.log(eat(0, 10,\
    \ 10), [10, 0]);\nconsole.log(eat(0, 10, 5), [5, 0]);\nconsole.log(eat(10, 10,\
    \ 0), [20, 0]);\nconsole.log(eat(10, 10, 10), [20, 0]);\nconsole.log(eat(10, 10,\
    \ 5), [15, 0]);\nconsole.log(eat(10, 5, 10), [15, 5]);\nconsole.log(eat(10, 5,\
    \ 5), [15, 0]);\nconsole.log(eat(10, 5, 0), [15, 0]);\nconsole.log(eat(10, 0,\
    \ 10), [10, 10]);\nconsole.log(eat(10, 0, 5), [10, 5]);\nconsole.log(eat(10, 0,\
    \ 0), [10, 0]);\nconsole.log(eat(0, 5, 10), [5, 5]);\nconsole.log(eat(0, 5, 5),\
    \ [5, 0]);\nconsole.log(eat(0, 5, 0), [5, 0]);\nconsole.log(eat(0, 0, 10), [0,\
    \ 10]);\nconsole.log(eat(0, 0, 5), [0, 5]);\nconsole.log(eat(0, 0, 0), [0, 0]);",
  "  if (number + remaining < need) {\n    return [number + remaining, 0];\n  } else\
    \ {\n    return [need, number + remaining - need];\n  }\n}\n", "  let total =\
    \ number + remaining;\n  let left = total - need;\n  let result = [total, left];\n\
    \  if (left < 0) {\n    result = [total, 0];\n  }\n  return result;\n}\n\nconsole.log(eat(10,\
    \ 5, 5), [15, 0]);\nconsole.log(eat(0, 30, 10), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 0), [10, 0]);\nconsole.log(eat(10, 10, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 5, 10), [15, 5]);\nconsole.log(eat(10, 20, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 20, 0), [10, 0]);\nconsole.log(eat(10, 20, 20), [30, 10]);\nconsole.log(eat(10,\
    \ 20, 30), [30, 20]);\nconsole.log(eat(10, 20, 40), [30, 30]);\nconsole.log(eat(10,\
    \ 20, 50), [30, 40]);\nconsole.log(eat(10, 20, 60), [30, 50]);\nconsole.log(eat(10,\
    \ 20, 70), [30, 60]);\nconsole.log(eat(10, 20, 80), [30, 70]);\nconsole.log(eat(10,\
    \ 20, 90), [30, 80]);\nconsole.log(eat(10, 20, 100), [30, 90]);\nconsole.log(eat(10,\
    \ 20, 110), [30, 100]);\nconsole.log(eat(10, 20, 120), [30, 110]);\nconsole.log(eat(10,\
    \ 20, 130), [30, 120]);\nconsole.log(eat(10, 20, 140), [30, 130]);\nconsole.log(eat(10,\
    \ 20, 150), [30, 140]);\nconsole.log(eat(10, 20, 160), [30, 150]);\nconsole.log(eat(10,\
    \ 20, 170), [30, 160]);\nconsole.log(eat(10, 20, 180), [30, 170]);\nconsole.log(eat(10,\
    \ 20, 190), [30, 180]);\nconsole.log(", "  let total = number + remaining;\n \
    \ if (total >= need) {\n    return [need, total - need];\n  } else {\n    return\
    \ [total, 0];\n  }\n}\n\nconsole.log(eat(10, 10, 10));\nconsole.log(eat(10, 10,\
    \ 5));\nconsole.log(eat(10, 10, 0));\nconsole.log(eat(10, 5, 10));\nconsole.log(eat(10,\
    \ 5, 5));\nconsole.log(eat(10, 5, 0));\nconsole.log(eat(10, 0, 10));\nconsole.log(eat(10,\
    \ 0, 5));\nconsole.log(eat(10, 0, 0));", "  const total = number + remaining;\n\
    \  const eaten = total >= need ? need : total;\n  const left = total - eaten;\n\
    \  return [eaten, left];\n}\n\nconsole.log(eat(0, 10, 10), [10, 0]);\nconsole.log(eat(5,\
    \ 10, 10), [10, 0]);\nconsole.log(eat(10, 10, 10), [10, 0]);\nconsole.log(eat(0,\
    \ 10, 5), [5, 0]);\nconsole.log(eat(5, 10, 5), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 5), [10, 0]);\nconsole.log(eat(0, 10, 0), [0, 0]);\nconsole.log(eat(5, 10,\
    \ 0), [5, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(0, 5, 10),\
    \ [5, 5]);\nconsole.log(eat(5, 5, 10), [5, 5]);\nconsole.log(eat(10, 5, 10), [5,\
    \ 5]);\nconsole.log(eat(0, 5, 5), [5, 0]);\nconsole.log(eat(5, 5, 5), [5, 0]);\n\
    console.log(eat(10, 5, 5), [5, 0]);\nconsole.log(eat(0, 5, 0), [0, 0]);\nconsole.log(eat(5,\
    \ 5, 0), [5, 0]);\nconsole.log(eat(10, 5, 0), [5, 0]);\nconsole.log(eat(0, 0,\
    \ 10), [0, 10]);\nconsole.log(eat(5, 0, 10), [0, 10]);\nconsole.log(eat(10, 0,\
    \ 10), [0, 10]);\nconsole.log(eat(0, 0, 5), [0, 5]);\nconsole.log(eat(5, 0, 5),\
    \ [0, 5]);\nconsole.log(eat(10, 0, 5), [0, 5]);\nconsole.log(eat(0, 0, 0), [0,\
    \ 0]);\nconsole.log(eat(5, 0, 0), [0, 0]);\n", "    let total = number + remaining;\n\
    \    let eaten = 0;\n    if (total >= need) {\n        eaten = need;\n    } else\
    \ {\n        eaten = total;\n    }\n    return [eaten, total - eaten];\n}\n",
  "  const total = number + remaining;\n  const eaten = total >= need ? need : total;\n\
    \  const left = total - eaten;\n  return [eaten, left];\n}\n\nconsole.log(eat(0,\
    \ 10, 10), [10, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 10), [10, 0]);\nconsole.log(eat(10, 10, 20), [10, 10]);\nconsole.log(eat(10,\
    \ 20, 10), [20, 0]);\nconsole.log(eat(10, 20, 20), [20, 0]);\nconsole.log(eat(10,\
    \ 20, 30), [20, 10]);\nconsole.log(eat(10, 30, 20), [30, 0]);\nconsole.log(eat(10,\
    \ 30, 30), [30, 0]);\nconsole.log(eat(10, 30, 40), [30, 10]);\nconsole.log(eat(10,\
    \ 40, 30), [40, 0]);\nconsole.log(eat(10, 40, 40), [40, 0]);\nconsole.log(eat(10,\
    \ 40, 50), [40, 10]);\nconsole.log(eat(10, 50, 40), [50, 0]);\nconsole.log(eat(10,\
    \ 50, 50), [50, 0]);\nconsole.log(eat(10, 50, 60), [50, 10]);\nconsole.log(eat(10,\
    \ 60, 50), [60, 0]);\nconsole.log(eat(10, 60, 60), [60, 0]);\nconsole.log(eat(10,\
    \ 60, 70), [60, 10]);\nconsole.log(eat(10, 70, 60), [70, 0]);\nconsole.log(eat(10,\
    \ 70, 70), [70, 0]);\nconsole.log(eat(10, 70, 80), [70, 10]);\nconsole.log(eat(10,\
    \ 80, 70), [80, 0]);\nconsole.log(eat(10, 80, 80), [80, 0]);\nconsole.log(eat(10,\
    \ 80, 90), [80, 10]);\nconsole.log(eat(10, 90, 80), [90, 0]);\n", "  const total\
    \ = number + remaining;\n  const eaten = total >= need ? need : total;\n  const\
    \ left = total - eaten;\n  return [eaten, left];\n}\n\nconsole.log(eat(0, 0, 0),\
    \ [0, 0]);\nconsole.log(eat(0, 0, 1), [0, 1]);\nconsole.log(eat(0, 1, 0), [1,\
    \ 0]);\nconsole.log(eat(0, 1, 1), [1, 0]);\nconsole.log(eat(0, 1, 2), [1, 1]);\n\
    console.log(eat(0, 2, 1), [1, 0]);\nconsole.log(eat(0, 2, 2), [2, 0]);\nconsole.log(eat(0,\
    \ 2, 3), [2, 1]);\nconsole.log(eat(1, 0, 0), [1, 0]);\nconsole.log(eat(1, 0, 1),\
    \ [1, 0]);\nconsole.log(eat(1, 1, 0), [1, 0]);\nconsole.log(eat(1, 1, 1), [1,\
    \ 0]);\nconsole.log(eat(1, 1, 2), [1, 1]);\nconsole.log(eat(1, 2, 1), [1, 0]);\n\
    console.log(eat(1, 2, 2), [2, 0]);\nconsole.log(eat(1, 2, 3), [2, 1]);\nconsole.log(eat(2,\
    \ 0, 0), [2, 0]);\nconsole.log(eat(2, 0, 1), [2, 0]);\nconsole.log(eat(2, 1, 0),\
    \ [2, 0]);\nconsole.log(eat(2, 1, 1), [2, 0]);\nconsole.log(eat(2, 1, 2), [2,\
    \ 0]);\nconsole.log(eat(2, 2, 1), [2, 0]);\nconsole.log(eat(2, 2, 2), [2, 0]);\n\
    console.log(eat(2, 2, 3), [2, 1]);", "  const total = number + remaining;\n  const\
    \ eaten = total >= need ? need : total;\n  const left = total - eaten;\n  return\
    \ [eaten, left];\n}\n\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 10), [20, 0]);\nconsole.log(eat(0, 10, 10), [10, 0]);\nconsole.log(eat(10,\
    \ 0, 10), [0, 10]);\nconsole.log(eat(10, 10, 20), [20, 10]);\nconsole.log(eat(10,\
    \ 20, 10), [20, 0]);\nconsole.log(eat(10, 20, 20), [30, 0]);\nconsole.log(eat(10,\
    \ 20, 30), [30, 10]);\nconsole.log(eat(10, 30, 20), [30, 0]);\nconsole.log(eat(10,\
    \ 30, 30), [40, 0]);\nconsole.log(eat(10, 30, 40), [40, 10]);\nconsole.log(eat(10,\
    \ 40, 30), [40, 0]);\nconsole.log(eat(10, 40, 40), [50, 0]);\nconsole.log(eat(10,\
    \ 40, 50), [50, 10]);\nconsole.log(eat(10, 50, 40), [50, 0]);\nconsole.log(eat(10,\
    \ 50, 50), [60, 0]);\nconsole.log(eat(10, 50, 60), [60, 10]);\nconsole.log(eat(10,\
    \ 60, 50), [60, 0]);\nconsole.log(eat(10, 60, 60), [70, 0]);\nconsole.log(eat(10,\
    \ 60, 70), [70, 10]);\nconsole.log(eat(10, 70, 60), [70, 0]);\nconsole.log(eat(10,\
    \ 70, 70), [80, 0]);\nconsole.log(eat(10, 70, 80), [80, 10]);\nconsole.log(eat(10,\
    \ 80, 70), [80, 0]);\nconsole.log(eat(10, 80, 80), [90, 0]);\nconsole.log(eat(10,\
    \ 80, 90), [90, 10]);\n", "  const total = number + remaining;\n  const eaten\
    \ = total >= need ? need : total;\n  const left = total - eaten;\n  return [eaten,\
    \ left];\n}\n", "  const total = number + remaining;\n  const eaten = total >\
    \ need ? need : total;\n  const left = total > need ? total - need : 0;\n  return\
    \ [eaten, left];\n}\n\nconsole.log(eat(10, 10, 10), [20, 0]);\nconsole.log(eat(0,\
    \ 10, 10), [10, 0]);\nconsole.log(eat(10, 0, 10), [10, 10]);\nconsole.log(eat(10,\
    \ 10, 0), [10, 0]);\nconsole.log(eat(10, 10, 20), [20, 10]);\nconsole.log(eat(10,\
    \ 20, 10), [20, 0]);\nconsole.log(eat(10, 20, 20), [30, 0]);\nconsole.log(eat(10,\
    \ 20, 30), [30, 20]);\nconsole.log(eat(10, 30, 20), [30, 0]);\nconsole.log(eat(10,\
    \ 30, 30), [40, 0]);\nconsole.log(eat(10, 30, 40), [40, 10]);\nconsole.log(eat(10,\
    \ 40, 30), [40, 0]);\nconsole.log(eat(10, 40, 40), [50, 0]);\nconsole.log(eat(10,\
    \ 40, 50), [50, 10]);\nconsole.log(eat(10, 50, 40), [50, 0]);\nconsole.log(eat(10,\
    \ 50, 50), [60, 0]);\nconsole.log(eat(10, 50, 60), [60, 10]);\nconsole.log(eat(10,\
    \ 60, 50), [60, 0]);\nconsole.log(eat(10, 60, 60), [70, 0]);\nconsole.log(eat(10,\
    \ 60, 70), [70, 10]);\nconsole.log(eat(10, 70, 60), [70, 0]);\nconsole.log(eat(10,\
    \ 70, 70), [80, 0]);\nconsole.log(eat(10, 70, 80), [80, 10]);\nconsole.log(eat(10,\
    \ 80, 70), [80, 0]);\nconsole.log(eat(10, 80, 80), [90, 0]);\nconsole.log(eat(10,\
    \ 80, 90),", "  const eaten = number + need > remaining ? remaining : number +\
    \ need;\n  const left = remaining - eaten;\n  return [eaten, left];\n}\n", " \
    \ const total = number + remaining;\n  const eaten = total > need ? need : total;\n\
    \  const left = total > need ? total - need : 0;\n  return [eaten, left];\n}\n",
  "  let total = number + remaining;\n  if (total >= need) {\n    return [need, total\
    \ - need];\n  } else {\n    return [total, 0];\n  }\n}\n", "  const total = number\
    \ + remaining;\n  const eaten = total >= need ? need : total;\n  const left =\
    \ total - eaten;\n  return [eaten, left];\n}\n\nexport default eat;", "  const\
    \ eaten = number + need;\n  const left = eaten > remaining ? 0 : remaining - eaten;\n\
    \  return [eaten, left];\n}\n", "  let total = number + remaining;\n  if (total\
    \ >= need) {\n    return [need, total - need];\n  } else {\n    return [total,\
    \ 0];\n  }\n}\n\nconsole.log(eat(10, 10, 50), [20, 40]);\nconsole.log(eat(0, 10,\
    \ 30), [30, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10, 10,\
    \ 10), [20, 0]);\nconsole.log(eat(10, 20, 10), [20, 0]);\nconsole.log(eat(10,\
    \ 20, 0), [10, 0]);\nconsole.log(eat(10, 20, 30), [30, 20]);\nconsole.log(eat(10,\
    \ 30, 30), [40, 0]);\nconsole.log(eat(10, 40, 30), [40, 0]);\nconsole.log(eat(10,\
    \ 50, 30), [40, 0]);\nconsole.log(eat(10, 60, 30), [40, 0]);\nconsole.log(eat(10,\
    \ 70, 30), [40, 0]);\nconsole.log(eat(10, 80, 30), [40, 0]);\nconsole.log(eat(10,\
    \ 90, 30), [40, 0]);\nconsole.log(eat(10, 100, 30), [40, 0]);\nconsole.log(eat(10,\
    \ 110, 30), [40, 0]);\nconsole.log(eat(10, 120, 30), [40, 0]);\nconsole.log(eat(10,\
    \ 130, 30), [40, 0]);\nconsole.log(eat(10, 140, 30), [40, 0]);\nconsole.log(eat(10,\
    \ 150, 30), [40, 0]);\nconsole.log(eat(10, 160, 30), [40, 0]);\nconsole.log(eat(10,\
    \ 170, 30), [40, 0]);\nconsole.log(eat(10, 180, 30), [40, 0]);\nconsole.log(eat(10,\
    \ 190, 30), [40, 0]);\nconsole.log(eat(10, 200, 30), [40, 0]);\nconsole.log(eat(10,\
    \ 210, 30), [40", "  const eaten = number + Math.min(need, remaining);\n  const\
    \ left = remaining - Math.min(need, remaining);\n  return [eaten, left];\n}\n",
  "  let total = number + remaining;\n  let left = total - need;\n  if (left < 0)\
    \ {\n    return [total, 0];\n  } else {\n    return [total, left];\n  }\n}\n\n\
    console.log(eat(10, 5, 5));\nconsole.log(eat(10, 10, 0));\nconsole.log(eat(10,\
    \ 10, 10));\nconsole.log(eat(0, 10, 10));\nconsole.log(eat(10, 0, 10));\nconsole.log(eat(10,\
    \ 10, 0));\nconsole.log(eat(10, 10, 10));\nconsole.log(eat(0, 10, 10));\nconsole.log(eat(10,\
    \ 0, 10));\nconsole.log(eat(10, 10, 0));\nconsole.log(eat(10, 10, 10));\nconsole.log(eat(0,\
    \ 10, 10));\nconsole.log(eat(10, 0, 10));\nconsole.log(eat(10, 10, 0));\nconsole.log(eat(10,\
    \ 10, 10));\nconsole.log(eat(0, 10, 10));\nconsole.log(eat(10, 0, 10));\nconsole.log(eat(10,\
    \ 10, 0));\nconsole.log(eat(10, 10, 10));\nconsole.log(eat(0, 10, 10));\nconsole.log(eat(10,\
    \ 0, 10));\nconsole.log(eat(10, 10, 0));\nconsole.log(eat(10, 10, 10));\nconsole.log(eat(0,\
    \ 10, 10));\nconsole.log(eat(10, 0, 10));\nconsole.log(eat(10, 10, 0));\nconsole.log(eat(10,\
    \ 10, 10));\nconsole.log(eat(0, 10, 10));\nconsole.log(eat(10, 0, 10));\nconsole.log(eat(10,\
    \ 10, 0));\nconsole.log(eat(10, 10, 10));\nconsole.log(eat(0, 10, 10));\nconsole.log(eat(10,\
    \ 0, 10));\nconsole.log(eat(10, 10, 0));\nconsole.log(eat(10, 10, 10));\nconsole.",
  "  const total = number + remaining;\n  const eaten = total >= need ? need : total;\n\
    \  const left = total - eaten;\n  return [eaten, left];\n}\n\nconsole.log(eat(0,\
    \ 10, 10), [10, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 10), [10, 0]);\nconsole.log(eat(0, 10, 0), [0, 0]);\nconsole.log(eat(10,\
    \ 0, 10), [0, 10]);\nconsole.log(eat(10, 0, 0), [0, 0]);\nconsole.log(eat(0, 0,\
    \ 10), [0, 10]);\nconsole.log(eat(0, 0, 0), [0, 0]);\nconsole.log(eat(10, 10,\
    \ 5), [10, 0]);\nconsole.log(eat(10, 10, 20), [10, 10]);\nconsole.log(eat(10,\
    \ 20, 10), [20, 0]);\nconsole.log(eat(10, 20, 20), [20, 10]);\nconsole.log(eat(10,\
    \ 20, 30), [20, 20]);\nconsole.log(eat(10, 30, 10), [10, 0]);\nconsole.log(eat(10,\
    \ 30, 20), [20, 0]);\nconsole.log(eat(10, 30, 30), [30, 0]);\nconsole.log(eat(10,\
    \ 30, 40), [30, 10]);\nconsole.log(eat(10, 40, 10), [10, 0]);\nconsole.log(eat(10,\
    \ 40, 20), [20, 0]);\nconsole.log(eat(10, 40, 30), [30, 0]);\nconsole.log(eat(10,\
    \ 40, 40), [40, 0]);\nconsole.log(eat(10, 40, 50), [40, 10]);\nconsole.log(eat(10,\
    \ 50, 10), [10, 0]);\nconsole.log(eat(10, 50, 20), [20, 0]);\nconsole.log(eat(10,\
    \ 50, 30), [30, 0]);\nconsole.log(eat(10, 50, 40), [40, 0]);\n", "  const total\
    \ = number + remaining;\n  const eaten = total >= need ? need : total;\n  const\
    \ left = total >= need ? total - need : 0;\n  return [eaten, left];\n}\n\nconsole.log(eat(0,\
    \ 10, 10), [10, 0]);\nconsole.log(eat(0, 10, 0), [0, 0]);\nconsole.log(eat(10,\
    \ 0, 10), [10, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 10), [20, 0]);\nconsole.log(eat(10, 20, 10), [20, 10]);\nconsole.log(eat(10,\
    \ 20, 0), [10, 0]);\nconsole.log(eat(10, 20, 20), [30, 0]);\nconsole.log(eat(10,\
    \ 20, 30), [30, 20]);\nconsole.log(eat(10, 30, 20), [30, 10]);\nconsole.log(eat(10,\
    \ 30, 30), [40, 0]);\nconsole.log(eat(10, 30, 40), [40, 30]);\nconsole.log(eat(10,\
    \ 40, 30), [40, 20]);\nconsole.log(eat(10, 40, 40), [50, 0]);\nconsole.log(eat(10,\
    \ 40, 50), [50, 40]);\nconsole.log(eat(10, 50, 40), [50, 30]);\nconsole.log(eat(10,\
    \ 50, 50), [60, 0]);\nconsole.log(eat(10, 50, 60), [60, 50]);\nconsole.log(eat(10,\
    \ 60, 50), [60, 40]);\nconsole.log(eat(10, 60, 60), [70, 0]);\nconsole.log(eat(10,\
    \ 60, 70), [70, 60]);\nconsole.log(eat(10, 70, 60), [70, 50]);\nconsole.log(eat(10,\
    \ 70, 70), [80, 0]);\nconsole.log(eat(10, 70, 80), [80, 70]);\nconsole.log(eat(10,\
    \ 80, 70), [80, 60]);\nconsole.log(eat(10, 80, 80),", "  let total = number +\
    \ remaining;\n  let left = total - need;\n  if (left < 0) {\n    return [total,\
    \ 0];\n  } else {\n    return [total, left];\n  }\n}\n\nconsole.log(eat(0, 10,\
    \ 10));\nconsole.log(eat(10, 0, 10));\nconsole.log(eat(10, 10, 0));\nconsole.log(eat(10,\
    \ 10, 10));\nconsole.log(eat(10, 20, 10));\nconsole.log(eat(10, 20, 20));\nconsole.log(eat(10,\
    \ 20, 30));\nconsole.log(eat(10, 20, 40));\nconsole.log(eat(10, 20, 50));\nconsole.log(eat(10,\
    \ 20, 60));\nconsole.log(eat(10, 20, 70));\nconsole.log(eat(10, 20, 80));\nconsole.log(eat(10,\
    \ 20, 90));\nconsole.log(eat(10, 20, 100));\nconsole.log(eat(10, 20, 110));\n\
    console.log(eat(10, 20, 120));\nconsole.log(eat(10, 20, 130));\nconsole.log(eat(10,\
    \ 20, 140));\nconsole.log(eat(10, 20, 150));\nconsole.log(eat(10, 20, 160));\n\
    console.log(eat(10, 20, 170));\nconsole.log(eat(10, 20, 180));\nconsole.log(eat(10,\
    \ 20, 190));\nconsole.log(eat(10, 20, 200));\nconsole.log(eat(10, 20, 210));\n\
    console.log(eat(10, 20, 220));\nconsole.log(eat(10, 20, 230));\nconsole.log(eat(10,\
    \ 20, 240));\nconsole.log(eat(10, 20, 250));\nconsole.log(eat(10, 20, 260));\n\
    console.log(eat(10, 20, 270));\nconsole.log(eat(10, 20, 280));\nconsole.log(eat(10,\
    \ 20, 290));\nconsole.log(eat(10, 20, 300));\nconsole.log(eat(10, 20, 310));\n\
    console.", "  const total = number + remaining;\n  const eaten = total >= need\
    \ ? need : total;\n  const left = total - eaten;\n  return [eaten, left];\n}\n",
  "  const total = number + remaining;\n  return [total - (total - need), total -\
    \ need];\n}\n\nconsole.log(eat(0, 10, 10), [10, 0]);\nconsole.log(eat(10, 10,\
    \ 0), [20, 0]);\nconsole.log(eat(10, 10, 10), [20, 0]);\nconsole.log(eat(10, 5,\
    \ 10), [15, 0]);\nconsole.log(eat(10, 15, 10), [20, 5]);\nconsole.log(eat(10,\
    \ 20, 10), [20, 10]);\nconsole.log(eat(10, 25, 10), [20, 10]);\nconsole.log(eat(10,\
    \ 30, 10), [20, 10]);\nconsole.log(eat(10, 35, 10), [20, 10]);\nconsole.log(eat(10,\
    \ 40, 10), [20, 10]);\nconsole.log(eat(10, 45, 10), [20, 10]);\nconsole.log(eat(10,\
    \ 50, 10), [20, 10]);\nconsole.log(eat(10, 55, 10), [20, 10]);\nconsole.log(eat(10,\
    \ 60, 10), [20, 10]);\nconsole.log(eat(10, 65, 10), [20, 10]);\nconsole.log(eat(10,\
    \ 70, 10), [20, 10]);\nconsole.log(eat(10, 75, 10), [20, 10]);\nconsole.log(eat(10,\
    \ 80, 10), [20, 10]);\nconsole.log(eat(10, 85, 10), [20, 10]);\nconsole.log(eat(10,\
    \ 90, 10), [20, 10]);\nconsole.log(eat(10, 95, 10), [20, 10]);\nconsole.log(eat(10,\
    \ 100, 10), [20, 10]);\nconsole.log(eat(10, 105, 10), [20, 10]);\nconsole.log(eat(10,\
    \ 110, 10), [20, 10]);\nconsole.log(eat(10, 115, 10), [20, 10]);\nconsole.log(eat(10,\
    \ 120, 10), [20, 10]);\nconsole.log(eat(10, 125, 10), [20, 10", "  let total =\
    \ number + remaining;\n  let left = total - need;\n  if (left < 0) {\n    return\
    \ [total, 0];\n  } else {\n    return [total, left];\n  }\n}\n\nconsole.log(eat(10,\
    \ 5, 10));\nconsole.log(eat(0, 10, 10));\nconsole.log(eat(10, 10, 0));\nconsole.log(eat(10,\
    \ 50, 10));", "  const total = number + remaining;\n  const eaten = total >= need\
    \ ? need : total;\n  const left = total - eaten;\n  return [eaten, left];\n}\n",
  "    let eaten = number + Math.min(need, remaining);\n    return [eaten, remaining\
    \ - eaten];\n}\n\nconsole.log(eat(0, 10, 10)); // [10, 0]\nconsole.log(eat(10,\
    \ 10, 10)); // [20, 0]\nconsole.log(eat(10, 10, 0)); // [10, 0]\nconsole.log(eat(10,\
    \ 10, 5)); // [15, 0]\nconsole.log(eat(10, 10, 15)); // [20, 5]\nconsole.log(eat(10,\
    \ 10, 20)); // [20, 10]\nconsole.log(eat(10, 10, 25)); // [20, 15]\nconsole.log(eat(10,\
    \ 10, 30)); // [20, 20]\nconsole.log(eat(10, 10, 35)); // [20, 25]\nconsole.log(eat(10,\
    \ 10, 40)); // [20, 30]\nconsole.log(eat(10, 10, 45)); // [20, 35]\nconsole.log(eat(10,\
    \ 10, 50)); // [20, 40]\nconsole.log(eat(10, 10, 55)); // [20, 45]\nconsole.log(eat(10,\
    \ 10, 60)); // [20, 50]\nconsole.log(eat(10, 10, 65)); // [20, 55]\nconsole.log(eat(10,\
    \ 10, 70)); // [20, 60]\nconsole.log(eat(10, 10, 75)); // [20, 65]\nconsole.log(eat(10,\
    \ 10, 80)); // [20, 70]\nconsole.log(eat(10, 10, 85)); // [20, 75]\nconsole.log(eat(10,\
    \ 10, 90)); // [20, 80]\nconsole.log(eat(10, 10, 95)); // [20, 85]\nconsole.log(eat(10,\
    \ 10, 100)); // [20, 90]\nconsole.log(eat(10, 10, 105)); // [20, 95]\nconsole.log(eat(10,\
    \ 10, 110)); // [20, 100]\nconsole.log(eat(10, 10, 115)); // [20, 105]\nconsole.log(eat(10",
  "    if (number + remaining >= need) {\n        return [need, number + remaining\
    \ - need];\n    } else {\n        return [number + remaining, 0];\n    }\n}\n",
  "  let eaten = number;\n  let left = remaining - need;\n  if (left < 0) {\n    eaten\
    \ += remaining;\n    left = 0;\n  } else {\n    eaten += need;\n  }\n  return\
    \ [eaten, left];\n}\n", "  const total = number + remaining;\n  const eaten =\
    \ total >= need ? need : total;\n  const left = total - eaten;\n  return [eaten,\
    \ left];\n}\n", "  const total = number + remaining;\n  const eaten = total >=\
    \ need ? need : total;\n  const left = total - eaten;\n  return [eaten, left];\n\
    }\n\nconsole.log(eat(10, 10, 10), [10, 0]);\nconsole.log(eat(0, 10, 10), [10,\
    \ 0]);\nconsole.log(eat(10, 0, 10), [10, 0]);\nconsole.log(eat(10, 10, 0), [10,\
    \ 0]);\nconsole.log(eat(10, 20, 10), [20, 0]);\nconsole.log(eat(10, 20, 0), [10,\
    \ 0]);\nconsole.log(eat(10, 20, 30), [30, 0]);\nconsole.log(eat(10, 30, 20), [30,\
    \ 0]);\nconsole.log(eat(10, 30, 0), [10, 0]);\nconsole.log(eat(10, 30, 40), [40,\
    \ 0]);\nconsole.log(eat(10, 40, 30), [40, 0]);\nconsole.log(eat(10, 40, 0), [10,\
    \ 0]);\nconsole.log(eat(10, 40, 50), [50, 0]);\nconsole.log(eat(10, 50, 40), [50,\
    \ 0]);\nconsole.log(eat(10, 50, 0), [10, 0]);\nconsole.log(eat(10, 50, 60), [60,\
    \ 0]);\nconsole.log(eat(10, 60, 50), [60, 0]);\nconsole.log(eat(10, 60, 0), [10,\
    \ 0]);\nconsole.log(eat(10, 60, 70), [70, 0]);\nconsole.log(eat(10, 70, 60), [70,\
    \ 0]);\nconsole.log(eat(10, 70, 0), [10, 0]);\nconsole.log(eat(10, 70, 80), [80,\
    \ 0]);\nconsole.log(eat(10, 80, 70), [80, 0]);\nconsole.log(eat(10, 80, 0), [10,\
    \ 0]);\nconsole.log(eat(10, 80, 90), [90, 0]);\nconsole.log(eat(10, 90, 80), [90,\
    \ 0]);\n", "  const total = number + remaining;\n  const eaten = total >= need\
    \ ? need : total;\n  const left = total >= need ? total - need : 0;\n  return\
    \ [eaten, left];\n}\n\nconsole.log(eat(10, 10, 10), [10, 0]);\nconsole.log(eat(0,\
    \ 10, 10), [10, 0]);\nconsole.log(eat(10, 0, 10), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 0), [10, 0]);\nconsole.log(eat(10, 10, 1), [10, 1]);\nconsole.log(eat(10,\
    \ 10, 9), [10, 9]);\nconsole.log(eat(10, 10, 11), [20, 0]);\nconsole.log(eat(10,\
    \ 10, 20), [20, 10]);\nconsole.log(eat(10, 10, 30), [30, 20]);\nconsole.log(eat(10,\
    \ 10, 40), [40, 30]);\nconsole.log(eat(10, 10, 50), [50, 40]);\nconsole.log(eat(10,\
    \ 10, 60), [60, 50]);\nconsole.log(eat(10, 10, 70), [70, 60]);\nconsole.log(eat(10,\
    \ 10, 80), [80, 70]);\nconsole.log(eat(10, 10, 90), [90, 80]);\nconsole.log(eat(10,\
    \ 10, 100), [100, 90]);\nconsole.log(eat(10, 10, 110), [110, 100]);\nconsole.log(eat(10,\
    \ 10, 120), [120, 110]);\nconsole.log(eat(10, 10, 130), [130, 120]);\nconsole.log(eat(10,\
    \ 10, 140), [140, 130]);\nconsole.log(eat(10, 10, 150), [150, 140]);\nconsole.log(eat(10,\
    \ 10, 160), [160, 150]);\nconsole.log(eat(10, 10, 170), [170, 160]);\nconsole.log(eat(10,\
    \ 10, 180), [180, 170]);\nconsole.log(eat(10, 10, 190), [190, 180]);\nconsole.log(eat(10,\
    \ 10, 200),", "  const total = number + remaining;\n  const eaten = total > need\
    \ ? need : total;\n  const left = total > need ? total - need : 0;\n  return [eaten,\
    \ left];\n}\n", "  if (number + remaining < need) {\n    return [number + remaining,\
    \ 0];\n  } else {\n    return [need, number + remaining - need];\n  }\n}\n", " \
    \ let total = number + remaining;\n  if (total >= need) {\n    return [need, total\
    \ - need];\n  } else {\n    return [total, 0];\n  }\n}\n", "  const total = number\
    \ + remaining;\n  const left = total - need;\n  return left < 0 ? [total, 0] :\
    \ [need, left];\n}\n\nconsole.log(eat(0, 0, 0), [0, 0]);\nconsole.log(eat(0, 1,\
    \ 0), [0, 0]);\nconsole.log(eat(0, 0, 1), [0, 1]);\nconsole.log(eat(1, 0, 0),\
    \ [1, 0]);\nconsole.log(eat(1, 1, 0), [1, 0]);\nconsole.log(eat(1, 0, 1), [1,\
    \ 1]);\nconsole.log(eat(1, 1, 1), [1, 1]);\nconsole.log(eat(1, 2, 1), [2, 0]);\n\
    console.log(eat(1, 2, 2), [2, 1]);\nconsole.log(eat(1, 2, 3), [2, 2]);\nconsole.log(eat(1,\
    \ 3, 3), [3, 0]);\nconsole.log(eat(1, 3, 4), [3, 1]);\nconsole.log(eat(1, 3, 5),\
    \ [3, 2]);\nconsole.log(eat(1, 4, 5), [4, 1]);\nconsole.log(eat(1, 4, 6), [4,\
    \ 2]);\nconsole.log(eat(1, 4, 7), [4, 3]);\nconsole.log(eat(1, 5, 7), [5, 2]);\n\
    console.log(eat(1, 5, 8), [5, 3]);\nconsole.log(eat(1, 5, 9), [5, 4]);\nconsole.log(eat(1,\
    \ 6, 9), [6, 3]);\nconsole.log(eat(1, 6, 10), [6, 4]);\nconsole.log(eat(1, 6,\
    \ 11), [6, 5]);\nconsole.log(eat(1, 7, 11), [7, 4]);\nconsole.log(eat(1, 7, 12),\
    \ [7, 5]);\nconsole.log(eat(1, 7, 13), [7, 6]);\nconsole.log(eat(1, 8, 13), [8,\
    \ 5]);\nconsole.log(", "  const total = number + remaining;\n  const eaten = total\
    \ >= need ? need : total;\n  const left = total - eaten;\n  return [eaten, left];\n\
    }\n\nconsole.log(eat(10, 10, 10), [10, 0]);\nconsole.log(eat(0, 10, 10), [10,\
    \ 0]);\nconsole.log(eat(10, 0, 10), [10, 0]);\nconsole.log(eat(10, 10, 0), [10,\
    \ 0]);\nconsole.log(eat(10, 10, 1), [10, 1]);\nconsole.log(eat(10, 10, 9), [10,\
    \ 9]);\nconsole.log(eat(10, 10, 11), [10, 1]);\nconsole.log(eat(10, 11, 10), [11,\
    \ 0]);\nconsole.log(eat(10, 11, 11), [11, 0]);\nconsole.log(eat(10, 11, 12), [11,\
    \ 1]);\nconsole.log(eat(10, 12, 11), [12, 0]);\nconsole.log(eat(10, 12, 12), [12,\
    \ 0]);\nconsole.log(eat(10, 12, 13), [12, 1]);\nconsole.log(eat(10, 13, 12), [13,\
    \ 0]);\nconsole.log(eat(10, 13, 13), [13, 0]);\nconsole.log(eat(10, 13, 14), [13,\
    \ 1]);\nconsole.log(eat(10, 14, 13), [14, 0]);\nconsole.log(eat(10, 14, 14), [14,\
    \ 0]);\nconsole.log(eat(10, 14, 15), [14, 1]);\nconsole.log(eat(10, 15, 14), [15,\
    \ 0]);\nconsole.log(eat(10, 15, 15), [15, 0]);\nconsole.log(eat(10, 15, 16), [15,\
    \ 1]);\nconsole.log(eat(10, 16, 15), [16, 0]);\nconsole.log(eat(10, 16, 16), [16,\
    \ 0]);\nconsole.log(eat(10, 16, 17), [16, 1]);\nconsole.log(eat(10, 17, 16), [17,\
    \ 0]);\n", "  let total = number + remaining;\n  let left = total - need;\n  return\
    \ left < 0 ? [total, 0] : [total, left];\n}\n\nconsole.log(eat(0, 0, 0)); // [0,\
    \ 0]\nconsole.log(eat(0, 1, 0)); // [0, 0]\nconsole.log(eat(0, 0, 1)); // [1,\
    \ 0]\nconsole.log(eat(1, 0, 0)); // [1, 0]\nconsole.log(eat(1, 1, 0)); // [1,\
    \ 0]\nconsole.log(eat(1, 0, 1)); // [2, 0]\nconsole.log(eat(1, 1, 1)); // [2,\
    \ 0]\nconsole.log(eat(1, 2, 1)); // [3, 0]\nconsole.log(eat(1, 2, 2)); // [3,\
    \ 1]\nconsole.log(eat(1, 2, 3)); // [4, 1]\nconsole.log(eat(1, 2, 4)); // [5,\
    \ 2]\nconsole.log(eat(1, 2, 5)); // [6, 3]\nconsole.log(eat(1, 2, 6)); // [7,\
    \ 4]\nconsole.log(eat(1, 2, 7)); // [8, 5]\nconsole.log(eat(1, 2, 8)); // [9,\
    \ 6]\nconsole.log(eat(1, 2, 9)); // [10, 7]\nconsole.log(eat(1, 2, 10)); // [11,\
    \ 8]\nconsole.log(eat(1, 2, 11)); // [12, 9]\nconsole.log(eat(1, 2, 12)); // [13,\
    \ 10]\nconsole.log(eat(1, 2, 13)); // [14, 11]\nconsole.log(eat(1, 2, 14)); //\
    \ [15, 12]\nconsole.log(eat(1, 2, 15)); // [16, 13]\nconsole.log(eat(1, 2, 16));\
    \ // [17, 14]\nconsole.log(eat(1, 2, 17)); // [18, 15]\nconsole.log(eat(1, 2,\
    \ 18)); // [19,", "  const total = number + remaining;\n  const eaten = total\
    \ >= need ? need : total;\n  const left = total - eaten;\n  return [eaten, left];\n\
    }\n\nconsole.log(eat(0, 10, 10), [10, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\n\
    console.log(eat(10, 10, 10), [10, 0]);\nconsole.log(eat(10, 5, 10), [5, 5]);\n\
    console.log(eat(10, 20, 10), [10, 0]);\nconsole.log(eat(10, 20, 20), [20, 0]);\n\
    console.log(eat(10, 20, 30), [20, 10]);\nconsole.log(eat(10, 30, 20), [20, 0]);\n\
    console.log(eat(10, 30, 30), [30, 0]);\nconsole.log(eat(10, 30, 40), [30, 10]);\n\
    console.log(eat(10, 40, 30), [30, 0]);\nconsole.log(eat(10, 40, 40), [40, 0]);\n\
    console.log(eat(10, 40, 50), [40, 10]);\nconsole.log(eat(10, 50, 40), [40, 0]);\n\
    console.log(eat(10, 50, 50), [50, 0]);\nconsole.log(eat(10, 50, 60), [50, 10]);\n\
    console.log(eat(10, 60, 50), [50, 0]);\nconsole.log(eat(10, 60, 60), [60, 0]);\n\
    console.log(eat(10, 60, 70), [60, 10]);\nconsole.log(eat(10, 70, 60), [60, 0]);\n\
    console.log(eat(10, 70, 70), [70, 0]);\nconsole.log(eat(10, 70, 80), [70, 10]);\n\
    console.log(eat(10, 80, 70), [70, 0]);\nconsole.log(eat(10, 80, 80), [80, 0]);\n\
    console.log(eat(10, 80, 90), [80, 10]);\nconsole.log(eat(10, 90, 80), [80, 0]);\n",
  "  const total = number + remaining;\n  const eaten = total >= need ? need : total;\n\
    \  const left = total - eaten;\n  return [eaten, left];\n}\n\nexport default eat;",
  "  let eaten = number + need;\n  let left = remaining - need;\n  if (eaten > remaining)\
    \ {\n    eaten = remaining;\n    left = 0;\n  }\n  return [eaten, left];\n}\n",
  "  const total = number + need;\n  return [total, total > remaining ? 0 : remaining\
    \ - total];\n}\n\nconsole.log(eat(0, 10, 10), [10, 0]);\nconsole.log(eat(0, 10,\
    \ 5), [5, 0]);\nconsole.log(eat(10, 10, 50), [20, 30]);\nconsole.log(eat(10, 10,\
    \ 20), [20, 0]);", "  if (number + remaining >= need) {\n    return [need, number\
    \ + remaining - need];\n  } else {\n    return [number + remaining, 0];\n  }\n\
    }\n\nconsole.log(eat(10, 10, 50), [10, 40]);\nconsole.log(eat(0, 10, 30), [0,\
    \ 20]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10, 10, 10), [10,\
    \ 0]);\nconsole.log(eat(5, 10, 10), [10, 0]);\nconsole.log(eat(15, 10, 10), [15,\
    \ 0]);\nconsole.log(eat(5, 5, 10), [5, 5]);\nconsole.log(eat(5, 10, 5), [5, 0]);",
  "  let total = number + remaining;\n  let eaten = total >= need ? need : total;\n\
    \  let left = total >= need ? total - need : 0;\n  return [eaten, left];\n}\n\n\
    console.log(eat(10, 10, 10), [10, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\n\
    console.log(eat(10, 10, 1), [10, 0]);\nconsole.log(eat(0, 10, 10), [10, 0]);\n\
    console.log(eat(10, 0, 10), [10, 0]);\nconsole.log(eat(10, 10, 20), [20, 10]);\n\
    console.log(eat(10, 20, 10), [20, 0]);\nconsole.log(eat(10, 20, 30), [30, 20]);\n\
    console.log(eat(10, 30, 20), [30, 0]);\nconsole.log(eat(10, 30, 40), [40, 30]);\n\
    console.log(eat(10, 40, 30), [40, 0]);\nconsole.log(eat(10, 40, 50), [50, 40]);\n\
    console.log(eat(10, 50, 40), [50, 0]);\nconsole.log(eat(10, 50, 60), [60, 50]);\n\
    console.log(eat(10, 60, 50), [60, 0]);\nconsole.log(eat(10, 60, 70), [70, 60]);\n\
    console.log(eat(10, 70, 60), [70, 0]);\nconsole.log(eat(10, 70, 80), [80, 70]);\n\
    console.log(eat(10, 80, 70), [80, 0]);\nconsole.log(eat(10, 80, 90), [90, 80]);\n\
    console.log(eat(10, 90, 80), [90, 0]);\nconsole.log(eat(10, 90, 100), [100, 90]);\n\
    console.log(eat(10, 100, 90), [100, 0]);\nconsole.log(eat(10, 100, 110), [110,\
    \ 100]);\nconsole.log(eat(10, 110, 100), [110, 0]);\nconsole.log(eat(10, 110,\
    \ 120),", "  const total = number + remaining;\n  const eaten = total >= need\
    \ ? need : total;\n  const left = total - eaten;\n  return [eaten, left];\n}\n",
  "  const total = number + remaining;\n  const eaten = total < need ? total : need;\n\
    \  return [eaten, total - eaten];\n}\n\nconsole.log(eat(0, 10, 20), [10, 10]);\n\
    console.log(eat(10, 10, 20), [10, 10]);\nconsole.log(eat(10, 10, 30), [20, 0]);\n\
    console.log(eat(10, 10, 0), [0, 0]);\nconsole.log(eat(10, 10, 10), [10, 0]);\n\
    console.log(eat(10, 10, 5), [5, 0]);\nconsole.log(eat(10, 10, 15), [15, 0]);\n\
    console.log(eat(10, 10, 25), [25, 0]);\nconsole.log(eat(10, 10, 35), [35, 0]);\n\
    console.log(eat(10, 10, 45), [45, 0]);\nconsole.log(eat(10, 10, 55), [55, 0]);\n\
    console.log(eat(10, 10, 65), [65, 0]);\nconsole.log(eat(10, 10, 75), [75, 0]);\n\
    console.log(eat(10, 10, 85), [85, 0]);\nconsole.log(eat(10, 10, 95), [95, 0]);\n\
    console.log(eat(10, 10, 105), [105, 0]);\nconsole.log(eat(10, 10, 115), [115,\
    \ 0]);\nconsole.log(eat(10, 10, 125), [125, 0]);\nconsole.log(eat(10, 10, 135),\
    \ [135, 0]);\nconsole.log(eat(10, 10, 145), [145, 0]);\nconsole.log(eat(10, 10,\
    \ 155), [155, 0]);\nconsole.log(eat(10, 10, 165), [165, 0]);\nconsole.log(eat(10,\
    \ 10, 175), [175, 0]);\nconsole.log(eat(10, 10, 185), [185, 0]);\nconsole.log(eat(10,\
    \ 10, 195), [195, 0]);\nconsole.log(eat(10, 10, 205), [205, 0]);\nconsole.log(eat(10",
  "  const total = number + remaining;\n  const eaten = total >= need ? need : total;\n\
    \  const left = total - eaten;\n  return [eaten, left];\n}\n\nconsole.log(eat(0,\
    \ 10, 10), [10, 0]);\nconsole.log(eat(0, 10, 5), [5, 0]);\nconsole.log(eat(5,\
    \ 10, 5), [10, 0]);\nconsole.log(eat(5, 10, 0), [5, 0]);\nconsole.log(eat(5, 10,\
    \ 20), [10, 10]);\nconsole.log(eat(10, 10, 20), [10, 10]);\nconsole.log(eat(10,\
    \ 10, 0), [10, 0]);\nconsole.log(eat(10, 10, 10), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 5), [10, 0]);\nconsole.log(eat(10, 10, 15), [10, 5]);\nconsole.log(eat(10,\
    \ 5, 15), [5, 10]);\nconsole.log(eat(10, 5, 5), [5, 0]);\nconsole.log(eat(10,\
    \ 5, 0), [5, 0]);\nconsole.log(eat(10, 5, 10), [5, 0]);\nconsole.log(eat(10, 0,\
    \ 10), [0, 10]);\nconsole.log(eat(10, 0, 0), [0, 0]);\nconsole.log(eat(10, 0,\
    \ 5), [0, 5]);\nconsole.log(eat(0, 0, 10), [0, 10]);\nconsole.log(eat(0, 0, 0),\
    \ [0, 0]);\nconsole.log(eat(0, 0, 5), [0, 5]);\nconsole.log(eat(0, 5, 10), [5,\
    \ 5]);\nconsole.log(eat(0, 5, 0), [0, 0]);\nconsole.log(eat(0, 5, 5), [5, 0]);\n\
    console.log(eat(5, 0, 10), [0, 10]);\nconsole.log(eat(5, 0, 0), [0, 0]);\nconsole.log(eat(5,\
    \ 0, 5), [0, 5]);", "  let total = number + remaining;\n  let left = total - need;\n\
    \  if (left >= 0) {\n    return [need, left];\n  } else {\n    return [total,\
    \ 0];\n  }\n}\n\nconsole.log(eat(10, 5, 15));\nconsole.log(eat(0, 10, 15));\n\
    console.log(eat(10, 0, 15));\nconsole.log(eat(10, 10, 15));\nconsole.log(eat(10,\
    \ 15, 15));\nconsole.log(eat(10, 20, 15));\nconsole.log(eat(10, 25, 15));\nconsole.log(eat(10,\
    \ 30, 15));\nconsole.log(eat(10, 35, 15));\nconsole.log(eat(10, 40, 15));\nconsole.log(eat(10,\
    \ 45, 15));\nconsole.log(eat(10, 50, 15));\nconsole.log(eat(10, 55, 15));\nconsole.log(eat(10,\
    \ 60, 15));\nconsole.log(eat(10, 65, 15));\nconsole.log(eat(10, 70, 15));\nconsole.log(eat(10,\
    \ 75, 15));\nconsole.log(eat(10, 80, 15));\nconsole.log(eat(10, 85, 15));\nconsole.log(eat(10,\
    \ 90, 15));\nconsole.log(eat(10, 95, 15));\nconsole.log(eat(10, 100, 15));\nconsole.log(eat(10,\
    \ 105, 15));\nconsole.log(eat(10, 110, 15));\nconsole.log(eat(10, 115, 15));\n\
    console.log(eat(10, 120, 15));\nconsole.log(eat(10, 125, 15));\nconsole.log(eat(10,\
    \ 130, 15));\nconsole.log(eat(10, 135, 15));\nconsole.log(eat(10, 140, 15));\n\
    console.log(eat(10, 145, 15));\nconsole.log(eat(10, 150, 15));\nconsole.log(eat(10,\
    \ 155, 15));\nconsole.log(eat(10, 160, 15));\nconsole.log(eat(10, 165, 15));\n\
    console.", "  const eaten = Math.min(number + remaining, need);\n  return [eaten,\
    \ remaining - (eaten - number)];\n}\n", "  let total = number + remaining;\n \
    \ if (total >= need) {\n    return [need, total - need];\n  } else {\n    return\
    \ [total, 0];\n  }\n}\n\nconsole.log(eat(10, 10, 10));\nconsole.log(eat(10, 10,\
    \ 0));\nconsole.log(eat(10, 0, 10));\nconsole.log(eat(10, 0, 0));\nconsole.log(eat(0,\
    \ 10, 10));\nconsole.log(eat(0, 10, 0));\nconsole.log(eat(0, 0, 10));\nconsole.log(eat(0,\
    \ 0, 0));", "  const total = number + remaining;\n  const eaten = total >= need\
    \ ? need : total;\n  const left = total - eaten;\n  return [eaten, left];\n}\n",
  "  const total = number + remaining;\n  const eaten = total >= need ? need : total;\n\
    \  const left = total - eaten;\n  return [eaten, left];\n}\n\nconsole.log(eat(10,\
    \ 10, 10), [10, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 5), [10, 0]);\nconsole.log(eat(10, 5, 10), [5, 5]);\nconsole.log(eat(10,\
    \ 5, 0), [5, 0]);\nconsole.log(eat(10, 5, 5), [5, 0]);\nconsole.log(eat(10, 0,\
    \ 10), [0, 10]);\nconsole.log(eat(10, 0, 0), [0, 0]);\nconsole.log(eat(10, 0,\
    \ 5), [0, 5]);\nconsole.log(eat(0, 10, 10), [10, 0]);\nconsole.log(eat(0, 10,\
    \ 0), [0, 0]);\nconsole.log(eat(0, 10, 5), [5, 0]);\nconsole.log(eat(0, 0, 10),\
    \ [0, 10]);\nconsole.log(eat(0, 0, 0), [0, 0]);\nconsole.log(eat(0, 0, 5), [0,\
    \ 5]);\nconsole.log(eat(0, 5, 10), [5, 5]);\nconsole.log(eat(0, 5, 0), [0, 0]);\n\
    console.log(eat(0, 5, 5), [5, 0]);", "    const total = number + remaining;\n\
    \    const eaten = total >= need ? need : total;\n    const left = total - eaten;\n\
    \    return [eaten, left];\n}\n", "  const eaten = number + Math.min(need, remaining);\n\
    \  const left = remaining - Math.min(need, remaining);\n  return [eaten, left];\n\
    }\n", "  const total = number + remaining;\n  const eaten = total >= need ? need\
    \ : total;\n  const left = total - eaten;\n  return [eaten, left];\n}\n", "  const\
    \ total = number + remaining;\n  const eaten = total >= need ? need : total;\n\
    \  const left = total - eaten;\n  return [eaten, left];\n}\n\nconsole.log(eat(0,\
    \ 10, 10), [10, 0]);\nconsole.log(eat(0, 10, 0), [0, 0]);\nconsole.log(eat(10,\
    \ 0, 10), [10, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 10), [10, 10]);\nconsole.log(eat(10, 5, 10), [5, 5]);\nconsole.log(eat(10,\
    \ 15, 10), [10, 0]);\nconsole.log(eat(10, 15, 5), [5, 0]);\nconsole.log(eat(10,\
    \ 5, 5), [5, 0]);\nconsole.log(eat(10, 5, 15), [5, 10]);\nconsole.log(eat(10,\
    \ 20, 15), [15, 0]);\nconsole.log(eat(10, 20, 25), [15, 10]);\nconsole.log(eat(10,\
    \ 20, 30), [20, 10]);\nconsole.log(eat(10, 20, 35), [20, 15]);\nconsole.log(eat(10,\
    \ 20, 40), [20, 20]);\nconsole.log(eat(10, 20, 45), [20, 25]);\nconsole.log(eat(10,\
    \ 20, 50), [20, 30]);\nconsole.log(eat(10, 20, 55), [20, 35]);\nconsole.log(eat(10,\
    \ 20, 60), [20, 40]);\nconsole.log(eat(10, 20, 65), [20, 45]);\nconsole.log(eat(10,\
    \ 20, 70), [20, 50]);\nconsole.log(eat(10, 20, 75), [20, 55]);\nconsole.log(eat(10,\
    \ 20, 80), [20, 60]);\nconsole.log(eat(10, 20, 85), [20, 65]);\nconsole.log(eat(10,\
    \ 20, 90), [20, 70]);\nconsole.log(eat(10, 20, 95), [20, 75]);\n", "  let total\
    \ = number + remaining;\n  let left = total - need;\n  return left < 0 ? [total,\
    \ 0] : [need, left];\n}\n\nconsole.log(eat(10, 5, 15), [15, 0]);\nconsole.log(eat(0,\
    \ 10, 15), [10, 5]);\nconsole.log(eat(10, 10, 15), [20, 5]);\nconsole.log(eat(10,\
    \ 15, 15), [25, 0]);\nconsole.log(eat(10, 20, 15), [25, 0]);\nconsole.log(eat(10,\
    \ 25, 15), [25, 0]);\nconsole.log(eat(10, 30, 15), [25, 0]);\nconsole.log(eat(10,\
    \ 35, 15), [25, 0]);\nconsole.log(eat(10, 40, 15), [25, 0]);\nconsole.log(eat(10,\
    \ 45, 15), [25, 0]);\nconsole.log(eat(10, 50, 15), [25, 0]);\nconsole.log(eat(10,\
    \ 55, 15), [25, 0]);\nconsole.log(eat(10, 60, 15), [25, 0]);\nconsole.log(eat(10,\
    \ 65, 15), [25, 0]);\nconsole.log(eat(10, 70, 15), [25, 0]);\nconsole.log(eat(10,\
    \ 75, 15), [25, 0]);\nconsole.log(eat(10, 80, 15), [25, 0]);\nconsole.log(eat(10,\
    \ 85, 15), [25, 0]);\nconsole.log(eat(10, 90, 15), [25, 0]);\nconsole.log(eat(10,\
    \ 95, 15), [25, 0]);\nconsole.log(eat(10, 100, 15), [25, 0]);\nconsole.log(eat(10,\
    \ 105, 15), [25, 0]);\nconsole.log(eat(10, 110, 15), [25, 0]);\nconsole.log(eat(10,\
    \ 115, 15), [25, 0]);\nconsole.log(eat(10, 120, 15), [25, 0]);\nconsole.log(eat(10,\
    \ 125, 15), [25, 0]);\nconsole.log(", "  const total = number + remaining;\n \
    \ const eaten = total >= need ? need : total;\n  const left = total >= need ?\
    \ total - need : 0;\n  return [eaten, left];\n}\n", "  const total = number +\
    \ remaining;\n  return [total >= need ? need : total, total >= need ? total -\
    \ need : 0];\n}\n\nconsole.log(eat(0, 10, 10), [10, 0]);\nconsole.log(eat(0, 10,\
    \ 5), [5, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10, 10,\
    \ 10), [20, 0]);\nconsole.log(eat(10, 10, 5), [15, 0]);\nconsole.log(eat(10, 5,\
    \ 10), [15, 5]);\nconsole.log(eat(10, 5, 5), [15, 0]);\nconsole.log(eat(10, 5,\
    \ 0), [10, 0]);\nconsole.log(eat(10, 0, 10), [10, 10]);\nconsole.log(eat(10, 0,\
    \ 5), [10, 5]);\nconsole.log(eat(10, 0, 0), [10, 0]);\nconsole.log(eat(0, 5, 10),\
    \ [5, 5]);\nconsole.log(eat(0, 5, 5), [5, 0]);\nconsole.log(eat(0, 5, 0), [0,\
    \ 0]);\nconsole.log(eat(0, 0, 10), [0, 10]);\nconsole.log(eat(0, 0, 5), [0, 5]);\n\
    console.log(eat(0, 0, 0), [0, 0]);", "  const total = number + remaining;\n  const\
    \ eaten = total >= need ? need : total;\n  const left = total - eaten;\n  return\
    \ [eaten, left];\n}\n\nconsole.log(eat(0, 10, 10), [10, 0]);\nconsole.log(eat(0,\
    \ 10, 5), [5, 0]);\nconsole.log(eat(10, 10, 0), [10, 0]);\nconsole.log(eat(10,\
    \ 10, 10), [20, 0]);\nconsole.log(eat(10, 10, 5), [15, 0]);\nconsole.log(eat(10,\
    \ 5, 10), [15, 5]);\nconsole.log(eat(10, 5, 5), [15, 0]);\nconsole.log(eat(10,\
    \ 5, 0), [10, 0]);\nconsole.log(eat(10, 0, 10), [10, 10]);\nconsole.log(eat(10,\
    \ 0, 5), [10, 5]);\nconsole.log(eat(10, 0, 0), [10, 0]);\nconsole.log(eat(0, 0,\
    \ 10), [0, 10]);\nconsole.log(eat(0, 0, 5), [0, 5]);\nconsole.log(eat(0, 0, 0),\
    \ [0, 0]);", "  const eaten = number + Math.min(need, remaining);\n  const left\
    \ = remaining - Math.min(need, remaining);\n  return [eaten, left];\n}\n", " \
    \ const total = number + remaining;\n  const eaten = total >= need ? need : total;\n\
    \  const left = total - eaten;\n  return [eaten, left];\n}\n", "  const total\
    \ = number + remaining;\n  const eaten = total >= need ? need : total;\n  const\
    \ left = total - eaten;\n  return [eaten, left];\n}\n\nexport default eat;", " \
    \ const eaten = number + need;\n  const left = eaten > remaining ? 0 : remaining\
    \ - eaten;\n  return [eaten, left];\n}\n", "    let eaten = number + need;\n \
    \   let left = remaining - need;\n    if (left < 0) {\n        eaten = eaten +\
    \ left;\n        left = 0;\n    }\n    return [eaten, left];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

language: ts
name: HumanEval_39_prime_fib
results:
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    let prime = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n\
    \        if (isPrime(fib)) {\n            prime = fib;\n            i++;\n   \
    \     }\n    }\n    return prime;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkfdulsyl.ts(7,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpkfdulsyl.ts(8,13): error TS2552: Cannot find name ''isPrime''.
    Did you mean ''prime''?

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_nth(n);\n    let i = 0;\n    while (fib != prime) {\n \
    \       fib = fibonacci(n + i);\n        prime = prime_nth(n + i);\n        i++;\n\
    \    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp02luxw2t.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp02luxw2t.ts(4,17): error TS2304: Cannot find name ''prime_nth''.

    ../../../../../tmp/tmp02luxw2t.ts(7,15): error TS2304: Cannot find name ''fibonacci''.

    ../../../../../tmp/tmp02luxw2t.ts(8,17): error TS2304: Cannot find name ''prime_nth''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number = 0;\n\
    \    let i: number = 0;\n    let j: number = 1;\n    let count: number = 0;\n\
    \    while (count < n) {\n        let temp: number = i + j;\n        i = j;\n\
    \        j = temp;\n        if (isPrime(j)) {\n            count++;\n        \
    \    fib = j;\n        }\n    }\n    return fib;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpc7zyguqb.ts(11,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let j =\
    \ 1;\n    let k = 1;\n    let count = 1;\n    while (count < n) {\n        k =\
    \ i + j;\n        i = j;\n        j = k;\n        if (isPrime(k)) {\n        \
    \    count++;\n        }\n    }\n    return k;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpt79wm6p0.ts(11,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a: number = 0;\n  \
    \  let b: number = 1;\n    let c: number = 0;\n    let i: number = 0;\n    while\
    \ (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpny7mxp6m.ts(11,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_arr: number[] =\
    \ [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_arr.push(fib_arr[i\
    \ - 1] + fib_arr[i - 2]);\n        i++;\n    }\n    let prime_arr: number[] =\
    \ prime_numbers(fib_arr[n - 1]);\n    return prime_arr[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_0x0zs7t.ts(9,31): error TS2304: Cannot find name
    ''prime_numbers''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1,\
    \ 1];\n    let i: number = 2;\n    let result: number = 0;\n    while (i < n)\
    \ {\n        fib.push(fib[i - 1] + fib[i - 2]);\n        i++;\n    }\n    for\
    \ (let j: number = 0; j < fib.length; j++) {\n        if (isPrime(fib[j])) {\n\
    \            result = fib[j];\n        }\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7yhrxxrc.ts(11,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a: number = 0;\n  \
    \  let b: number = 1;\n    let c: number = 0;\n    let i: number = 0;\n    while\
    \ (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpny7mxp6m.ts(11,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdws36aqw.ts(6,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpdws36aqw.ts(7,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!isPrime(fib)) {\n        fib = fibonacci(++n);\n    }\n    return\
    \ fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgk5hs3ca.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpgk5hs3ca.ts(4,13): error TS2304: Cannot find name ''isPrime''.

    ../../../../../tmp/tmpgk5hs3ca.ts(5,15): error TS2304: Cannot find name ''fibonacci''.

    '
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = is_prime(fib);\n    if (prime) {\n        return fib;\n    }\
    \ else {\n        return prime_fib(n + 1);\n    }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2wacjmdy.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp2wacjmdy.ts(4,17): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_prev: number = 0;\n    let fib_num_prev_prev: number = 0;\n \
    \   let i: number = 0;\n    while (i < n) {\n        if (i === 0) {\n        \
    \    fib_num = 1;\n        } else if (i === 1) {\n            fib_num = 2;\n \
    \       } else {\n            fib_num = fib_num_prev + fib_num_prev_prev;\n  \
    \      }\n        if (is_prime(fib_num)) {\n            i++;\n        }\n    \
    \    fib_num_prev_prev = fib_num_prev;\n        fib_num_prev = fib_num;\n    }\n\
    \    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplw9elj65.ts(15,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n\
    \    if (is_prime(fib_num)) {\n        return fib_num;\n    } else {\n       \
    \ return prime_fib(n + 1);\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzte8z4ry.ts(3,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpzte8z4ry.ts(4,9): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1660014898
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(n);\n    let i = 0;\n    let j = 0;\n    let result\
    \ = 0;\n    while (i < fib.length && j < prime.length) {\n        if (fib[i] ===\
    \ prime[j]) {\n            result = fib[i];\n            i++;\n            j++;\n\
    \        } else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n\
    \            j++;\n        }\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd9viy_v3.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpd9viy_v3.ts(4,17): error TS2304: Cannot find name ''prime_numbers''.

    '
  timestamp: 1660014898
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    let fib_number: number = 0;\n    while\
    \ (i <= n) {\n        fib_number = fib_numbers[i - 1] + fib_numbers[i - 2];\n\
    \        if (is_prime(fib_number)) {\n            fib_numbers.push(fib_number);\n\
    \            i++;\n        }\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkvn1utaf.ts(8,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1,\
    \ 1];\n    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1]\
    \ + fib[i - 2]);\n        i++;\n    }\n    let j: number = 0;\n    while (j <\
    \ fib.length) {\n        if (isPrime(fib[j])) {\n            return fib[j];\n\
    \        }\n        j++;\n    }\n    return 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfv3umvs1.ts(11,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let i = 0;\n    while (!isPrime(fib)) {\n        fib = fibonacci(n + ++i);\n\
    \    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4ld8g7wo.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp4ld8g7wo.ts(5,13): error TS2304: Cannot find name ''isPrime''.

    ../../../../../tmp/tmp4ld8g7wo.ts(6,15): error TS2304: Cannot find name ''fibonacci''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_nums: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    let prime_fib_nums: number[] = [];\n\
    \    while (prime_fib_nums.length < n) {\n        fib_nums.push(fib_nums[i - 1]\
    \ + fib_nums[i - 2]);\n        if (is_prime(fib_nums[i])) {\n            prime_fib_nums.push(fib_nums[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0b2nvvlq.ts(8,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_arr: number[] =\
    \ [1, 1];\n    let i: number = 2;\n    let fib_num: number = 0;\n    while (i\
    \ <= n) {\n        fib_num = fib_arr[i - 1] + fib_arr[i - 2];\n        fib_arr.push(fib_num);\n\
    \        i++;\n    }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpz8ootfz7.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz8ootfz7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = [1, 1];\n   \
    \ let i = 2;\n    while (fib.length < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_jfeowsh.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_jfeowsh.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!isPrime(fib)) {\n        fib = fibonacci(++n);\n    }\n    return\
    \ fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgk5hs3ca.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpgk5hs3ca.ts(4,13): error TS2304: Cannot find name ''isPrime''.

    ../../../../../tmp/tmpgk5hs3ca.ts(5,15): error TS2304: Cannot find name ''fibonacci''.

    '
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1,\
    \ 1];\n    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1]\
    \ + fib[i - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmptxm4bcqp.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptxm4bcqp.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a = 0;\n    let b =\
    \ 1;\n    let c = 0;\n    let i = 0;\n    while (i < n) {\n        c = a + b;\n\
    \        a = b;\n        b = c;\n        if (isPrime(c)) {\n            i++;\n\
    \        }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphl64qpns.ts(11,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014898
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b =\
    \ 1;\n    let c = 2;\n    let i = 3;\n    while (i < n) {\n        a = b;\n  \
    \      b = c;\n        c = a + b;\n        if (is_prime(c)) {\n            i++;\n\
    \        }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg2ermw8w.ts(11,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fibonacci_numbers:\
    \ number[] = [1, 2];\n    let i: number = 0;\n    let prime_fibonacci_numbers:\
    \ number[] = [];\n    while (prime_fibonacci_numbers.length < n) {\n        if\
    \ (is_prime(fibonacci_numbers[i])) {\n            prime_fibonacci_numbers.push(fibonacci_numbers[i]);\n\
    \        }\n        fibonacci_numbers.push(fibonacci_numbers[i] + fibonacci_numbers[i\
    \ + 1]);\n        i++;\n    }\n    return prime_fibonacci_numbers[n - 1];\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpik03dika.ts(7,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014900
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n\
    \    while (!is_prime(fib_num)) {\n        fib_num = fib(++n);\n    }\n    return\
    \ fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpidcpjxph.ts(3,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpidcpjxph.ts(4,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpidcpjxph.ts(5,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    let prime_fib_numbers:\
    \ number[] = [];\n    for (let i = 0; i < fib_numbers.length; i++) {\n       \
    \ if (is_prime(fib_numbers[i])) {\n            prime_fib_numbers.push(fib_numbers[i]);\n\
    \        }\n    }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps49kc4qh.ts(11,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i: number = 0;\n  \
    \  let fib: number = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n  \
    \      if (is_prime(fib)) {\n            i++;\n        }\n    }\n    return fib;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3d6ych61.ts(6,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp3d6ych61.ts(7,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdws36aqw.ts(6,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpdws36aqw.ts(7,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_num: number = fib(n);\n\
    \    while (!is_prime(fib_num)) {\n        fib_num = fib(++n);\n    }\n    return\
    \ fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp59a0gtr6.ts(3,27): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmp59a0gtr6.ts(4,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmp59a0gtr6.ts(5,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_prev: number = 0;\n    let fib_num_prev_prev: number = 0;\n \
    \   let i: number = 0;\n    let prime_count: number = 0;\n    while (prime_count\
    \ < n) {\n        if (i == 0) {\n            fib_num = 1;\n            fib_num_prev\
    \ = 0;\n            fib_num_prev_prev = 0;\n        } else if (i == 1) {\n   \
    \         fib_num = 1;\n            fib_num_prev = 1;\n            fib_num_prev_prev\
    \ = 0;\n        } else {\n            fib_num = fib_num_prev + fib_num_prev_prev;\n\
    \            fib_num_prev_prev = fib_num_prev;\n            fib_num_prev = fib_num;\n\
    \        }\n        if (is_prime(fib_num)) {\n            prime_count++;\n   \
    \     }\n        i++;\n    }\n    return fib_num;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqldgzr0a.ts(22,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let fib_prime_numbers: number[] = [1, 1];\n    let i: number\
    \ = 2;\n    while (fib_prime_numbers.length < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        if (is_prime(fib_numbers[i])) {\n     \
    \       fib_prime_numbers.push(fib_numbers[i]);\n        }\n        i++;\n   \
    \ }\n    return fib_prime_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpadc1j1rl.ts(8,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n\
    \    while (!is_prime(fib_num)) {\n        fib_num = fib(++n);\n    }\n    return\
    \ fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpidcpjxph.ts(3,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpidcpjxph.ts(4,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpidcpjxph.ts(5,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(fib);\n    return prime[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpt9tbdbyv.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpt9tbdbyv.ts(4,17): error TS2304: Cannot find name ''prime_numbers''.

    '
  timestamp: 1660014901
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    let current_fib: number = 0;\n    while\
    \ (i < n) {\n        current_fib = fib_numbers[i - 1] + fib_numbers[i - 2];\n\
    \        if (is_prime(current_fib)) {\n            fib_numbers.push(current_fib);\n\
    \            i++;\n        }\n    }\n    return fib_numbers[fib_numbers.length\
    \ - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp67e9pygr.ts(8,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014901
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = [1, 1];\n   \
    \ let i = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n\
    \        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmphy99tv9z.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphy99tv9z.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_nums: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (fib_nums.length < n) {\n     \
    \   fib_nums.push(fib_nums[i - 1] + fib_nums[i - 2]);\n        i++;\n    }\n \
    \   return fib_nums[n - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmphpm073gt.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphpm073gt.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 1;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i]\
    \ + fib_numbers[i - 1]);\n        i++;\n    }\n    return fib_numbers.filter(isPrime)[n\
    \ - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0lnare74.ts(9,31): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib\
    \ = 1;\n    let prime_fib = 0;\n    while (i <= n) {\n        if (is_prime(fib))\
    \ {\n            prime_fib = fib;\n            i++;\n        }\n        fib++;\n\
    \    }\n    return prime_fib;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl893r2lf.ts(7,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number = 0;\n\
    \    let i: number = 0;\n    let j: number = 1;\n    let k: number = 0;\n    let\
    \ count: number = 0;\n    while (count < n) {\n        k = i + j;\n        i =\
    \ j;\n        j = k;\n        if (isPrime(k)) {\n            fib = k;\n      \
    \      count++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyk18kmwv.ts(12,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    let prime = 0;\n    while (i < n) {\n        fib = fibonacci(prime);\n\
    \        if (isPrime(fib)) {\n            i++;\n        }\n        prime++;\n\
    \    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpngz7vhlr.ts(7,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpngz7vhlr.ts(8,13): error TS2552: Cannot find name ''isPrime''.
    Did you mean ''prime''?

    '
  timestamp: 1660014901
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i: number = 0;\n  \
    \  let fib: number = 0;\n    let fib_prev: number = 0;\n    let fib_prev2: number\
    \ = 0;\n    let prime: boolean = false;\n    while (i < n) {\n        if (i ==\
    \ 0) {\n            fib = 1;\n            fib_prev = 0;\n            fib_prev2\
    \ = 0;\n        } else if (i == 1) {\n            fib = 1;\n            fib_prev\
    \ = 1;\n            fib_prev2 = 0;\n        } else {\n            fib = fib_prev\
    \ + fib_prev2;\n            fib_prev2 = fib_prev;\n            fib_prev = fib;\n\
    \        }\n        prime = true;\n        for (let j: number = 2; j < fib; j++)\
    \ {\n            if (fib % j == 0) {\n                prime = false;\n       \
    \         break;\n            }\n        }\n        if (prime) {\n           \
    \ i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgpo7ctui.js:40:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgpo7ctui.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014902
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number = 0;\n\
    \    let i: number = 0;\n    let j: number = 1;\n    let k: number = 0;\n    let\
    \ count: number = 0;\n    while (count < n) {\n        k = i + j;\n        i =\
    \ j;\n        j = k;\n        if (isPrime(k)) {\n            fib = k;\n      \
    \      count++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyk18kmwv.ts(12,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n  let i = 0;\n  let fib = 0;\n\
    \  while (i < n) {\n    fib = fibonacci(i);\n    if (isPrime(fib)) {\n      i++;\n\
    \    }\n  }\n  return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpt9dzf53q.ts(6,11): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpt9dzf53q.ts(7,9): error TS2304: Cannot find name ''isPrime''.

    '
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n\
    \    let count: number = 1;\n    let i: number = 1;\n    while (count < n) {\n\
    \        i++;\n        fib = fibonacci(i);\n        if (isPrime(fib)) {\n    \
    \        count++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp31cknjxb.ts(8,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp31cknjxb.ts(9,13): error TS2304: Cannot find name ''isPrime''.

    '
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib\
    \ = 1;\n    let prime_fib = 0;\n    while (i <= n) {\n        if (is_prime(fib))\
    \ {\n            prime_fib = fib;\n            i++;\n        }\n        fib++;\n\
    \    }\n    return prime_fib;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl893r2lf.ts(7,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014901
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp57235hb_.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57235hb_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1,\
    \ 1];\n    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1]\
    \ + fib[i - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmptxm4bcqp.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptxm4bcqp.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n\
    \    let i = 1;\n    while (!is_prime(fib_num)) {\n        fib_num = fib(n + i);\n\
    \        i++;\n    }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8iwin79o.ts(3,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmp8iwin79o.ts(5,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmp8iwin79o.ts(6,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    let prime_fib = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n\
    \        if (is_prime(fib)) {\n            prime_fib = fib;\n            i++;\n\
    \        }\n    }\n    return prime_fib;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9dpzdam6.ts(7,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp9dpzdam6.ts(8,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let j =\
    \ 1;\n    let k = 0;\n    let count = 0;\n    while (count < n) {\n        k =\
    \ i + j;\n        i = j;\n        j = k;\n        if (isPrime(k)) {\n        \
    \    count++;\n        }\n    }\n    return k;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyjzad2x9.ts(11,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    let fib_number: number = 0;\n    while\
    \ (i < n) {\n        fib_number = fib_numbers[i - 1] + fib_numbers[i - 2];\n \
    \       if (is_prime(fib_number)) {\n            fib_numbers.push(fib_number);\n\
    \            i++;\n        }\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpo4ltdjh4.ts(8,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014901
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp57235hb_.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57235hb_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a: number = 1;\n  \
    \  let b: number = 1;\n    let c: number = 0;\n    let i: number = 0;\n    while\
    \ (i < n) {\n        c = a + b;\n        if (isPrime(c)) {\n            i++;\n\
    \        }\n        a = b;\n        b = c;\n    }\n    return c;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2t87x2uc.ts(9,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014903
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1,\
    \ 1];\n    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1]\
    \ + fib[i - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmptxm4bcqp.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptxm4bcqp.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    let prime = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n\
    \        if (isPrime(fib)) {\n            prime = fib;\n            i++;\n   \
    \     }\n    }\n    return prime;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkfdulsyl.ts(7,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpkfdulsyl.ts(8,13): error TS2552: Cannot find name ''isPrime''.
    Did you mean ''prime''?

    '
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n\
    \    let fib_prev: number = 1;\n    let i: number = 2;\n    while (i < n) {\n\
    \        let temp: number = fib;\n        fib += fib_prev;\n        fib_prev =\
    \ temp;\n        i++;\n    }\n    return fib;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpftobjyxt.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpftobjyxt.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014903
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    let prime_fib_number: number = 0;\n \
    \   while (i <= n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i\
    \ - 2]);\n        if (is_prime(fib_numbers[i])) {\n            prime_fib_number\
    \ = fib_numbers[i];\n            i++;\n        }\n    }\n    return prime_fib_number;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4ljl0mq4.ts(8,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014903
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    let result\
    \ = 0;\n    while (i < n && j < n) {\n        if (fib[i] < prime[j]) {\n     \
    \       i++;\n        } else if (fib[i] > prime[j]) {\n            j++;\n    \
    \    } else {\n            result = fib[i];\n            i++;\n            j++;\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyo8wbnbj.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpyo8wbnbj.ts(4,17): error TS2304: Cannot find name ''prime_number''.

    '
  timestamp: 1660014903
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    let fib_number: number = 0;\n    while\
    \ (i <= n) {\n        fib_number = fib_numbers[i - 1] + fib_numbers[i - 2];\n\
    \        if (is_prime(fib_number)) {\n            fib_numbers.push(fib_number);\n\
    \            i++;\n        }\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjsnfcz6w.ts(8,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014903
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let prime_fib_numbers: number[] = [2];\n    let i: number = 2;\n\
    \    while (prime_fib_numbers.length < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        if (is_prime(fib_numbers[i])) {\n     \
    \       prime_fib_numbers.push(fib_numbers[i]);\n        }\n        i++;\n   \
    \ }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0zrk5ap8.ts(8,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014903
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n\
    \    while (!is_prime(fib_num)) {\n        fib_num = fib(++n);\n    }\n    return\
    \ fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpidcpjxph.ts(3,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpidcpjxph.ts(4,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpidcpjxph.ts(5,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1660014901
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1,\
    \ 2];\n    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1]\
    \ + fib[i - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpmmgtl04j.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmmgtl04j.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014904
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a = 0, b = 1, c = 0;\n\
    \    let i = 0;\n    while (i < n) {\n        c = a + b;\n        a = b;\n   \
    \     b = c;\n        if (isPrime(c)) {\n            i++;\n        }\n    }\n\
    \    return c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgoihutqe.ts(9,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014903
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_prev: number = 0;\n    let fib_num_prev_prev: number = 0;\n \
    \   let prime_fib_num: number = 0;\n    let prime_fib_num_prev: number = 0;\n\
    \    let prime_fib_num_prev_prev: number = 0;\n    let prime_fib_num_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev: number = 0;\n    let\
    \ prime_fib_num_prev_prev_prev_prev_prev: number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev: number\
    \ = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev: number\
    \ = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev: number\
    \ = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpor7ziyzb.ts(41,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660014904
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number = 0;\n\
    \    let i: number = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n  \
    \      if (is_prime(fib)) {\n            i++;\n        }\n    }\n    return fib;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpc3a0eqz8.ts(6,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpc3a0eqz8.ts(7,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1660014903
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a: number = 0;\n  \
    \  let b: number = 1;\n    let c: number = 0;\n    let i: number = 0;\n    while\
    \ (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpny7mxp6m.ts(11,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b =\
    \ 1;\n    let c = 0;\n    let i = 0;\n    while (i < n) {\n        if (isPrime(b))\
    \ {\n            i++;\n        }\n        c = a + b;\n        a = b;\n       \
    \ b = c;\n    }\n    return b;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6c7zu03f.ts(8,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014903
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number = 0;\n\
    \    let i: number = 0;\n    let fib_prime: number = 0;\n    let prime_count:\
    \ number = 0;\n    while (prime_count < n) {\n        fib = fibonacci(i);\n  \
    \      if (is_prime(fib)) {\n            fib_prime = fib;\n            prime_count++;\n\
    \        }\n        i++;\n    }\n    return fib_prime;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy4m3sj8d.ts(8,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpy4m3sj8d.ts(9,13): error TS2552: Cannot find name ''is_prime''.
    Did you mean ''fib_prime''?

    '
  timestamp: 1660014903
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1,\
    \ 2];\n    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1]\
    \ + fib[i - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpmmgtl04j.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmmgtl04j.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014904
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 1;\n    while (fib_numbers.length < n) {\n  \
    \      fib_numbers.push(fib_numbers[i] + fib_numbers[i - 1]);\n        i++;\n\
    \    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpqbbga26v.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqbbga26v.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014904
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    let prime_fib_numbers:\
    \ number[] = [];\n    for (let j = 0; j < fib_numbers.length; j++) {\n       \
    \ if (is_prime(fib_numbers[j])) {\n            prime_fib_numbers.push(fib_numbers[j]);\n\
    \        }\n    }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4q7da1p7.ts(11,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014904
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    if (isPrime(fib)) {\n        return fib;\n    } else {\n        return prime_fib(n\
    \ + 1);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9qjxi0oz.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp9qjxi0oz.ts(4,9): error TS2304: Cannot find name ''isPrime''.

    '
  timestamp: 1660014903
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a: number = 1;\n  \
    \  let b: number = 1;\n    let c: number = 1;\n    let i: number = 2;\n    while\
    \ (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_fqcd7s4.ts(11,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014904
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let prime_fib_numbers: number[] = [1, 1];\n    let i: number\
    \ = 2;\n    while (prime_fib_numbers.length < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        if (is_prime(fib_numbers[i])) {\n     \
    \       prime_fib_numbers.push(fib_numbers[i]);\n        }\n        i++;\n   \
    \ }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4r3j6x4a.ts(8,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014903
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number[] = [];\n\
    \    let i: number = 0;\n    let j: number = 1;\n    let k: number = 0;\n    while\
    \ (k < n) {\n        if (isPrime(j)) {\n            fib.push(j);\n           \
    \ k++;\n        }\n        j = i + j;\n        i = j - i;\n    }\n    return fib[fib.length\
    \ - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7no15kh.ts(8,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014903
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i <= n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    let prime_fib_numbers:\
    \ number[] = [];\n    for (let j: number = 0; j < fib_numbers.length; j++) {\n\
    \        if (is_prime(fib_numbers[j])) {\n            prime_fib_numbers.push(fib_numbers[j]);\n\
    \        }\n    }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpegjm4iwi.ts(11,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014903
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdws36aqw.ts(6,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpdws36aqw.ts(7,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a = 0;\n    let b =\
    \ 1;\n    let c = 1;\n    let i = 0;\n    while (i < n) {\n        if (isPrime(c))\
    \ {\n            i++;\n        }\n        a = b;\n        b = c;\n        c =\
    \ a + b;\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp542j8r9n.ts(8,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014904
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a = 0;\n    let b =\
    \ 1;\n    let c = 0;\n    let i = 0;\n    while (i < n) {\n        c = a + b;\n\
    \        if (isPrime(c)) {\n            i++;\n        }\n        a = b;\n    \
    \    b = c;\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3ruede3_.ts(9,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014904
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp57235hb_.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57235hb_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 1;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i]\
    \ + fib_numbers[i - 1]);\n        i++;\n    }\n    return fib_numbers.filter(isPrime)[n\
    \ - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0lnare74.ts(9,31): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let prime_fib_numbers: number[] = [1, 1];\n    let i: number\
    \ = 2;\n    while (prime_fib_numbers.length < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        if (is_prime(fib_numbers[i])) {\n     \
    \       prime_fib_numbers.push(fib_numbers[i]);\n        }\n        i++;\n   \
    \ }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4r3j6x4a.ts(8,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014903
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n\
    \    let fib_prev: number = 1;\n    let i: number = 2;\n    while (i <= n) {\n\
    \        let temp: number = fib;\n        fib += fib_prev;\n        fib_prev =\
    \ temp;\n        if (is_prime(fib)) {\n            i++;\n        }\n    }\n  \
    \  return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyl2ek3uj.ts(10,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014904
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_prime: number =\
    \ 0;\n    let i: number = 0;\n    let j: number = 1;\n    let k: number = 0;\n\
    \    let count: number = 0;\n    while (count < n) {\n        k = i + j;\n   \
    \     i = j;\n        j = k;\n        if (is_prime(k)) {\n            fib_prime\
    \ = k;\n            count++;\n        }\n    }\n    return fib_prime;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplv8eii62.ts(12,13): error TS2552: Cannot find name
    ''is_prime''. Did you mean ''fib_prime''?

    '
  timestamp: 1660014904
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n && j < n) {\n        if (fib[i] === prime[j]) {\n            return fib[i];\n\
    \        } else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n\
    \            j++;\n        }\n    }\n    return -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphvzjkvzv.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmphvzjkvzv.ts(4,17): error TS2304: Cannot find name ''prime_number''.

    '
  timestamp: 1660014906
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(n);\n    let i = 0;\n    let j = 0;\n    let result\
    \ = 0;\n    while (i < fib.length && j < prime.length) {\n        if (fib[i] ===\
    \ prime[j]) {\n            result = fib[i];\n            i++;\n            j++;\n\
    \        } else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n\
    \            j++;\n        }\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd9viy_v3.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpd9viy_v3.ts(4,17): error TS2304: Cannot find name ''prime_numbers''.

    '
  timestamp: 1660014898
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a: number = 0;\n  \
    \  let b: number = 1;\n    let c: number = 0;\n    let i: number = 0;\n    while\
    \ (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpny7mxp6m.ts(11,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let j =\
    \ 1;\n    let k = 1;\n    let count = 0;\n    while (count < n) {\n        k =\
    \ i + j;\n        i = j;\n        j = k;\n        if (isPrime(k)) {\n        \
    \    count++;\n        }\n    }\n    return k;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbja004bf.ts(11,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014906
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib\
    \ = 1;\n    let prime = false;\n    while (i < n) {\n        fib = fibonacci(i);\n\
    \        prime = isPrime(fib);\n        if (prime) {\n            i++;\n     \
    \   }\n    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpir73mp7m.ts(7,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpir73mp7m.ts(8,17): error TS2552: Cannot find name ''isPrime''.
    Did you mean ''prime''?

    '
  timestamp: 1660014906
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    let result\
    \ = 0;\n    while (i < n) {\n        if (fib[i] === prime[j]) {\n            result\
    \ = fib[i];\n            i++;\n            j++;\n        } else if (fib[i] < prime[j])\
    \ {\n            i++;\n        } else {\n            j++;\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_z4rr9hl.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp_z4rr9hl.ts(4,17): error TS2304: Cannot find name ''prime_number''.

    '
  timestamp: 1660014906
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    let prime_fib_numbers:\
    \ number[] = [];\n    for (let number of fib_numbers) {\n        if (is_prime(number))\
    \ {\n            prime_fib_numbers.push(number);\n        }\n    }\n    return\
    \ prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9o6mfeo6.ts(11,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014906
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    let prime_fib_numbers:\
    \ number[] = fib_numbers.filter(isPrime);\n    return prime_fib_numbers[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplulvumfi.ts(9,58): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014906
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_nums: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i\
    \ - 1] + fib_nums[i - 2]);\n        i++;\n    }\n    return fib_nums[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpl0dypa3e.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl0dypa3e.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014906
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdws36aqw.ts(6,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpdws36aqw.ts(7,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_arr: number[] =\
    \ [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_arr.push(fib_arr[i\
    \ - 1] + fib_arr[i - 2]);\n        i++;\n    }\n    return fib_arr[n - 1];\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxvh7wtn7.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxvh7wtn7.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014906
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (fib_numbers.length < n) {\n  \
    \      fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i - 2]);\n        i++;\n\
    \    }\n    let prime_fib_numbers: number[] = [];\n    for (let i: number = 0;\
    \ i < fib_numbers.length; i++) {\n        if (is_prime(fib_numbers[i])) {\n  \
    \          prime_fib_numbers.push(fib_numbers[i]);\n        }\n    }\n    return\
    \ prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpu7bxvpi3.ts(11,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014906
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1,\
    \ 1];\n    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1]\
    \ + fib[i - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmptxm4bcqp.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptxm4bcqp.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n\
    \    let i = 1;\n    while (i < fib_num) {\n        if (is_prime(i) && is_fib(i))\
    \ {\n            n--;\n        }\n        i++;\n    }\n    return i;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5fzf4omx.ts(3,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmp5fzf4omx.ts(6,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmp5fzf4omx.ts(6,28): error TS2304: Cannot find name ''is_fib''.

    '
  timestamp: 1660014906
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdws36aqw.ts(6,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpdws36aqw.ts(7,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdws36aqw.ts(6,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpdws36aqw.ts(7,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_arr: number[] =\
    \ [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_arr.push(fib_arr[i\
    \ - 1] + fib_arr[i - 2]);\n        i++;\n    }\n    let prime_arr: number[] =\
    \ [];\n    for (let j: number = 0; j < fib_arr.length; j++) {\n        if (is_prime(fib_arr[j]))\
    \ {\n            prime_arr.push(fib_arr[j]);\n        }\n    }\n    return prime_arr[n\
    \ - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd61vj2z0.ts(11,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014906
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let j =\
    \ 1;\n    let fib = 0;\n    let count = 0;\n    while (count < n) {\n        fib\
    \ = i + j;\n        i = j;\n        j = fib;\n        if (isPrime(fib)) {\n  \
    \          count++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd11eoyuk.ts(11,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014906
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!isPrime(fib)) {\n        fib = fibonacci(n);\n        n++;\n    }\n\
    \    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5y8lrnqj.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp5y8lrnqj.ts(4,13): error TS2304: Cannot find name ''isPrime''.

    ../../../../../tmp/tmp5y8lrnqj.ts(5,15): error TS2304: Cannot find name ''fibonacci''.

    '
  timestamp: 1660014906
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let i = 0;\n    while (!isPrime(fib)) {\n        fib = fibonacci(n + i);\n\
    \        i++;\n    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzg_rn3s8.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpzg_rn3s8.ts(5,13): error TS2304: Cannot find name ''isPrime''.

    ../../../../../tmp/tmpzg_rn3s8.ts(6,15): error TS2304: Cannot find name ''fibonacci''.

    '
  timestamp: 1660014906
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp57235hb_.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57235hb_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number = 0;\n\
    \    let i: number = 0;\n    let j: number = 1;\n    let count: number = 0;\n\
    \    while (count < n) {\n        let temp: number = i + j;\n        i = j;\n\
    \        j = temp;\n        if (isPrime(j)) {\n            count++;\n        \
    \    fib = j;\n        }\n    }\n    return fib;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpc7zyguqb.ts(11,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b =\
    \ 1;\n    let c = 0;\n    let i = 0;\n    while (i < n) {\n        c = a + b;\n\
    \        a = b;\n        b = c;\n        if (isPrime(c)) {\n            i++;\n\
    \        }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpktl2gnmb.ts(11,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014906
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    while (fib != prime) {\n        if (fib\
    \ > prime) {\n            prime = prime_number(++n);\n        } else {\n     \
    \       fib = fibonacci(++n);\n        }\n    }\n    return fib;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5ygi1g6c.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp5ygi1g6c.ts(4,17): error TS2304: Cannot find name ''prime_number''.

    ../../../../../tmp/tmp5ygi1g6c.ts(7,21): error TS2304: Cannot find name ''prime_number''.

    ../../../../../tmp/tmp5ygi1g6c.ts(9,19): error TS2304: Cannot find name ''fibonacci''.

    '
  timestamp: 1660014906
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fibs = [1, 1];\n  \
    \  let i = 2;\n    while (i < n) {\n        fibs.push(fibs[i - 1] + fibs[i - 2]);\n\
    \        i++;\n    }\n    return fibs[n - 1];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp0xeebdfz.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0xeebdfz.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014906
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdws36aqw.ts(6,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpdws36aqw.ts(7,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a = 0;\n    let b =\
    \ 1;\n    let c = 0;\n    let i = 0;\n    while (i < n) {\n        c = a + b;\n\
    \        if (isPrime(c)) {\n            i++;\n        }\n        a = b;\n    \
    \    b = c;\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3ruede3_.ts(9,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014904
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp57235hb_.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57235hb_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 1;\n    while (fib_numbers.length < n) {\n  \
    \      fib_numbers.push(fib_numbers[i] + fib_numbers[i - 1]);\n        i++;\n\
    \    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpqbbga26v.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqbbga26v.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014904
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let prime_fib_numbers: number[] = [1, 1];\n    let i: number\
    \ = 2;\n    while (prime_fib_numbers.length < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        if (is_prime(fib_numbers[i])) {\n     \
    \       prime_fib_numbers.push(fib_numbers[i]);\n        }\n        i++;\n   \
    \ }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4r3j6x4a.ts(8,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014903
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b =\
    \ 1;\n    let c = 0;\n    let i = 1;\n    while (i < n) {\n        c = a + b;\n\
    \        a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n\
    \        }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp07jeyow2.ts(11,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014906
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let f1 = 1;\n    let f2\
    \ = 1;\n    let f3 = 2;\n    let count = 2;\n    while (count < n) {\n       \
    \ f1 = f2;\n        f2 = f3;\n        f3 = f1 + f2;\n        if (isPrime(f3))\
    \ {\n            count++;\n        }\n    }\n    return f3;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpro6zf9lf.ts(11,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014906
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1,\
    \ 1];\n    let i: number = 2;\n    let prime_fib: number = 0;\n    while (i <=\
    \ n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n        if (is_prime(fib[i]))\
    \ {\n            prime_fib = fib[i];\n            i++;\n        }\n    }\n   \
    \ return prime_fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp859y8qif.ts(8,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014906
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n\
    \    while (!is_prime(fib_num)) {\n        n++;\n        fib_num = fib(n);\n \
    \   }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwfibl97c.ts(3,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpwfibl97c.ts(4,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpwfibl97c.ts(6,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1660014906
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp57235hb_.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57235hb_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let f =\
    \ 1;\n    let f1 = 1;\n    let f2 = 1;\n    while (i < n) {\n        f = f1 +\
    \ f2;\n        f1 = f2;\n        f2 = f;\n        if (is_prime(f)) {\n       \
    \     i++;\n        }\n    }\n    return f;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2dfe9jx8.ts(11,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014906
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!isPrime(fib)) {\n        fib = fibonacci(++n);\n    }\n    return\
    \ fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgk5hs3ca.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpgk5hs3ca.ts(4,13): error TS2304: Cannot find name ''isPrime''.

    ../../../../../tmp/tmpgk5hs3ca.ts(5,15): error TS2304: Cannot find name ''fibonacci''.

    '
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp57235hb_.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57235hb_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let j =\
    \ 1;\n    let k = 0;\n    let count = 0;\n    while (count < n) {\n        k =\
    \ i + j;\n        i = j;\n        j = k;\n        if (isPrime(k)) {\n        \
    \    count++;\n        }\n    }\n    return k;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyjzad2x9.ts(11,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014901
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    let prime = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n\
    \        if (isPrime(fib)) {\n            prime = fib;\n            i++;\n   \
    \     }\n    }\n    return prime;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkfdulsyl.ts(7,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpkfdulsyl.ts(8,13): error TS2552: Cannot find name ''isPrime''.
    Did you mean ''prime''?

    '
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp57235hb_.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57235hb_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n\
    \    let prime_num = prime(n);\n    let i = 0;\n    let j = 0;\n    let prime_fib_num\
    \ = 0;\n    while (i < n) {\n        if (fib_num[i] == prime_num[j]) {\n     \
    \       prime_fib_num = fib_num[i];\n            i++;\n            j++;\n    \
    \    }\n        else if (fib_num[i] < prime_num[j]) {\n            i++;\n    \
    \    }\n        else {\n            j++;\n        }\n    }\n    return prime_fib_num;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0uz1_8aj.ts(3,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmp0uz1_8aj.ts(4,21): error TS2304: Cannot find name ''prime''.

    '
  timestamp: 1660014906
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    let prime = 0;\n    let fib_prime = 0;\n    while (i < n) {\n    \
    \    fib = fibonacci(i);\n        prime = is_prime(fib);\n        if (prime ==\
    \ 1) {\n            fib_prime = fib;\n            i++;\n        }\n    }\n   \
    \ return fib_prime;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2pf_0qsb.ts(8,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp2pf_0qsb.ts(9,17): error TS2552: Cannot find name ''is_prime''.
    Did you mean ''fib_prime''?

    '
  timestamp: 1660014908
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1,\
    \ 2];\n    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1]\
    \ + fib[i - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpmmgtl04j.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmmgtl04j.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014904
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    let fib_number: number = 1;\n    while\
    \ (i < n) {\n        fib_number = fib_numbers[i - 1] + fib_numbers[i - 2];\n \
    \       fib_numbers.push(fib_number);\n        i++;\n    }\n    return fib_number;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpmvmxwkai.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmvmxwkai.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014908
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1,\
    \ 1];\n    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1]\
    \ + fib[i - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmptxm4bcqp.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptxm4bcqp.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdws36aqw.ts(6,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpdws36aqw.ts(7,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    let prime_fib_number: number = 0;\n \
    \   let counter: number = 0;\n    while (counter < n) {\n        fib_numbers[i]\
    \ = fib_numbers[i - 1] + fib_numbers[i - 2];\n        if (is_prime(fib_numbers[i]))\
    \ {\n            counter++;\n            prime_fib_number = fib_numbers[i];\n\
    \        }\n        i++;\n    }\n    return prime_fib_number;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsqwgx29e.ts(9,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014908
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1,\
    \ 2];\n    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1]\
    \ + fib[i - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpmmgtl04j.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmmgtl04j.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014904
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = [1, 1];\n   \
    \ let i = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n\
    \        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmphy99tv9z.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphy99tv9z.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp57235hb_.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57235hb_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n  let fib = [1, 1];\n  let\
    \ i = 2;\n  while (i < n) {\n    fib.push(fib[i - 1] + fib[i - 2]);\n    i++;\n\
    \  }\n  return fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpwne4hj88.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwne4hj88.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014908
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    let fib_number: number = 0;\n    while\
    \ (i <= n) {\n        fib_number = fib_numbers[i - 1] + fib_numbers[i - 2];\n\
    \        fib_numbers.push(fib_number);\n        i++;\n    }\n    return fib_number;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpttfydwe_.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpttfydwe_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014908
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    let fib_number: number = 0;\n    while\
    \ (i <= n) {\n        fib_number = fib_numbers[i - 1] + fib_numbers[i - 2];\n\
    \        if (is_prime(fib_number)) {\n            fib_numbers.push(fib_number);\n\
    \            i++;\n        }\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjsnfcz6w.ts(8,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014903
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let prime_fib_numbers: number[] = [2];\n    let i: number = 2;\n\
    \    while (prime_fib_numbers.length < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        if (is_prime(fib_numbers[i])) {\n     \
    \       prime_fib_numbers.push(fib_numbers[i]);\n        }\n        i++;\n   \
    \ }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0zrk5ap8.ts(8,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014903
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1,\
    \ 2];\n    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1]\
    \ + fib[i - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpmmgtl04j.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmmgtl04j.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014904
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp57235hb_.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57235hb_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a = 0;\n    let b =\
    \ 1;\n    let c = 1;\n    let i = 1;\n    while (i < n) {\n        c = a + b;\n\
    \        a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n\
    \        }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqtivydij.ts(11,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014908
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdws36aqw.ts(6,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpdws36aqw.ts(7,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = [1, 1];\n   \
    \ let i = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n\
    \        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmphy99tv9z.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphy99tv9z.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp57235hb_.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57235hb_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdws36aqw.ts(6,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpdws36aqw.ts(7,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp57235hb_.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57235hb_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_nums: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i\
    \ - 1] + fib_nums[i - 2]);\n        i++;\n    }\n    return fib_nums[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjmukx84p.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjmukx84p.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014909
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let j =\
    \ 1;\n    let k = 1;\n    while (k < n) {\n        let t = i + j;\n        i =\
    \ j;\n        j = t;\n        if (is_prime(j)) {\n            k++;\n        }\n\
    \    }\n    return j;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpt7bw13c_.ts(10,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014908
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    let fib_number: number = 0;\n    while\
    \ (i <= n) {\n        fib_number = fib_numbers[i - 1] + fib_numbers[i - 2];\n\
    \        if (is_prime(fib_number)) {\n            fib_numbers.push(fib_number);\n\
    \            i++;\n        }\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjsnfcz6w.ts(8,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014903
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number = 0;\n\
    \    let i: number = 0;\n    let j: number = 1;\n    let k: number = 0;\n    let\
    \ count: number = 0;\n    while (count < n) {\n        k = i + j;\n        i =\
    \ j;\n        j = k;\n        if (isPrime(k)) {\n            fib = k;\n      \
    \      count++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyk18kmwv.ts(12,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014901
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp57235hb_.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57235hb_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdws36aqw.ts(6,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpdws36aqw.ts(7,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1,\
    \ 1];\n    let i: number = 0;\n    while (i < n) {\n        fib.push(fib[fib.length\
    \ - 1] + fib[fib.length - 2]);\n        if (is_prime(fib[fib.length - 1])) {\n\
    \            i++;\n        }\n    }\n    return fib[fib.length - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmph4xlb_51.ts(7,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014908
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let f1 = 1;\n    let f2\
    \ = 1;\n    let f3 = 1;\n    let i = 2;\n    while (i < n) {\n        f3 = f1\
    \ + f2;\n        f1 = f2;\n        f2 = f3;\n        if (is_prime(f3)) {\n   \
    \         i++;\n        }\n    }\n    return f3;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpp_7va_ks.ts(11,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014908
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp57235hb_.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57235hb_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    let fib_number: number = 0;\n    while\
    \ (i <= n) {\n        fib_number = fib_numbers[i - 1] + fib_numbers[i - 2];\n\
    \        fib_numbers.push(fib_number);\n        if (is_prime(fib_number)) {\n\
    \            i++;\n        }\n    }\n    return fib_number;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd6hwekwg.ts(9,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014908
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    if (isPrime(fib)) {\n        return fib;\n    } else {\n        return prime_fib(n\
    \ + 1);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9qjxi0oz.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp9qjxi0oz.ts(4,9): error TS2304: Cannot find name ''isPrime''.

    '
  timestamp: 1660014903
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp57235hb_.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57235hb_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(n);\n    let i = 0;\n    let j = 0;\n    while\
    \ (i < fib.length && j < prime.length) {\n        if (fib[i] === prime[j]) {\n\
    \            return fib[i];\n        }\n        if (fib[i] < prime[j]) {\n   \
    \         i++;\n        } else {\n            j++;\n        }\n    }\n    return\
    \ -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_172p2g_.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp_172p2g_.ts(4,17): error TS2304: Cannot find name ''prime_numbers''.

    '
  timestamp: 1660014908
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (fib_numbers.length < n) {\n  \
    \      fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i - 2]);\n        i++;\n\
    \    }\n    return fib_numbers[fib_numbers.length - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpo5s79rb1.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo5s79rb1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014908
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1,\
    \ 1];\n    let i: number = 0;\n    let j: number = 0;\n    while (i < n) {\n \
    \       fib.push(fib[j] + fib[j + 1]);\n        if (is_prime(fib[j + 2])) {\n\
    \            i++;\n        }\n        j++;\n    }\n    return fib[j + 1];\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz2x6v8o4.ts(8,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014908
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a = 0;\n    let b =\
    \ 1;\n    let c = 0;\n    let i = 0;\n    while (i < n) {\n        c = a + b;\n\
    \        a = b;\n        b = c;\n        if (isPrime(c)) {\n            i++;\n\
    \        }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphl64qpns.ts(11,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014898
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1,\
    \ 1];\n    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1]\
    \ + fib[i - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmptxm4bcqp.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptxm4bcqp.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    let prime = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n\
    \        if (isPrime(fib)) {\n            prime = fib;\n            i++;\n   \
    \     }\n    }\n    return prime;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkfdulsyl.ts(7,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpkfdulsyl.ts(8,13): error TS2552: Cannot find name ''isPrime''.
    Did you mean ''prime''?

    '
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp57235hb_.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57235hb_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a: number = 1;\n  \
    \  let b: number = 1;\n    let c: number = 0;\n    let i: number = 2;\n    while\
    \ (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpupembzbc.ts(11,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014908
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 0;\n    while (fib_numbers.length < n) {\n  \
    \      fib_numbers.push(fib_numbers[i] + fib_numbers[i + 1]);\n        i++;\n\
    \    }\n    let is_prime: boolean = false;\n    let prime_fib_numbers: number[]\
    \ = [];\n    for (let i: number = 0; i < fib_numbers.length; i++) {\n        is_prime\
    \ = true;\n        for (let j: number = 2; j < fib_numbers[i]; j++) {\n      \
    \      if (fib_numbers[i] % j === 0) {\n                is_prime = false;\n  \
    \          }\n        }\n        if (is_prime) {\n            prime_fib_numbers.push(fib_numbers[i]);\n\
    \        }\n    }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpzijz0_tx.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzijz0_tx.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014909
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1,\
    \ 1];\n    let i: number = 1;\n    while (i < n) {\n        fib.push(fib[i] +\
    \ fib[i - 1]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmppd404kc3.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppd404kc3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014909
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib\
    \ = 1;\n    while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp25d0z7uo.ts(6,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp25d0z7uo.ts(7,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1660014908
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib\
    \ = 0;\n    while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdws36aqw.ts(6,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpdws36aqw.ts(7,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a = 0;\n    let b =\
    \ 1;\n    let c = 0;\n    let i = 0;\n    while (i < n) {\n        c = a + b;\n\
    \        a = b;\n        b = c;\n        if (isPrime(c)) {\n            i++;\n\
    \        }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphl64qpns.ts(11,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014898
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 0;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i]\
    \ + fib_numbers[i + 1]);\n        if (is_prime(fib_numbers[i + 2])) {\n      \
    \      i++;\n        }\n    }\n    return fib_numbers[n];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpezjqdxl1.ts(7,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014908
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let j =\
    \ 1;\n    let k = 0;\n    let count = 0;\n    while (count < n) {\n        k =\
    \ i + j;\n        i = j;\n        j = k;\n        if (isPrime(k)) {\n        \
    \    count++;\n        }\n    }\n    return k;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyjzad2x9.ts(11,13): error TS2304: Cannot find name
    ''isPrime''.

    '
  timestamp: 1660014901
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    let prime_fib_numbers: number[] = [];\n\
    \    while (prime_fib_numbers.length < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        if (is_prime(fib_numbers[i])) {\n     \
    \       prime_fib_numbers.push(fib_numbers[i]);\n        }\n        i++;\n   \
    \ }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkzdjcd08.ts(8,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014908
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b =\
    \ 1;\n    let c = 0;\n    let i = 2;\n    while (i < n) {\n        c = a + b;\n\
    \        a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n\
    \        }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcdmac2wz.ts(11,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1660014908
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!isPrime(fib)) {\n        fib = fibonacci(++n);\n    }\n    return\
    \ fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgk5hs3ca.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpgk5hs3ca.ts(4,13): error TS2304: Cannot find name ''isPrime''.

    ../../../../../tmp/tmpgk5hs3ca.ts(5,15): error TS2304: Cannot find name ''fibonacci''.

    '
  timestamp: 1660014899
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    if (isPrime(fib)) {\n        return fib;\n    } else {\n        return prime_fib(n\
    \ + 1);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9qjxi0oz.ts(3,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp9qjxi0oz.ts(4,9): error TS2304: Cannot find name ''isPrime''.

    '
  timestamp: 1660014903
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpasuniw_4.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuniw_4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014899
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_numbers: number[] = [1, 1];\n    let i: number = 2;\n    while (i\
    \ < n) {\n        fib_num = fib_numbers[i - 1] + fib_numbers[i - 2];\n       \
    \ fib_numbers.push(fib_num);\n        i++;\n    }\n    return fib_num;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpg24g4u8l.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpg24g4u8l.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660014909

name: HumanEval_153_Strongest_Extension
language: ts
prompt: "//You will be given the name of a class (a string) and a list of extensions.\n\
  // The extensions are to be used to load additional classes to the class. The\n\
  // strength of the extension is as follows: Let CAP be the number of the uppercase\n\
  // letters in the extension's name, and let SM be the number of lowercase letters\
  \ \n// in the extension's name, the strength is given by the fraction CAP - SM.\
  \ \n// You should find the strongest extension and return a string in this \n//\
  \ format: ClassName.StrongestExtensionName.\n// If there are two or more extensions\
  \ with the same strength, you should\n// choose the one that comes first in the\
  \ list.\n// For example, if you are given \"Slices\" as the class and a list of\
  \ the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n//\
  \ return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
  \ \n// (its strength is -1).\n// Example:\nfunction Strongest_Extension(class_name:\
  \ string, extensions: string[]): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = Strongest_Extension;\n  assert.deepEqual(candidate(\"\
  Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]),\"Watashi.eIGHt8OKe\");\n  assert.deepEqual(candidate(\"\
  Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]),\"Boku123.YEs.WeCaNe\"\
  );\n  assert.deepEqual(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\"\
  , \"zeR00\", \"NuLl__\", \"123NoooneB321\"]),\"__YESIMHERE.NuLl__\");\n  assert.deepEqual(candidate(\"\
  K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]),\"K.TAR\");\n  assert.deepEqual(candidate(\"\
  __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]),\"__HAHA.123\");\n  assert.deepEqual(candidate(\"\
  YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]),\"YameRore.okIWILL123\"\
  );\n  assert.deepEqual(candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"\
  WoW\"]),\"finNNalLLly.WoW\");\n  assert.deepEqual(candidate(\"_\", [\"Bb\", \"91245\"\
  ]),\"_.Bb\");\n  assert.deepEqual(candidate(\"Sp\", [\"671235\", \"Bb\"]),\"Sp.671235\"\
  );\n}\n\ntest();"
completions: ["    let strongest_extension = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ strength++;\n            } else {\n                strength--;\n           \
    \ }\n        }\n        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = '';\n    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z')\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let extension of extensions)\
    \ {\n        let strength = 0;\n        for (let char of extension) {\n      \
    \      if (char.toUpperCase() === char) {\n                strength++;\n     \
    \       } else {\n                strength--;\n            }\n        }\n    \
    \    if (strength > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));",
  "    let strongest_extension: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength:\
    \ number = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n    \
    \        if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"Z\") {\n     \
    \           strength++;\n            } else {\n                strength--;\n \
    \           }\n        }\n        if (strength > strongest_strength) {\n     \
    \       strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension:\
    \ string = '';\n    let strongest_extension_strength: number = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let strength: number = 0;\n  \
    \      for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}\n\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension.length; j++) {\n            let\
    \ char = extension[j];\n            if (char.toUpperCase() === char) {\n     \
    \           extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension: string =\
    \ \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let current_strength: number = 0;\n        for (let j = 0; j\
    \ < extensions[i].length; j++) {\n            if (extensions[i][j] >= \"A\" &&\
    \ extensions[i][j] <= \"Z\") {\n                current_strength++;\n        \
    \    }\n            else {\n                current_strength--;\n            }\n\
    \        }\n        if (current_strength > strongest_strength) {\n           \
    \ strongest_strength = current_strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'Slices', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices',\
    \ 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuF", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                strength++;\n            } else {\n           \
    \     strength--;\n            }\n        }\n        if (strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));",
  "    let strongest_extension: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let current_strength:\
    \ number = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n    \
    \        if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n         \
    \       current_strength++;\n            }\n            else {\n             \
    \   current_strength--;\n            }\n        }\n        if (current_strength\
    \ > strongest_strength) {\n            strongest_strength = current_strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices', 'slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'slices', 'slices', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices', 'slices',\
    \ 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed',", "    let strongest_extension: string = \"\";\n    let\
    \ strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices', 'slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'slices', 'slices', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices', 'slices',\
    \ 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'slices', 'slices", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension.length; j++) {\n            if (extension[j]\
    \ >= 'A' && extension[j] <= 'Z') {\n                extension_strength++;\n  \
    \          } else if (extension[j] >= 'a' && extension[j] <= 'z') {\n        \
    \        extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + '.' + strongest_extension;\n}\n", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_strength = 0;\n    for\
    \ (let i = 0; i < extensions.length; i++) {\n        let strength = 0;\n     \
    \   for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z') {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", [\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"]));\nconsole.log(Strongest_Extension(\"\
    Slices\", [\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"Cheese\"\
    , \"StuFfed\"]));\nconsole.log(Strongest_Extension(\"Slices\", [\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\"]));\nconsole.log(Strongest_Extension(\"Slices\", [\"\
    SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"Cheese\", \"StuFfed\"\
    , \"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\"]));\nconsole.log(Strongest_Extension(\"Slices\", [\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"SErviNGS", "    let strongest_extension: string =\
    \ \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest: number\
    \ = 0;\n    let strongest_extension: string = \"\";\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap: number = 0;\n        let sm: number = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()) {\n                cap++;\n            }\
    \ else {\n                sm++;\n            }\n        }\n        if (cap - sm\
    \ > strongest) {\n            strongest = cap - sm;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));",
  "    let strongest_extension: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength:\
    \ number = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n    \
    \        if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"Z\") {\n     \
    \           strength++;\n            } else {\n                strength--;\n \
    \           }\n        }\n        if (strength > strongest_strength) {\n     \
    \       strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z')\
    \ {\n                extension_strength++;\n            } else if (extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z') {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest_extension;\n}\nconsole.log(Strongest_Extension('Slices', ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed']));", "    let strongest_extension: string = '';\n    let\
    \ strongest_extension_strength: number = 0;\n    let current_extension_strength:\
    \ number = 0;\n    let cap: number = 0;\n    let sm: number = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        cap = 0;\n        sm = 0;\n  \
    \      for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                cap++;\n            }\
    \ else {\n                sm++;\n            }\n        }\n        current_extension_strength\
    \ = cap - sm;\n        if (current_extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = current_extension_strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest_extension;\n}\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest = 0;\n    let\
    \ strongest_extension = '';\n    for (let i = 0; i < extensions.length; i++) {\n\
    \        let cap = 0;\n        let sm = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strongest) {\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}\n\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes']));\nconsole.log(Strongest_Extension('Slices', ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGS", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_extension_strength =\
    \ 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));",
  "    let strongest: number = 0;\n    let strongest_extension: string = \"\";\n \
    \   for (let i: number = 0; i < extensions.length; i++) {\n        let strength:\
    \ number = 0;\n        for (let j: number = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n\
    \                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest) {\n            strongest\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SEr", "    let strongest_extension =\
    \ extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i =\
    \ 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n \
    \       let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                extension_strength++;\n            } else {\n \
    \               extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices', 'slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'slices', 'slices', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices', 'slices',\
    \ 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ '", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                strength++;\n            } else {\n           \
    \     strength--;\n            }\n        }\n        if (strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'Slices', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices',\
    \ 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'S", "    let strongest = 0;\n    let strongest_extension\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++) {\n        let cap\
    \ = 0;\n        let sm = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z')\
    \ {\n                cap++;\n            }\n            else {\n             \
    \   sm++;\n            }\n        }\n        let strength = cap - sm;\n      \
    \  if (strength > strongest) {\n            strongest = strength;\n          \
    \  strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'slices', 'slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'slices', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'slices', 'slices',\
    \ 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'Slices", "    let strongest_extension: string = \"\";\n\
    \    let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension\
    \ = \"\";\n    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let strength = 0;\n\
    \        for (let j = 0; j < extension.length; j++) {\n            let char =\
    \ extension[j];\n            if (char >= \"A\" && char <= \"Z\") {\n         \
    \       strength++;\n            } else if (char >= \"a\" && char <= \"z\") {\n\
    \                strength--;\n            }\n        }\n        if (strength >\
    \ strongest_strength) {\n            strongest_strength = strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension: string =\
    \ \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'StuFfed']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'StuFfed', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'StuFfed', 'StuFfed', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'StuFfed', 'StuFfed', 'StuFfed', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'StuFfed', 'StuFfed', 'StuFfed',\
    \ 'StuFfed', 'StuFfed']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese',", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z') {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));",
  "    let strongest_extension: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength:\
    \ number = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n    \
    \        if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"Z\") {\n     \
    \           strength++;\n            } else {\n                strength--;\n \
    \           }\n        }\n        if (strength > strongest_strength) {\n     \
    \       strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                extension_strength++;\n            } else {\n \
    \               extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strongest_extension: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n        let\
    \ strength: number = 0;\n        for (let j: number = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliC", "   \
    \ let strongest_extension: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength:\
    \ number = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n    \
    \        if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"Z\") {\n     \
    \           extension_strength++;\n            }\n            else if (extensions[i][j]\
    \ >= \"a\" && extensions[i][j] <= \"z\") {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_strength)\
    \ {\n            strongest_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'Slices', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices',\
    \ 'Slices', 'Slices']));\nconsole.log(Strongest", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let\
    \ i: number = 0; i < extensions.length; i++) {\n        let cap: number = 0;\n\
    \        let sm: number = 0;\n        for (let j: number = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        let strength: number = cap - sm;\n        if (strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = '';\n    let strongest_extension_strength = 0;\n    for (let extension of\
    \ extensions) {\n        let strength = 0;\n        for (let i = 0; i < extension.length;\
    \ i++) {\n            if (extension[i] >= 'A' && extension[i] <= 'Z') {\n    \
    \            strength++;\n            } else if (extension[i] >= 'a' && extension[i]\
    \ <= 'z') {\n                strength--;\n            }\n        }\n        if\
    \ (strength > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + '.' + strongest_extension;\n}\n\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'slices']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'slices', 'Slices']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'slices', 'Slices', 'slices']));\n\
    console.log(Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'slices', 'Slices', 'slices', 'Slices']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'S", "    let strongest_extension: string\
    \ = \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', '", "    let strongest_extension = '';\n \
    \   let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}\n\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices', 'Slices']));\n\
    console.log(Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'Slices', 'Slices', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices', 'Slic",
  "    let strongest_extension: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n        let\
    \ strength: number = 0;\n        for (let j: number = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'Slices', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices',\
    \ 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'Slices',", "    let strongest_extension = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let extension of extensions) {\n  \
    \      let strength = 0;\n        for (let letter of extension) {\n          \
    \  if (letter.toUpperCase() === letter) {\n                strength++;\n     \
    \       } else {\n                strength--;\n            }\n        }\n    \
    \    if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            if (extension[j] >= 'A' && extension[j] <= 'Z') {\n    \
    \            extension_strength++;\n            } else if (extension[j] >= 'a'\
    \ && extension[j] <= 'z') {\n                extension_strength--;\n         \
    \   }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + '.' + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"Slices\"\
    , [\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"]));\nconsole.log(Strongest_Extension(\"\
    Slices\", [\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"slices\"]));\nconsole.log(Strongest_Extension(\"\
    Slices\", [\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"slices\", \"slices\"\
    ]));\nconsole.log(Strongest_Extension(\"Slices\", [\"SErviNGSliCes\", \"Cheese\"\
    , \"StuFfed\", \"slices\", \"slices\", \"slices\"]));\nconsole.log(Strongest_Extension(\"\
    Slices\", [\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"slices\", \"slices\"\
    , \"slices\", \"slices\"]));\nconsole.log(Strongest_Extension(\"Slices\", [\"\
    SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"slices\", \"slices\", \"slices\",\
    \ \"slices\", \"slices\"]));\nconsole.log(Strongest_Extension(\"Slic", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_extension_strength =\
    \ 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char == char.toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension: string = extensions[i];\n        let strength: number = 0;\n\
    \        for (let j: number = 0; j < extension.length; j++) {\n            let\
    \ char: string = extension[j];\n            if (char.toUpperCase() === char) {\n\
    \                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j]\
    \ <= \"Z\") {\n                extension_strength++;\n            } else if (extensions[i][j]\
    \ >= \"a\" && extensions[i][j] <= \"z\") {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));\n", "    let strongest_extension =\
    \ \"\";\n    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let strength = 0;\n\
    \        for (let j = 0; j < extension.length; j++) {\n            let char =\
    \ extension[j];\n            if (char.toUpperCase() === char) {\n            \
    \    strength++;\n            } else {\n                strength--;\n        \
    \    }\n        }\n        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest:\
    \ string = \"\";\n    let strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap: number = 0;\n        let sm: number = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                cap++;\n            }\
    \ else {\n                sm++;\n            }\n        }\n        if (cap - sm\
    \ > strength) {\n            strength = cap - sm;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErvi", "    let strongest: string =\
    \ extensions[0];\n    let strongest_strength: number = 0;\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let strength: number = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z') {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let cap = 0;\n\
    \        let sm = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n\
    \            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n    \
    \            cap++;\n            } else {\n                sm++;\n           \
    \ }\n        }\n        let strength = cap - sm;\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes', 'SE",
  "    let strongest_extension: string = '';\n    let strongest_strength: number =\
    \ 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength:\
    \ number = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n    \
    \        if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z') {\n         \
    \       strength++;\n            } else {\n                strength--;\n     \
    \       }\n        }\n        if (strength > strongest_strength) {\n         \
    \   strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}\n\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension.length; j++) {\n            let\
    \ char = extension[j];\n            if (char === char.toUpperCase()) {\n     \
    \           extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'Slices', 'slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'slices', 'Slices', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'Slices', 'slices',\
    \ 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Che", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.match(/[A-Z]/)) {\n                extension_strength++;\n \
    \           } else if (char.match(/[a-z]/)) {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension = extension;\n            strongest_extension_strength\
    \ = extension_strength;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));",
  "    let strongest_extension: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength:\
    \ number = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n    \
    \        if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n        \
    \        strength++;\n            } else {\n                strength--;\n    \
    \        }\n        }\n        if (strength > strongest_strength) {\n        \
    \    strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_strength: number = 0;\n    for (let i: number\
    \ = 0; i < extensions.length; i++) {\n        let strength: number = 0;\n    \
    \    for (let j: number = 0; j < extensions[i].length; j++) {\n            if\
    \ (extensions[i][j] >= \"A\" && extensions[i][j] <= \"Z\") {\n               \
    \ strength++;\n            } else {\n                strength--;\n           \
    \ }\n        }\n        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese',", "    let strongest = 0;\n    let strongest_extension\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++) {\n        let cap\
    \ = 0;\n        let sm = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z')\
    \ {\n                cap++;\n            }\n            else {\n             \
    \   sm++;\n            }\n        }\n        let strength = cap - sm;\n      \
    \  if (strength > strongest) {\n            strongest = strength;\n          \
    \  strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest = 0;\n    let strongest_extension\
    \ = '';\n    for (let extension of extensions) {\n        let strength = 0;\n\
    \        for (let letter of extension) {\n            if (letter.toUpperCase()\
    \ === letter) {\n                strength++;\n            } else {\n         \
    \       strength--;\n            }\n        }\n        if (strength > strongest)\
    \ {\n            strongest = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", [\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"]));\nconsole.log(Strongest_Extension(\"\
    Slices\", [\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"Cheese\"\
    , \"StuFfed\"]));\nconsole.log(Strongest_Extension(\"Slices\", [\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\"]));\nconsole.log(Strongest_Extension(\"Slices\", [\"\
    SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"Cheese\", \"StuFfed\"\
    , \"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\"]));\nconsole.log(Strongest_Extension(\"Slices\", [\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\"]));\nconsole.log(", "    let strongest_extension = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let extension = extensions[i];\n        let strength = 0;\n     \
    \   for (let j = 0; j < extension.length; j++) {\n            let char = extension[j];\n\
    \            if (char.toUpperCase() === char) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes', 'SErvi",
  "    let strongest_extension = extensions[0];\n    let strongest_strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let strength = 0;\n        for (let j = 0; j < extension.length; j++)\
    \ {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                strength++;\n            } else {\n           \
    \     strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z') {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'Slices', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices',\
    \ 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                extension_strength++;\n            } else {\n \
    \               extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strongest: string = \"\";\n    let strongest_strength: number = 0;\n   \
    \ for (let i = 0; i < extensions.length; i++) {\n        let strength: number\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"Z\") {\n            \
    \    strength++;\n            }\n            else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'Slices', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices',\
    \ 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices', '", "    let strongest: string\
    \ = extensions[0];\n    let strongest_strength: number = 0;\n    for (let i =\
    \ 0; i < extensions.length; i++) {\n        let strength: number = 0;\n      \
    \  for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()) {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ '", "    let class_name_length = class_name.length;\n    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension_strength = 0;\n  \
    \      for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed',",
  "    let strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let cap = 0;\n        let sm =\
    \ 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n            if\
    \ (extensions[i][j] === extensions[i][j].toUpperCase()) {\n                cap++;\n\
    \            } else {\n                sm++;\n            }\n        }\n     \
    \   let strength = cap - sm;\n        if (strength > strongest_strength) {\n \
    \           strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z')\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char === char.toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strongest_extension: string = '';\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z')\
    \ {\n                extension_strength++;\n            } else if (extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z') {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest_extension;\n}\n\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices', 'Slices']));\n\
    console.log(Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'Slices', 'Slices', 'Slices', 'Slices']));", "    let strongest: number\
    \ = 0;\n    let strongest_extension: string = '';\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest) {\n            strongest\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension: string\
    \ = \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension = extensions[0];\n    let strongest_strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z') {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let\
    \ i: number = 0; i < extensions.length; i++) {\n        let current_extension_strength:\
    \ number = 0;\n        for (let j: number = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"Z\") {\n\
    \                current_extension_strength++;\n            }\n            else\
    \ if (extensions[i][j] >= \"a\" && extensions[i][j] <= \"z\") {\n            \
    \    current_extension_strength--;\n            }\n        }\n        if (current_extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = current_extension_strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension\
    \ = \"\";\n    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices', 'slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'slices', 'slices', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices', 'slices',\
    \ 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'slices', 'slices', 'slices', 'slic", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for (let extension of\
    \ extensions) {\n        let strength = extension.split('').filter(x => x.match(/[A-Z]/)).length\
    \ - extension.split('').filter(x => x.match(/[a-z]/)).length;\n        if (strength\
    \ > strongest_strength) {\n            strongest_strength = strength;\n      \
    \      strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + '.' + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes',\
    \ 'Cheese']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Che", "    let strongest: string = \"\
    \";\n    let strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap = 0;\n        let sm = 0;\n        for (let j = 0; j\
    \ < extensions[i].length; j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strength) {\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'Slices', 'slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'slices', 'Slices', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'Slices', 'slices',\
    \ 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'slices', 'Slices', 'slices', 'slices", "    let strongest_extension\
    \ = \"\";\n    let strongest_strength = -Infinity;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let current_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                current_strength++;\n            } else {\n             \
    \   current_strength--;\n            }\n        }\n        if (current_strength\
    \ > strongest_strength) {\n            strongest_strength = current_strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let strength: number = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= \"A\" && extensions[i][j] <= \"Z\") {\n                strength++;\n    \
    \        } else {\n                strength--;\n            }\n        }\n   \
    \     if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z')\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension:\
    \ string = extensions[0];\n    let strongest_extension_strength: number = 0;\n\
    \    for (let i: number = 0; i < extensions.length; i++) {\n        let current_extension:\
    \ string = extensions[i];\n        let current_extension_strength: number = 0;\n\
    \        for (let j: number = 0; j < current_extension.length; j++) {\n      \
    \      let current_char: string = current_extension[j];\n            if (current_char.toUpperCase()\
    \ === current_char) {\n                current_extension_strength++;\n       \
    \     } else {\n                current_extension_strength--;\n            }\n\
    \        }\n        if (current_extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension = current_extension;\n            strongest_extension_strength\
    \ = current_extension_strength;\n        }\n    }\n    return class_name + \"\
    .\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed']));", "    let strongest_extension: string = \"\";\n   \
    \ let strongest_strength: number = -Infinity;\n    let strength: number = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        strength = 0;\n  \
    \      for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= \"A\" && extensions[i][j] <= \"Z\") {\n                strength++;\n    \
    \        }\n            else {\n                strength--;\n            }\n \
    \       }\n        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest:\
    \ number = 0;\n    let strongest_extension: string = '';\n    extensions.forEach(extension\
    \ => {\n        let strength: number = 0;\n        for (let i: number = 0; i <\
    \ extension.length; i++) {\n            if (extension[i] === extension[i].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest) {\n            strongest\
    \ = strength;\n            strongest_extension = extension;\n        }\n    });\n\
    \    return class_name + '.' + strongest_extension;\n}\n\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest: number = 0;\n\
    \    let strongest_extension: string = \"\";\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap: number = 0;\n        let sm: number = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                cap++;\n            }\
    \ else {\n                sm++;\n            }\n        }\n        if (cap - sm\
    \ > strongest) {\n            strongest = cap - sm;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = '';\n    let strongest_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ strength: number = 0;\n        for (let j = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z') {\n \
    \               strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension.length; j++) {\n            let\
    \ char = extension[j];\n            if (char.toUpperCase() === char) {\n     \
    \           extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension: string =\
    \ \"\";\n    let strongest_extension_strength: number = 0;\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let extension_strength: number = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));",
  "    let strongest_extension: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    let strength: number = 0;\n    let cap: number = 0;\n    let sm: number\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        cap = 0;\n\
    \        sm = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n \
    \           if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z') {\n      \
    \          cap++;\n            }\n            else {\n                sm++;\n\
    \            }\n        }\n        strength = cap - sm;\n        if (strength\
    \ > strongest_strength) {\n            strongest_strength = strength;\n      \
    \      strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SEr", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let strength = 0;\n        for (let j = 0; j < extension.length; j++)\
    \ {\n            if (extension[j] >= 'A' && extension[j] <= 'Z') {\n         \
    \       strength++;\n            } else {\n                strength--;\n     \
    \       }\n        }\n        if (strength > strongest_strength) {\n         \
    \   strongest = extension;\n            strongest_strength = strength;\n     \
    \   }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let extension_strength: number\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNG", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_extension_strength: number = 0;\n    let extension_strength:\
    \ number = 0;\n    let upper_case_count: number = 0;\n    let lower_case_count:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     upper_case_count = 0;\n        lower_case_count = 0;\n        for (let j:\
    \ number = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                upper_case_count++;\n\
    \            } else {\n                lower_case_count++;\n            }\n  \
    \      }\n        extension_strength = upper_case_count - lower_case_count;\n\
    \        if (extension_strength > strongest_extension_strength) {\n          \
    \  strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices', 'slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'slices', 'slices', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SEr", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let extension of extensions) {\n        let strength:\
    \ number = 0;\n        for (let i: number = 0; i < extension.length; i++) {\n\
    \            if (extension[i] === extension[i].toUpperCase()) {\n            \
    \    strength++;\n            } else {\n                strength--;\n        \
    \    }\n        }\n        if (strength > strongest_extension_strength) {\n  \
    \          strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "  let strongest = extensions[0];\n  let strongestStrength = 0;\n  for (let\
    \ i = 0; i < extensions.length; i++) {\n    let strength = 0;\n    for (let j\
    \ = 0; j < extensions[i].length; j++) {\n      if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n        strength++;\n      } else {\n        strength--;\n      }\n    }\n\
    \    if (strength > strongestStrength) {\n      strongestStrength = strength;\n\
    \      strongest = extensions[i];\n    }\n  }\n  return class_name + \".\" + strongest;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                extension_strength++;\n            }\n            else\
    \ if (extensions[i][j] >= \"a\" && extensions[i][j] <= \"z\") {\n            \
    \    extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension: string = extensions[i];\n        let extension_strength: number =\
    \ 0;\n        for (let j = 0; j < extension.length; j++) {\n            let char:\
    \ string = extension[j];\n            if (char.toUpperCase() === char) {\n   \
    \             extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension: string\
    \ = \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension: string = extensions[i];\n        let strength:\
    \ number = 0;\n        for (let j = 0; j < extension.length; j++) {\n        \
    \    if (extension[j] >= \"A\" && extension[j] <= \"Z\") {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes", " \
    \   let strongest: string = \"\";\n    let strongest_strength: number = 0;\n \
    \   for (let i = 0; i < extensions.length; i++) {\n        let strength: number\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"Z\") {\n            \
    \    strength++;\n            }\n            else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes",
  "    let strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    extensions.forEach(extension => {\n        let strength: number\
    \ = 0;\n        for (let i: number = 0; i < extension.length; i++) {\n       \
    \     if (extension[i] === extension[i].toUpperCase()) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    });\n\
    \    return class_name + '.' + strongest_extension;\n}\n\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension.length; j++) {\n            let\
    \ char = extension[j];\n            if (char.toUpperCase() === char) {\n     \
    \           extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension: string =\
    \ \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension: string = extensions[i];\n        let strength:\
    \ number = 0;\n        for (let j = 0; j < extension.length; j++) {\n        \
    \    let char: string = extension[j];\n            if (char.toUpperCase() ===\
    \ char) {\n                strength++;\n            } else {\n               \
    \ strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z') {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", [\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"]));\nconsole.log(Strongest_Extension(\"\
    Slices\", [\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"]));\n\
    console.log(Strongest_Extension(\"Slices\", [\"SErviNGSliCes\", \"Cheese\", \"\
    StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\"]));\nconsole.log(Strongest_Extension(\"\
    Slices\", [\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\"\
    , \"SErviNGSliCes\"]));\nconsole.log(Strongest_Extension(\"Slices\", [\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\", \"SErviNGSliCes\"\
    , \"SErviNGSliCes\"]));\nconsole.log(Strongest_Extension(\"Slices\", [\"SErviNGSliCes\"\
    , \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\", \"SErviNGSliCes\"\
    ,", "    let strongest: string = \"\";\n    let strongest_strength: number = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let strength: number\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"Z\") {\n            \
    \    strength++;\n            }\n            else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes",
  "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let extension of extensions) {\n        let strength:\
    \ number = 0;\n        for (let char of extension) {\n            if (char.toUpperCase()\
    \ === char) {\n                strength++;\n            } else {\n           \
    \     strength--;\n            }\n        }\n        if (strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension:\
    \ string = '';\n    let strongest_strength: number = 0;\n    extensions.forEach(extension\
    \ => {\n        let strength: number = 0;\n        for (let i: number = 0; i <\
    \ extension.length; i++) {\n            if (extension[i] == extension[i].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    });\n    return class_name + '.' + strongest_extension;\n}\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest: string = extensions[0];\n\
    \    let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let extension: string = extensions[i];\n\
    \        let extension_strength: number = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char: string = extension[j];\n            if (char ==\
    \ char.toUpperCase()) {\n                extension_strength++;\n            }\
    \ else {\n                extension_strength--;\n            }\n        }\n  \
    \      if (extension_strength > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strongest_extension = extensions[0];\n    let strongest_strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let extension_strength: number\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"Z\") {\n            \
    \    extension_strength++;\n            }\n            else if (extensions[i][j]\
    \ >= \"a\" && extensions[i][j] <= \"z\") {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension = '';\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z')\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest: string = \"\"\
    ;\n    let strength: number = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let cap: number = 0;\n        let sm: number = 0;\n        for (let\
    \ j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j] >=\
    \ 'A' && extensions[i][j] <= 'Z') {\n                cap++;\n            }\n \
    \           else {\n                sm++;\n            }\n        }\n        if\
    \ (cap - sm > strength) {\n            strength = cap - sm;\n            strongest\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest;\n\
    }\n\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'Slices', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices',\
    \ 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'Slices', 'Slices',", "    let strongest: string = \"\"\
    ;\n    let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                strength++;\n            }\n            else {\n     \
    \           strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'Slices', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices',\
    \ 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices', '", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let extension: string = extensions[i];\n\
    \        let strength: number = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char: string = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                strength++;\n            } else {\n           \
    \     strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest = 0;\n    let strongest_extension = '';\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let cap = 0;\n        let sm =\
    \ 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n            if\
    \ (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                cap++;\n\
    \            } else {\n                sm++;\n            }\n        }\n     \
    \   if (cap - sm > strongest) {\n            strongest = cap - sm;\n         \
    \   strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z')\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n        let\
    \ extension: string = extensions[i];\n        let strength: number = 0;\n    \
    \    for (let j: number = 0; j < extension.length; j++) {\n            let char:\
    \ string = extension[j];\n            if (char === char.toUpperCase()) {\n   \
    \             strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z')\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let current_extension: string = extensions[i];\n\
    \        let current_strength: number = 0;\n        for (let j = 0; j < current_extension.length;\
    \ j++) {\n            if (current_extension[j] == current_extension[j].toUpperCase())\
    \ {\n                current_strength++;\n            } else {\n             \
    \   current_strength--;\n            }\n        }\n        if (current_strength\
    \ > strongest_strength) {\n            strongest_strength = current_strength;\n\
    \            strongest_extension = current_extension;\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuF", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    extensions.forEach(extension =>\
    \ {\n        let strength = 0;\n        for (let i = 0; i < extension.length;\
    \ i++) {\n            if (extension[i] >= 'A' && extension[i] <= 'Z') {\n    \
    \            strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    });\n    return class_name + '.' + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_strength) {\n            strongest_strength = extension_strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErvi", "    let strongest:\
    \ string = extensions[0];\n    let strongest_strength: number = 0;\n    for (let\
    \ i: number = 0; i < extensions.length; i++) {\n        let strength: number =\
    \ 0;\n        for (let j: number = 0; j < extensions[i].length; j++) {\n     \
    \       if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z') {\n          \
    \      strength++;\n            } else {\n                strength--;\n      \
    \      }\n        }\n        if (strength > strongest_strength) {\n          \
    \  strongest_strength = strength;\n            strongest = extensions[i];\n  \
    \      }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest_extension\
    \ = '';\n    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z')\
    \ {\n                extension_strength++;\n            }\n            else if\
    \ (extensions[i][j] >= 'a' && extensions[i][j] <= 'z') {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices', 'slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'slices', 'slices', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices', 'slices',\
    \ 'slices', 'slices']));\nconsole.log", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z')\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", [\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"]));", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_strength: number = 0;\n    for (let i: number\
    \ = 0; i < extensions.length; i++) {\n        let strength: number = 0;\n    \
    \    for (let j: number = 0; j < extensions[i].length; j++) {\n            if\
    \ (extensions[i][j] === extensions[i][j].toUpperCase()) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest: string\
    \ = \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                strength++;\n            }\n            else {\n     \
    \           strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGS", "    let strength: number\
    \ = 0;\n    let strongest: string = '';\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap: number = 0;\n        let sm: number = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                cap++;\n            }\
    \ else {\n                sm++;\n            }\n        }\n        if (cap - sm\
    \ > strength) {\n            strength = cap - sm;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'StuFfed']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'StuFfed', 'StuFfed']));", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let strength: number = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= \"A\" && extensions[i][j] <= \"Z\") {\n                strength++;\n    \
    \        } else {\n                strength--;\n            }\n        }\n   \
    \     if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'Slices', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices',\
    \ 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'Slices', 'Slices", "    let strongest_extension = \"\"\
    ;\n    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                extension_strength++;\n            }\n            else\
    \ if (extensions[i][j] >= \"a\" && extensions[i][j] <= \"z\") {\n            \
    \    extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'Slices', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices',\
    \ 'Slices', 'Slices']));\nconsole.log", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension.length; j++) {\n            let\
    \ char = extension[j];\n            if (char.toUpperCase() === char) {\n     \
    \           extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let current_extension = extensions[i];\n        let current_extension_strength\
    \ = 0;\n        for (let j = 0; j < current_extension.length; j++) {\n       \
    \     let current_char = current_extension[j];\n            if (current_char.toUpperCase()\
    \ === current_char) {\n                current_extension_strength++;\n       \
    \     } else {\n                current_extension_strength--;\n            }\n\
    \        }\n        if (current_extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = current_extension_strength;\n\
    \            strongest_extension = current_extension;\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strong", "    let strongest\
    \ = {\n        name: '',\n        strength: 0\n    };\n    for (let i = 0; i <\
    \ extensions.length; i++) {\n        let cap = 0;\n        let sm = 0;\n     \
    \   for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                cap++;\n            }\
    \ else {\n                sm++;\n            }\n        }\n        if (cap - sm\
    \ > strongest.strength) {\n            strongest.name = extensions[i];\n     \
    \       strongest.strength = cap - sm;\n        }\n    }\n    return class_name\
    \ + '.' + strongest.name;\n}\nconsole.log(Strongest_Extension('Slices', ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension('Slices', ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'slices']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'Slices']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'Slices', 'Slices', 'Slices']));\n\
    console.log(Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'slices', 'Slices', 'Slices', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'Slices',", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let\
    \ i: number = 0; i < extensions.length; i++) {\n        let extension_strength:\
    \ number = 0;\n        for (let j: number = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n\
    \                extension_strength++;\n            } else {\n               \
    \ extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'Stu",
  "    let strongest_extension = '';\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let strength = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z') {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest_extension;\n}\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z')\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for (let extension of\
    \ extensions) {\n        let strength = 0;\n        for (let letter of extension)\
    \ {\n            if (letter.toUpperCase() === letter) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(", "    let strongest: string\
    \ = \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                strength++;\n            }\n            else {\n     \
    \           strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'slices', 'slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'slices', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'slices', 'slices',\
    \ 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'Slices', 'slices', 'slices', '", "    let strongest: string\
    \ = \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                strength++;\n            }\n            else {\n     \
    \           strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGS", "    let strongest_extension\
    \ = \"\";\n    let strongest_strength = -1;\n    for (let extension of extensions)\
    \ {\n        let strength = 0;\n        for (let char of extension) {\n      \
    \      if (char.toUpperCase() === char) {\n                strength++;\n     \
    \       } else {\n                strength--;\n            }\n        }\n    \
    \    if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Cheese']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Cheese', 'StuFfed', 'Cheese']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Cheese', 'StuFfed', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Cheese', 'StuFfed', 'Cheese',\
    \ 'StuFfed', 'Cheese']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'Cheese', 'StuFfed', 'Cheese', 'StuFfed', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SEr", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char == char.toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_strength: number = 0;\n    for (let i: number\
    \ = 0; i < extensions.length; i++) {\n        let cap: number = 0;\n        let\
    \ sm: number = 0;\n        for (let j: number = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n\
    \                cap++;\n            } else {\n                sm++;\n       \
    \     }\n        }\n        let strength: number = cap - sm;\n        if (strength\
    \ > strongest_strength) {\n            strongest_strength = strength;\n      \
    \      strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let extension of extensions)\
    \ {\n        let strength = 0;\n        for (let char of extension) {\n      \
    \      if (char.toUpperCase() === char) {\n                strength++;\n     \
    \       } else {\n                strength--;\n            }\n        }\n    \
    \    if (strength > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliC", "    let strongest_extension: string = extensions[0];\n\
    \    let strongest_extension_strength: number = 0;\n    for (let i: number = 0;\
    \ i < extensions.length; i++) {\n        let extension_strength: number = 0;\n\
    \        for (let j: number = 0; j < extensions[i].length; j++) {\n          \
    \  if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n              \
    \  extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension = \"\
    \";\n    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let strength = 0;\n\
    \        for (let j = 0; j < extension.length; j++) {\n            let char =\
    \ extension[j];\n            if (char >= \"A\" && char <= \"Z\") {\n         \
    \       strength++;\n            } else if (char >= \"a\" && char <= \"z\") {\n\
    \                strength--;\n            }\n        }\n        if (strength >\
    \ strongest_strength) {\n            strongest_strength = strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension: string =\
    \ '';\n    let strongest_extension_strength: number = 0;\n    for (let i: number\
    \ = 0; i < extensions.length; i++) {\n        let extension_strength: number =\
    \ 0;\n        for (let j: number = 0; j < extensions[i].length; j++) {\n     \
    \       if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z') {\n          \
    \      extension_strength++;\n            } else if (extensions[i][j] >= 'a' &&\
    \ extensions[i][j] <= 'z') {\n                extension_strength--;\n        \
    \    }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z')\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", [\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"]));", "    let strongest_extension:\
    \ string = '';\n    let strongest_strength: number = 0;\n    let current_strength:\
    \ number = 0;\n    let current_extension: string = '';\n    for (let i: number\
    \ = 0; i < extensions.length; i++) {\n        current_extension = extensions[i];\n\
    \        current_strength = 0;\n        for (let j: number = 0; j < current_extension.length;\
    \ j++) {\n            if (current_extension[j] === current_extension[j].toUpperCase())\
    \ {\n                current_strength++;\n            } else {\n             \
    \   current_strength--;\n            }\n        }\n        if (current_strength\
    \ > strongest_strength) {\n            strongest_strength = current_strength;\n\
    \            strongest_extension = current_extension;\n        }\n    }\n    return\
    \ class_name + '.' + strongest_extension;\n}\n\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest: string = extensions[0];\n\
    \    let strongest_strength: number = 0;\n    for (let i: number = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j: number = 0; j\
    \ < extensions[i].length; j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j]\
    \ <= 'Z') {\n                strength++;\n            } else {\n             \
    \   strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension: string\
    \ = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let i =\
    \ 0; i < extensions.length; i++) {\n        let extension_strength: number = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= \"A\" && extensions[i][j] <= \"Z\") {\n                extension_strength++;\n\
    \            }\n            else if (extensions[i][j] >= \"a\" && extensions[i][j]\
    \ <= \"z\") {\n                extension_strength--;\n            }\n        }\n\
    \        if (extension_strength > strongest_extension_strength) {\n          \
    \  strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension", "    let strongest: number = 0;\n    let strongest_ext:\
    \ string = \"\";\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ cap: number = 0;\n        let sm: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strongest) {\n            strongest\
    \ = cap - sm;\n            strongest_ext = extensions[i];\n        }\n    }\n\
    \    return class_name + \".\" + strongest_ext;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest: string\
    \ = extensions[0];\n    let strongest_strength: number = 0;\n    for (let i =\
    \ 0; i < extensions.length; i++) {\n        let strength: number = 0;\n      \
    \  for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z') {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}\n", "    let strongest_extension: string = \"\";\n   \
    \ let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_strength: number = 0;\n    for (let i: number\
    \ = 0; i < extensions.length; i++) {\n        let strength: number = 0;\n    \
    \    for (let j: number = 0; j < extensions[i].length; j++) {\n            if\
    \ (extensions[i][j] >= \"A\" && extensions[i][j] <= \"Z\") {\n               \
    \ strength++;\n            } else {\n                strength--;\n           \
    \ }\n        }\n        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));",
  "    let strongest: string = \"\";\n    let strength: number = 0;\n    for (let\
    \ i: number = 0; i < extensions.length; i++) {\n        let cap: number = 0;\n\
    \        let sm: number = 0;\n        for (let j: number = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strength) {\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension.length; j++) {\n            let\
    \ char = extension[j];\n            if (char == char.toUpperCase()) {\n      \
    \          extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices', 'slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'slices', 'slices', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices', 'slices',\
    \ 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese", "    let strongest: number = 0;\n    let strongest_extension: string\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++) {\n        let cap:\
    \ number = 0;\n        let sm: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strongest) {\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Pizza\", ['Pepperoni', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Pizza\", ['Pepperoni', 'Cheese', 'StuFfed', 'Pizza']));\nconsole.log(Strongest_Extension(\"\
    Pizza\", ['Pepperoni', 'Cheese', 'StuFfed', 'Pizza', 'Pizza']));\nconsole.log(Strongest_Extension(\"\
    Pizza\", ['Pepperoni', 'Cheese', 'StuFfed', 'Pizza', 'Pizza', 'Pizza']));\nconsole.log(Strongest_Extension(\"\
    Pizza\", ['Pepperoni', 'Cheese', 'StuFfed', 'Pizza', 'Pizza', 'Pizza', 'Pizza']));\n\
    console.log(Strongest_Extension(\"Pizza\", ['Pepperoni', 'Cheese', 'StuFfed',\
    \ 'Pizza', 'Pizza', 'Pizza', 'Pizza', 'Pizza']));\nconsole.log(Strongest_Extension(\"\
    Pizza\", ['Pepperoni', 'Cheese', 'StuFfed', 'Pizza', 'Pizza', 'Pizza', 'Pizza',\
    \ 'Pizza', 'Pizza']));\n", "    let strongest_extension = extensions[0];\n   \
    \ let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension.length; j++) {\n            let\
    \ char = extension[j];\n            if (char.toUpperCase() === char) {\n     \
    \           extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension.length; j++) {\n            let\
    \ char = extension[j];\n            if (char == char.toUpperCase()) {\n      \
    \          extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest: string = '';\n   \
    \ let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap: number = 0;\n        let sm: number = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z') {\n                cap++;\n            }\
    \ else {\n                sm++;\n            }\n        }\n        let strength:\
    \ number = cap - sm;\n        if (strength > strongest_strength) {\n         \
    \   strongest_strength = strength;\n            strongest = extensions[i];\n \
    \       }\n    }\n    return class_name + '.' + strongest;\n}\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension: string\
    \ = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let i =\
    \ 0; i < extensions.length; i++) {\n        let extension_strength: number = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= \"A\" && extensions[i][j] <= \"Z\") {\n                extension_strength++;\n\
    \            }\n            else if (extensions[i][j] >= \"a\" && extensions[i][j]\
    \ <= \"z\") {\n                extension_strength--;\n            }\n        }\n\
    \        if (extension_strength > strongest_extension_strength) {\n          \
    \  strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));",
  "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    let current_extension_strength: number = 0;\n    let current_extension_uppercase_count:\
    \ number = 0;\n    let current_extension_lowercase_count: number = 0;\n    for\
    \ (let i = 0; i < extensions.length; i++) {\n        current_extension_uppercase_count\
    \ = 0;\n        current_extension_lowercase_count = 0;\n        for (let j = 0;\
    \ j < extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                current_extension_uppercase_count++;\n            } else\
    \ {\n                current_extension_lowercase_count++;\n            }\n   \
    \     }\n        current_extension_strength = current_extension_uppercase_count\
    \ - current_extension_lowercase_count;\n        if (current_extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = current_extension_strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char === char.toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ strength: number = 0;\n        for (let j = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"Z\") {\n\
    \                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                extension_strength++;\n            } else {\n \
    \               extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strongest_extension = extensions[0];\n    let strongest_strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let strength = 0;\n        for (let j = 0; j < extension.length; j++)\
    \ {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                strength++;\n            } else {\n           \
    \     strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension: string = extensions[i];\n        let strength: number = 0;\n    \
    \    for (let j = 0; j < extension.length; j++) {\n            let char: string\
    \ = extension[j];\n            if (char.toUpperCase() === char) {\n          \
    \      strength++;\n            } else {\n                strength--;\n      \
    \      }\n        }\n        if (strength > strongest_strength) {\n          \
    \  strongest_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices', 'slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'slices', 'slices', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices', 'slices',\
    \ 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'slic", "    let strongest_extension: string = extensions[0];\n\
    \    let strongest_strength: number = 0;\n    for (let i: number = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j: number = 0; j\
    \ < extensions[i].length; j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j]\
    \ <= 'Z') {\n                strength++;\n            } else {\n             \
    \   strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }\n\nconsole.log(Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed']));",
  "    let strongest: string = \"\";\n    let strength: number = 0;\n    for (let\
    \ i: number = 0; i < extensions.length; i++) {\n        let cap: number = 0;\n\
    \        let sm: number = 0;\n        for (let j: number = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strength) {\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let extension of extensions) {\n  \
    \      let strength = 0;\n        for (let letter of extension) {\n          \
    \  if (letter.toUpperCase() === letter) {\n                strength++;\n     \
    \       } else {\n                strength--;\n            }\n        }\n    \
    \    if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'StuFfed', 'StuFfed']));\n",
  "    let strongestExtension: string = \"\";\n    let strongestStrength: number =\
    \ 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension:\
    \ string = extensions[i];\n        let strength: number = 0;\n        for (let\
    \ j = 0; j < extension.length; j++) {\n            let char: string = extension[j];\n\
    \            if (char === char.toUpperCase()) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongestStrength) {\n            strongestStrength =\
    \ strength;\n            strongestExtension = extension;\n        }\n    }\n \
    \   return class_name + \".\" + strongestExtension;\n}\n", "    let strongestExtension\
    \ = \"\";\n    let strongestStrength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongestStrength) {\n     \
    \       strongestStrength = strength;\n            strongestExtension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongestExtension;\n}\n\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGS", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                extension_strength++;\n            } else {\n \
    \               extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'slices', 'slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'slices', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'slices', 'slices',\
    \ 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ '", "    let strongest_extension = \"\";\n    let strongest_strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= \"A\" && extensions[i][j] <= \"Z\") {\n                strength++;\n    \
    \        }\n            else if (extensions[i][j] >= \"a\" && extensions[i][j]\
    \ <= \"z\") {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest: number\
    \ = 0;\n    let strongest_extension: string = '';\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap: number = 0;\n        let sm: number = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                cap++;\n            }\
    \ else {\n                sm++;\n            }\n        }\n        if (cap - sm\
    \ > strongest) {\n            strongest = cap - sm;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }\n\nconsole.log(Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Cheese']));\nconsole.log(Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese',\
    \ 'StuFfed', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Cheese', 'StuFfed', 'Cheese']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Cheese', 'StuFfed', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Cheese', 'StuFfed', 'Cheese', 'StuFfed', 'Cheese']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Cheese', 'StuFfed", "    let strongest:\
    \ string = '';\n    let strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap: number = 0;\n        let sm: number = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()) {\n                cap++;\n            }\
    \ else {\n                sm++;\n            }\n        }\n        if (cap - sm\
    \ > strength) {\n            strength = cap - sm;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes']));\nconsole.log(Strongest_Extension('Slices', ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliC", "    let\
    \ strongest_extension: string = \"\";\n    let strongest_strength: number = 0;\n\
    \    extensions.forEach(extension => {\n        let strength: number = 0;\n  \
    \      for (let i: number = 0; i < extension.length; i++) {\n            if (extension[i]\
    \ === extension[i].toUpperCase()) {\n                strength++;\n           \
    \ } else {\n                strength--;\n            }\n        }\n        if\
    \ (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    });\n    return\
    \ class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let current_extension_strength:\
    \ number = 0;\n        let current_extension: string = extensions[i];\n      \
    \  for (let j = 0; j < current_extension.length; j++) {\n            if (current_extension[j]\
    \ === current_extension[j].toUpperCase()) {\n                current_extension_strength++;\n\
    \            } else {\n                current_extension_strength--;\n       \
    \     }\n        }\n        if (current_extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = current_extension_strength;\n\
    \            strongest_extension = current_extension;\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'Slices', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices',\
    \ 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'Slices', 'Slices", "    let strongest_extension: string\
    \ = \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength: number = 0;\n        for (let j = 0;\
    \ j < extensions[i].length; j++) {\n            if (extensions[i][j] >= \"A\"\
    \ && extensions[i][j] <= \"Z\") {\n                extension_strength++;\n   \
    \         }\n            else if (extensions[i][j] >= \"a\" && extensions[i][j]\
    \ <= \"z\") {\n                extension_strength--;\n            }\n        }\n\
    \        if (extension_strength > strongest_strength) {\n            strongest_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices', 'slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'slices', 'slices', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'slices', 'slices', 'slices',\
    \ 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'slices', 'slices', 'slices', 'slices", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char === char.toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z') {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}\n", "    let strongest_extension:\
    \ string = extensions[0];\n    let strongest_extension_strength: number = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let current_extension_strength:\
    \ number = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n    \
    \        if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n        \
    \        current_extension_strength++;\n            } else {\n               \
    \ current_extension_strength--;\n            }\n        }\n        if (current_extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = current_extension_strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                extension_strength++;\n            } else {\n \
    \               extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strongest: string = \"\";\n    let strongest_strength: number = 0;\n   \
    \ for (let i = 0; i < extensions.length; i++) {\n        let strength: number\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"Z\") {\n            \
    \    strength++;\n            }\n            else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes",
  "    let strongest_extension: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength:\
    \ number = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n    \
    \        if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"Z\") {\n     \
    \           strength++;\n            } else {\n                strength--;\n \
    \           }\n        }\n        if (strength > strongest_strength) {\n     \
    \       strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let strength = 0;\n        for (let\
    \ j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()) {\n                strength++;\n           \
    \ } else {\n                strength--;\n            }\n        }\n        if\
    \ (strength > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'Slices', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices',\
    \ 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'Slices', 'S", "    let strongest_extension = \"\";\n \
    \   let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliC", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'slices', 'slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'slices', 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'slices', 'slices',\
    \ 'slices', 'slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Che", "    let strongest: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength:\
    \ number = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n    \
    \        if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n         \
    \       strength++;\n            } else {\n                strength--;\n     \
    \       }\n        }\n        if (strength > strongest_strength) {\n         \
    \   strongest_strength = strength;\n            strongest = extensions[i];\n \
    \       }\n    }\n    return class_name + \".\" + strongest;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                extension_strength++;\n            } else {\n \
    \               extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strongest_extension: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n        let\
    \ strength: number = 0;\n        for (let j: number = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_strength: number = 0;\n    let strength: number\
    \ = 0;\n    let cap: number = 0;\n    let sm: number = 0;\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        strength = cap - sm;\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n        cap = 0;\n        sm = 0;\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliC", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));",
  "    let strongest: number = 0;\n    let strongest_extension: string = '';\n   \
    \ for (let i: number = 0; i < extensions.length; i++) {\n        let strength:\
    \ number = 0;\n        for (let j: number = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z') {\n \
    \               strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest) {\n            strongest\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}\n\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension: string\
    \ = \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Slices', 'Slices', 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Slices', 'Slices', 'Slices',\
    \ 'Slices', 'Slices']));\nconsole.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'Slices', 'Slices', 'S", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let strength: number = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= \"A\" && extensions[i][j] <= \"Z\") {\n                strength++;\n    \
    \        } else {\n                strength--;\n            }\n        }\n   \
    \     if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = '';\n    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z')\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}\n\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed']));\n\
    console.log(Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'Cheese', 'StuFfed', 'SErvi", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                extension_strength++;\n            } else {\n \
    \               extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'Cheese', 'StuFfed', 'SErviNGSliCes', 'Cheese', 'StuFfed', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes']));", "    let strongest_extension: string = \"\";\n    let\
    \ strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension = extensions[0];\n    let strongest_strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z') {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let\
    \ i: number = 0; i < extensions.length; i++) {\n        let extension_strength:\
    \ number = 0;\n        for (let j: number = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"Z\") {\n\
    \                extension_strength++;\n            } else if (extensions[i][j]\
    \ >= \"a\" && extensions[i][j] <= \"z\") {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension: string\
    \ = \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength: number = 0;\n        for (let j = 0;\
    \ j < extensions[i].length; j++) {\n            if (extensions[i][j] >= \"A\"\
    \ && extensions[i][j] <= \"Z\") {\n                extension_strength++;\n   \
    \         }\n            else if (extensions[i][j] >= \"a\" && extensions[i][j]\
    \ <= \"z\") {\n                extension_strength--;\n            }\n        }\n\
    \        if (extension_strength > strongest_strength) {\n            strongest_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let extension_strength: number\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'StuFfed', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'StuFfed', 'StuFfed', 'StuFfed']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'StuFfed', 'StuFfed', 'StuFfed', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'StuFfed', 'StuFfed', 'StuFfed',\
    \ 'StuFfed', 'StuFfed']));\nconsole.log(Strongest_Extension(\"S", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                extension_strength++;\n            } else {\n \
    \               extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes']));\n\
    console.log(Strongest_Extension(\"Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed',\
    \ 'SErviNGSliCes', 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"\
    Slices\", ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErviNGSliCes', 'SErviNGSliCes',\
    \ 'SErviNGSliCes', 'SErviNGSliCes']));\nconsole.log(Strongest_Extension(\"Slices\"\
    , ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SErvi", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

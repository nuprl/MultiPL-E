language: ts
name: HumanEval_27_flip_case
results:
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = '';\n    for (let i: number = 0; i < string.length; i++) {\n      \
    \  if (string[i] === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char.toLowerCase() === char) {\n            return char.toUpperCase();\n\
    \        } else {\n            return char.toLowerCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let new_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            new_string += string[i].toLowerCase();\n\
    \        } else {\n            new_string += string[i].toUpperCase();\n      \
    \  }\n    }\n    return new_string;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char.toUpperCase() === char) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char.toUpperCase() === char) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n\
    \        if (char === char.toUpperCase()) {\n            flipped += char.toLowerCase();\n\
    \        } else {\n            flipped += char.toUpperCase();\n        }\n   \
    \ }\n    return flipped;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let new_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            new_string += string[i].toLowerCase();\n\
    \        } else {\n            new_string += string[i].toUpperCase();\n      \
    \  }\n    }\n    return new_string;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped:\
    \ string = \"\";\n    for (let i: number = 0; i < string.length; i++) {\n    \
    \    if (string[i] === string[i].toUpperCase()) {\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let new_string\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            new_string += string[i].toLowerCase();\n\
    \        } else {\n            new_string += string[i].toUpperCase();\n      \
    \  }\n    }\n    return new_string;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char.match(/[a-z]/)) {\n            return char.toUpperCase();\n\
    \        } else if (char.match(/[A-Z]/)) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char;\n        }\n    }).join('');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char.toUpperCase() === char) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char.match(/[a-z]/)) {\n            return char.toUpperCase();\n\
    \        } else if (char.match(/[A-Z]/)) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char;\n        }\n    }).join('');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let new_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            new_string += string[i].toLowerCase();\n\
    \        } else {\n            new_string += string[i].toUpperCase();\n      \
    \  }\n    }\n    return new_string;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ == string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        return char.toUpperCase() === char ? char.toLowerCase() : char.toUpperCase();\n\
    \    }).join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n\
    \        if (char === char.toUpperCase()) {\n            result += char.toLowerCase();\n\
    \        } else {\n            result += char.toUpperCase();\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n  let newString\
    \ = \"\";\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] ===\
    \ string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n  \
    \  } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconsole.log(flip_case(\"Hello World\"));\nconsole.log(flip_case(\"\
    Hello-LOL\"));\nconsole.log(flip_case(\"Sup DUDE!!?\"));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char.toUpperCase() === char) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char.match(/[a-z]/)) {\n            return char.toUpperCase();\n\
    \        } else if (char.match(/[A-Z]/)) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char;\n        }\n    }).join('');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ == string[i].toUpperCase()) {\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        return char === char.toUpperCase() ? char.toLowerCase() : char.toUpperCase();\n\
    \    }).join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char.match(/[a-z]/)) {\n            return char.toUpperCase();\n\
    \        } else if (char.match(/[A-Z]/)) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char;\n        }\n    }).join('');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ == string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = '';\n    for (let i: number = 0; i < string.length; i++) {\n      \
    \  if (string[i] === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char.toUpperCase() === char) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char:\
    \ string) {\n        return char.toUpperCase() === char ? char.toLowerCase() :\
    \ char.toUpperCase();\n    }).join('');\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char.toUpperCase() === char) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let new_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            new_string += string[i].toLowerCase();\n\
    \        } else {\n            new_string += string[i].toUpperCase();\n      \
    \  }\n    }\n    return new_string;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n\
    \        if (char == char.toUpperCase()) {\n            result += char.toLowerCase();\n\
    \        } else {\n            result += char.toUpperCase();\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char.toUpperCase() === char) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        return char.toUpperCase() === char ? char.toLowerCase() : char.toUpperCase();\n\
    \    }).join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char.match(/[a-z]/)) {\n            return char.toUpperCase();\n\
    \        } else if (char.match(/[A-Z]/)) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char;\n        }\n    }).join('');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n  let flipped_string\
    \ = '';\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === string[i].toUpperCase())\
    \ {\n      flipped_string += string[i].toLowerCase();\n    } else {\n      flipped_string\
    \ += string[i].toUpperCase();\n    }\n  }\n  return flipped_string;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        return char === char.toUpperCase() ? char.toLowerCase() : char.toUpperCase();\n\
    \    }).join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconsole.log(flip_case('Hello World'));\n\
    console.log(flip_case('Hello-LOL'));\nconsole.log(flip_case('Sup DUDE!!?'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char.toUpperCase() === char) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char.match(/[a-z]/)) {\n            return char.toUpperCase();\n\
    \        } else if (char.match(/[A-Z]/)) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char;\n        }\n    }).join('');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n\
    \        if (char.toUpperCase() === char) {\n            flipped_string += char.toLowerCase();\n\
    \        } else {\n            flipped_string += char.toUpperCase();\n       \
    \ }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ == string[i].toUpperCase()) {\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char.match(/[a-z]/)) {\n            return char.toUpperCase();\n\
    \        } else if (char.match(/[A-Z]/)) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char;\n        }\n    }).join('');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        return char.toUpperCase() === char ? char.toLowerCase() : char.toUpperCase();\n\
    \    }).join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ == string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char.toUpperCase() === char) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char.match(/[a-z]/)) {\n            return char.toUpperCase();\n\
    \        } else if (char.match(/[A-Z]/)) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char;\n        }\n    }).join('');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char.match(/[a-z]/)) {\n            return char.toUpperCase();\n\
    \        } else if (char.match(/[A-Z]/)) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char;\n        }\n    }).join('');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let new_string\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            new_string += string[i].toLowerCase();\n\
    \        } else {\n            new_string += string[i].toUpperCase();\n      \
    \  }\n    }\n    return new_string;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char.toUpperCase() === char) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char.match(/[a-z]/)) {\n            return char.toUpperCase();\n\
    \        } else if (char.match(/[A-Z]/)) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char;\n        }\n    }).join('');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char.toLowerCase() === char) {\n            return char.toUpperCase();\n\
    \        } else {\n            return char.toLowerCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ == string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char.toLowerCase() === char) {\n            return char.toUpperCase();\n\
    \        } else {\n            return char.toLowerCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char.toLowerCase() === char) {\n            return char.toUpperCase();\n\
    \        } else {\n            return char.toLowerCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char.match(/[a-z]/)) {\n            return char.toUpperCase();\n\
    \        } else if (char.match(/[A-Z]/)) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char;\n        }\n    }).join('');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ == string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char.toUpperCase() === char) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ == string[i].toUpperCase()) {\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char.toUpperCase() === char) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char.match(/[a-z]/)) {\n            return char.toUpperCase();\n\
    \        } else if (char.match(/[A-Z]/)) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char;\n        }\n    }).join('');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let new_string\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            new_string += string[i].toLowerCase();\n\
    \        } else {\n            new_string += string[i].toUpperCase();\n      \
    \  }\n    }\n    return new_string;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    var newString\
    \ = \"\";\n    for (var i = 0; i < string.length; i++) {\n        if (string[i]\
    \ == string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let new_string\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            new_string += string[i].toLowerCase();\n\
    \        } else {\n            new_string += string[i].toUpperCase();\n      \
    \  }\n    }\n    return new_string;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char.toUpperCase() === char) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    var newString\
    \ = \"\";\n    for (var i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\nconsole.log(flip_case(\"Hello World\"));\nconsole.log(flip_case(\"\
    HELLO WORLD\"));\nconsole.log(flip_case(\"hEllO wOrLd\"));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'hELLO wORLD

    hello world

    HeLLo WoRlD

    '
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char.toLowerCase() === char) {\n            return char.toUpperCase();\n\
    \        }\n        return char.toLowerCase();\n    }).join('');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\nconsole.log(flip_case('Hello World'));\nconsole.log(flip_case('HELLO WORLD'));\n\
    console.log(flip_case('12345'));\nconsole.log(flip_case('1a2b3c4d5e'));\nconsole.log(flip_case('String.prototype.split'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'hELLO wORLD

    hello world

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = '';\n    for (let i = 0; i < string.length; i++) {\n        let char\
    \ = string[i];\n        if (char === char.toUpperCase()) {\n            result\
    \ += char.toLowerCase();\n        } else {\n            result += char.toUpperCase();\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ == string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let new_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            new_string += string[i].toLowerCase();\n\
    \        } else {\n            new_string += string[i].toUpperCase();\n      \
    \  }\n    }\n    return new_string;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char.match(/[a-z]/)) {\n            return char.toUpperCase();\n\
    \        } else if (char.match(/[A-Z]/)) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char;\n        }\n    }).join('');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let new_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            new_string += string[i].toLowerCase();\n\
    \        } else {\n            new_string += string[i].toUpperCase();\n      \
    \  }\n    }\n    return new_string;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(function(char)\
    \ {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let result:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let new_string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            new_string += string[i].toLowerCase();\n\
    \        } else {\n            new_string += string[i].toUpperCase();\n      \
    \  }\n    }\n    return new_string;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char.match(/[a-z]/)) {\n            return char.toUpperCase();\n\
    \        } else if (char.match(/[A-Z]/)) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char;\n        }\n    }).join('');\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped:\
    \ string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let flipped_string\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            flipped_string += string[i].toLowerCase();\n\
    \        } else {\n            flipped_string += string[i].toUpperCase();\n  \
    \      }\n    }\n    return flipped_string;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    return string.split('').map(char\
    \ => {\n        if (char === char.toUpperCase()) {\n            return char.toLowerCase();\n\
    \        } else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978188
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string: string): string {\n    let newString\
    \ = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978190

language: ts
name: HumanEval_76_is_simple_power
results:
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27,\
    \ 3));\nconsole.log(is_simple_power(64, 4));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(216, 6));\nconsole.log(is_simple_power(343,\
    \ 7));\nconsole.log(is_simple_power(512, 8));\nconsole.log(is_simple_power(729,\
    \ 9));\nconsole.log(is_simple_power(1000, 10));\nconsole.log(is_simple_power(1331,\
    \ 11));\nconsole.log(is_simple_power(1728, 12));\nconsole.log(is_simple_power(2197,\
    \ 13));\nconsole.log(is_simple_power(2744, 14));\nconsole.log(is_simple_power(3375,\
    \ 15));\nconsole.log(is_simple_power(4096, 16));\nconsole.log(is_simple_power(4913,\
    \ 17));\nconsole.log(is_simple_power(5832, 18));\nconsole.log(is_simple_power(6859,\
    \ 19));\nconsole.log(is_simple_power(8000, 20));\nconsole.log(is_simple_power(9261,\
    \ 21));\nconsole.log(is_simple_power(10648, 22));\nconsole.log(is_simple_power(12167,\
    \ 23));\nconsole.log(is_simple_power(13824, 24));\nconsole.log(is_simple_power(15625,\
    \ 25));\nconsole.log(is_simple_power(17576, 26));\nconsole.log(is_simple_power(19683,\
    \ 27));\nconsole.log(is_simple_power(21952, 28));\nconsole.log(is_simple_power(24389,\
    \ 29));\nconsole.log(is_simple_power(27000, 30));\nconsole.log(is_simple_power(29791,\
    \ 31));\nconsole.log(is_simple_power(\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppr_b2bia.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660012998
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  if (x === 1) {\n    result = true;\n  }\
    \ else {\n    let i = 2;\n    while (i < x) {\n      if (Math.pow(n, i) === x)\
    \ {\n        result = true;\n        break;\n      }\n      i++;\n    }\n  }\n\
    \  return result;\n}\n\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(5, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(9, 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(126,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(624,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    true

    false

    true

    true

    true

    false

    true

    false

    true

    false

    true

    false

    true

    false

    true

    false

    true

    false

    true

    false

    true

    false

    true

    false

    true

    false

    true

    '
  timestamp: 1660012998
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1,\
    \ 2));\nconsole.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1,\
    \ 7));\nconsole.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\n\
    console.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\nconsole.log(is_simple_power(1,\
    \ 24));\nconsole.log(is_simple_power(1, 25));\nconsole.log(is_simple_power(1,\
    \ 26));\nconsole.log(is_simple_power(1, 27));\nconsole.log(is_simple_power(1,\
    \ 28));\nconsole.log(is_simple_power(1, 29));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa03jsetu.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660012998
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1,\
    \ 2));\nconsole.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1,\
    \ 7));\nconsole.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\n\
    console.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\nconsole.log(is_simple_power(1,\
    \ 24));\nconsole.log(is_simple_power(1, 25));\nconsole.log(is_simple_power(1,\
    \ 26));\nconsole.log(is_simple_power(1, 27));\nconsole.log(is_simple_power(1,\
    \ 28));\nconsole.log(is_simple_power(1, 29));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1j8puvr7.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660012998
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  let i = 0;\n  while (Math.pow(n, i) <= x)\
    \ {\n    if (Math.pow(n, i) === x) {\n      result = true;\n    }\n    i++;\n\
    \  }\n  return result;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(5,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(216, 6));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1,\
    \ 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\n\
    console.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\nconsole.log(is_simple_power(1, 22));\nconsole.log(is_simple_power(1,\
    \ 23));\nconsole.log(is_simple_power(1, 24));\nconsole.log(\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkpg8nwe5.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660012998
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0rh8964u.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660012998
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(126, 5));\nconsole.log(is_simple_power(625,\
    \ 5));\nconsole.log(is_simple_power(626, 5));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1,\
    \ 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\n\
    console.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\nconsole.log(is_simple_power(1, 22));\nconsole.log(is_simple_power(1,\
    \ 23));\nconsole.log(is_simple_power(1, 24));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpx6ko6iqp.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660012998
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  let power = 1;\n  while (power <= x) {\n\
    \    if (power === x) {\n      result = true;\n    }\n    power *= n;\n  }\n \
    \ return result;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(1,\
    \ 5));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(0, 0));\n\
    console.log(is_simple_power(1, 0));\nconsole.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9,\
    \ 2));\nconsole.log(is_simple_power(16, 2));\nconsole.log(is_simple_power(25,\
    \ 2));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(32,\
    \ 2));\nconsole.log(is_simple_power(64, 2));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(243,\
    \ 3));\nconsole.log(is_simple_power(256, 2));\nconsole.log(is_simple_power(625,\
    \ 5));\nconsole.log(is_simple_power(729, 3));\nconsole.log(is_simple_power(1000,\
    \ 10));\nconsole.log(is_simple_power(1024, 2));\nconsole.log(is_simple_power(3125,\
    \ 5));\nconsole.log(is_simple_power(7776, 6));\nconsole.log(is_simple_power(16807,\
    \ 7));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    true

    true

    true

    '
  timestamp: 1660013013
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result: number = 1;\n    let i: number = 0;\n    while (result\
    \ <= x) {\n        result = Math.pow(n, i);\n        if (result === x) {\n   \
    \         return true;\n        }\n        i++;\n    }\n    return false;\n}\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 2));\nconsole.log(is_simple_power(64,\
    \ 4));\nconsole.log(is_simple_power(65, 4));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(257, 4));\nconsole.log(is_simple_power(1024,\
    \ 4));\nconsole.log(is_simple_power(1025, 4));\nconsole.log(is_simple_power(1024,\
    \ 5));\nconsole.log(is_simple_power(1025, 5));\nconsole.log(is_simple_power(1024,\
    \ 10));\nconsole.log(is_simple_power(1025, 10));\nconsole.log(is_simple_power(1024,\
    \ 20));\nconsole.log(is_simple_power(1025, 20));\nconsole.log(is_simple_power(1024,\
    \ 100));\nconsole.log(is_simple_power(1025, 100));\nconsole.log(is_simple_power(1024,\
    \ 1000));\nconsole.log(is_simple_power(1025, 1000));\nconsole.log(is_simple_power(1024,\
    \ 10000));\nconsole.log(is_simple_power(1025, 10000));\nconsole.log(is_simple_power(1024,\
    \ 100000));\nconsole.log(is_simple_power(1025, 100000));\nconsole.log(is_simple_power(1024,\
    \ 1000000));\nconsole.log(is_simple_power(1025, 1000000));\nconsole.log(is_simple_power(1024,\
    \ 10000000));\nconsole.log(is_simple_power(1025, 10000000));\nconsole.log(is_simple_power(1024,\
    \ 100000000));\nconsole.log(is_simple_power(1025, 100000000));\nconsole\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    true

    false

    true

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660012998
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  for (let i = 1; i <= x; i++) {\n    if (Math.pow(n,\
    \ i) === x) {\n      result = true;\n    }\n  }\n  return result;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(216, 6));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1,\
    \ 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\n\
    console.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\nconsole.log(is_simple_power(1, 22));\nconsole.log(is_simple_power(1,\
    \ 23));\nconsole.log(is_simple_power(1, 24));\nconsole.log(is_simple_power(1,\
    \ 25));\nconsole.log(is_simple_power(1, 26));\nconsole\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpldacypsm.js:57:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpldacypsm.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660012998
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let power = Math.log(x) / Math.log(n);\n  return Number.isInteger(power);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprpf_w5_u.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660012998
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(16,\
    \ 2));\nconsole.log(is_simple_power(32, 2));\nconsole.log(is_simple_power(64,\
    \ 2));\nconsole.log(is_simple_power(128, 2));\nconsole.log(is_simple_power(256,\
    \ 2));\nconsole.log(is_simple_power(512, 2));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(2048, 2));\nconsole.log(is_simple_power(4096,\
    \ 2));\nconsole.log(is_simple_power(8192, 2));\nconsole.log(is_simple_power(16384,\
    \ 2));\nconsole.log(is_simple_power(32768, 2));\nconsole.log(is_simple_power(65536,\
    \ 2));\nconsole.log(is_simple_power(131072, 2));\nconsole.log(is_simple_power(262144,\
    \ 2));\nconsole.log(is_simple_power(524288, 2));\nconsole.log(is_simple_power(1048576,\
    \ 2));\nconsole.log(is_simple_power(2097152, 2));\nconsole.log(is_simple_power(4194304,\
    \ 2));\nconsole.log(is_simple_power(8388608, 2));\nconsole.log(is_simple_power(16777216,\
    \ 2));\nconsole.log(is_simple_power(33554432, 2));\nconsole.log(is_simple_power(67108864,\
    \ 2));\nconsole.log(is_simple_power(134217728, 2));\nconsole.log(is_simple_power(268435456,\
    \ 2));\nconsole.log(is_simple_power(5368\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcv4kivh0.ts(40,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpcv4kivh0.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660012998
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let i = 1;\n    while (n ** i <= x)\
    \ {\n        if (n ** i === x) {\n            result = true;\n        }\n    \
    \    i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(4, 2));\n\
    console.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1,\
    \ 3));\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\n\
    console.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1,\
    \ 8));\nconsole.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\n\
    console.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\nconsole.log(is_simple_power(1, 22));\nconsole.log(is_simple_power(1,\
    \ 23));\nconsole.log(is_simple_power(1, 24));\nconsole.log(is_simple_power(1,\
    \ 25));\nconsole.log(is_simple_power(1, 26));\nconsole.log(is_simple_power(1,\
    \ 27));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    true

    true

    '
  timestamp: 1660013013
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return Number.isInteger(power);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(256, 2));\nconsole.log(is_simple_power(256,\
    \ 1));\nconsole.log(is_simple_power(1, 256));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 0));\nconsole.log(is_simple_power(0, 0));\n\
    console.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(0, 2));\nconsole.log(is_simple_power(0,\
    \ 3));\nconsole.log(is_simple_power(0, 4));\nconsole.log(is_simple_power(0, 5));\n\
    console.log(is_simple_power(0, 6));\nconsole.log(is_simple_power(0, 7));\nconsole.log(is_simple_power(0,\
    \ 8));\nconsole.log(is_simple_power(0, 9));\nconsole.log(is_simple_power(0, 10));\n\
    console.log(is_simple_power(0, 11));\nconsole.log(is_simple_power(0, 12));\nconsole.log(is_simple_power(0,\
    \ 13));\nconsole.log(is_simple_power(0, 14));\nconsole.log(is_simple_power(0,\
    \ 15));\nconsole.log(is_simple_power(0, 16));\nconsole.log(is_simple_power(0,\
    \ 17));\nconsole.log(is_simple_power(0, 18));\nconsole.log(is_simple_power(0,\
    \ 19));\nconsole.log(is_simple_power(0, 20));\nconsole.log(is_simple_power(0,\
    \ 21));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwaold60s.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660012998
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(5, 125));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(4, 256));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1,\
    \ 2));\nconsole.log(is_simple_power(2, 1));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(2, 3));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 3));\nconsole.log(is_simple_power(3, 4));\nconsole.log(is_simple_power(4, 3));\n\
    console.log(is_simple_power(4, 4));\nconsole.log(is_simple_power(4, 5));\nconsole.log(is_simple_power(5,\
    \ 4));\nconsole.log(is_simple_power(5, 5));\nconsole.log(is_simple_power(5, 6));\n\
    console.log(is_simple_power(6, 5));\nconsole.log(is_simple_power(6, 6));\nconsole.log(is_simple_power(6,\
    \ 7));\nconsole.log(is_simple_power(7, 6));\nconsole.log(is_simple_power(7, 7));\n\
    console.log(is_simple_power(7, 8));\nconsole.log(is_simple_power(8, 7));\nconsole.log(is_simple_power(8,\
    \ 8));\nconsole.log(is_simple_power(8, 9));\nconsole.log(is_simple_power(9, 8));\n\
    console.log(is_simple_power(9, 9));\nconsole.log(is_simple_power(9, 10));\nconsole.log(is_simple_power(10,\
    \ 9));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7llgb4ij.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660012998
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  if (x === 1) {\n    result = true;\n  }\
    \ else {\n    let i = 2;\n    while (i < x) {\n      if (Math.pow(n, i) === x)\
    \ {\n        result = true;\n        break;\n      }\n      i++;\n    }\n  }\n\
    \  return result;\n}\n\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(5, 1));\nconsole.log(is_simple_power(25, 5));\nconsole.log(is_simple_power(24,\
    \ 4));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(30,\
    \ 5));\nconsole.log(is_simple_power(64, 4));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(216, 6));\nconsole.log(is_simple_power(343,\
    \ 7));\nconsole.log(is_simple_power(512, 8));\nconsole.log(is_simple_power(729,\
    \ 9));\nconsole.log(is_simple_power(1000, 10));\nconsole.log(is_simple_power(1331,\
    \ 11));\nconsole.log(is_simple_power(1728, 12));\nconsole.log(is_simple_power(2197,\
    \ 13));\nconsole.log(is_simple_power(2744, 14));\nconsole.log(is_simple_power(3375,\
    \ 15));\nconsole.log(is_simple_power(4096, 16));\nconsole.log(is_simple_power(4913,\
    \ 17));\nconsole.log(is_simple_power(5832, 18));\nconsole.log(is_simple_power(6859,\
    \ 19));\nconsole.log(is_simple_power(8000, 20));\nconsole.log(is_simple_power(9261,\
    \ 21));\nconsole.log(is\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9op2b1og.ts(50,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp9op2b1og.ts(50,9): error TS1005: '','' expected.

    '
  timestamp: 1660012998
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1,\
    \ 2));\nconsole.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1,\
    \ 7));\nconsole.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\n\
    console.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\nconsole.log(is_simple_power(1,\
    \ 24));\nconsole.log(is_simple_power(1, 25));\nconsole.log(is_simple_power(1,\
    \ 26));\nconsole.log(is_simple_power(1, 27));\nconsole.log(is_simple_power(1,\
    \ 28));\nconsole.log(is_simple_power(1, 29));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa03jsetu.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660012998
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  let power = 1;\n  while (power < x) {\n\
    \    power *= n;\n  }\n  if (power === x) {\n    result = true;\n  }\n  return\
    \ result;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(72, 3));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    true

    false

    '
  timestamp: 1660012998
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result: number = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplq1ymizl.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660012998
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(9, 3));\nconsole.log(is_simple_power(5, 5));\nconsole.log(is_simple_power(121,\
    \ 11));\nconsole.log(is_simple_power(100, 10));\nconsole.log(is_simple_power(36,\
    \ 6));\nconsole.log(is_simple_power(72, 8));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(216, 6));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(343, 7));\nconsole.log(is_simple_power(1331,\
    \ 11));\nconsole.log(is_simple_power(1728, 12));\nconsole.log(is_simple_power(2401,\
    \ 13));\nconsole.log(is_simple_power(4096, 16));\nconsole.log(is_simple_power(6561,\
    \ 17));\nconsole.log(is_simple_power(10000, 10));\nconsole.log(is_simple_power(14641,\
    \ 11));\nconsole.log(is_simple_power(20736, 12));\nconsole.log(is_simple_power(28561,\
    \ 13));\nconsole.log(is_simple_power(38416, 14));\nconsole.log(is_simple_power(50625,\
    \ 15));\nconsole.log(is_simple_power(65536, 16));\nconsole.log(is_simple_power(83521,\
    \ 17));\nconsole.log(is_simple_power(104976, 18));\nconsole.log(is_simple_power(130321,\
    \ 19));\nconsole.log(is_simple_power(160000, 20));\nconsole.log(is_simple_power(194481,\
    \ 21));\nconsole.log(is_simple_power(234256, 22));\nconsole.log(is_simple_power(\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0ed6yukk.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660012998
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1024, 5));\n\
    console.log(is_simple_power(2401, 7));\nconsole.log(is_simple_power(4096, 16));\n\
    console.log(is_simple_power(50625, 5));\nconsole.log(is_simple_power(10000000000,\
    \ 10));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 10));\n\
    console.log(is_simple_power(1, 100));\nconsole.log(is_simple_power(1, 1000));\n\
    console.log(is_simple_power(1, 10000));\nconsole.log(is_simple_power(1, 100000));\n\
    console.log(is_simple_power(1, 1000000));\nconsole.log(is_simple_power(1, 10000000));\n\
    console.log(is_simple_power(1, 100000000));\nconsole.log(is_simple_power(1, 1000000000));\n\
    console.log(is_simple_power(1, 10000000000));\nconsole.log(is_simple_power(1,\
    \ 100000000000));\nconsole.log(is_simple_power(1, 1000000000000));\nconsole.log(is_simple_power(1,\
    \ 10000000000000));\nconsole.log(is_simple_power(1, 100000000000000));\nconsole.log(is_simple_power(1,\
    \ 1000000000000000));\nconsole.log(is_simple_power(1, 10000000000000000));\nconsole.log(is_simple_power(1,\
    \ 100000000000000000));\nconsole.log(is_simple_power(1, 1000000000000000000));\n\
    console.log(is_simple_power(1, 10000000000000000000));\nconsole.log(is_simple_power(1,\
    \ 100000000000000000000));\nconsole.log(is_simple_power(1, 1000000000000000000\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpn87f2euf.ts(40,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpn87f2euf.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660012998
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result: number = Math.log(x) / Math.log(n);\n    return result\
    \ % 1 === 0;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(1024, 3));\nconsole.log(is_simple_power(1024,\
    \ 10));\nconsole.log(is_simple_power(1024, 1));\nconsole.log(is_simple_power(1,\
    \ 1024));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1,\
    \ 2));\nconsole.log(is_simple_power(2, 1));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(2, 3));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 3));\nconsole.log(is_simple_power(3, 4));\nconsole.log(is_simple_power(4, 3));\n\
    console.log(is_simple_power(4, 4));\nconsole.log(is_simple_power(4, 5));\nconsole.log(is_simple_power(5,\
    \ 4));\nconsole.log(is_simple_power(5, 5));\nconsole.log(is_simple_power(5, 6));\n\
    console.log(is_simple_power(6, 5));\nconsole.log(is_simple_power(6, 6));\nconsole.log(is_simple_power(6,\
    \ 7));\nconsole.log(is_simple_power(7, 6));\nconsole.log(is_simple_power(7, 7));\n\
    console.log(is_simple_power(7, 8));\nconsole.log(is_simple_power(8, 7));\nconsole.log(is_simple_power(8,\
    \ 8));\nconsole.log(is_simple_power(8, 9));\nconsole.log(is_simple_power(9, 8));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpe4ilympj.js:47:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe4ilympj.js:55:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    false

    false

    false

    true

    false

    true

    false

    true

    false

    false

    true

    false

    false

    true

    false

    false

    true

    false

    false

    true

    false

    false

    true

    false

    false

    true

    false

    false

    '
  timestamp: 1660012998
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let i = 0;\n  while (Math.pow(n, i) < x) {\n    i++;\n  }\n  if\
    \ (Math.pow(n, i) === x) {\n    return true;\n  } else {\n    return false;\n\
    \  }\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(216, 6));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(0, 0));\nconsole.log(is_simple_power(1, 0));\n\
    console.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1,\
    \ 2));\nconsole.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1,\
    \ 7));\nconsole.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\n\
    console.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3zbkawhk.ts(47,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp3zbkawhk.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660012998
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(5, 5));\nconsole.log(is_simple_power(121, 11));\n\
    console.log(is_simple_power(100, 10));\nconsole.log(is_simple_power(256, 2));\n\
    console.log(is_simple_power(48, 4));\nconsole.log(is_simple_power(10, 5));\nconsole.log(is_simple_power(625,\
    \ 5));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\n\
    console.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1,\
    \ 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1, 7));\n\
    console.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1,\
    \ 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv5zdz7q8.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660012998
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  for (let i = 0; i < x; i++) {\n    if (Math.pow(n,\
    \ i) === x) {\n      result = true;\n    }\n  }\n  return result;\n}\n\nconsole.log(is_simple_power(8,\
    \ 2));\nconsole.log(is_simple_power(9, 2));\nconsole.log(is_simple_power(16, 2));\n\
    console.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(16, 3));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(81, 4));\nconsole.log(is_simple_power(81,\
    \ 9));\nconsole.log(is_simple_power(64, 4));\nconsole.log(is_simple_power(64,\
    \ 8));\nconsole.log(is_simple_power(64, 2));\nconsole.log(is_simple_power(64,\
    \ 3));\nconsole.log(is_simple_power(64, 1));\nconsole.log(is_simple_power(64,\
    \ 0));\nconsole.log(is_simple_power(64, -1));\nconsole.log(is_simple_power(64,\
    \ -2));\nconsole.log(is_simple_power(64, -3));\nconsole.log(is_simple_power(64,\
    \ -4));\nconsole.log(is_simple_power(64, -5));\nconsole.log(is_simple_power(64,\
    \ -6));\nconsole.log(is_simple_power(64, -7));\nconsole.log(is_simple_power(64,\
    \ -8));\nconsole.log(is_simple_power(64, -9));\nconsole.log(is_simple_power(64,\
    \ -10));\nconsole.log(is_simple_power(64, -11));\nconsole.log(is_simple_power(64,\
    \ -12));\nconsole.log(is_simple_power(64, -13));\nconsole.log(is_simple_power(64,\
    \ -14));\nconsole.log(is_simple_power(64, -15));\nconsole\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    true

    true

    false

    true

    false

    true

    true

    true

    true

    false

    false

    false

    false

    true

    false

    false

    false

    false

    false

    true

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013000
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let power = Math.log(x) / Math.log(n);\n  return power % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(9,\
    \ 3));\nconsole.log(is_simple_power(5, 5));\nconsole.log(is_simple_power(10, 2));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(24, 2));\nconsole.log(is_simple_power(256,\
    \ 2));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(243,\
    \ 3));\nconsole.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(64,\
    \ 2));\nconsole.log(is_simple_power(216, 6));\nconsole.log(is_simple_power(343,\
    \ 7));\nconsole.log(is_simple_power(512, 2));\nconsole.log(is_simple_power(729,\
    \ 3));\nconsole.log(is_simple_power(1000, 10));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(0, 0));\nconsole.log(is_simple_power(1, 0));\n\
    console.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1,\
    \ 2));\nconsole.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1,\
    \ 7));\nconsole.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\n\
    console.log(is_simple_power(1, 10));\nconsole\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6az4r6q5.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6az4r6q5.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    false

    false

    true

    true

    true

    true

    false

    false

    true

    false

    false

    true

    false

    false

    false

    false

    true

    false

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1660013000
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return result % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27,\
    \ 3));\nconsole.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(10, 10));\nconsole.log(is_simple_power(100,\
    \ 10));\nconsole.log(is_simple_power(1000, 10));\nconsole.log(is_simple_power(10000,\
    \ 10));\nconsole.log(is_simple_power(100000, 10));\nconsole.log(is_simple_power(1000000,\
    \ 10));\nconsole.log(is_simple_power(10000000, 10));\nconsole.log(is_simple_power(100000000,\
    \ 10));\nconsole.log(is_simple_power(1000000000, 10));\nconsole.log(is_simple_power(10000000000,\
    \ 10));\nconsole.log(is_simple_power(100000000000, 10));\nconsole.log(is_simple_power(1000000000000,\
    \ 10));\nconsole.log(is_simple_power(10000000000000, 10));\nconsole.log(is_simple_power(100000000000000,\
    \ 10));\nconsole.log(is_simple_power(1000000000000000, 10));\nconsole.log(is_simple_power(10000000000000000,\
    \ 10));\nconsole.log(is_simple_power(100000000000000000, 10));\nconsole.log(is_simple_power(1000000000000000000,\
    \ 10));\nconsole.log(is_simple_power(10000000000000000000, 10));\nconsole.log(is_simple_power(100000000000000000000,\
    \ 10));\nconsole.log(is_simple_power(1000000000000000000000, 10));\nconsole.log(is_simple_power(10000000000000000000000,\
    \ 10));\nconsole.log(is_simple_power(100000000000000000000000, 10));\nconsole.log(is_simple_power(10000000000000000\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1fpv631t.ts(40,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp1fpv631t.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660013000
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = 0;\n    for (let i = 1; i < x; i++) {\n        result\
    \ = Math.pow(n, i);\n        if (result === x) {\n            return true;\n \
    \       }\n    }\n    return false;\n}\n\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(9, 2));\nconsole.log(is_simple_power(16, 2));\nconsole.log(is_simple_power(16,\
    \ 4));\nconsole.log(is_simple_power(16, 5));\nconsole.log(is_simple_power(25,\
    \ 5));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(27,\
    \ 4));\nconsole.log(is_simple_power(27, 5));\nconsole.log(is_simple_power(27,\
    \ 6));\nconsole.log(is_simple_power(27, 7));\nconsole.log(is_simple_power(27,\
    \ 8));\nconsole.log(is_simple_power(27, 9));\nconsole.log(is_simple_power(27,\
    \ 10));\nconsole.log(is_simple_power(27, 11));\nconsole.log(is_simple_power(27,\
    \ 12));\nconsole.log(is_simple_power(27, 13));\nconsole.log(is_simple_power(27,\
    \ 14));\nconsole.log(is_simple_power(27, 15));\nconsole.log(is_simple_power(27,\
    \ 16));\nconsole.log(is_simple_power(27, 17));\nconsole.log(is_simple_power(27,\
    \ 18));\nconsole.log(is_simple_power(27, 19));\nconsole.log(is_simple_power(27,\
    \ 20));\nconsole.log(is_simple_power(27, 21));\nconsole.log(is_simple_power(27,\
    \ 22));\nconsole.log(is_simple_power(27, 23));\nconsole.log(is_simple_power(27,\
    \ 24));\nconsole.log(is_simple_power(27, 25));\nconsole.log(is_simple_power(27,\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxd3nsw6y.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660013000
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(8, 3));\n\
    console.log(is_simple_power(8, 4));\nconsole.log(is_simple_power(8, 5));\nconsole.log(is_simple_power(8,\
    \ 6));\nconsole.log(is_simple_power(8, 7));\nconsole.log(is_simple_power(8, 8));\n\
    console.log(is_simple_power(8, 9));\nconsole.log(is_simple_power(8, 10));\nconsole.log(is_simple_power(8,\
    \ 11));\nconsole.log(is_simple_power(8, 12));\nconsole.log(is_simple_power(8,\
    \ 13));\nconsole.log(is_simple_power(8, 14));\nconsole.log(is_simple_power(8,\
    \ 15));\nconsole.log(is_simple_power(8, 16));\nconsole.log(is_simple_power(8,\
    \ 17));\nconsole.log(is_simple_power(8, 18));\nconsole.log(is_simple_power(8,\
    \ 19));\nconsole.log(is_simple_power(8, 20));\nconsole.log(is_simple_power(8,\
    \ 21));\nconsole.log(is_simple_power(8, 22));\nconsole.log(is_simple_power(8,\
    \ 23));\nconsole.log(is_simple_power(8, 24));\nconsole.log(is_simple_power(8,\
    \ 25));\nconsole.log(is_simple_power(8, 26));\nconsole.log(is_simple_power(8,\
    \ 27));\nconsole.log(is_simple_power(8, 28));\nconsole.log(is_simple_power(8,\
    \ 29));\nconsole.log(is_simple_power(8, 30));\nconsole.log(is_simple_power(8,\
    \ 31));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6oed_kkd.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6oed_kkd.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    false

    false

    false

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013000
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27,\
    \ 3));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(24,\
    \ 4));\nconsole.log(is_simple_power(48, 4));\nconsole.log(is_simple_power(121,\
    \ 11));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\n\
    console.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1,\
    \ 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1, 7));\n\
    console.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1,\
    \ 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\nconsole.log(is_simple_power(1,\
    \ 24));\nconsole.log(is_simple_power(1, 25));\nconsole.log(is_simple_power(1,\
    \ 26));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp72ycw70m.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp72ycw70m.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    false

    true

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1660013000
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9,\
    \ 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpap4f9o9l.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpap4f9o9l.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    '
  timestamp: 1660013001
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(10,\
    \ 10));\nconsole.log(is_simple_power(10, 9));\nconsole.log(is_simple_power(9,\
    \ 3));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(8, 1));\n\
    console.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1,\
    \ 3));\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\n\
    console.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1,\
    \ 8));\nconsole.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\n\
    console.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\nconsole.log(is_simple_power(1, 22));\nconsole.log(is_simple_power(1,\
    \ 23));\nconsole.log(is_simple_power(1, 24));\nconsole\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp3loc6ebm.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3loc6ebm.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    false

    false

    true

    false

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1660013001
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = n;\n    while (power < x) {\n        power *= n;\n\
    \    }\n    return power === x;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27,\
    \ 3));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(24,\
    \ 4));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxtv4l8en.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxtv4l8en.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1660013001
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(24, 4));\n\
    console.log(is_simple_power(48, 4));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps2i185fn.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013001
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(16,\
    \ 2));\nconsole.log(is_simple_power(25, 5));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(64,\
    \ 4));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(243,\
    \ 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(27,\
    \ 4));\nconsole.log(is_simple_power(27, 5));\nconsole.log(is_simple_power(27,\
    \ 6));\nconsole.log(is_simple_power(27, 7));\nconsole.log(is_simple_power(27,\
    \ 8));\nconsole.log(is_simple_power(27, 9));\nconsole.log(is_simple_power(27,\
    \ 10));\nconsole.log(is_simple_power(27, 11));\nconsole.log(is_simple_power(27,\
    \ 12));\nconsole.log(is_simple_power(27, 13));\nconsole.log(is_simple_power(27,\
    \ 14));\nconsole.log(is_simple_power(27, 15));\nconsole.log(is_simple_power(27,\
    \ 16));\nconsole.log(is_simple_power(27, 17));\nconsole.log(is_simple_power(27,\
    \ 18));\nconsole.log(is_simple_power(27, 19));\nconsole.log(is_simple_power(27,\
    \ 20));\nconsole.log(is_simple_power(27, 21));\nconsole.log(is_simple_power(27,\
    \ 22));\nconsole.log(is_simple_power(27, 23));\nconsole.log(is_simple_power(27,\
    \ 24));\nconsole.log(is_simple_power(27, 25));\nconsole.log(is_simple_power(27,\
    \ 26));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5w9cqccm.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5w9cqccm.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013001
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  for (let i = 1; i <= x; i++) {\n    if (Math.pow(n,\
    \ i) === x) {\n      result = true;\n    }\n  }\n  return result;\n}\n\nconsole.log(is_simple_power(8,\
    \ 2));\nconsole.log(is_simple_power(9, 2));\nconsole.log(is_simple_power(16, 2));\n\
    console.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(16, 5));\nconsole.log(is_simple_power(25,\
    \ 5));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(27,\
    \ 4));\nconsole.log(is_simple_power(27, 5));\nconsole.log(is_simple_power(27,\
    \ 6));\nconsole.log(is_simple_power(27, 7));\nconsole.log(is_simple_power(27,\
    \ 8));\nconsole.log(is_simple_power(27, 9));\nconsole.log(is_simple_power(27,\
    \ 10));\nconsole.log(is_simple_power(27, 11));\nconsole.log(is_simple_power(27,\
    \ 12));\nconsole.log(is_simple_power(27, 13));\nconsole.log(is_simple_power(27,\
    \ 14));\nconsole.log(is_simple_power(27, 15));\nconsole.log(is_simple_power(27,\
    \ 16));\nconsole.log(is_simple_power(27, 17));\nconsole.log(is_simple_power(27,\
    \ 18));\nconsole.log(is_simple_power(27, 19));\nconsole.log(is_simple_power(27,\
    \ 20));\nconsole.log(is_simple_power(27, 21));\nconsole.log(is_simple_power(27,\
    \ 22));\nconsole.log(is_simple_power(27, 23));\nconsole.log(is_simple_power(27,\
    \ 24));\nconsole.log(is_simple_power(27, 25));\nconsole.log(is_simple_power(27,\
    \ 26));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpv5midrm8.js:57:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpv5midrm8.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    false

    true

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013001
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9,\
    \ 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmptskqmns5.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmptskqmns5.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    false

    '
  timestamp: 1660013001
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(81, 3));\n\
    console.log(is_simple_power(8, 3));\nconsole.log(is_simple_power(81, 2));\nconsole.log(is_simple_power(8,\
    \ 4));\nconsole.log(is_simple_power(81, 4));\nconsole.log(is_simple_power(8, 5));\n\
    console.log(is_simple_power(81, 5));\nconsole.log(is_simple_power(8, 6));\nconsole.log(is_simple_power(81,\
    \ 6));\nconsole.log(is_simple_power(8, 7));\nconsole.log(is_simple_power(81, 7));\n\
    console.log(is_simple_power(8, 8));\nconsole.log(is_simple_power(81, 8));\nconsole.log(is_simple_power(8,\
    \ 9));\nconsole.log(is_simple_power(81, 9));\nconsole.log(is_simple_power(8, 10));\n\
    console.log(is_simple_power(81, 10));\nconsole.log(is_simple_power(8, 11));\n\
    console.log(is_simple_power(81, 11));\nconsole.log(is_simple_power(8, 12));\n\
    console.log(is_simple_power(81, 12));\nconsole.log(is_simple_power(8, 13));\n\
    console.log(is_simple_power(81, 13));\nconsole.log(is_simple_power(8, 14));\n\
    console.log(is_simple_power(81, 14));\nconsole.log(is_simple_power(8, 15));\n\
    console.log(is_simple_power(81, 15));\nconsole.log(is_simple_power(8, 16));\n\
    console.log(is_simple_power(81, 16));\nconsole.log(is_simple_power(8, 17));\n\
    console.log(is_simple_power(81, 17));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6rgkp5nl.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013000
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(2401,\
    \ 7));\nconsole.log(is_simple_power(24, 5));\nconsole.log(is_simple_power(25,\
    \ 5));\nconsole.log(is_simple_power(26, 5));\nconsole.log(is_simple_power(27,\
    \ 5));\nconsole.log(is_simple_power(28, 5));\nconsole.log(is_simple_power(29,\
    \ 5));\nconsole.log(is_simple_power(30, 5));\nconsole.log(is_simple_power(31,\
    \ 5));\nconsole.log(is_simple_power(32, 5));\nconsole.log(is_simple_power(33,\
    \ 5));\nconsole.log(is_simple_power(34, 5));\nconsole.log(is_simple_power(35,\
    \ 5));\nconsole.log(is_simple_power(36, 5));\nconsole.log(is_simple_power(37,\
    \ 5));\nconsole.log(is_simple_power(38, 5));\nconsole.log(is_simple_power(39,\
    \ 5));\nconsole.log(is_simple_power(40, 5));\nconsole.log(is_simple_power(41,\
    \ 5));\nconsole.log(is_simple_power(42, 5));\nconsole.log(is_simple_power(43,\
    \ 5));\nconsole.log(is_simple_power(44, 5));\nconsole.log(is_simple_power(45,\
    \ 5));\nconsole.log(is_simple_power(46, 5));\nconsole.log(is_simple_power(47,\
    \ 5));\nconsole.log(is_simple_power(48, 5));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd45xrjhh.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013001
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  for (let i = 0; i < x; i++) {\n    if (Math.pow(n,\
    \ i) === x) {\n      result = true;\n    }\n  }\n  return result;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 5));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(1024, 10));\nconsole.log(is_simple_power(1024,\
    \ 1));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 10));\n\
    console.log(is_simple_power(1, 0));\nconsole.log(is_simple_power(0, 0));\nconsole.log(is_simple_power(0,\
    \ 1));\nconsole.log(is_simple_power(0, 10));\nconsole.log(is_simple_power(10,\
    \ 0));\nconsole.log(is_simple_power(10, 1));\nconsole.log(is_simple_power(10,\
    \ 10));\nconsole.log(is_simple_power(10, 2));\nconsole.log(is_simple_power(10,\
    \ 3));\nconsole.log(is_simple_power(10, 4));\nconsole.log(is_simple_power(10,\
    \ 5));\nconsole.log(is_simple_power(10, 6));\nconsole.log(is_simple_power(10,\
    \ 7));\nconsole.log(is_simple_power(10, 8));\nconsole.log(is_simple_power(10,\
    \ 9));\nconsole.log(is_simple_power(10, 10));\nconsole.log(is_simple_power(10,\
    \ 11));\nconsole.log(is_simple_power(10, 12));\nconsole.log(is_simple_power(10,\
    \ 13));\nconsole.log(is_simple_power(10, 14));\nconsole.log(is_simple_power(10,\
    \ 15));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    true

    true

    false

    true

    false

    false

    true

    true

    true

    false

    false

    false

    false

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    true

    false

    false

    false

    false

    false

    '
  timestamp: 1660013001
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result: number = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(64, 4));\n\
    console.log(is_simple_power(70, 10));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg8rfuipi.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013000
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  for (let i = 1; i <= x; i++) {\n    if (Math.pow(n,\
    \ i) === x) {\n      result = true;\n    }\n  }\n  return result;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(5, 5));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkc867tg9.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpkc867tg9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    '
  timestamp: 1660013001
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  const log = Math.log(x) / Math.log(n);\n  return log % 1 === 0;\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp1to29k25.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1to29k25.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    false

    '
  timestamp: 1660013001
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1,\
    \ 2));\nconsole.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1,\
    \ 7));\nconsole.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\n\
    console.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\nconsole.log(is_simple_power(1,\
    \ 24));\nconsole.log(is_simple_power(1, 25));\nconsole.log(is_simple_power(1,\
    \ 26));\nconsole.log(is_simple_power(1, 27));\nconsole.log(is_simple_power(1,\
    \ 28));\nconsole.log(is_simple_power(1, 29));\nconsole\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppt3w60n3.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013001
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3_6s76qm.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013001
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27,\
    \ 3));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(24,\
    \ 4));\nconsole.log(is_simple_power(48, 4));\nconsole.log(is_simple_power(256,\
    \ 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp94ymiew5.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp94ymiew5.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    false

    true

    '
  timestamp: 1660013002
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = 1;\n    while (power < x) {\n        power *= n;\n\
    \    }\n    return power === x;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9,\
    \ 2));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(126,\
    \ 5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    true

    false

    true

    false

    '
  timestamp: 1660013003
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(16,\
    \ 2));\nconsole.log(is_simple_power(25, 5));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(27,\
    \ 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(27,\
    \ 4));\nconsole.log(is_simple_power(27, 5));\nconsole.log(is_simple_power(27,\
    \ 6));\nconsole.log(is_simple_power(27, 7));\nconsole.log(is_simple_power(27,\
    \ 8));\nconsole.log(is_simple_power(27, 9));\nconsole.log(is_simple_power(27,\
    \ 10));\nconsole.log(is_simple_power(27, 11));\nconsole.log(is_simple_power(27,\
    \ 12));\nconsole.log(is_simple_power(27, 13));\nconsole.log(is_simple_power(27,\
    \ 14));\nconsole.log(is_simple_power(27, 15));\nconsole.log(is_simple_power(27,\
    \ 16));\nconsole.log(is_simple_power(27, 17));\nconsole.log(is_simple_power(27,\
    \ 18));\nconsole.log(is_simple_power(27, 19));\nconsole.log(is_simple_power(27,\
    \ 20));\nconsole.log(is_simple_power(27, 21));\nconsole.log(is_simple_power(27,\
    \ 22));\nconsole.log(is_simple_power(27, 23));\nconsole.log(is_simple_power(27,\
    \ 24));\nconsole.log(is_simple_power(27, 25));\nconsole.log(is_simple_power(27,\
    \ 26));\nconsole.log(is_simple_power(27, 27));\nconsole.log(is_simple_power(27,\
    \ 28));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpeklf3cx6.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpeklf3cx6.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    true

    false

    '
  timestamp: 1660013003
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let i = 1;\n    while (n ** i <= x)\
    \ {\n        if (n ** i === x) {\n            result = true;\n        }\n    \
    \    i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(4, 2));\n\
    console.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(256, 2));\nconsole.log(is_simple_power(1024, 10));\n\
    console.log(is_simple_power(1024, 2));\nconsole.log(is_simple_power(1024, 5));\n\
    console.log(is_simple_power(1024, 8));\nconsole.log(is_simple_power(1024, 16));\n\
    console.log(is_simple_power(1024, 32));\nconsole.log(is_simple_power(1024, 64));\n\
    console.log(is_simple_power(1024, 128));\nconsole.log(is_simple_power(1024, 256));\n\
    console.log(is_simple_power(1024, 512));\nconsole.log(is_simple_power(1024, 1024));\n\
    console.log(is_simple_power(1024, 2048));\nconsole.log(is_simple_power(1024, 4096));\n\
    console.log(is_simple_power(1024, 8192));\nconsole.log(is_simple_power(1024, 16384));\n\
    console.log(is_simple_power(1024, 32768));\nconsole.log(is_simple_power(1024,\
    \ 65536));\nconsole.log(is_simple_power(1024, 131072));\nconsole.log(is_simple_power(1024,\
    \ 262144));\nconsole.log(is_simple_power(1024, 524288));\nconsole.log(is_simple_power(1024,\
    \ 1048576));\nconsole.log(is_simple_power(1024, 2097152));\nconsole.log(is_simple_power(1024,\
    \ 4194304));\nconsole.log(is_simple_power(1024, 8388608));\nconsole.log(is_simple_power(1024,\
    \ 1677\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmqpl6pia.ts(46,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpmqpl6pia.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660013003
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(5,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(216, 6));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\n\
    console.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1,\
    \ 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1, 7));\n\
    console.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1,\
    \ 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\nconsole.log(is_simple_power(1,\
    \ 24));\nconsole.log(is_simple_power(1, 25));\nconsole.log(is_simple_power(1,\
    \ 26));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmplbu038so.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmplbu038so.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    false

    true

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1660013003
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1,\
    \ 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\n\
    console.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\nconsole.log(is_simple_power(1, 22));\nconsole.log(is_simple_power(1,\
    \ 23));\nconsole.log(is_simple_power(1, 24));\nconsole.log(is_simple_power(1,\
    \ 25));\nconsole.log(is_simple_power(1, 26));\nconsole.log(is_simple_power(1,\
    \ 27));\nconsole.log(is_simple_power(1, 28));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4qzqposo.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013003
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    for (let i = 0; i < x; i++) {\n    \
    \    if (Math.pow(n, i) === x) {\n            result = true;\n        }\n    }\n\
    \    return result;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(16,\
    \ 2));\nconsole.log(is_simple_power(25, 5));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(24,\
    \ 4));\nconsole.log(is_simple_power(64, 4));\nconsole.log(is_simple_power(216,\
    \ 6));\nconsole.log(is_simple_power(512, 8));\nconsole.log(is_simple_power(729,\
    \ 9));\nconsole.log(is_simple_power(1000, 10));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1,\
    \ 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\n\
    console.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    true

    true

    true

    true

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1660013003
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let i = 1;\n    while (Math.pow(n, i) <= x) {\n        if (Math.pow(n,\
    \ i) === x) {\n            return true;\n        }\n        i++;\n    }\n    return\
    \ false;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1,\
    \ 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\n\
    console.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\nconsole.log(is_simple_power(1, 22));\nconsole.log(is_simple_power(1,\
    \ 23));\nconsole.log(is_simple_power(1, 24));\nconsole.log(is_simple_power(1,\
    \ 25));\nconsole.log(is_simple_power(1, 26));\nconsole.log(is_simple_power(1,\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6br53uux.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660013003
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  let i = 0;\n  while (i < x) {\n    if (Math.pow(n,\
    \ i) === x) {\n      result = true;\n    }\n    i++;\n  }\n  return result;\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(5, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(216,\
    \ 6));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(0, 0));\n\
    console.log(is_simple_power(1, 0));\nconsole.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1,\
    \ 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\n\
    console.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppwjx44h9.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660013003
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  let i = 1;\n  while (Math.pow(n, i) <= x)\
    \ {\n    if (Math.pow(n, i) === x) {\n      result = true;\n    }\n    i++;\n\
    \  }\n  return result;\n}\n\nconsole.log(is_simple_power(8, 2)); // true\nconsole.log(is_simple_power(9,\
    \ 2)); // false\nconsole.log(is_simple_power(27, 3)); // true\nconsole.log(is_simple_power(28,\
    \ 3)); // false\nconsole.log(is_simple_power(125, 5)); // true\nconsole.log(is_simple_power(126,\
    \ 5)); // false\nconsole.log(is_simple_power(243, 3)); // true\nconsole.log(is_simple_power(244,\
    \ 3)); // false\nconsole.log(is_simple_power(256, 4)); // true\nconsole.log(is_simple_power(257,\
    \ 4)); // false\nconsole.log(is_simple_power(1024, 2)); // true\nconsole.log(is_simple_power(1025,\
    \ 2)); // false\nconsole.log(is_simple_power(1030, 2)); // false\nconsole.log(is_simple_power(1000000,\
    \ 10)); // true\nconsole.log(is_simple_power(1000001, 10)); // false\nconsole.log(is_simple_power(10000000000,\
    \ 10)); // true\nconsole.log(is_simple_power(10000000001, 10)); // false\nconsole.log(is_simple_power(100000000000,\
    \ 10)); // false\nconsole.log(is_simple_power(1000000000000, 10)); // true\nconsole.log(is_simple_power(1000000000001,\
    \ 10)); // false\nconsole.log(is_simple_power(10000000000000, 10)); // false\n\
    console.log(is_simple_power(100000000000000, 10)); // true\nconsole.log(is_simple_power(100000000000001,\
    \ 10)); // false\nconsole.log(is_simple_power(1000000000000000, 10)); // false\n\
    console.log(is_simple_\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp49ri3kvu.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp49ri3kvu.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660013003
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(24, 4));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(256, 2));\nconsole.log(is_simple_power(256,\
    \ 1));\nconsole.log(is_simple_power(256, 0));\nconsole.log(is_simple_power(256,\
    \ -1));\nconsole.log(is_simple_power(256, -2));\nconsole.log(is_simple_power(256,\
    \ -4));\nconsole.log(is_simple_power(256, -8));\nconsole.log(is_simple_power(256,\
    \ -16));\nconsole.log(is_simple_power(256, -32));\nconsole.log(is_simple_power(256,\
    \ -64));\nconsole.log(is_simple_power(256, -128));\nconsole.log(is_simple_power(256,\
    \ -256));\nconsole.log(is_simple_power(256, -512));\nconsole.log(is_simple_power(256,\
    \ -1024));\nconsole.log(is_simple_power(256, -2048));\nconsole.log(is_simple_power(256,\
    \ -4096));\nconsole.log(is_simple_power(256, -8192));\nconsole.log(is_simple_power(256,\
    \ -16384));\nconsole.log(is_simple_power(256, -32768));\nconsole.log(is_simple_power(256,\
    \ -65536));\nconsole.log(is_simple_power(256, -131072));\nconsole.log(is_simple_power(256,\
    \ -262144));\nconsole.log(is_simple_power(256, -524288));\nconsole.log(is_simple_power(256,\
    \ -1048576));\nconsole.log(is_simple_power(256,\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpc08g28jh.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660013003
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return power % 1\
    \ === 0;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1024,\
    \ 5));\nconsole.log(is_simple_power(1024, 2));\nconsole.log(is_simple_power(1024,\
    \ 10));\nconsole.log(is_simple_power(1024, 1));\nconsole.log(is_simple_power(1024,\
    \ 0));\nconsole.log(is_simple_power(1, 1024));\nconsole.log(is_simple_power(0,\
    \ 1024));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1,\
    \ 0));\nconsole.log(is_simple_power(0, 0));\nconsole.log(is_simple_power(0, 1));\n\
    console.log(is_simple_power(1, -1));\nconsole.log(is_simple_power(1, -1024));\n\
    console.log(is_simple_power(0, -1024));\nconsole.log(is_simple_power(-1, -1024));\n\
    console.log(is_simple_power(-1, -1));\nconsole.log(is_simple_power(-1, 0));\n\
    console.log(is_simple_power(-1, 1));\nconsole.log(is_simple_power(-1, 1024));\n\
    console.log(is_simple_power(-0, 1024));\nconsole.log(is_simple_power(-0, 0));\n\
    console.log(is_simple_power(-0, 1));\nconsole.log(is_simple_power(-0, -1));\n\
    console.log(is_simple_power(-0, -1024));\nconsole.log(is_simple_power(-1024, -1));\n\
    console.log(is_simple_power(-1024, 0));\nconsole.log(is_simple_power(-1024, 1));\n\
    console.log(is_simple_power(-1024, 1024));\nconsole.log(is_simple_\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptqe0351n.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmptqe0351n.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660013003
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return power % 1\
    \ === 0;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(9, 3));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(28, 3));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(8,\
    \ 3));\nconsole.log(is_simple_power(8, 4));\nconsole.log(is_simple_power(8, 5));\n\
    console.log(is_simple_power(8, 6));\nconsole.log(is_simple_power(8, 7));\nconsole.log(is_simple_power(8,\
    \ 8));\nconsole.log(is_simple_power(8, 9));\nconsole.log(is_simple_power(8, 10));\n\
    console.log(is_simple_power(8, 11));\nconsole.log(is_simple_power(8, 12));\nconsole.log(is_simple_power(8,\
    \ 13));\nconsole.log(is_simple_power(8, 14));\nconsole.log(is_simple_power(8,\
    \ 15));\nconsole.log(is_simple_power(8, 16));\nconsole.log(is_simple_power(8,\
    \ 17));\nconsole.log(is_simple_power(8, 18));\nconsole.log(is_simple_power(8,\
    \ 19));\nconsole.log(is_simple_power(8, 20));\nconsole.log(is_simple_power(8,\
    \ 21));\nconsole.log(is_simple_power(8, 22));\nconsole.log(is_simple_power(8,\
    \ 23));\nconsole.log(is_simple_power(8, 24));\nconsole.log(is_simple_power(8,\
    \ 25));\nconsole.log(is_simple_power(8, 26));\nconsole.log(is_simple_power(8,\
    \ 27));\nconsole.log(is_simple_power(8, 28));\nconsole\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdk33fsro.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdk33fsro.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    false

    false

    true

    false

    false

    false

    false

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013003
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(24, 4));\n\
    console.log(is_simple_power(48, 4));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps2i185fn.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013001
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(9,\
    \ 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(64, 2));\nconsole.log(is_simple_power(256, 2));\n\
    console.log(is_simple_power(1024, 2));\nconsole.log(is_simple_power(10, 2));\n\
    console.log(is_simple_power(100, 2));\nconsole.log(is_simple_power(1000, 2));\n\
    console.log(is_simple_power(10000, 2));\nconsole.log(is_simple_power(100000, 2));\n\
    console.log(is_simple_power(1000000, 2));\nconsole.log(is_simple_power(10000000,\
    \ 2));\nconsole.log(is_simple_power(100000000, 2));\nconsole.log(is_simple_power(1000000000,\
    \ 2));\nconsole.log(is_simple_power(10000000000, 2));\nconsole.log(is_simple_power(100000000000,\
    \ 2));\nconsole.log(is_simple_power(1000000000000, 2));\nconsole.log(is_simple_power(10000000000000,\
    \ 2));\nconsole.log(is_simple_power(100000000000000, 2));\nconsole.log(is_simple_power(1000000000000000,\
    \ 2));\nconsole.log(is_simple_power(10000000000000000, 2));\nconsole.log(is_simple_power(100000000000000000,\
    \ 2));\nconsole.log(is_simple_power(1000000000000000000, 2));\nconsole.log(is_simple_power(10000000000000000000,\
    \ 2));\nconsole.log(is_simple_power(100000000000000000000, 2));\nconsole.log(is_simple_power(1000000000000000000000,\
    \ 2));\nconsole.log(is_simple_power(10000000000000000000000, 2));\nconsole.log(is\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcqvsfikl.ts(40,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpcqvsfikl.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660013003
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  let i = 0;\n  while (Math.pow(n, i) <= x)\
    \ {\n    if (Math.pow(n, i) === x) {\n      result = true;\n    }\n    i++;\n\
    \  }\n  return result;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(5,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(216, 6));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(0, 0));\nconsole.log(is_simple_power(1, 0));\n\
    console.log(is_simple_power(0, 1));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    false

    true

    true

    true

    '
  timestamp: 1660013018
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let power = Math.log(x) / Math.log(n);\n  return power % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9,\
    \ 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(82,\
    \ 3));\nconsole.log(is_simple_power(243, 3));\nconsole.log(is_simple_power(244,\
    \ 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp_5tqo_ec.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp_5tqo_ec.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    false

    false

    false

    true

    false

    '
  timestamp: 1660013003
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  let i = 1;\n  while (Math.pow(n, i) <= x)\
    \ {\n    if (Math.pow(n, i) === x) {\n      result = true;\n    }\n    i++;\n\
    \  }\n  return result;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(1024000000, 10));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    true

    false

    '
  timestamp: 1660013018
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  const root = Math.pow(x, 1 / n);\n  return root % 1 === 0;\n}\n\
    \nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(625, 4));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1,\
    \ 100));\nconsole.log(is_simple_power(1, 1000000000000));\nconsole.log(is_simple_power(1,\
    \ 100000000000000));\nconsole.log(is_simple_power(1, 10000000000000000));\nconsole.log(is_simple_power(1,\
    \ 100000000000000000));\nconsole.log(is_simple_power(1, 1000000000000000000));\n\
    console.log(is_simple_power(1, 1000000000000000000000));\nconsole.log(is_simple_power(1,\
    \ 1000000000000000000000000));\nconsole.log(is_simple_power(1, 1000000000000000000000000000));\n\
    console.log(is_simple_power(1, 1000000000000000000000000000000));\nconsole.log(is_simple_power(1,\
    \ 1000000000000000000000000000000000));\nconsole.log(is_simple_power(1, 1000000000000000000000000000000000000));\n\
    console.log(is_simple_power(1, 1000000000000000000000000000000000000000));\nconsole.log(is_simple_power(1,\
    \ 1000000000000000000000000000000000000000000));\nconsole.log(is_simple_power(1,\
    \ 1000000000000000000000000000000000000000000000));\nconsole.log(is_simple_power(1,\
    \ 1000000000000000000000000000000000000000000000000));\nconsole.log(is_simple_power(1,\
    \ 1000000000000000000000000000000000000000000000000000));\nconsole.log(is_simple_power(1,\
    \ 1000000000000000000000000000000000000000000000000000000));\nconsole.log(is_simple_power(1,\
    \ 1000000000000000000000000000000000000000000000000000000000));\nconsole.log(is_simple_power(1,\
    \ 1000000000000000000000000000000000000000000000000000000000000));\nconsole.log(is_simple_power(1,\
    \ 1000000000000000000000000000000000000000000000000000000000000000));\nconsole.log(is_simple_power(1,\
    \ 1000000000000000000000000000000000000000000000000000000000000000000));\nconsole.log(is_simple_power(1,\
    \ 1000000000000000000000000000000000000000000000000000000000000000000000));\n\
    console.log(is_simple\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpu_ylyr0n.ts(38,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpu_ylyr0n.ts(38,9): error TS1005: '','' expected.

    '
  timestamp: 1660013003
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9,\
    \ 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\n\
    console.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1,\
    \ 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1, 7));\n\
    console.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1,\
    \ 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\nconsole.log(is_simple_power(1,\
    \ 24));\nconsole.log(is_simple_power(1, 25));\nconsole.log(is_simple_power(1,\
    \ 26));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpc_rh98th.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpc_rh98th.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    false

    false

    true

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1660013003
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27,\
    \ 3));\nconsole.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(1024, 10));\nconsole.log(is_simple_power(1024,\
    \ 1));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\n\
    console.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1,\
    \ 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1, 7));\n\
    console.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1,\
    \ 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\nconsole.log(is_simple_power(1,\
    \ 24));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpf76cw7md.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpf76cw7md.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    true

    true

    false

    false

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1660013003
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return power % 1\
    \ === 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9,\
    \ 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(126,\
    \ 5));\nconsole.log(is_simple_power(125, 3));\nconsole.log(is_simple_power(126,\
    \ 3));\nconsole.log(is_simple_power(125, 6));\nconsole.log(is_simple_power(126,\
    \ 6));\nconsole.log(is_simple_power(125, 125));\nconsole.log(is_simple_power(126,\
    \ 126));\nconsole.log(is_simple_power(125, 1));\nconsole.log(is_simple_power(126,\
    \ 1));\nconsole.log(is_simple_power(1, 125));\nconsole.log(is_simple_power(1,\
    \ 126));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(0,\
    \ 0));\nconsole.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(1, 0));\n\
    console.log(is_simple_power(0, 0));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(0,\
    \ 1));\nconsole.log(is_simple_power(1, 0));\nconsole.log(is_simple_power(0, 0));\n\
    console.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(1,\
    \ 0));\nconsole.log(is_simple_power(0, 0));\nconsole.log(is_simple_power(1, 1));\n\
    console.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(1, 0));\nconsole\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjb7ixo7j.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjb7ixo7j.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    true

    true

    false

    false

    true

    true

    false

    false

    false

    true

    false

    false

    false

    true

    false

    false

    false

    true

    false

    false

    false

    true

    '
  timestamp: 1660013003
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = x;\n  let count = 0;\n  while (result % n === 0) {\n\
    \    result /= n;\n    count++;\n  }\n  return result === 1;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 1));\n\
    console.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(81,\
    \ 4));\nconsole.log(is_simple_power(81, 5));\nconsole.log(is_simple_power(243,\
    \ 3));\nconsole.log(is_simple_power(243, 5));\nconsole.log(is_simple_power(243,\
    \ 1));\nconsole.log(is_simple_power(3, 3));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(3, 4));\nconsole.log(is_simple_power(3,\
    \ 5));\nconsole.log(is_simple_power(3, 6));\nconsole.log(is_simple_power(3, 7));\n\
    console.log(is_simple_power(3, 8));\nconsole.log(is_simple_power(3, 9));\nconsole.log(is_simple_power(3,\
    \ 10));\nconsole.log(is_simple_power(3, 11));\nconsole.log(is_simple_power(3,\
    \ 12));\nconsole.log(is_simple_power(3, 13));\nconsole.log(is_simple_power(3,\
    \ 14));\nconsole.log(is_simple_power(3, 15));\nconsole.log(is_simple_power(3,\
    \ 16));\nconsole.log(is_simple_power(3, 17));\nconsole.log(is_simple_power(3,\
    \ 18));\nconsole.log(is_simple_power(3,\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp64pdx36h.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660013005
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let i = 0;\n    while (Math.pow(n, i)\
    \ <= x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n \
    \       }\n        i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(8,\
    \ 2));\nconsole.log(is_simple_power(9, 2));\nconsole.log(is_simple_power(16, 2));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(27, 4));\nconsole.log(is_simple_power(256,\
    \ 2));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256,\
    \ 8));\nconsole.log(is_simple_power(256, 16));\nconsole.log(is_simple_power(256,\
    \ 32));\nconsole.log(is_simple_power(256, 64));\nconsole.log(is_simple_power(256,\
    \ 128));\nconsole.log(is_simple_power(256, 256));\nconsole.log(is_simple_power(256,\
    \ 512));\nconsole.log(is_simple_power(256, 1024));\nconsole.log(is_simple_power(256,\
    \ 2048));\nconsole.log(is_simple_power(256, 4096));\nconsole.log(is_simple_power(256,\
    \ 8192));\nconsole.log(is_simple_power(256, 16384));\nconsole.log(is_simple_power(256,\
    \ 32768));\nconsole.log(is_simple_power(256, 65536));\nconsole.log(is_simple_power(256,\
    \ 131072));\nconsole.log(is_simple_power(256, 262144));\nconsole.log(is_simple_power(256,\
    \ 524288));\nconsole.log(is_simple_power(256, 1048576));\nconsole.log(is_simple_power(256,\
    \ 2097152));\nconsole.log(is_simple_power(256, 4194304));\nconsole.log(is_simple_power(256,\
    \ 8388608));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj_j14lxo.ts(45,9): error TS1003: Identifier expected.

    '
  timestamp: 1660013005
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return power % 1\
    \ === 0;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(5,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(216, 6));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1,\
    \ 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\n\
    console.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\nconsole.log(is_simple_power(1, 22));\nconsole.log(is_simple_power(1,\
    \ 23));\nconsole.log(is_simple_power(1, 24));\nconsole.log(is_simple_power(1,\
    \ 25));\nconsole.log(is_simple_power(1, 26));\nconsole.log(is_simple_power(1,\
    \ 27));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpc8fd26jx.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpc8fd26jx.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    false

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1660013005
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  let i = 0;\n  while (i < x) {\n    if (Math.pow(n,\
    \ i) === x) {\n      result = true;\n    }\n    i++;\n  }\n  return result;\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256, 8));\n\
    console.log(is_simple_power(25, 5));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(125, 3));\nconsole.log(is_simple_power(243, 3));\n\
    console.log(is_simple_power(243, 5));\nconsole.log(is_simple_power(1024, 10));\n\
    console.log(is_simple_power(1024, 5));\nconsole.log(is_simple_power(1024, 2));\n\
    console.log(is_simple_power(1024, 1));\nconsole.log(is_simple_power(1024, 0));\n\
    console.log(is_simple_power(1024, -1));\nconsole.log(is_simple_power(1024, -2));\n\
    console.log(is_simple_power(1024, -5));\nconsole.log(is_simple_power(1024, -10));\n\
    console.log(is_simple_power(1024, -20));\nconsole.log(is_simple_power(1024, -100));\n\
    console.log(is_simple_power(1024, -1000));\nconsole.log(is_simple_power(1024,\
    \ -10000));\nconsole.log(is_simple_power(1024, -100000));\nconsole.log(is_simple_power(1024,\
    \ -1000000));\nconsole.log(is_simple_power(1024, -10000000));\nconsole.log(is_simple_power(1024,\
    \ -100000000));\nconsole.log(is_simple_power(1024, -1000000000));\nconsole.log(is_simple_power(1024,\
    \ -10000000000));\nconsole.log(is\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpf6ilhqgc.ts(46,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpf6ilhqgc.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660013005
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return Number.isInteger(power);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1024, 2));\n\
    console.log(is_simple_power(1024, 10));\nconsole.log(is_simple_power(1024, 1));\n\
    console.log(is_simple_power(1, 1024));\nconsole.log(is_simple_power(1, 1));\n\
    console.log(is_simple_power(1, 0));\nconsole.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(0,\
    \ 0));\nconsole.log(is_simple_power(1, -1));\nconsole.log(is_simple_power(1, -1024));\n\
    console.log(is_simple_power(-1, 1));\nconsole.log(is_simple_power(-1, -1));\n\
    console.log(is_simple_power(-1, -1024));\nconsole.log(is_simple_power(-1024, -1));\n\
    console.log(is_simple_power(-1024, 1));\nconsole.log(is_simple_power(-1024, -1024));\n\
    console.log(is_simple_power(-1024, 1024));\nconsole.log(is_simple_power(1024,\
    \ -1024));\nconsole.log(is_simple_power(1024, 1024));\nconsole.log(is_simple_power(0,\
    \ -1024));\nconsole.log(is_simple_power(0, 1024));\nconsole.log(is_simple_power(-1024,\
    \ 0));\nconsole.log(is_simple_power(1024, 0));\nconsole.log(is_simple_power(0,\
    \ 0));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpboi4t88z.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpboi4t88z.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660013005
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  let i = 0;\n  while (Math.pow(n, i) <= x)\
    \ {\n    if (Math.pow(n, i) === x) {\n      result = true;\n    }\n    i++;\n\
    \  }\n  return result;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(5,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(216, 6));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1,\
    \ 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\n\
    console.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\nconsole.log(is_simple_power(1, 22));\nconsole.log(is_simple_power(1,\
    \ 23));\nconsole.log(is_simple_power(1, 24));\nconsole.log(\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkpg8nwe5.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660012998
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return power % 1\
    \ === 0;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(5, 125));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(4, 256));\nconsole.log(is_simple_power(4,\
    \ 3));\nconsole.log(is_simple_power(64, 4));\nconsole.log(is_simple_power(5, 27));\n\
    console.log(is_simple_power(27, 5));\nconsole.log(is_simple_power(27, 27));\n\
    console.log(is_simple_power(27, 28));\nconsole.log(is_simple_power(27, 29));\n\
    console.log(is_simple_power(27, 30));\nconsole.log(is_simple_power(27, 31));\n\
    console.log(is_simple_power(27, 32));\nconsole.log(is_simple_power(27, 33));\n\
    console.log(is_simple_power(27, 34));\nconsole.log(is_simple_power(27, 35));\n\
    console.log(is_simple_power(27, 36));\nconsole.log(is_simple_power(27, 37));\n\
    console.log(is_simple_power(27, 38));\nconsole.log(is_simple_power(27, 39));\n\
    console.log(is_simple_power(27, 40));\nconsole.log(is_simple_power(27, 41));\n\
    console.log(is_simple_power(27, 42));\nconsole.log(is_simple_power(27, 43));\n\
    console.log(is_simple_power(27, 44));\nconsole.log(is_simple_power(27, 45));\n\
    console.log(is_simple_power(27, 46));\nconsole.log(is_simple_power(27, 47));\n\
    console.log(is_simple_power(27, 48));\nconsole.log(is_simple_power(27, 49));\n\
    console\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpj6a513bg.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpj6a513bg.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    false

    false

    true

    false

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013005
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let i = 0;\n    while (Math.pow(n, i)\
    \ <= x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n \
    \       }\n        i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(216, 6));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(0, 0));\nconsole.log(is_simple_power(1, 0));\n\
    console.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1,\
    \ 2));\nconsole.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1,\
    \ 7));\nconsole.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\n\
    console.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv4q6ljiz.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660013005
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(72, 3));\nconsole.log(is_simple_power(100,\
    \ 10));\nconsole.log(is_simple_power(100, 1));\nconsole.log(is_simple_power(100,\
    \ 2));\nconsole.log(is_simple_power(100, 3));\nconsole.log(is_simple_power(100,\
    \ 4));\nconsole.log(is_simple_power(100, 5));\nconsole.log(is_simple_power(100,\
    \ 6));\nconsole.log(is_simple_power(100, 7));\nconsole.log(is_simple_power(100,\
    \ 8));\nconsole.log(is_simple_power(100, 9));\nconsole.log(is_simple_power(100,\
    \ 10));\nconsole.log(is_simple_power(100, 11));\nconsole.log(is_simple_power(100,\
    \ 12));\nconsole.log(is_simple_power(100, 13));\nconsole.log(is_simple_power(100,\
    \ 14));\nconsole.log(is_simple_power(100, 15));\nconsole.log(is_simple_power(100,\
    \ 16));\nconsole.log(is_simple_power(100, 17));\nconsole.log(is_simple_power(100,\
    \ 18));\nconsole.log(is_simple_power(100, 19));\nconsole.log(is_simple_power(100,\
    \ 20));\nconsole.log(is_simple_power(100, 21));\nconsole.log(is_simple_power(100,\
    \ 22));\nconsole.log(is_simple_power(100, 23));\nconsole.log(is_simple_power(100,\
    \ 24));\nconsole.log(is_simple_power(100, 25));\nconsole.log(is_simple_power(100,\
    \ 26));\nconsole.log(is_simple_power(100, 27));\nconsole.log(is_simple_power(100,\
    \ 28));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpn0h279yo.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpn0h279yo.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013005
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let power = Math.log(x) / Math.log(n);\n  return Number.isInteger(power);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(9, 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(82,\
    \ 3));\nconsole.log(is_simple_power(243, 3));\nconsole.log(is_simple_power(244,\
    \ 3));\nconsole.log(is_simple_power(256, 2));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(256, 8));\nconsole.log(is_simple_power(256,\
    \ 16));\nconsole.log(is_simple_power(256, 32));\nconsole.log(is_simple_power(256,\
    \ 64));\nconsole.log(is_simple_power(256, 128));\nconsole.log(is_simple_power(256,\
    \ 256));\nconsole.log(is_simple_power(256, 512));\nconsole.log(is_simple_power(256,\
    \ 1024));\nconsole.log(is_simple_power(256, 2048));\nconsole.log(is_simple_power(256,\
    \ 4096));\nconsole.log(is_simple_power(256, 8192));\nconsole.log(is_simple_power(256,\
    \ 16384));\nconsole.log(is_simple_power(256, 32768));\nconsole.log(is_simple_power(256,\
    \ 65536));\nconsole.log(is_simple_power(256, 131072));\nconsole.log(is_simple_power(256,\
    \ 262144));\nconsole.log(is_simple_power(256, 524288));\nconsole.log(is_simple_power(256,\
    \ 1048576));\nconsole.log(is_simple_power(256, 2097152));\nconsole.log(is_simple_power(256,\
    \ 4194304));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpednhzzur.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013005
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let i = 0;\n    while (Math.pow(n, i)\
    \ <= x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n \
    \       }\n        i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\nconsole.log(is_simple_power(25,\
    \ 5));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(126,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\n\
    console.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1,\
    \ 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1, 7));\n\
    console.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1,\
    \ 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmyh2azk1.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660013005
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let i = 0;\n    while (Math.pow(n, i)\
    \ <= x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n \
    \       }\n        i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(125, 3));\nconsole.log(is_simple_power(243,\
    \ 3));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256,\
    \ 2));\nconsole.log(is_simple_power(78125, 5));\nconsole.log(is_simple_power(78125,\
    \ 3));\nconsole.log(is_simple_power(78125, 2));\nconsole.log(is_simple_power(78125,\
    \ 1));\nconsole.log(is_simple_power(78125, 0));\nconsole.log(is_simple_power(78125,\
    \ -1));\nconsole.log(is_simple_power(78125, -2));\nconsole.log(is_simple_power(78125,\
    \ -3));\nconsole.log(is_simple_power(78125, -4));\nconsole.log(is_simple_power(78125,\
    \ -5));\nconsole.log(is_simple_power(78125, -6));\nconsole.log(is_simple_power(78125,\
    \ -7));\nconsole.log(is_simple_power(78125, -8));\nconsole.log(is_simple_power(78125,\
    \ -9));\nconsole.log(is_simple_power(78125, -10));\nconsole.log(is_simple_power(78125,\
    \ -11));\nconsole.log(is_simple_power(78125, -12));\nconsole.log(is_simple_power(78125,\
    \ -13));\nconsole.log(is_simple_power(78125, -14));\nconsole.log(is_simple_power(78125,\
    \ -15));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    true

    true

    false

    true

    true

    true

    true

    false

    false

    '
  timestamp: 1660013020
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result: number = 1;\n    let i: number = 1;\n    while (result\
    \ <= x) {\n        result = Math.pow(n, i);\n        if (result === x) {\n   \
    \         return true;\n        }\n        i++;\n    }\n    return false;\n}\n\
    \nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(9, 3));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27,\
    \ 3));\nconsole.log(is_simple_power(16, 2));\nconsole.log(is_simple_power(256,\
    \ 2));\nconsole.log(is_simple_power(1024, 2));\nconsole.log(is_simple_power(10,\
    \ 10));\nconsole.log(is_simple_power(100, 10));\nconsole.log(is_simple_power(1000,\
    \ 10));\nconsole.log(is_simple_power(10000, 10));\nconsole.log(is_simple_power(100000,\
    \ 10));\nconsole.log(is_simple_power(1000000, 10));\nconsole.log(is_simple_power(10000000,\
    \ 10));\nconsole.log(is_simple_power(100000000, 10));\nconsole.log(is_simple_power(1000000000,\
    \ 10));\nconsole.log(is_simple_power(10000000000, 10));\nconsole.log(is_simple_power(100000000000,\
    \ 10));\nconsole.log(is_simple_power(1000000000000, 10));\nconsole.log(is_simple_power(10000000000000,\
    \ 10));\nconsole.log(is_simple_power(100000000000000, 10));\nconsole.log(is_simple_power(1000000000000000,\
    \ 10));\nconsole.log(is_simple_power(10000000000000000, 10));\nconsole.log(is_simple_power(100000000000000000,\
    \ 10));\nconsole.log(is_simple_power(1000000000000000000, 10));\nconsole.log(is_simple_power(10000000000000000000,\
    \ 10));\nconsole.log(is_simple_\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvnu2qmwp.ts(46,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpvnu2qmwp.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660013005
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result: number = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1024, 10));\n\
    console.log(is_simple_power(1024, 5));\nconsole.log(is_simple_power(1024, 2));\n\
    console.log(is_simple_power(1024, 1));\nconsole.log(is_simple_power(1024, 0));\n\
    console.log(is_simple_power(1024, -1));\nconsole.log(is_simple_power(1024, -2));\n\
    console.log(is_simple_power(1024, -3));\nconsole.log(is_simple_power(1024, -4));\n\
    console.log(is_simple_power(1024, -5));\nconsole.log(is_simple_power(1024, -6));\n\
    console.log(is_simple_power(1024, -7));\nconsole.log(is_simple_power(1024, -8));\n\
    console.log(is_simple_power(1024, -9));\nconsole.log(is_simple_power(1024, -10));\n\
    console.log(is_simple_power(1024, -11));\nconsole.log(is_simple_power(1024, -12));\n\
    console.log(is_simple_power(1024, -13));\nconsole.log(is_simple_power(1024, -14));\n\
    console.log(is_simple_power(1024, -15));\nconsole.log(is_simple_power(1024, -16));\n\
    console.log(is_simple_power(1024, -17));\nconsole.log(is_simple_power(1024, -18));\n\
    console.log(is_simple_power(1024, -19));\nconsole.log(is_simple_power(1024, -20));\n\
    console.log(is_simple_power(1024, -21));\nconsole.log(is_simple_power(1024, -22));\n\
    console.log(is_\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps4ow4exh.ts(41,1): error TS1005: '','' expected.

    ../../../../../tmp/tmps4ow4exh.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660013005
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(82, 3));\nconsole.log(is_simple_power(243,\
    \ 3));\nconsole.log(is_simple_power(244, 3));\nconsole.log(is_simple_power(729,\
    \ 3));\nconsole.log(is_simple_power(730, 3));\nconsole.log(is_simple_power(2187,\
    \ 3));\nconsole.log(is_simple_power(2188, 3));\nconsole.log(is_simple_power(6561,\
    \ 3));\nconsole.log(is_simple_power(6562, 3));\nconsole.log(is_simple_power(19683,\
    \ 3));\nconsole.log(is_simple_power(19684, 3));\nconsole.log(is_simple_power(59049,\
    \ 3));\nconsole.log(is_simple_power(59050, 3));\nconsole.log(is_simple_power(177147,\
    \ 3));\nconsole.log(is_simple_power(177148, 3));\nconsole.log(is_simple_power(531441,\
    \ 3));\nconsole.log(is_simple_power(531442, 3));\nconsole.log(is_simple_power(1594323,\
    \ 3));\nconsole.log(is_simple_power(1594324, 3));\nconsole.log(is_simple_power(4782969,\
    \ 3));\nconsole.log(is_simple_power(4782970, 3));\nconsole.log(is_simple_power(14348907,\
    \ 3));\nconsole.log(is_simple_power(14348908, 3));\nconsole.log(is_simple_power(43046721,\
    \ 3));\nconsole.log(is_simple_power(43046722\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpuxdluff0.ts(40,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpuxdluff0.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660013006
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result: boolean = false;\n    let power: number = 1;\n  \
    \  while (power < x) {\n        power *= n;\n    }\n    if (power === x) {\n \
    \       result = true;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(625,\
    \ 5));\nconsole.log(is_simple_power(625, 6));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(1024, 10));\nconsole.log(is_simple_power(1024,\
    \ 5));\nconsole.log(is_simple_power(3125, 5));\nconsole.log(is_simple_power(243,\
    \ 3));\nconsole.log(is_simple_power(243, 5));\nconsole.log(is_simple_power(243,\
    \ 15));\nconsole.log(is_simple_power(16807, 7));\nconsole.log(is_simple_power(16807,\
    \ 5));\nconsole.log(is_simple_power(16807, 25));\nconsole.log(is_simple_power(16807,\
    \ 15));\nconsole.log(is_simple_power(16807, 17));\nconsole.log(is_simple_power(16807,\
    \ 19));\nconsole.log(is_simple_power(16807, 21));\nconsole.log(is_simple_power(16807,\
    \ 23));\nconsole.log(is_simple_power(16807, 27));\nconsole.log(is_simple_power(16807,\
    \ 29));\nconsole.log(is_simple_power(16807, 31));\nconsole.log(is_simple_power(16807,\
    \ 33));\nconsole.log(is_simple_power(16807, 35));\nconsole.log(is_simple_power(16807,\
    \ 37));\nconsole.log(is_simple_power(16807, 39));\nconsole.log(is_simple_power(16807,\
    \ 41));\nconsole.log(is_simple_power(16807, 43));\nconsole.log(is_simple_power(\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp00hlhyr7.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660013005
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(25, 5));\n\
    console.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(625, 5));\n\
    console.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(0,\
    \ 0));\nconsole.log(is_simple_power(1, 0));\nconsole.log(is_simple_power(0, 1));\n\
    console.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1,\
    \ 3));\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\n\
    console.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1,\
    \ 8));\nconsole.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\n\
    console.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpt8itt6ye.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013005
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(82, 3));\nconsole.log(is_simple_power(243,\
    \ 3));\nconsole.log(is_simple_power(244, 3));\nconsole.log(is_simple_power(729,\
    \ 3));\nconsole.log(is_simple_power(730, 3));\nconsole.log(is_simple_power(2187,\
    \ 3));\nconsole.log(is_simple_power(2188, 3));\nconsole.log(is_simple_power(6561,\
    \ 3));\nconsole.log(is_simple_power(6562, 3));\nconsole.log(is_simple_power(19683,\
    \ 3));\nconsole.log(is_simple_power(19684, 3));\nconsole.log(is_simple_power(59049,\
    \ 3));\nconsole.log(is_simple_power(59050, 3));\nconsole.log(is_simple_power(177147,\
    \ 3));\nconsole.log(is_simple_power(177148, 3));\nconsole.log(is_simple_power(531441,\
    \ 3));\nconsole.log(is_simple_power(531442, 3));\nconsole.log(is_simple_power(1594323,\
    \ 3));\nconsole.log(is_simple_power(1594324, 3));\nconsole.log(is_simple_power(4782969,\
    \ 3));\nconsole.log(is_simple_power(4782970, 3));\nconsole.log(is_simple_power(14348907,\
    \ 3));\nconsole.log(is_simple_power(14348908, 3));\nconsole.log(is_simple_power(43046721,\
    \ 3));\nconsole.log(is_simple_power(43046722\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpuxdluff0.ts(40,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpuxdluff0.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660013006
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return result % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1,\
    \ 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\n\
    console.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\nconsole.log(is_simple_power(1, 22));\nconsole.log(is_simple_power(1,\
    \ 23));\nconsole.log(is_simple_power(1, 24));\nconsole.log(is_simple_power(1,\
    \ 25));\nconsole.log(is_simple_power(1, 26));\nconsole.log(is_simple_power(1,\
    \ 27));\nconsole.log(is_simple_power(1, 28));\nconsole.log(is_simple_power(1,\
    \ 29));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpot9uqmm2.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpot9uqmm2.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1660013006
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return power % 1\
    \ === 0;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(9,\
    \ 3));\nconsole.log(is_simple_power(5, 5));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(121, 11));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 100));\nconsole.log(is_simple_power(1, 1000));\nconsole.log(is_simple_power(1,\
    \ 10000));\nconsole.log(is_simple_power(1, 100000));\nconsole.log(is_simple_power(1,\
    \ 1000000));\nconsole.log(is_simple_power(1, 10000000));\nconsole.log(is_simple_power(1,\
    \ 100000000));\nconsole.log(is_simple_power(1, 1000000000));\nconsole.log(is_simple_power(1,\
    \ 10000000000));\nconsole.log(is_simple_power(1, 100000000000));\nconsole.log(is_simple_power(1,\
    \ 1000000000000));\nconsole.log(is_simple_power(1, 10000000000000));\nconsole.log(is_simple_power(1,\
    \ 100000000000000));\nconsole.log(is_simple_power(1, 1000000000000000));\nconsole.log(is_simple_power(1,\
    \ 10000000000000000));\nconsole.log(is_simple_power(1, 100000000000000000));\n\
    console.log(is_simple_power(1, 1000000000000000000));\nconsole.log(is_simple_power(1,\
    \ 10000000000000000000));\nconsole.log(is_simple_power(1, 100000000000000000000));\n\
    console.log(is_simple_power(1, 1000000000000000000000));\nconsole.log(is_simple_power(1,\
    \ 10000000000000000000000));\nconsole.log(is_simple_power(1, 100000000000000000000000));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp_d43uqcn.js:45:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp_d43uqcn.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    false

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1660013006
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 2));\nconsole.log(is_simple_power(1024,\
    \ 10));\nconsole.log(is_simple_power(1024, 5));\nconsole.log(is_simple_power(1024,\
    \ 3));\nconsole.log(is_simple_power(1024, 1));\nconsole.log(is_simple_power(1024,\
    \ 0));\nconsole.log(is_simple_power(1024, -1));\nconsole.log(is_simple_power(1024,\
    \ -2));\nconsole.log(is_simple_power(1024, -3));\nconsole.log(is_simple_power(1024,\
    \ -4));\nconsole.log(is_simple_power(1024, -5));\nconsole.log(is_simple_power(1024,\
    \ -6));\nconsole.log(is_simple_power(1024, -7));\nconsole.log(is_simple_power(1024,\
    \ -8));\nconsole.log(is_simple_power(1024, -9));\nconsole.log(is_simple_power(1024,\
    \ -10));\nconsole.log(is_simple_power(1024, -11));\nconsole.log(is_simple_power(1024,\
    \ -12));\nconsole.log(is_simple_power(1024, -13));\nconsole.log(is_simple_power(1024,\
    \ -14));\nconsole.log(is_simple_power(1024, -15));\nconsole.log(is_simple_power(1024,\
    \ -16));\nconsole.log(is_simple_power(1024, -17));\nconsole.log(is_simple_power(1024,\
    \ -18));\nconsole.log(is_simple_power(1024, -19));\nconsole.log(is_simple_power(1024,\
    \ -20));\nconsole.log(is_simple_power(1024, -21));\nconsole.log(is_simple_power(1024,\
    \ -22));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmplpx4u3ni.js:45:12)\n    at\
    \ Object.<anonymous> (/tmp/tmplpx4u3ni.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    false

    false

    false

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013006
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(9, 3));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(16, 2));\n\
    console.log(is_simple_power(32, 2));\nconsole.log(is_simple_power(64, 2));\nconsole.log(is_simple_power(128,\
    \ 2));\nconsole.log(is_simple_power(256, 2));\nconsole.log(is_simple_power(512,\
    \ 2));\nconsole.log(is_simple_power(1024, 2));\nconsole.log(is_simple_power(2048,\
    \ 2));\nconsole.log(is_simple_power(4096, 2));\nconsole.log(is_simple_power(8192,\
    \ 2));\nconsole.log(is_simple_power(16384, 2));\nconsole.log(is_simple_power(32768,\
    \ 2));\nconsole.log(is_simple_power(65536, 2));\nconsole.log(is_simple_power(131072,\
    \ 2));\nconsole.log(is_simple_power(262144, 2));\nconsole.log(is_simple_power(524288,\
    \ 2));\nconsole.log(is_simple_power(1048576, 2));\nconsole.log(is_simple_power(2097152,\
    \ 2));\nconsole.log(is_simple_power(4194304, 2));\nconsole.log(is_simple_power(8388608,\
    \ 2));\nconsole.log(is_simple_power(16777216, 2));\nconsole.log(is_simple_power(33554432,\
    \ 2));\nconsole.log(is_simple_power(67108864, 2));\nconsole.log(is_simple_power(134217728,\
    \ 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeu5kddh4.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013007
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let power = n;\n  while (power < x) {\n    power *= n;\n  }\n \
    \ return power === x;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(81, 4));\nconsole.log(is_simple_power(64,\
    \ 4));\nconsole.log(is_simple_power(64, 5));\nconsole.log(is_simple_power(64,\
    \ 6));\nconsole.log(is_simple_power(64, 7));\nconsole.log(is_simple_power(64,\
    \ 8));\nconsole.log(is_simple_power(64, 9));\nconsole.log(is_simple_power(64,\
    \ 10));\nconsole.log(is_simple_power(64, 11));\nconsole.log(is_simple_power(64,\
    \ 12));\nconsole.log(is_simple_power(64, 13));\nconsole.log(is_simple_power(64,\
    \ 14));\nconsole.log(is_simple_power(64, 15));\nconsole.log(is_simple_power(64,\
    \ 16));\nconsole.log(is_simple_power(64, 17));\nconsole.log(is_simple_power(64,\
    \ 18));\nconsole.log(is_simple_power(64, 19));\nconsole.log(is_simple_power(64,\
    \ 20));\nconsole.log(is_simple_power(64, 21));\nconsole.log(is_simple_power(64,\
    \ 22));\nconsole.log(is_simple_power(64, 23));\nconsole.log(is_simple_power(64,\
    \ 24));\nconsole.log(is_simple_power(64, 25));\nconsole.log(is_simple_power(64,\
    \ 26));\nconsole.log(is_simple_power(64, 27));\nconsole.log(is_simple_power(64,\
    \ 28));\nconsole.log(is_simple_power(64, 29));\nconsole.log(is_simple_power(64,\
    \ 30));\nconsole.log(is_simple_power(64, 31));\nconsole.log(is_simple_power(\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp30_5vfe1.ts(45,9): error TS1005: '','' expected.

    '
  timestamp: 1660013007
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let i = 0;\n    while (Math.pow(n, i)\
    \ <= x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n \
    \       }\n        i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(9, 3));\nconsole.log(is_simple_power(5, 5));\n\
    console.log(is_simple_power(25, 5));\nconsole.log(is_simple_power(24, 5));\nconsole.log(is_simple_power(24,\
    \ 6));\nconsole.log(is_simple_power(25, 6));\nconsole.log(is_simple_power(26,\
    \ 6));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\nconsole.log(is_simple_power(29, 3));\nconsole.log(is_simple_power(30,\
    \ 3));\nconsole.log(is_simple_power(31, 3));\nconsole.log(is_simple_power(32,\
    \ 2));\nconsole.log(is_simple_power(33, 3));\nconsole.log(is_simple_power(34,\
    \ 3));\nconsole.log(is_simple_power(35, 5));\nconsole.log(is_simple_power(36,\
    \ 6));\nconsole.log(is_simple_power(37, 37));\nconsole.log(is_simple_power(38,\
    \ 38));\nconsole.log(is_simple_power(39, 39));\nconsole.log(is_simple_power(40,\
    \ 40));\nconsole.log(is_simple_power(41, 41));\nconsole.log(is_simple_power(42,\
    \ 42));\nconsole.log(is_simple_power(43, 43));\nconsole.log(is_simple_power(44,\
    \ 44));\nconsole.log(is_simple_power(45, 45));\nconsole.log(is_simple_power(46,\
    \ 46));\nconsole.log(is_simple_power(47, 47));\nconsole.log(\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpismp3u8x.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660013007
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(64, 4));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256, 4));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp83pi6_rd.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013007
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return Number.isInteger(power);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(24, 4));\n\
    console.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(0,\
    \ 1));\nconsole.log(is_simple_power(1, 0));\nconsole.log(is_simple_power(1, 2));\n\
    console.log(is_simple_power(2, 1));\nconsole.log(is_simple_power(0, 0));\nconsole.log(is_simple_power(0,\
    \ 2));\nconsole.log(is_simple_power(2, 0));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(2, 3));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(5, 2));\nconsole.log(is_simple_power(6, 2));\n\
    console.log(is_simple_power(7, 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9,\
    \ 2));\nconsole.log(is_simple_power(10, 2));\nconsole.log(is_simple_power(11,\
    \ 2));\nconsole.log(is_simple_power(12, 2));\nconsole.log(is_simple_power(13,\
    \ 2));\nconsole.log(is_simple_power(14, 2));\nconsole.log(is_simple_power(15,\
    \ 2));\nconsole.log(is_simple_power(16, 2));\nconsole.log(is_simple_power(17,\
    \ 2));\nconsole.log(is_simple_power(18, 2));\nconsole.log(is_simple_power(19,\
    \ 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdokbbzcp.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013007
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256, 2));\n\
    console.log(is_simple_power(25, 5));\nconsole.log(is_simple_power(24, 4));\nconsole.log(is_simple_power(24,\
    \ 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8a09xtyw.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013007
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let power = Math.log(x) / Math.log(n);\n  return Math.round(power)\
    \ === power;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9,\
    \ 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(125,\
    \ 6));\nconsole.log(is_simple_power(125, 7));\nconsole.log(is_simple_power(125,\
    \ 8));\nconsole.log(is_simple_power(125, 9));\nconsole.log(is_simple_power(125,\
    \ 10));\nconsole.log(is_simple_power(125, 11));\nconsole.log(is_simple_power(125,\
    \ 12));\nconsole.log(is_simple_power(125, 13));\nconsole.log(is_simple_power(125,\
    \ 14));\nconsole.log(is_simple_power(125, 15));\nconsole.log(is_simple_power(125,\
    \ 16));\nconsole.log(is_simple_power(125, 17));\nconsole.log(is_simple_power(125,\
    \ 18));\nconsole.log(is_simple_power(125, 19));\nconsole.log(is_simple_power(125,\
    \ 20));\nconsole.log(is_simple_power(125, 21));\nconsole.log(is_simple_power(125,\
    \ 22));\nconsole.log(is_simple_power(125, 23));\nconsole.log(is_simple_power(125,\
    \ 24));\nconsole.log(is_simple_power(125, 25));\nconsole.log(is_simple_power(125,\
    \ 26));\nconsole.log(is_simple_power(125, 27));\nconsole.log(is_simple_power(125,\
    \ 28));\nconsole.log(is_simple_power(125, 29));\nconsole.log(is_simple_power(125,\
    \ 30));\nconsole.log(is_simple_power(125, 31));\nconsole.log(is_simple_power(125,\
    \ 32\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcscoe4d3.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpcscoe4d3.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660013007
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    for (let i = 0; i < x; i++) {\n    \
    \    if (Math.pow(n, i) === x) {\n            result = true;\n        }\n    }\n\
    \    return result;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(1024, 10));\nconsole.log(is_simple_power(1024,\
    \ 1));\nconsole.log(is_simple_power(1, 1024));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 0));\nconsole.log(is_simple_power(0, 0));\n\
    console.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(0, 10));\nconsole.log(is_simple_power(0,\
    \ 1024));\nconsole.log(is_simple_power(2, 1024));\nconsole.log(is_simple_power(10,\
    \ 1024));\nconsole.log(is_simple_power(1024, 1024));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    true

    true

    true

    false

    false

    true

    true

    true

    false

    false

    false

    false

    false

    false

    true

    '
  timestamp: 1660013008
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let power = Math.log(x) / Math.log(n);\n\
    \    if (power % 1 === 0) {\n        result = true;\n    }\n    return result;\n\
    }\n\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(1, 1));\n\
    console.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(256, 2));\nconsole.log(is_simple_power(256,\
    \ 1));\nconsole.log(is_simple_power(256, 8));\nconsole.log(is_simple_power(256,\
    \ 16));\nconsole.log(is_simple_power(256, 32));\nconsole.log(is_simple_power(256,\
    \ 64));\nconsole.log(is_simple_power(256, 128));\nconsole.log(is_simple_power(256,\
    \ 256));\nconsole.log(is_simple_power(256, 512));\nconsole.log(is_simple_power(256,\
    \ 1024));\nconsole.log(is_simple_power(256, 2048));\nconsole.log(is_simple_power(256,\
    \ 4096));\nconsole.log(is_simple_power(256, 8192));\nconsole.log(is_simple_power(256,\
    \ 16384));\nconsole.log(is_simple_power(256, 32768));\nconsole.log(is_simple_power(256,\
    \ 65536));\nconsole.log(is_simple_power(256, 131072));\nconsole.log(is_simple_power(256,\
    \ 262144));\nconsole.log(is_simple_power(256, 524288));\nconsole.log(is_simple_power(256,\
    \ 1048576));\nconsole.log(is_simple_power(256, 2097152));\nconsole.log(is_simple_power(256,\
    \ 4194304));\nconsole.log(is_simple_power(256, 8388608));\nconsole.log(is_simple_power(256,\
    \ 16777216));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpr_8jozoa.js:49:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpr_8jozoa.js:57:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'false

    false

    true

    false

    true

    true

    false

    false

    true

    false

    false

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013008
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let i = 0;\n  let result = n;\n  while (result <= x) {\n    if\
    \ (result === x) {\n      return true;\n    }\n    result *= n;\n  }\n  return\
    \ false;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9,\
    \ 2));\nconsole.log(is_simple_power(16, 2));\nconsole.log(is_simple_power(16,\
    \ 4));\nconsole.log(is_simple_power(16, 5));\nconsole.log(is_simple_power(32,\
    \ 2));\nconsole.log(is_simple_power(32, 4));\nconsole.log(is_simple_power(32,\
    \ 5));\nconsole.log(is_simple_power(32, 8));\nconsole.log(is_simple_power(32,\
    \ 9));\nconsole.log(is_simple_power(64, 2));\nconsole.log(is_simple_power(64,\
    \ 4));\nconsole.log(is_simple_power(64, 5));\nconsole.log(is_simple_power(64,\
    \ 8));\nconsole.log(is_simple_power(64, 9));\nconsole.log(is_simple_power(64,\
    \ 16));\nconsole.log(is_simple_power(64, 17));\nconsole.log(is_simple_power(64,\
    \ 32));\nconsole.log(is_simple_power(64, 33));\nconsole.log(is_simple_power(64,\
    \ 64));\nconsole.log(is_simple_power(64, 65));\nconsole.log(is_simple_power(128,\
    \ 2));\nconsole.log(is_simple_power(128, 4));\nconsole.log(is_simple_power(128,\
    \ 5));\nconsole.log(is_simple_power(128, 8));\nconsole.log(is_simple_power(128,\
    \ 9));\nconsole.log(is_simple_power(128, 16));\nconsole.log(is_simple_power(128,\
    \ 17));\nconsole.log(is_simple_power(128, 32));\nconsole.log(is_simple_power(128,\
    \ 33));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjtfilyil.js:59:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjtfilyil.js:61:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    false

    true

    false

    false

    false

    false

    true

    true

    false

    true

    false

    false

    false

    false

    false

    true

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013008
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let power = Math.log(x) / Math.log(n);\n  return Number.isInteger(power);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(9, 3));\nconsole.log(is_simple_power(5, 5));\nconsole.log(is_simple_power(25,\
    \ 5));\nconsole.log(is_simple_power(24, 4));\nconsole.log(is_simple_power(24,\
    \ 5));\nconsole.log(is_simple_power(24, 6));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(256, 2));\nconsole.log(is_simple_power(256,\
    \ 8));\nconsole.log(is_simple_power(256, 16));\nconsole.log(is_simple_power(256,\
    \ 32));\nconsole.log(is_simple_power(256, 64));\nconsole.log(is_simple_power(256,\
    \ 128));\nconsole.log(is_simple_power(256, 256));\nconsole.log(is_simple_power(256,\
    \ 512));\nconsole.log(is_simple_power(256, 1024));\nconsole.log(is_simple_power(256,\
    \ 2048));\nconsole.log(is_simple_power(256, 4096));\nconsole.log(is_simple_power(256,\
    \ 8192));\nconsole.log(is_simple_power(256, 16384));\nconsole.log(is_simple_power(256,\
    \ 32768));\nconsole.log(is_simple_power(256, 65536));\nconsole.log(is_simple_power(256,\
    \ 131072));\nconsole.log(is_simple_power(256, 262144));\nconsole.log(is_simple_power(256,\
    \ 524288));\nconsole.log(is_simple_power(256, 1048576));\nconsole.log(is_simple_power(256,\
    \ 2097152));\nconsole.log(is_simple_power(256, 4194304));\nconsole.log(is_simple_power(256,\
    \ 8388608\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcx_ztzmt.ts(41,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpcx_ztzmt.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660013008
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(8,\
    \ 2));\nconsole.log(is_simple_power(9, 3));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(28, 3));\nconsole.log(is_simple_power(8, 4));\nconsole.log(is_simple_power(16,\
    \ 4));\nconsole.log(is_simple_power(32, 4));\nconsole.log(is_simple_power(64,\
    \ 4));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1024,\
    \ 4));\nconsole.log(is_simple_power(4096, 4));\nconsole.log(is_simple_power(16384,\
    \ 4));\nconsole.log(is_simple_power(65536, 4));\nconsole.log(is_simple_power(262144,\
    \ 4));\nconsole.log(is_simple_power(1048576, 4));\nconsole.log(is_simple_power(4194304,\
    \ 4));\nconsole.log(is_simple_power(16777216, 4));\nconsole.log(is_simple_power(67108864,\
    \ 4));\nconsole.log(is_simple_power(268435456, 4));\nconsole.log(is_simple_power(1073741824,\
    \ 4));\nconsole.log(is_simple_power(4294967296, 4));\nconsole.log(is_simple_power(17179869184,\
    \ 4));\nconsole.log(is_simple_power(68719476736, 4));\nconsole.log(is_simple_power(274877906944,\
    \ 4));\nconsole.log(is_simple_power(1099511627776, 4));\nconsole.log(is_simple_power(4398046511104,\
    \ 4));\nconsole.log(is_simple_power(17592186044416, 4));\nconsole.log(is_simple_power(70368744177664,\
    \ 4));\nconsole.log(is_simple_power(28147\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkxrqo83_.ts(38,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpkxrqo83_.ts(38,9): error TS1005: '','' expected.

    '
  timestamp: 1660013008
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9,\
    \ 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(82,\
    \ 3));\nconsole.log(is_simple_power(243, 3));\nconsole.log(is_simple_power(244,\
    \ 3));\nconsole.log(is_simple_power(729, 3));\nconsole.log(is_simple_power(730,\
    \ 3));\nconsole.log(is_simple_power(2187, 3));\nconsole.log(is_simple_power(2188,\
    \ 3));\nconsole.log(is_simple_power(6561, 3));\nconsole.log(is_simple_power(6562,\
    \ 3));\nconsole.log(is_simple_power(19683, 3));\nconsole.log(is_simple_power(19684,\
    \ 3));\nconsole.log(is_simple_power(59049, 3));\nconsole.log(is_simple_power(59050,\
    \ 3));\nconsole.log(is_simple_power(177147, 3));\nconsole.log(is_simple_power(177148,\
    \ 3));\nconsole.log(is_simple_power(531441, 3));\nconsole.log(is_simple_power(531442,\
    \ 3));\nconsole.log(is_simple_power(1594323, 3));\nconsole.log(is_simple_power(1594324,\
    \ 3));\nconsole.log(is_simple_power(4782969, 3));\nconsole.log(is_simple_power(4782970,\
    \ 3));\nconsole.log(is_simple_power(14348907, 3));\nconsole.log(is_simple_power(14348908,\
    \ 3));\nconsole.log(is_simple_power(43046721, 3));\nconsole.log(is_simple_power(43046722,\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprvnhwqhm.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660013008
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let power = 1;\n  while (power < x) {\n    power *= n;\n  }\n \
    \ return power === x;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(72, 3));\nconsole.log(is_simple_power(100,\
    \ 10));\nconsole.log(is_simple_power(100, 2));\nconsole.log(is_simple_power(144,\
    \ 12));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(216,\
    \ 6));\nconsole.log(is_simple_power(1000, 10));\nconsole.log(is_simple_power(1000,\
    \ 2));\nconsole.log(is_simple_power(10000, 10));\nconsole.log(is_simple_power(10000,\
    \ 2));\nconsole.log(is_simple_power(1000000, 10));\nconsole.log(is_simple_power(1000000,\
    \ 2));\nconsole.log(is_simple_power(1000000000, 10));\nconsole.log(is_simple_power(1000000000,\
    \ 2));\nconsole.log(is_simple_power(10000000000, 10));\nconsole.log(is_simple_power(10000000000,\
    \ 2));\nconsole.log(is_simple_power(100000000000, 10));\nconsole.log(is_simple_power(100000000000,\
    \ 2));\nconsole.log(is_simple_power(1000000000000, 10));\nconsole.log(is_simple_power(1000000000000,\
    \ 2));\nconsole.log(is_simple_power(10000000000000, 10));\nconsole.log(is_simple_power(10000000000000,\
    \ 2));\nconsole.log(is_simple_power(100000000000000, 10));\nconsole.log(is_simple_power(100000000000000,\
    \ 2));\nconsole.log(is_simple_power(1000000000000000, 10));\nconsole.log(is_simple_power(1000000000000000,\
    \ 2));\nconsole.log(is_simple_power(10000000000000000, 10));\nconsole.log(is_simple_power\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeaa92ukp.ts(43,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpeaa92ukp.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660013008
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let power = Math.log(x) / Math.log(n);\n  return Number.isInteger(power);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(10, 2));\n\
    console.log(is_simple_power(10, 3));\nconsole.log(is_simple_power(9, 2));\nconsole.log(is_simple_power(9,\
    \ 3));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(8, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(27, 4));\nconsole.log(is_simple_power(27,\
    \ 5));\nconsole.log(is_simple_power(27, 6));\nconsole.log(is_simple_power(27,\
    \ 7));\nconsole.log(is_simple_power(27, 8));\nconsole.log(is_simple_power(27,\
    \ 9));\nconsole.log(is_simple_power(27, 10));\nconsole.log(is_simple_power(27,\
    \ 11));\nconsole.log(is_simple_power(27, 12));\nconsole.log(is_simple_power(27,\
    \ 13));\nconsole.log(is_simple_power(27, 14));\nconsole.log(is_simple_power(27,\
    \ 15));\nconsole.log(is_simple_power(27, 16));\nconsole.log(is_simple_power(27,\
    \ 17));\nconsole.log(is_simple_power(27, 18));\nconsole.log(is_simple_power(27,\
    \ 19));\nconsole.log(is_simple_power(27, 20));\nconsole.log(is_simple_power(27,\
    \ 21));\nconsole.log(is_simple_power(27, 22));\nconsole.log(is_simple_power(27,\
    \ 23));\nconsole.log(is_simple_power(27, 24));\nconsole.log(is_simple_power(27,\
    \ 25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb7hmebv5.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013008
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(243, 3));\n\
    console.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(16777216, 65536));\n\
    console.log(is_simple_power(16777216, 65535));\nconsole.log(is_simple_power(16777216,\
    \ 65537));\nconsole.log(is_simple_power(16777216, 65538));\nconsole.log(is_simple_power(16777216,\
    \ 65539));\nconsole.log(is_simple_power(16777216, 65540));\nconsole.log(is_simple_power(16777216,\
    \ 65541));\nconsole.log(is_simple_power(16777216, 65542));\nconsole.log(is_simple_power(16777216,\
    \ 65543));\nconsole.log(is_simple_power(16777216, 65544));\nconsole.log(is_simple_power(16777216,\
    \ 65545));\nconsole.log(is_simple_power(16777216, 65546));\nconsole.log(is_simple_power(16777216,\
    \ 65547));\nconsole.log(is_simple_power(16777216, 65548));\nconsole.log(is_simple_power(16777216,\
    \ 65549));\nconsole.log(is_simple_power(16777216, 65550));\nconsole.log(is_simple_power(16777216,\
    \ 65551));\nconsole.log(is_simple_power(16777216, 65552));\nconsole.log(is_simple_power(16777216,\
    \ 65553));\nconsole.log(is_simple_power(16777216, 65554));\nconsole.log(is_simple_power(16777216,\
    \ 65555));\nconsole.log(is_\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwy3ze_5p.ts(37,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpwy3ze_5p.ts(37,9): error TS1005: '','' expected.

    '
  timestamp: 1660013008
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return Math.pow(n,\
    \ Math.round(power)) === x;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9,\
    \ 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(126,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg_5pbgxa.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpg_5pbgxa.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660013008
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  let i = 0;\n  while (n ** i <= x) {\n  \
    \  if (n ** i === x) {\n      result = true;\n    }\n    i++;\n  }\n  return result;\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(9, 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(126,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\n\
    console.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1,\
    \ 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1, 7));\n\
    console.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1,\
    \ 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    true

    true

    true

    false

    true

    false

    true

    false

    '
  timestamp: 1660013024
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  let i = 1;\n  while (Math.pow(n, i) <= x)\
    \ {\n    if (Math.pow(n, i) === x) {\n      result = true;\n    }\n    i++;\n\
    \  }\n  return result;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(72, 3));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    true

    false

    '
  timestamp: 1660013024
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let i = 1;\n    while (Math.pow(n, i) <= x) {\n        if (Math.pow(n,\
    \ i) === x) {\n            return true;\n        }\n        i++;\n    }\n    return\
    \ false;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(100, 2));\nconsole.log(is_simple_power(100,\
    \ 10));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256,\
    \ 2));\nconsole.log(is_simple_power(256, 3));\nconsole.log(is_simple_power(256,\
    \ 1));\nconsole.log(is_simple_power(256, 0));\nconsole.log(is_simple_power(0,\
    \ 0));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\n\
    console.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1,\
    \ 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1, 7));\n\
    console.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1,\
    \ 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1t1zrhj6.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660013009
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(8, 3));\n\
    console.log(is_simple_power(9, 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\nconsole.log(is_simple_power(27, 4));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(256, 2));\nconsole.log(is_simple_power(256,\
    \ 1));\nconsole.log(is_simple_power(1, 256));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1,\
    \ 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\n\
    console.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\nconsole.log(is_simple_power(1, 22));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpr3h3qz__.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013009
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(72, 9));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprn821fdm.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013010
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return result % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5on1hrjm.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5on1hrjm.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'false

    false

    '
  timestamp: 1660013010
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let i = 0;\n    while (Math.pow(n, i)\
    \ <= x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n \
    \       }\n        i++;\n    }\n    return result;\n}\nconsole.log(is_simple_power(8,\
    \ 2));\nconsole.log(is_simple_power(16, 2));\nconsole.log(is_simple_power(8, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1,\
    \ 2));\nconsole.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1,\
    \ 7));\nconsole.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\n\
    console.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\nconsole.log(is_simple_power(1,\
    \ 24));\nconsole.log(is_simple_power(1, 25));\nconsole.log(is\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpaq7wkpd7.ts(46,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpaq7wkpd7.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660013010
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(24, 4));\n\
    console.log(is_simple_power(48, 4));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps2i185fn.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013001
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    for (let i = 0; i < x; i++) {\n    \
    \    if (Math.pow(n, i) === x) {\n            result = true;\n        }\n    }\n\
    \    return result;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(16,\
    \ 2));\nconsole.log(is_simple_power(25, 5));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(27,\
    \ 3));\nconsole.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(243, 3));\nconsole.log(is_simple_power(16807,\
    \ 5));\nconsole.log(is_simple_power(16, 10));\nconsole.log(is_simple_power(25,\
    \ 2));\nconsole.log(is_simple_power(125, 3));\nconsole.log(is_simple_power(81,\
    \ 4));\nconsole.log(is_simple_power(27, 5));\nconsole.log(is_simple_power(256,\
    \ 6));\nconsole.log(is_simple_power(243, 7));\nconsole.log(is_simple_power(16807,\
    \ 8));\nconsole.log(is_simple_power(16, 9));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013010
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(16, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(243, 3));\n\
    console.log(is_simple_power(16807, 7));\nconsole.log(is_simple_power(26, 2));\n\
    console.log(is_simple_power(126, 3));\nconsole.log(is_simple_power(16, 4));\n\
    console.log(is_simple_power(26, 5));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(0,\
    \ 0));\nconsole.log(is_simple_power(1, 0));\nconsole.log(is_simple_power(0, 1));\n\
    console.log(is_simple_power(1, -1));\nconsole.log(is_simple_power(-1, 1));\nconsole.log(is_simple_power(-1,\
    \ -1));\nconsole.log(is_simple_power(0, -1));\nconsole.log(is_simple_power(-1,\
    \ 0));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(2, 1));\n\
    console.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(4, 1));\nconsole.log(is_simple_power(1, 5));\n\
    console.log(is_simple_power(5, 1));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(6,\
    \ 1));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(7, 1));\n\
    console.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(8\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvil3upnp.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpvil3upnp.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660013010
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let i = 0;\n    while (Math.pow(n, i)\
    \ <= x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n \
    \       }\n        i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(82, 3));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(126, 5));\nconsole.log(is_simple_power(625,\
    \ 5));\nconsole.log(is_simple_power(626, 5));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1,\
    \ 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\n\
    console.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpt_w67dxa.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660013010
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpaekwic7y.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013010
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let i = 0;\n  let power = 1;\n  while (power < x) {\n    power\
    \ *= n;\n    i++;\n  }\n  return power === x;\n}\n\nconsole.log(is_simple_power(8,\
    \ 2)); //true\nconsole.log(is_simple_power(9, 2)); //false\nconsole.log(is_simple_power(16,\
    \ 2)); //true\nconsole.log(is_simple_power(16, 4)); //true\nconsole.log(is_simple_power(16,\
    \ 5)); //false\nconsole.log(is_simple_power(25, 5)); //true\nconsole.log(is_simple_power(25,\
    \ 6)); //false\nconsole.log(is_simple_power(27, 3)); //true\nconsole.log(is_simple_power(27,\
    \ 4)); //false\nconsole.log(is_simple_power(64, 4)); //true\nconsole.log(is_simple_power(64,\
    \ 5)); //false\nconsole.log(is_simple_power(64, 8)); //true\nconsole.log(is_simple_power(64,\
    \ 9)); //false\nconsole.log(is_simple_power(81, 3)); //true\nconsole.log(is_simple_power(81,\
    \ 4)); //false\nconsole.log(is_simple_power(81, 9)); //true\nconsole.log(is_simple_power(81,\
    \ 10)); //false\nconsole.log(is_simple_power(125, 5)); //true\nconsole.log(is_simple_power(125,\
    \ 6)); //false\nconsole.log(is_simple_power(125, 25)); //true\nconsole.log(is_simple_power(125,\
    \ 26)); //false\nconsole.log(is_simple_power(243, 3)); //true\nconsole.log(is_simple_power(243,\
    \ 4)); //false\nconsole.log(is_simple_power(243, 9)); //true\nconsole.log(is_simple_power(243,\
    \ 10)); //false\nconsole.log(is_simple_power(243, 27)); //true\nconsole.log(is_simple_power(243,\
    \ 28)); //false\nconsole.log(is\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3m4ojxop.ts(43,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp3m4ojxop.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660013010
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let i = 1;\n    while (Math.pow(n, i)\
    \ <= x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n \
    \       }\n        i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 2));\nconsole.log(is_simple_power(1023,\
    \ 2));\nconsole.log(is_simple_power(1025, 2));\nconsole.log(is_simple_power(1025,\
    \ 10));\nconsole.log(is_simple_power(1025, 1));\nconsole.log(is_simple_power(1025,\
    \ 0));\nconsole.log(is_simple_power(1025, -1));\nconsole.log(is_simple_power(1025,\
    \ -2));\nconsole.log(is_simple_power(1025, -10));\nconsole.log(is_simple_power(1025,\
    \ -100));\nconsole.log(is_simple_power(1025, -1000));\nconsole.log(is_simple_power(1025,\
    \ -10000));\nconsole.log(is_simple_power(1025, -100000));\nconsole.log(is_simple_power(1025,\
    \ -1000000));\nconsole.log(is_simple_power(1025, -10000000));\nconsole.log(is_simple_power(1025,\
    \ -100000000));\nconsole.log(is_simple_power(1025, -1000000000));\nconsole.log(is_simple_power(1025,\
    \ -10000000000));\nconsole.log(is_simple_power(1025, -100000000000));\nconsole.log(is_simple_power(1025,\
    \ -1000000000000));\nconsole.log(is_simple_power(1025, -10000000000000));\nconsole.log(is_simple_power(1025,\
    \ -100000000000000));\nconsole.log(is_simple_power(10\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkj7mtjf2.ts(43,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpkj7mtjf2.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660013010
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let i = 1;\n    while (Math.pow(n, i)\
    \ <= x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n \
    \       }\n        i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\nconsole.log(is_simple_power(25,\
    \ 5));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(126,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(626,\
    \ 5));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\n\
    console.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1,\
    \ 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1, 7));\n\
    console.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1,\
    \ 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkysvu065.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660013010
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(72, 9));\nconsole.log(is_simple_power(100,\
    \ 10));\nconsole.log(is_simple_power(100, 1));\nconsole.log(is_simple_power(100,\
    \ 2));\nconsole.log(is_simple_power(100, 3));\nconsole.log(is_simple_power(100,\
    \ 4));\nconsole.log(is_simple_power(100, 5));\nconsole.log(is_simple_power(100,\
    \ 6));\nconsole.log(is_simple_power(100, 7));\nconsole.log(is_simple_power(100,\
    \ 8));\nconsole.log(is_simple_power(100, 9));\nconsole.log(is_simple_power(100,\
    \ 10));\nconsole.log(is_simple_power(100, 11));\nconsole.log(is_simple_power(100,\
    \ 12));\nconsole.log(is_simple_power(100, 13));\nconsole.log(is_simple_power(100,\
    \ 14));\nconsole.log(is_simple_power(100, 15));\nconsole.log(is_simple_power(100,\
    \ 16));\nconsole.log(is_simple_power(100, 17));\nconsole.log(is_simple_power(100,\
    \ 18));\nconsole.log(is_simple_power(100, 19));\nconsole.log(is_simple_power(100,\
    \ 20));\nconsole.log(is_simple_power(100, 21));\nconsole.log(is_simple_power(100,\
    \ 22));\nconsole.log(is_simple_power(100, 23));\nconsole.log(is_simple_power(100,\
    \ 24));\nconsole.log(is_simple_power(100, 25));\nconsole.log(is_simple_power(100,\
    \ 26));\nconsole.log(is_simple_power(100, 27));\nconsole.log(is_simple_power(100,\
    \ 28));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpugmonn7t.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpugmonn7t.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013010
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let i = 1;\n    while (n ** i <= x)\
    \ {\n        if (n ** i === x) {\n            result = true;\n        }\n    \
    \    i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(4, 2));\n\
    console.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(256, 2));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1024, 2));\n\
    console.log(is_simple_power(1024, 10));\nconsole.log(is_simple_power(1024, 5));\n\
    console.log(is_simple_power(1024, 1));\nconsole.log(is_simple_power(1, 1024));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    true

    true

    true

    true

    false

    false

    '
  timestamp: 1660013025
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(8,\
    \ 2));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(16,\
    \ 4));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 2));\nconsole.log(is_simple_power(1024,\
    \ 10));\nconsole.log(is_simple_power(1024, 5));\nconsole.log(is_simple_power(1024,\
    \ 1));\nconsole.log(is_simple_power(1024, 0));\nconsole.log(is_simple_power(1024,\
    \ -2));\nconsole.log(is_simple_power(1024, -1));\nconsole.log(is_simple_power(1024,\
    \ -10));\nconsole.log(is_simple_power(1024, -5));\nconsole.log(is_simple_power(1024,\
    \ -1));\nconsole.log(is_simple_power(1024, -0));\nconsole.log(is_simple_power(1024,\
    \ -2));\nconsole.log(is_simple_power(1024, -1));\nconsole.log(is_simple_power(1024,\
    \ -10));\nconsole.log(is_simple_power(1024, -5));\nconsole.log(is_simple_power(1024,\
    \ -1));\nconsole.log(is_simple_power(1024, -0));\nconsole.log(is_simple_power(1024,\
    \ -2));\nconsole.log(is_simple_power(1024, -1));\nconsole.log(is_simple_power(1024,\
    \ -10));\nconsole.log(is_simple_power(1024, -5));\nconsole.log(is_simple_power(1024,\
    \ -1));\nconsole.log(is_simple_power(1024, -0));\nconsole.log(is_simple_power(1024,\
    \ -2));\nconsole.log(is_simple_power(1024, -1));\nconsole.log(is_simple_power(1024,\
    \ -10));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpld7dyew8.js:46:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpld7dyew8.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    true

    true

    false

    false

    false

    true

    false

    false

    false

    false

    false

    true

    false

    false

    false

    false

    false

    true

    false

    false

    false

    false

    false

    true

    false

    false

    false

    '
  timestamp: 1660013010
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  for (let i = 0; i < x; i++) {\n    if (Math.pow(n,\
    \ i) === x) {\n      result = true;\n    }\n  }\n  return result;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(256, 2));\nconsole.log(is_simple_power(256,\
    \ 3));\nconsole.log(is_simple_power(256, 1));\nconsole.log(is_simple_power(256,\
    \ 0));\nconsole.log(is_simple_power(0, 0));\nconsole.log(is_simple_power(1, 1));\n\
    console.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 0));\nconsole.log(is_simple_power(0,\
    \ 1));\nconsole.log(is_simple_power(0, 2));\nconsole.log(is_simple_power(0, 3));\n\
    console.log(is_simple_power(0, 4));\nconsole.log(is_simple_power(0, 5));\nconsole.log(is_simple_power(0,\
    \ 6));\nconsole.log(is_simple_power(0, 7));\nconsole.log(is_simple_power(0, 8));\n\
    console.log(is_simple_power(0, 9));\nconsole.log(is_simple_power(0, 10));\nconsole.log(is_simple_power(0,\
    \ 11));\nconsole.log(is_simple_power(0, 12));\nconsole.log(is_simple_power(0,\
    \ 13));\nconsole.log(is_simple_power(0, 14));\nconsole.log(is_simple_power(0,\
    \ 15));\nconsole.log(is_simple_power(0, 16));\nconsole.log(is_simple_power(0,\
    \ 17));\nconsole.log(is_simple_power(0, 18));\nconsole.log(is_simple_power(0,\
    \ 19));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    true

    true

    true

    false

    false

    false

    false

    true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013011
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(82, 3));\nconsole.log(is_simple_power(243,\
    \ 3));\nconsole.log(is_simple_power(244, 3));\nconsole.log(is_simple_power(729,\
    \ 3));\nconsole.log(is_simple_power(730, 3));\nconsole.log(is_simple_power(2187,\
    \ 3));\nconsole.log(is_simple_power(2188, 3));\nconsole.log(is_simple_power(6561,\
    \ 3));\nconsole.log(is_simple_power(6562, 3));\nconsole.log(is_simple_power(19683,\
    \ 3));\nconsole.log(is_simple_power(19684, 3));\nconsole.log(is_simple_power(59049,\
    \ 3));\nconsole.log(is_simple_power(59050, 3));\nconsole.log(is_simple_power(177147,\
    \ 3));\nconsole.log(is_simple_power(177148, 3));\nconsole.log(is_simple_power(531441,\
    \ 3));\nconsole.log(is_simple_power(531442, 3));\nconsole.log(is_simple_power(1594323,\
    \ 3));\nconsole.log(is_simple_power(1594324, 3));\nconsole.log(is_simple_power(4782969,\
    \ 3));\nconsole.log(is_simple_power(4782970, 3));\nconsole.log(is_simple_power(14348907,\
    \ 3));\nconsole.log(is_simple_power(14348908, 3));\nconsole.log(is_simple_power(43046721,\
    \ 3));\nconsole.log(is_simple_power(43046722\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpuxdluff0.ts(40,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpuxdluff0.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660013006
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(16,\
    \ 2));\nconsole.log(is_simple_power(25, 5));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(1, 1));\n\
    console.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1, 6));\n\
    console.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1,\
    \ 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1, 11));\n\
    console.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\nconsole.log(is_simple_power(1,\
    \ 24));\nconsole.log(is_simple_power(1, 25));\nconsole.log(is_simple_power(1,\
    \ 26));\nconsole.log(is_simple_power(1, 27));\nconsole\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvbr3flex.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvbr3flex.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    false

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1660013012
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(5, 125));\nconsole.log(is_simple_power(3, 9));\nconsole.log(is_simple_power(16807,\
    \ 7));\nconsole.log(is_simple_power(16807, 5));\nconsole.log(is_simple_power(243,\
    \ 3));\nconsole.log(is_simple_power(243, 5));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(256, 2));\nconsole.log(is_simple_power(78125,\
    \ 5));\nconsole.log(is_simple_power(78125, 3));\nconsole.log(is_simple_power(78125,\
    \ 9));\nconsole.log(is_simple_power(78125, 15));\nconsole.log(is_simple_power(78125,\
    \ 17));\nconsole.log(is_simple_power(78125, 51));\nconsole.log(is_simple_power(78125,\
    \ 85));\nconsole.log(is_simple_power(78125, 255));\nconsole.log(is_simple_power(78125,\
    \ 257));\nconsole.log(is_simple_power(78125, 785));\nconsole.log(is_simple_power(78125,\
    \ 1285));\nconsole.log(is_simple_power(78125, 5751));\nconsole.log(is_simple_power(78125,\
    \ 7751));\nconsole.log(is_simple_power(78125, 78125));\nconsole.log(is_simple_power(78125,\
    \ 78126));\nconsole.log(is_simple_power(78125, 78127));\nconsole.log(is_simple_power(78125,\
    \ 78128));\nconsole.log(is_simple_power(78125, 78129));\nconsole.log(is_simple_power(78125,\
    \ 78130));\nconsole.log(is_simple_power(78125,\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5h_0bd_1.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660013011
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  let i = 1;\n  while (n ** i <= x) {\n  \
    \  if (n ** i === x) {\n      result = true;\n    }\n    i++;\n  }\n  return result;\n\
    }\n\nconsole.log(is_simple_power(16, 2));\nconsole.log(is_simple_power(16, 4));\n\
    console.log(is_simple_power(16, 8));\nconsole.log(is_simple_power(16, 3));\nconsole.log(is_simple_power(16,\
    \ 1));\nconsole.log(is_simple_power(16, 16));\nconsole.log(is_simple_power(16,\
    \ 17));\nconsole.log(is_simple_power(16, 32));\nconsole.log(is_simple_power(16,\
    \ 0));\nconsole.log(is_simple_power(16, -1));\nconsole.log(is_simple_power(16,\
    \ -2));\nconsole.log(is_simple_power(16, -4));\nconsole.log(is_simple_power(16,\
    \ -8));\nconsole.log(is_simple_power(16, -16));\nconsole.log(is_simple_power(16,\
    \ -17));\nconsole.log(is_simple_power(16, -32));\nconsole.log(is_simple_power(16,\
    \ -0));\nconsole.log(is_simple_power(0, 0));\nconsole.log(is_simple_power(0, 1));\n\
    console.log(is_simple_power(0, 2));\nconsole.log(is_simple_power(0, 4));\nconsole.log(is_simple_power(0,\
    \ 8));\nconsole.log(is_simple_power(0, 16));\nconsole.log(is_simple_power(0, 17));\n\
    console.log(is_simple_power(0, 32));\nconsole.log(is_simple_power(0, 0));\nconsole.log(is_simple_power(0,\
    \ -1));\nconsole.log(is_simple_power(0, -2));\nconsole.log(is_simple_power(0,\
    \ -4));\nconsole.log(is\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppeufkgkg.ts(47,1): error TS1005: '','' expected.

    ../../../../../tmp/tmppeufkgkg.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660013012
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let i = 0;\n    while (Math.pow(n, i) < x) {\n        i++;\n\
    \    }\n    return Math.pow(n, i) === x;\n}\n\nconsole.log(is_simple_power(8,\
    \ 2));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(25, 5));\nconsole.log(is_simple_power(24,\
    \ 6));\nconsole.log(is_simple_power(23, 7));\nconsole.log(is_simple_power(22,\
    \ 8));\nconsole.log(is_simple_power(21, 9));\nconsole.log(is_simple_power(20,\
    \ 10));\nconsole.log(is_simple_power(19, 11));\nconsole.log(is_simple_power(18,\
    \ 12));\nconsole.log(is_simple_power(17, 13));\nconsole.log(is_simple_power(16,\
    \ 14));\nconsole.log(is_simple_power(15, 15));\nconsole.log(is_simple_power(14,\
    \ 16));\nconsole.log(is_simple_power(13, 17));\nconsole.log(is_simple_power(12,\
    \ 18));\nconsole.log(is_simple_power(11, 19));\nconsole.log(is_simple_power(10,\
    \ 20));\nconsole.log(is_simple_power(9, 21));\nconsole.log(is_simple_power(8,\
    \ 22));\nconsole.log(is_simple_power(7, 23));\nconsole.log(is_simple_power(6,\
    \ 24));\nconsole.log(is_simple_power(5, 25));\nconsole.log(is_simple_power(4,\
    \ 26));\nconsole.log(is_simple_power(3, 27));\nconsole.log(is_simple_power(2,\
    \ 28));\nconsole.log(is_simple_power(1, 29));\nconsole.log(is_simple_power(0,\
    \ 30));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(0,\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0tz31yju.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660013012
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9,\
    \ 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmptskqmns5.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmptskqmns5.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    false

    '
  timestamp: 1660013001
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 5));\nconsole.log(is_simple_power(243,\
    \ 5));\nconsole.log(is_simple_power(32, 4));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 5));\nconsole.log(is_simple_power(243,\
    \ 5));\nconsole.log(is_simple_power(32, 4));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 5));\nconsole.log(is_simple_power(243,\
    \ 5));\nconsole.log(is_simple_power(32, 4));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 5));\nconsole.log(is_simple_power(243,\
    \ 5));\nconsole.log(is_simple_power(32, 4));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 5));\nconsole.log(is_simple_power(243,\
    \ 5));\nconsole.log(is_simple_power(32, 4));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 5));\nconsole.log(is_simple_power(243,\
    \ 5));\nconsole.log(is_simple_power(32, 4));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 5));\nconsole.log(is_simple_power(243,\
    \ 5));\nconsole.log(is_simple_power(32, 4));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4i4uw703.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013012
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    for (let i = 0; i < x; i++) {\n    \
    \    if (Math.pow(n, i) === x) {\n            result = true;\n        }\n    }\n\
    \    return result;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1,\
    \ 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\n\
    console.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\nconsole.log(is_simple_power(1, 22));\nconsole.log(is_simple_power(1,\
    \ 23));\nconsole.log(is_simple_power(1, 24));\nconsole.log(is_simple_power(1,\
    \ 25));\nconsole.log(is_simple_power(1, 26));\nconsole.log(is_simple_power(1,\
    \ 27));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1660013012
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let power = 0;\n  let result = 0;\n  while (result < x) {\n   \
    \ result = n ** power;\n    if (result === x) {\n      return true;\n    }\n \
    \   power++;\n  }\n  return false;\n}\n\nconsole.log(is_simple_power(4, 2));\n\
    console.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(8,\
    \ 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(27,\
    \ 4));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256,\
    \ 2));\nconsole.log(is_simple_power(256, 1));\nconsole.log(is_simple_power(256,\
    \ 0));\nconsole.log(is_simple_power(256, -1));\nconsole.log(is_simple_power(256,\
    \ -2));\nconsole.log(is_simple_power(256, -3));\nconsole.log(is_simple_power(256,\
    \ -4));\nconsole.log(is_simple_power(256, -5));\nconsole.log(is_simple_power(256,\
    \ -6));\nconsole.log(is_simple_power(256, -7));\nconsole.log(is_simple_power(256,\
    \ -8));\nconsole.log(is_simple_power(256, -9));\nconsole.log(is_simple_power(256,\
    \ -10));\nconsole.log(is_simple_power(256, -11));\nconsole.log(is_simple_power(256,\
    \ -12));\nconsole.log(is_simple_power(256, -13));\nconsole.log(is_simple_power(256,\
    \ -14));\nconsole.log(is_simple_power(256, -15));\nconsole.log(is_simple_power(256,\
    \ -16));\nconsole.log(is_simple_power(256, -17));\nconsole.log(is_simple_power(256,\
    \ -18));\nconsole.log(is_simple_power(\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphn7qy0jn.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660013012
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  for (let i = 0; i < x; i++) {\n    if (Math.pow(n,\
    \ i) === x) {\n      result = true;\n    }\n  }\n  return result;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 2));\nconsole.log(is_simple_power(1024,\
    \ 3));\nconsole.log(is_simple_power(1024, 10));\nconsole.log(is_simple_power(1024,\
    \ 1));\nconsole.log(is_simple_power(1, 1024));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 0));\nconsole.log(is_simple_power(0, 0));\n\
    console.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(0, 2));\nconsole.log(is_simple_power(0,\
    \ 3));\nconsole.log(is_simple_power(0, 4));\nconsole.log(is_simple_power(0, 5));\n\
    console.log(is_simple_power(0, 6));\nconsole.log(is_simple_power(0, 7));\nconsole.log(is_simple_power(0,\
    \ 8));\nconsole.log(is_simple_power(0, 9));\nconsole.log(is_simple_power(0, 10));\n\
    console.log(is_simple_power(0, 11));\nconsole.log(is_simple_power(0, 12));\nconsole.log(is_simple_power(0,\
    \ 13));\nconsole.log(is_simple_power(0, 14));\nconsole.log(is_simple_power(0,\
    \ 15));\nconsole.log(is_simple_power(0, 16));\nconsole.log(is_simple_power(0,\
    \ 17));\nconsole.log(is_simple_power(0, 18));\nconsole.log(is_simple_power(0,\
    \ 19));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    true

    true

    true

    false

    false

    false

    true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013012
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(121, 11));\n\
    console.log(is_simple_power(1024, 10));\nconsole.log(is_simple_power(1, 1));\n\
    console.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(10, 1));\nconsole.log(is_simple_power(3,\
    \ 3));\nconsole.log(is_simple_power(10, 2));\nconsole.log(is_simple_power(16,\
    \ 2));\nconsole.log(is_simple_power(256, 2));\nconsole.log(is_simple_power(100,\
    \ 2));\nconsole.log(is_simple_power(100, 10));\nconsole.log(is_simple_power(100,\
    \ 1));\nconsole.log(is_simple_power(100, 5));\nconsole.log(is_simple_power(100,\
    \ 7));\nconsole.log(is_simple_power(100, 9));\nconsole.log(is_simple_power(100,\
    \ 11));\nconsole.log(is_simple_power(100, 13));\nconsole.log(is_simple_power(100,\
    \ 15));\nconsole.log(is_simple_power(100, 17));\nconsole.log(is_simple_power(100,\
    \ 19));\nconsole.log(is_simple_power(100, 21));\nconsole.log(is_simple_power(100,\
    \ 23));\nconsole.log(is_simple_power(100, 25));\nconsole.log(is_simple_power(100,\
    \ 27));\nconsole.log(is_simple_power(100, 29));\nconsole.log(is_simple_power(100,\
    \ 31));\nconsole.log(is_simple_power(100, 33));\nconsole.log(is_simple_power(100,\
    \ 35));\nconsole.log(is_simple_power(100, 37));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpp8dg45vc.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013012
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  let i = 1;\n  while (n ** i <= x) {\n  \
    \  if (n ** i === x) {\n      result = true;\n    }\n    i++;\n  }\n  return result;\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(5, 5));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1,\
    \ 2));\nconsole.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(81, 3));\n\
    console.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(64, 4));\n\
    console.log(is_simple_power(216, 6));\nconsole.log(is_simple_power(343, 7));\n\
    console.log(is_simple_power(512, 8));\nconsole.log(is_simple_power(729, 9));\n\
    console.log(is_simple_power(1000, 10));\nconsole.log(is_simple_power(1331, 11));\n\
    console.log(is_simple_power(1728, 12));\nconsole.log(is_simple_power(2197, 13));\n\
    console.log(is_simple_power(2744, 14));\nconsole.log(is_simple_power(3375, 15));\n\
    console.log(is_simple_power(4096, 16));\nconsole.log(is_simple_power(4913, 17));\n\
    console.log(is_simple_power(5832, 18));\nconsole.log(is_simple_power(6859, 19));\n\
    console.log(is_simple_power(8000, 20));\nconsole.log(is_simple_power(9261, 21));\n\
    console.log(is_simple_power(10648, 22));\nconsole.log(is_simple_power(12167, 23));\n\
    console.log(is_simple_power(13824, 24));\nconsole.log(is_simple_power(15625, 25));\n\
    console.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2y2l2ado.ts(46,9): error TS1003: Identifier expected.

    '
  timestamp: 1660013012
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(64, 4));\n\
    console.log(is_simple_power(70, 10));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwc4xlqg8.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013012
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(72, 3));\nconsole.log(is_simple_power(100, 10));\n\
    console.log(is_simple_power(100, 1));\nconsole.log(is_simple_power(144, 12));\n\
    console.log(is_simple_power(1728, 12));\nconsole.log(is_simple_power(1728, 8));\n\
    console.log(is_simple_power(1728, 9));\nconsole.log(is_simple_power(1728, 1));\n\
    console.log(is_simple_power(1728, 0));\nconsole.log(is_simple_power(1728, -1));\n\
    console.log(is_simple_power(1728, 1.5));\nconsole.log(is_simple_power(1728, 1.1));\n\
    console.log(is_simple_power(1728, 1.01));\nconsole.log(is_simple_power(1728, 1.001));\n\
    console.log(is_simple_power(1728, 1.0001));\nconsole.log(is_simple_power(1728,\
    \ 1.00001));\nconsole.log(is_simple_power(1728, 1.000001));\nconsole.log(is_simple_power(1728,\
    \ 1.0000001));\nconsole.log(is_simple_power(1728, 1.00000001));\nconsole.log(is_simple_power(1728,\
    \ 1.000000001));\nconsole.log(is_simple_power(1728, 1.0000000001));\nconsole.log(is_simple_power(1728,\
    \ 1.00000000001));\nconsole.log(is_simple_power(1728, 1.000000000001));\nconsole.log(is_simple_power(1728,\
    \ 1.0000000000001));\nconsole.log(is_simple_power(1728, 1.00000000000001));\n\
    console.log(is_simple_power(17\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpprcy7w5m.ts(38,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpprcy7w5m.ts(38,9): error TS1005: '','' expected.

    '
  timestamp: 1660013012
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(16, 4));\n\
    console.log(is_simple_power(64, 4));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(9, 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(243, 3));\nconsole.log(is_simple_power(16,\
    \ 2));\nconsole.log(is_simple_power(256, 2));\nconsole.log(is_simple_power(81,\
    \ 4));\nconsole.log(is_simple_power(27, 4));\nconsole.log(is_simple_power(16,\
    \ 5));\nconsole.log(is_simple_power(32, 5));\nconsole.log(is_simple_power(64,\
    \ 5));\nconsole.log(is_simple_power(128, 5));\nconsole.log(is_simple_power(256,\
    \ 5));\nconsole.log(is_simple_power(512, 5));\nconsole.log(is_simple_power(1024,\
    \ 5));\nconsole.log(is_simple_power(2048, 5));\nconsole.log(is_simple_power(4096,\
    \ 5));\nconsole.log(is_simple_power(8192, 5));\nconsole.log(is_simple_power(16384,\
    \ 5));\nconsole.log(is_simple_power(32768, 5));\nconsole.log(is_simple_power(65536,\
    \ 5));\nconsole.log(is_simple_power(131072, 5));\nconsole.log(is_simple_power(262144,\
    \ 5));\nconsole.log(is_simple_power(524288, 5));\nconsole.log(is_simple_power(1048576,\
    \ 5));\nconsole.log(is_simple_power(2097152, 5));\nconsole.log(is_simple_power(4194304,\
    \ 5));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp953tsxlb.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013012
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(24, 4));\n\
    console.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1,\
    \ 2));\nconsole.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1,\
    \ 7));\nconsole.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\n\
    console.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\nconsole.log(is_simple_power(1,\
    \ 24));\nconsole.log(is_simple_power(1, 25));\nconsole.log(is_simple_power(1,\
    \ 26));\nconsole.log(is_simple_power(1, 27));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj632nrsr.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013012
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 2));\nconsole.log(is_simple_power(1023,\
    \ 2));\nconsole.log(is_simple_power(1025, 2));\nconsole.log(is_simple_power(1026,\
    \ 2));\nconsole.log(is_simple_power(1028, 2));\nconsole.log(is_simple_power(1030,\
    \ 2));\nconsole.log(is_simple_power(1032, 2));\nconsole.log(is_simple_power(1034,\
    \ 2));\nconsole.log(is_simple_power(1036, 2));\nconsole.log(is_simple_power(1038,\
    \ 2));\nconsole.log(is_simple_power(1040, 2));\nconsole.log(is_simple_power(1042,\
    \ 2));\nconsole.log(is_simple_power(1044, 2));\nconsole.log(is_simple_power(1046,\
    \ 2));\nconsole.log(is_simple_power(1048, 2));\nconsole.log(is_simple_power(1050,\
    \ 2));\nconsole.log(is_simple_power(1052, 2));\nconsole.log(is_simple_power(1054,\
    \ 2));\nconsole.log(is_simple_power(1056, 2));\nconsole.log(is_simple_power(1058,\
    \ 2));\nconsole.log(is_simple_power(1060, 2));\nconsole.log(is_simple_power(1062,\
    \ 2));\nconsole.log(is_simple_power(1064, 2));\nconsole.log(is_simple_power(1066,\
    \ 2));\nconsole.log(is_simple_power(1068, 2));\nconsole.log(is_\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbhl6lu5g.ts(41,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpbhl6lu5g.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660013013
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9,\
    \ 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(82,\
    \ 3));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\n\
    console.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1,\
    \ 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1, 7));\n\
    console.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1,\
    \ 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\nconsole.log(is_simple_power(1,\
    \ 24));\nconsole.log(is_simple_power(1, 25));\nconsole.log(is_simple_power(1,\
    \ 26));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpc3rzefbg.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpc3rzefbg.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    false

    false

    false

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1660013014
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return power ===\
    \ Math.floor(power);\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27,\
    \ 3));\nconsole.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(625,\
    \ 5));\nconsole.log(is_simple_power(2401, 7));\nconsole.log(is_simple_power(2401,\
    \ 5));\nconsole.log(is_simple_power(1024, 10));\nconsole.log(is_simple_power(1024,\
    \ 5));\nconsole.log(is_simple_power(1024, 2));\nconsole.log(is_simple_power(1024,\
    \ 1));\nconsole.log(is_simple_power(1024, 0));\nconsole.log(is_simple_power(1,\
    \ 1024));\nconsole.log(is_simple_power(0, 1024));\nconsole.log(is_simple_power(0,\
    \ 0));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 0));\n\
    console.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(1, -1));\nconsole.log(is_simple_power(1,\
    \ -1024));\nconsole.log(is_simple_power(-1, 1));\nconsole.log(is_simple_power(-1,\
    \ -1));\nconsole.log(is_simple_power(-1, -1024));\nconsole.log(is_simple_power(-1,\
    \ 1024));\nconsole.log(is_simple_power(-1024, 1));\nconsole.log(is_simple_power(-1024,\
    \ -1));\nconsole.log(is_simple_power(-1024, -1024));\nconsole.log(is_simple_power(-1024,\
    \ 1024));\nconsole.log(is_simple_power(-8, 2));\nconsole.log(is_simple_power(-27,\
    \ 3));\nconsole.log(is_\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6qq8zsef.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp6qq8zsef.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660013014
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(82, 3));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm88xyg2p.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013014
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1024, 10));\n\
    console.log(is_simple_power(1024, 2));\nconsole.log(is_simple_power(1024, 1));\n\
    console.log(is_simple_power(1024, 0));\nconsole.log(is_simple_power(1024, -1));\n\
    console.log(is_simple_power(1024, -2));\nconsole.log(is_simple_power(1024, -3));\n\
    console.log(is_simple_power(1024, -4));\nconsole.log(is_simple_power(1024, -5));\n\
    console.log(is_simple_power(1024, -6));\nconsole.log(is_simple_power(1024, -7));\n\
    console.log(is_simple_power(1024, -8));\nconsole.log(is_simple_power(1024, -9));\n\
    console.log(is_simple_power(1024, -10));\nconsole.log(is_simple_power(1024, -11));\n\
    console.log(is_simple_power(1024, -12));\nconsole.log(is_simple_power(1024, -13));\n\
    console.log(is_simple_power(1024, -14));\nconsole.log(is_simple_power(1024, -15));\n\
    console.log(is_simple_power(1024, -16));\nconsole.log(is_simple_power(1024, -17));\n\
    console.log(is_simple_power(1024, -18));\nconsole.log(is_simple_power(1024, -19));\n\
    console.log(is_simple_power(1024, -20));\nconsole.log(is_simple_power(1024, -21));\n\
    console.log(is_simple_power(1024, -22));\nconsole.log(is_simple_power(1024, -23));\n\
    console.log(is_simple\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp23g8z6bx.ts(41,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp23g8z6bx.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660013014
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1024, 2));\n\
    console.log(is_simple_power(1024, 10));\nconsole.log(is_simple_power(1024, 3));\n\
    console.log(is_simple_power(1024, 1));\nconsole.log(is_simple_power(1, 1024));\n\
    console.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1,\
    \ 3));\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\n\
    console.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1,\
    \ 8));\nconsole.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\n\
    console.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\nconsole.log(is_simple_power(1, 22));\nconsole.log(is_simple_power(1,\
    \ 23));\nconsole.log(is_simple_power(1, 24));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp39qb4_7g.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013014
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(24, 4));\n\
    console.log(is_simple_power(81, 3));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphkrq0cns.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013014
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return power % 1\
    \ === 0;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(1024, 3));\nconsole.log(is_simple_power(1024,\
    \ 10));\nconsole.log(is_simple_power(1024, 1));\nconsole.log(is_simple_power(1,\
    \ 1024));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(0,\
    \ 0));\nconsole.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(1, 0));\n\
    console.log(is_simple_power(1, -1));\nconsole.log(is_simple_power(-1, 1));\nconsole.log(is_simple_power(-1,\
    \ -1));\nconsole.log(is_simple_power(-1, 2));\nconsole.log(is_simple_power(2,\
    \ -1));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(2, 3));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 3));\nconsole.log(is_simple_power(3,\
    \ 4));\nconsole.log(is_simple_power(4, 3));\nconsole.log(is_simple_power(4, 4));\n\
    console.log(is_simple_power(4, 5));\nconsole.log(is_simple_power(5, 4));\nconsole.log(is_simple_power(5,\
    \ 5));\nconsole.log(is_simple_power(5, 6));\nconsole.log(is_simple_power(6, 5));\n\
    console.log(is_simple_power(6, 6));\nconsole.log(is_simple_power(6, 7));\nconsole.log(is_simple_power(7,\
    \ 6\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp55s_mb5d.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp55s_mb5d.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660013014
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(256,\
    \ 2));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\n\
    console.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(81,\
    \ 4));\nconsole.log(is_simple_power(81, 9));\nconsole.log(is_simple_power(81,\
    \ 7));\nconsole.log(is_simple_power(81, 5));\nconsole.log(is_simple_power(81,\
    \ 6));\nconsole.log(is_simple_power(81, 8));\nconsole.log(is_simple_power(81,\
    \ 10));\nconsole.log(is_simple_power(81, 11));\nconsole.log(is_simple_power(81,\
    \ 12));\nconsole.log(is_simple_power(81, 13));\nconsole.log(is_simple_power(81,\
    \ 14));\nconsole.log(is_simple_power(81, 15));\nconsole.log(is_simple_power(81,\
    \ 16));\nconsole.log(is_simple_power(81, 17));\nconsole.log(is_simple_power(81,\
    \ 18));\nconsole.log(is_simple_power(81, 19));\nconsole.log(is_simple_power(81,\
    \ 20));\nconsole.log(is_simple_power(81, 21));\nconsole.log(is_simple_power(81,\
    \ 22));\nconsole.log(is_simple_power(81, 23));\nconsole.log(is_simple_power(81,\
    \ 24));\nconsole.log(is_simple_power(81, 25));\nconsole.log(is_simple_power(81,\
    \ 26));\nconsole.log(is_simple_power(81, 27));\nconsole.log(is_simple_power(81,\
    \ 28));\nconsole.log(is_simple\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6bfzmmb2.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp6bfzmmb2.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660013014
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let power = n;\n  while (power < x) {\n    power *= n;\n  }\n \
    \ return power === x;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(1024000000, 2));\nconsole.log(is_simple_power(6561,\
    \ 3));\nconsole.log(is_simple_power(2401, 7));\nconsole.log(is_simple_power(24,\
    \ 5));\nconsole.log(is_simple_power(25, 2));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(253, 3));\nconsole.log(is_simple_power(24001,\
    \ 3));\nconsole.log(is_simple_power(240001, 3));\nconsole.log(is_simple_power(2400001,\
    \ 3));\nconsole.log(is_simple_power(24000001, 3));\nconsole.log(is_simple_power(240000001,\
    \ 3));\nconsole.log(is_simple_power(2400000001, 3));\nconsole.log(is_simple_power(24000000001,\
    \ 3));\nconsole.log(is_simple_power(240000000001, 3));\nconsole.log(is_simple_power(2400000000001,\
    \ 3));\nconsole.log(is_simple_power(24000000000001, 3));\nconsole.log(is_simple_power(240000000000001,\
    \ 3));\nconsole.log(is_simple_power(2400000000000001, 3));\nconsole.log(is_simple_power(24000000000000001,\
    \ 3));\nconsole.log(is_simple_power(2400000000000000001, 3));\nconsole.log(is_simple_power(24000000000000000001,\
    \ 3));\nconsole.log(is_simple_power(240000000000000000001, 3));\nconsole.log(is_simple_power(2400000000000000000001,\
    \ 3));\nconsole.log(is_simple_power(24000000000000000000001, 3));\nconsole.log(is_simple_power(240000000000000000000001,\
    \ 3));\nconsole.log(is_simple_power(24\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmg0xhybn.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpmg0xhybn.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660013014
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256, 8));\n\
    console.log(is_simple_power(256, 16));\nconsole.log(is_simple_power(256, 32));\n\
    console.log(is_simple_power(256, 64));\nconsole.log(is_simple_power(256, 128));\n\
    console.log(is_simple_power(256, 256));\nconsole.log(is_simple_power(256, 512));\n\
    console.log(is_simple_power(256, 1024));\nconsole.log(is_simple_power(256, 2048));\n\
    console.log(is_simple_power(256, 4096));\nconsole.log(is_simple_power(256, 8192));\n\
    console.log(is_simple_power(256, 16384));\nconsole.log(is_simple_power(256, 32768));\n\
    console.log(is_simple_power(256, 65536));\nconsole.log(is_simple_power(256, 131072));\n\
    console.log(is_simple_power(256, 262144));\nconsole.log(is_simple_power(256, 524288));\n\
    console.log(is_simple_power(256, 1048576));\nconsole.log(is_simple_power(256,\
    \ 2097152));\nconsole.log(is_simple_power(256, 4194304));\nconsole.log(is_simple_power(256,\
    \ 8388608));\nconsole.log(is_simple_power(256, 16777216));\nconsole.log(is_simple_power(256,\
    \ 33554432));\nconsole.log(is_simple_power(256, 67108864));\nconsole.log(is_simple_power(256,\
    \ 134217728));\nconsole.log(is_simple_power(256, 268435456));\nconsole.log(is_simple_power(256,\
    \ 5\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp85k6hg09.ts(40,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp85k6hg09.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660013014
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let i = 1;\n  let result = n;\n  while (result < x) {\n    result\
    \ *= n;\n    i++;\n  }\n  if (result === x) {\n    return true;\n  } else {\n\
    \    return false;\n  }\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27,\
    \ 3));\nconsole.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(1024, 10));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1, 100));\n\
    console.log(is_simple_power(1, 1000));\nconsole.log(is_simple_power(1, 10000));\n\
    console.log(is_simple_power(1, 100000));\nconsole.log(is_simple_power(1, 1000000));\n\
    console.log(is_simple_power(1, 10000000));\nconsole.log(is_simple_power(1, 100000000));\n\
    console.log(is_simple_power(1, 1000000000));\nconsole.log(is_simple_power(1, 10000000000));\n\
    console.log(is_simple_power(1, 100000000000));\nconsole.log(is_simple_power(1,\
    \ 1000000000000));\nconsole.log(is_simple_power(1, 10000000000000));\nconsole.log(is_simple_power(1,\
    \ 100000000000000));\nconsole.log(is_simple_power(1, 1000000000000000));\nconsole.log(is_simple_power(1,\
    \ 10000000000000000));\nconsole.log(is_simple_power(1, 100000000000000000));\n\
    console.log(is_simple_power(1, 1000000000000000000));\nconsole.log(is_simple_power(1,\
    \ 10000000000000000000));\nconsole.log(is_simple_power(1, 100000000000000000000\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzjhvjyv4.ts(47,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpzjhvjyv4.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660013014
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(5, 5));\nconsole.log(is_simple_power(5,\
    \ 3));\nconsole.log(is_simple_power(5, 2));\nconsole.log(is_simple_power(5, 1));\n\
    console.log(is_simple_power(5, 0));\nconsole.log(is_simple_power(0, 0));\nconsole.log(is_simple_power(0,\
    \ 1));\nconsole.log(is_simple_power(0, 2));\nconsole.log(is_simple_power(0, 3));\n\
    console.log(is_simple_power(0, 4));\nconsole.log(is_simple_power(0, 5));\nconsole.log(is_simple_power(0,\
    \ 6));\nconsole.log(is_simple_power(0, 7));\nconsole.log(is_simple_power(0, 8));\n\
    console.log(is_simple_power(0, 9));\nconsole.log(is_simple_power(0, 10));\nconsole.log(is_simple_power(0,\
    \ 11));\nconsole.log(is_simple_power(0, 12));\nconsole.log(is_simple_power(0,\
    \ 13));\nconsole.log(is_simple_power(0, 14));\nconsole.log(is_simple_power(0,\
    \ 15));\nconsole.log(is_simple_power(0, 16));\nconsole.log(is_simple_power(0,\
    \ 17));\nconsole.log(is_simple_power(0, 18));\nconsole.log(is_simple_power(0,\
    \ 19));\nconsole.log(is_simple_power(0, 20));\nconsole.log(is_simple_power(0,\
    \ 21));\nconsole.log(is_simple_power(0, 22));\nconsole.log(is_simple_power(0,\
    \ 23));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp15yfchrb.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013014
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let i = 0;\n    while (Math.pow(n, i)\
    \ <= x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n \
    \       }\n        i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(82, 3));\nconsole.log(is_simple_power(256,\
    \ 2));\nconsole.log(is_simple_power(257, 2));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(1025, 2));\nconsole.log(is_simple_power(1026,\
    \ 2));\nconsole.log(is_simple_power(1028, 2));\nconsole.log(is_simple_power(1029,\
    \ 2));\nconsole.log(is_simple_power(1030, 2));\nconsole.log(is_simple_power(1031,\
    \ 2));\nconsole.log(is_simple_power(1032, 2));\nconsole.log(is_simple_power(1033,\
    \ 2));\nconsole.log(is_simple_power(1034, 2));\nconsole.log(is_simple_power(1035,\
    \ 2));\nconsole.log(is_simple_power(1036, 2));\nconsole.log(is_simple_power(1037,\
    \ 2));\nconsole.log(is_simple_power(1038, 2));\nconsole.log(is_simple_power(1039,\
    \ 2));\nconsole.log(is_simple_power(1040, 2));\nconsole.log(is_simple_power(1041,\
    \ 2));\nconsole.log(is_simple_power(1042, 2));\nconsole.log(is_simple_power(1043,\
    \ 2));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    true

    true

    true

    false

    true

    false

    true

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013030
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(126, 5));\nconsole.log(is_simple_power(625,\
    \ 5));\nconsole.log(is_simple_power(626, 5));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk5mgb3p8.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013014
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(24, 4));\n\
    console.log(is_simple_power(48, 4));\nconsole.log(is_simple_power(121, 11));\n\
    console.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(32,\
    \ 4));\nconsole.log(is_simple_power(100, 10));\nconsole.log(is_simple_power(100,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(625,\
    \ 25));\nconsole.log(is_simple_power(625, 6));\nconsole.log(is_simple_power(625,\
    \ 2));\nconsole.log(is_simple_power(625, 1));\nconsole.log(is_simple_power(625,\
    \ 0));\nconsole.log(is_simple_power(0, 0));\nconsole.log(is_simple_power(0, 1));\n\
    console.log(is_simple_power(0, 2));\nconsole.log(is_simple_power(0, 3));\nconsole.log(is_simple_power(0,\
    \ 4));\nconsole.log(is_simple_power(0, 5));\nconsole.log(is_simple_power(0, 6));\n\
    console.log(is_simple_power(0, 7));\nconsole.log(is_simple_power(0, 8));\nconsole.log(is_simple_power(0,\
    \ 9));\nconsole.log(is_simple_power(0, 10));\nconsole.log(is_simple_power(0, 11));\n\
    console.log(is_simple_power(0, 12));\nconsole.log(is_simple_power(0, 13));\nconsole.log(is_simple_power(0,\
    \ 14));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz0p4qc16.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013015
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 2));\nconsole.log(is_simple_power(10,\
    \ 10));\nconsole.log(is_simple_power(100, 10));\nconsole.log(is_simple_power(1000,\
    \ 10));\nconsole.log(is_simple_power(10000, 10));\nconsole.log(is_simple_power(100000,\
    \ 10));\nconsole.log(is_simple_power(1000000, 10));\nconsole.log(is_simple_power(10000000,\
    \ 10));\nconsole.log(is_simple_power(100000000, 10));\nconsole.log(is_simple_power(1000000000,\
    \ 10));\nconsole.log(is_simple_power(10000000000, 10));\nconsole.log(is_simple_power(100000000000,\
    \ 10));\nconsole.log(is_simple_power(1000000000000, 10));\nconsole.log(is_simple_power(10000000000000,\
    \ 10));\nconsole.log(is_simple_power(100000000000000, 10));\nconsole.log(is_simple_power(1000000000000000,\
    \ 10));\nconsole.log(is_simple_power(10000000000000000, 10));\nconsole.log(is_simple_power(100000000000000000,\
    \ 10));\nconsole.log(is_simple_power(1000000000000000000, 10));\nconsole.log(is_simple_power(10000000000000000000,\
    \ 10));\nconsole.log(is_simple_power(100000000000000000000, 10));\nconsole.log(is_simple_power(1000000000000000000000,\
    \ 10));\nconsole.log(is_simple_power(10000000000000000000000, 10));\nconsole.log(is_simple_power(100000000000000000000000,\
    \ 10));\nconsole.log(is_simple_power(1\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpybex4rlj.ts(40,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpybex4rlj.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660013015
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return Number.isInteger(power);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(32,\
    \ 4));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(243, 3));\nconsole.log(is_simple_power(1024,\
    \ 4));\nconsole.log(is_simple_power(1030, 10));\nconsole.log(is_simple_power(1030,\
    \ 11));\nconsole.log(is_simple_power(1030, 12));\nconsole.log(is_simple_power(1030,\
    \ 13));\nconsole.log(is_simple_power(1030, 14));\nconsole.log(is_simple_power(1030,\
    \ 15));\nconsole.log(is_simple_power(1030, 16));\nconsole.log(is_simple_power(1030,\
    \ 17));\nconsole.log(is_simple_power(1030, 18));\nconsole.log(is_simple_power(1030,\
    \ 19));\nconsole.log(is_simple_power(1030, 20));\nconsole.log(is_simple_power(1030,\
    \ 21));\nconsole.log(is_simple_power(1030, 22));\nconsole.log(is_simple_power(1030,\
    \ 23));\nconsole.log(is_simple_power(1030, 24));\nconsole.log(is_simple_power(1030,\
    \ 25));\nconsole.log(is_simple_power(1030, 26));\nconsole.log(is_simple_power(1030,\
    \ 27));\nconsole.log(is_simple_power(1030, 28));\nconsole.log(is_simple_power(1030,\
    \ 29));\nconsole.log(is_simple_power(1030, 30));\nconsole.log(is_simple_power\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpn6uw45c8.ts(41,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpn6uw45c8.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660013015
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(82, 3));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(126, 5));\nconsole.log(is_simple_power(243,\
    \ 3));\nconsole.log(is_simple_power(244, 3));\nconsole.log(is_simple_power(256,\
    \ 2));\nconsole.log(is_simple_power(257, 2));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(1025, 2));\nconsole.log(is_simple_power(1026,\
    \ 2));\nconsole.log(is_simple_power(1030, 2));\nconsole.log(is_simple_power(1031,\
    \ 2));\nconsole.log(is_simple_power(1032, 2));\nconsole.log(is_simple_power(1033,\
    \ 2));\nconsole.log(is_simple_power(1034, 2));\nconsole.log(is_simple_power(1035,\
    \ 2));\nconsole.log(is_simple_power(1036, 2));\nconsole.log(is_simple_power(1037,\
    \ 2));\nconsole.log(is_simple_power(1038, 2));\nconsole.log(is_simple_power(1039,\
    \ 2));\nconsole.log(is_simple_power(1040, 2));\nconsole.log(is_simple_power(1041,\
    \ 2));\nconsole.log(is_simple_power(1042, 2));\nconsole.log(is_simple_power(1043,\
    \ 2));\nconsole.log(is_simple_power(1044, 2));\nconsole.log(is_simple_power(1045,\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0qmyh_su.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660013016
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(5, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(216,\
    \ 6));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\n\
    console.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1,\
    \ 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1, 7));\n\
    console.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1,\
    \ 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\nconsole.log(is_simple_power(1,\
    \ 24));\nconsole.log(is_simple_power(1, 25));\nconsole.log(is_simple_power(1,\
    \ 26));\nconsole.log(is_simple_power(1, 27));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp311meb3s.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013016
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let i = 0;\n    while (Math.pow(n, i)\
    \ <= x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n \
    \       }\n        i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(1,\
    \ 2));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(4, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 2));\nconsole.log(is_simple_power(16,\
    \ 2));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(32,\
    \ 2));\nconsole.log(is_simple_power(256, 2));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(1025, 2));\nconsole.log(is_simple_power(1026,\
    \ 2));\nconsole.log(is_simple_power(1028, 2));\nconsole.log(is_simple_power(1030,\
    \ 2));\nconsole.log(is_simple_power(1031, 2));\nconsole.log(is_simple_power(1032,\
    \ 2));\nconsole.log(is_simple_power(1033, 2));\nconsole.log(is_simple_power(1034,\
    \ 2));\nconsole.log(is_simple_power(1035, 2));\nconsole.log(is_simple_power(1036,\
    \ 2));\nconsole.log(is_simple_power(1037, 2));\nconsole.log(is_simple_power(1038,\
    \ 2));\nconsole.log(is_simple_power(1039, 2));\nconsole.log(is_simple_power(1040,\
    \ 2));\nconsole.log(is_simple_power(1041, 2));\nconsole.log(is_simple_power(1042,\
    \ 2));\nconsole.log(is_simple_power(1043, 2));\nconsole.log(is_simple_power(1044,\
    \ 2));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    true

    true

    true

    false

    true

    true

    true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013031
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(12, 2));\n\
    console.log(is_simple_power(12, 3));\nconsole.log(is_simple_power(12, 4));\nconsole.log(is_simple_power(12,\
    \ 5));\nconsole.log(is_simple_power(12, 6));\nconsole.log(is_simple_power(12,\
    \ 7));\nconsole.log(is_simple_power(12, 8));\nconsole.log(is_simple_power(12,\
    \ 9));\nconsole.log(is_simple_power(12, 10));\nconsole.log(is_simple_power(12,\
    \ 11));\nconsole.log(is_simple_power(12, 12));\nconsole.log(is_simple_power(12,\
    \ 13));\nconsole.log(is_simple_power(12, 14));\nconsole.log(is_simple_power(12,\
    \ 15));\nconsole.log(is_simple_power(12, 16));\nconsole.log(is_simple_power(12,\
    \ 17));\nconsole.log(is_simple_power(12, 18));\nconsole.log(is_simple_power(12,\
    \ 19));\nconsole.log(is_simple_power(12, 20));\nconsole.log(is_simple_power(12,\
    \ 21));\nconsole.log(is_simple_power(12, 22));\nconsole.log(is_simple_power(12,\
    \ 23));\nconsole.log(is_simple_power(12, 24));\nconsole.log(is_simple_power(12,\
    \ 25));\nconsole.log(is_simple_power(12, 26));\nconsole.log(is_simple_power(12,\
    \ 27));\nconsole.log(is_simple_power(12, 28));\nconsole.log(is_simple_power(12,\
    \ 29));\nconsole.log(is_simple_power(12, 30));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpn5nirqfr.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013017
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return power % 1\
    \ === 0;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(100,\
    \ 10));\nconsole.log(is_simple_power(100, 2));\nconsole.log(is_simple_power(100,\
    \ 1));\nconsole.log(is_simple_power(100, 100));\nconsole.log(is_simple_power(100,\
    \ 0));\nconsole.log(is_simple_power(0, 100));\nconsole.log(is_simple_power(0,\
    \ 0));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 0));\n\
    console.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(2,\
    \ 1));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(2, 3));\n\
    console.log(is_simple_power(2, 4));\nconsole.log(is_simple_power(2, 5));\nconsole.log(is_simple_power(2,\
    \ 6));\nconsole.log(is_simple_power(2, 7));\nconsole.log(is_simple_power(2, 8));\n\
    console.log(is_simple_power(2, 9));\nconsole.log(is_simple_power(2, 10));\nconsole.log(is_simple_power(2,\
    \ 11));\nconsole.log(is_simple_power(2, 12));\nconsole.log(is_simple_power(2,\
    \ 13));\nconsole.log(is_simple_power(2, 14));\nconsole.log(is_simple_power(2,\
    \ 15));\nconsole.log(is_simple_power(2, 16));\nconsole.log(is_simple_power(2,\
    \ 17));\nconsole.log(is_simple_power(2, 18));\nconsole\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqcq5pppi.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpqcq5pppi.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    false

    false

    true

    true

    false

    false

    false

    true

    false

    true

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013017
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return result % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27,\
    \ 3));\nconsole.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\n\
    console.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1,\
    \ 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1, 7));\n\
    console.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1,\
    \ 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\nconsole.log(is_simple_power(1,\
    \ 24));\nconsole.log(is_simple_power(1, 25));\nconsole.log(is_simple_power(1,\
    \ 26));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp92hff7t3.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp92hff7t3.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    true

    true

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1660013017
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result: number = 1;\n    let count: number = 0;\n    while\
    \ (result < x) {\n        result *= n;\n        count++;\n    }\n    return result\
    \ === x;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(8,\
    \ 2));\nconsole.log(is_simple_power(9, 3));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(28, 3));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(126, 5));\nconsole.log(is_simple_power(625, 5));\n\
    console.log(is_simple_power(626, 5));\nconsole.log(is_simple_power(625, 5));\n\
    console.log(is_simple_power(626, 5));\nconsole.log(is_simple_power(625, 5));\n\
    console.log(is_simple_power(626, 5));\nconsole.log(is_simple_power(625, 5));\n\
    console.log(is_simple_power(626, 5));\nconsole.log(is_simple_power(625, 5));\n\
    console.log(is_simple_power(626, 5));\nconsole.log(is_simple_power(625, 5));\n\
    console.log(is_simple_power(626, 5));\nconsole.log(is_simple_power(625, 5));\n\
    console.log(is_simple_power(626, 5));\nconsole.log(is_simple_power(625, 5));\n\
    console.log(is_simple_power(626, 5));\nconsole.log(is_simple_power(625, 5));\n\
    console.log(is_simple_power(626, 5));\nconsole.log(is_simple_power(625, 5));\n\
    console.log(is_simple_power(626, 5));\nconsole.log(is_simple_power(625, 5));\n\
    console.log(is_simple_power(626, 5));\nconsole.log(is_simple_power(625, 5));\n\
    console.log(is_simple_power(\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxkm7vpr2.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660013016
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9,\
    \ 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(32,\
    \ 4));\nconsole.log(is_simple_power(64, 4));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 4));\nconsole.log(is_simple_power(1025,\
    \ 4));\nconsole.log(is_simple_power(1026, 4));\nconsole.log(is_simple_power(1028,\
    \ 4));\nconsole.log(is_simple_power(1029, 4));\nconsole.log(is_simple_power(1030,\
    \ 4));\nconsole.log(is_simple_power(1031, 4));\nconsole.log(is_simple_power(1032,\
    \ 4));\nconsole.log(is_simple_power(1033, 4));\nconsole.log(is_simple_power(1034,\
    \ 4));\nconsole.log(is_simple_power(1035, 4));\nconsole.log(is_simple_power(1036,\
    \ 4));\nconsole.log(is_simple_power(1037, 4));\nconsole.log(is_simple_power(1038,\
    \ 4));\nconsole.log(is_simple_power(1039, 4));\nconsole.log(is_simple_power(1040,\
    \ 4));\nconsole.log(is_simple_power(1041, 4));\nconsole.log(is_simple_power(1042,\
    \ 4));\nconsole.log(is_simple_power(1043, 4));\nconsole.log(is_simple_power(1044\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa48wm0sv.ts(41,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpa48wm0sv.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660013017
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(24, 4));\n\
    console.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1,\
    \ 2));\nconsole.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1,\
    \ 7));\nconsole.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\n\
    console.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\nconsole.log(is_simple_power(1,\
    \ 24));\nconsole.log(is_simple_power(1, 25));\nconsole.log(is_simple_power(1,\
    \ 26));\nconsole.log(is_simple_power(1, 27));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj632nrsr.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013012
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result: boolean = false;\n    let power: number = 1;\n  \
    \  while (power < x) {\n        power *= n;\n    }\n    if (power === x) {\n \
    \       result = true;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(8,\
    \ 2));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 10));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1,\
    \ 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\n\
    console.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\nconsole.log(is_simple_power(1, 22));\nconsole.log(is_simple_power(1,\
    \ 23));\nconsole.log(is_simple_power(1, 24));\nconsole.log(is_simple_power(1,\
    \ 25));\nconsole.log(is_simple_power(1, 26\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppixpyys2.ts(47,1): error TS1005: '','' expected.

    ../../../../../tmp/tmppixpyys2.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660013017
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return power % 1\
    \ === 0;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(625,\
    \ 5));\nconsole.log(is_simple_power(216, 6));\nconsole.log(is_simple_power(1000,\
    \ 10));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 10));\n\
    console.log(is_simple_power(1, 100));\nconsole.log(is_simple_power(1, 1000));\n\
    console.log(is_simple_power(10, 1));\nconsole.log(is_simple_power(100, 1));\n\
    console.log(is_simple_power(1000, 1));\nconsole.log(is_simple_power(10, 2));\n\
    console.log(is_simple_power(100, 2));\nconsole.log(is_simple_power(1000, 2));\n\
    console.log(is_simple_power(10, 3));\nconsole.log(is_simple_power(100, 3));\n\
    console.log(is_simple_power(1000, 3));\nconsole.log(is_simple_power(10, 4));\n\
    console.log(is_simple_power(100, 4));\nconsole.log(is_simple_power(1000, 4));\n\
    console.log(is_simple_power(10, 5));\nconsole.log(is_simple_power(100, 5));\n\
    console.log(is_simple_power(1000, 5));\nconsole.log(is_simple_power(10, 6));\n\
    console.log(is_simple_power(100, 6));\nconsole.log(is_simple_power(1000, 6));\n\
    console.log(is_simple_power(10, 7));\nconsole.log(is_simple_power(100, 7));\n\
    console.log(is_simple_power(1000, 7));\nconsole.log(is_simple_power(10, 8));\n\
    console\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpa3dfl0_v.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpa3dfl0_v.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    false

    false

    false

    true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013017
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return power % 1\
    \ === 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9,\
    \ 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpanxbnezj.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpanxbnezj.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    false

    '
  timestamp: 1660013017
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let i = 0;\n    while (Math.pow(n, i)\
    \ <= x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n \
    \       }\n        i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(5, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(625, 5));\n\
    console.log(is_simple_power(24389, 3));\nconsole.log(is_simple_power(7860, 3));\n\
    console.log(is_simple_power(14348907, 3));\nconsole.log(is_simple_power(43046721,\
    \ 3));\nconsole.log(is_simple_power(43046722, 3));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    false

    true

    true

    true

    false

    false

    true

    true

    false

    '
  timestamp: 1660013032
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let power = 1;\n    while (power < x)\
    \ {\n        power *= n;\n    }\n    if (power === x) {\n        result = true;\n\
    \    }\n    return result;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1,\
    \ 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\n\
    console.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\nconsole.log(is_simple_power(1, 22));\nconsole.log(is_simple_power(1,\
    \ 23));\nconsole.log(is_simple_power(1, 24));\nconsole.log(is_simple_power(1,\
    \ 25));\nconsole.log(is_simple_power(1, 26));\nconsole.log(is_simple_power(1,\
    \ 27));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpr9za1k1e.ts(47,9): error TS1003: Identifier expected.

    '
  timestamp: 1660013017
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(5, 2));\n\
    console.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(256, 4));\n\
    console.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1,\
    \ 3));\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\n\
    console.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1,\
    \ 8));\nconsole.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\n\
    console.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\nconsole.log(is_simple_power(1, 22));\nconsole.log(is_simple_power(1,\
    \ 23));\nconsole.log(is_simple_power(1, 24));\nconsole.log(is_simple_power(1,\
    \ 25));\nconsole.log(is_simple_power(1, 26));\nconsole.log(is_simple_power(1,\
    \ 27));\nconsole.log(is_simple_power(1, 28));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpu5_p_eqq.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013017
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 10));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(1024, 5));\nconsole.log(is_simple_power(1024,\
    \ 8));\nconsole.log(is_simple_power(1024, 16));\nconsole.log(is_simple_power(1024,\
    \ 32));\nconsole.log(is_simple_power(1024, 64));\nconsole.log(is_simple_power(1024,\
    \ 128));\nconsole.log(is_simple_power(1024, 256));\nconsole.log(is_simple_power(1024,\
    \ 512));\nconsole.log(is_simple_power(1024, 1024));\nconsole.log(is_simple_power(1024,\
    \ 2048));\nconsole.log(is_simple_power(1024, 4096));\nconsole.log(is_simple_power(1024,\
    \ 8192));\nconsole.log(is_simple_power(1024, 16384));\nconsole.log(is_simple_power(1024,\
    \ 32768));\nconsole.log(is_simple_power(1024, 65536));\nconsole.log(is_simple_power(1024,\
    \ 131072));\nconsole.log(is_simple_power(1024, 262144));\nconsole.log(is_simple_power(1024,\
    \ 524288));\nconsole.log(is_simple_power(1024, 1048576));\nconsole.log(is_simple_power(1024,\
    \ 2097152));\nconsole.log(is_simple_power(1024, 4194304));\nconsole.log(is_simple_power(1024,\
    \ 8388608));\nconsole.log(is_simple_power(1024, 16777216));\nconsole.log(is_simple_power(\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb9c58ri4.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660013018
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(72, 9));\nconsole.log(is_simple_power(100, 10));\n\
    console.log(is_simple_power(100, 1));\nconsole.log(is_simple_power(1, 100));\n\
    console.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(0, 0));\nconsole.log(is_simple_power(0,\
    \ 1));\nconsole.log(is_simple_power(1, 0));\nconsole.log(is_simple_power(1, -1));\n\
    console.log(is_simple_power(-1, 1));\nconsole.log(is_simple_power(-1, -1));\n\
    console.log(is_simple_power(-1, 2));\nconsole.log(is_simple_power(2, -1));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(2, 3));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 3));\nconsole.log(is_simple_power(4, 3));\nconsole.log(is_simple_power(5,\
    \ 3));\nconsole.log(is_simple_power(6, 3));\nconsole.log(is_simple_power(8, 3));\n\
    console.log(is_simple_power(9, 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(27,\
    \ 2));\nconsole.log(is_simple_power(27, 1));\nconsole.log(is_simple_power(27,\
    \ 0));\nconsole.log(is_simple_power(0, 27));\nconsole.log(is_simple_power(1, 27));\n\
    console.log(is_simple_power(2, 27));\nconsole.log(is_simple_power(3,\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1smvgbv4.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660013018
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let i = 0;\n    while (Math.pow(n, i)\
    \ <= x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n \
    \       }\n        i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(8,\
    \ 2));\nconsole.log(is_simple_power(9, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(28, 3));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1660013033
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let power = Math.log(x) / Math.log(n);\n  return power % 1 ===\
    \ 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27,\
    \ 3));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(25,\
    \ 5));\nconsole.log(is_simple_power(24, 6));\nconsole.log(is_simple_power(81,\
    \ 9));\nconsole.log(is_simple_power(1024, 10));\nconsole.log(is_simple_power(729,\
    \ 9));\nconsole.log(is_simple_power(27, 4));\nconsole.log(is_simple_power(256,\
    \ 3));\nconsole.log(is_simple_power(25, 6));\nconsole.log(is_simple_power(24,\
    \ 5));\nconsole.log(is_simple_power(81, 4));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(729, 3));\nconsole.log(is_simple_power(27,\
    \ 2));\nconsole.log(is_simple_power(256, 8));\nconsole.log(is_simple_power(25,\
    \ 2));\nconsole.log(is_simple_power(24, 4));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(1024, 4));\nconsole.log(is_simple_power(729,\
    \ 2));\nconsole.log(is_simple_power(27, 5));\nconsole.log(is_simple_power(256,\
    \ 2));\nconsole.log(is_simple_power(25, 3));\nconsole.log(is_simple_power(24,\
    \ 2));\nconsole.log(is_simple_power(81, 2));\nconsole.log(is_simple_power(1024,\
    \ 8));\nconsole.log(is_simple_power(729, 4));\nconsole.log(is_simple_power(27,\
    \ 8));\nconsole.log(is_simple_power(256, 16));\nconsole.log(is_simple_power(25,\
    \ 4));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpc2iljpk8.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpc2iljpk8.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    false

    true

    false

    true

    false

    false

    false

    false

    false

    true

    false

    false

    false

    false

    false

    false

    true

    false

    false

    true

    false

    false

    false

    false

    false

    false

    true

    false

    '
  timestamp: 1660013019
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(9,\
    \ 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\nconsole.log(is_simple_power(27, 4));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(256, 2));\nconsole.log(is_simple_power(256,\
    \ 1));\nconsole.log(is_simple_power(256, 0));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6851cxge.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6851cxge.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    false

    false

    false

    true

    true

    false

    true

    '
  timestamp: 1660013019
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return power % 1\
    \ === 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27,\
    \ 3));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1024,\
    \ 5));\nconsole.log(is_simple_power(10000, 10));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(1024, 3));\nconsole.log(is_simple_power(1024,\
    \ 4));\nconsole.log(is_simple_power(1024, 5));\nconsole.log(is_simple_power(1024,\
    \ 10));\nconsole.log(is_simple_power(1024, 11));\nconsole.log(is_simple_power(1024,\
    \ 12));\nconsole.log(is_simple_power(1024, 13));\nconsole.log(is_simple_power(1024,\
    \ 14));\nconsole.log(is_simple_power(1024, 15));\nconsole.log(is_simple_power(1024,\
    \ 16));\nconsole.log(is_simple_power(1024, 17));\nconsole.log(is_simple_power(1024,\
    \ 18));\nconsole.log(is_simple_power(1024, 19));\nconsole.log(is_simple_power(1024,\
    \ 20));\nconsole.log(is_simple_power(1024, 21));\nconsole.log(is_simple_power(1024,\
    \ 22));\nconsole.log(is_simple_power(1024, 23));\nconsole.log(is_simple_power(1024,\
    \ 24));\nconsole.log(is_simple_power(1024, 25));\nconsole.log(is_simple_power(1024,\
    \ 26));\nconsole.log(is_simple_power(1024, 27));\nconsole.log(is_simple_power(1024,\
    \ 28));\nconsole.log(is_simple_power(1024, 29));\nconsole.log(is_simple_power(1024,\
    \ 30));\nconsole.log(is_simple_power(1024, 31));\nconsole.log(is_simple_power(1024,\
    \ 32));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpfhyj5_9y.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpfhyj5_9y.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    true

    true

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    true

    '
  timestamp: 1660013019
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(256,\
    \ 2));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(256,\
    \ 8));\nconsole.log(is_simple_power(256, 16));\nconsole.log(is_simple_power(256,\
    \ 32));\nconsole.log(is_simple_power(256, 64));\nconsole.log(is_simple_power(256,\
    \ 128));\nconsole.log(is_simple_power(256, 256));\nconsole.log(is_simple_power(256,\
    \ 512));\nconsole.log(is_simple_power(256, 1024));\nconsole.log(is_simple_power(256,\
    \ 2048));\nconsole.log(is_simple_power(256, 4096));\nconsole.log(is_simple_power(256,\
    \ 8192));\nconsole.log(is_simple_power(256, 16384));\nconsole.log(is_simple_power(256,\
    \ 32768));\nconsole.log(is_simple_power(256, 65536));\nconsole.log(is_simple_power(256,\
    \ 131072));\nconsole.log(is_simple_power(256, 262144));\nconsole.log(is_simple_power(256,\
    \ 524288));\nconsole.log(is_simple_power(256, 1048576));\nconsole.log(is_simple_power(256,\
    \ 2097152));\nconsole.log(is_simple_power(256, 4194304));\nconsole.log(is_simple_power(256,\
    \ 8388608));\nconsole.log(is_simple_power(256, 16777216));\nconsole.log(is_simple_power(256,\
    \ 33554432));\nconsole.log(is_simple_power(256, 67108864));\nconsole.log(is_simple_power(256,\
    \ 134217728));\nconsole.log(is_simple_power(256, 268435456));\nconsole.log(is\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg7eo0tlc.ts(40,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpg7eo0tlc.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660013019
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = 0;\n    let i = 1;\n    while (result < x) {\n \
    \       result = Math.pow(n, i);\n        if (result === x) {\n            return\
    \ true;\n        }\n        i++;\n    }\n    return false;\n}\n\nconsole.log(is_simple_power(4,\
    \ 2));\nconsole.log(is_simple_power(5, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(1,\
    \ 5));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(0, 0));\n\
    console.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(1, 0));\nconsole.log(is_simple_power(1,\
    \ -1));\nconsole.log(is_simple_power(1, -2));\nconsole.log(is_simple_power(1,\
    \ -3));\nconsole.log(is_simple_power(1, -4));\nconsole.log(is_simple_power(1,\
    \ -5));\nconsole.log(is_simple_power(1, -6));\nconsole.log(is_simple_power(1,\
    \ -7));\nconsole.log(is_simple_power(1, -8));\nconsole.log(is_simple_power(1,\
    \ -9));\nconsole.log(is_simple_power(1, -10));\nconsole.log(is_simple_power(1,\
    \ -11));\nconsole.log(is_simple_power(1, -12));\nconsole.log(is_simple_power(1,\
    \ -13));\nconsole.log(is_simple_power(1, -14));\nconsole.log(is_simple_power(1,\
    \ -15));\nconsole.log(is_simple_power(1, -16));\nconsole.log(is_simple_power(1,\
    \ -17));\nconsole.log(is_simple_power(1, -18));\nconsole.log(is_simple_power(1,\
    \ -19));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1ahmauzn.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660013019
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  let i = 0;\n  while (Math.pow(n, i) <= x)\
    \ {\n    if (Math.pow(n, i) === x) {\n      result = true;\n    }\n    i++;\n\
    \  }\n  return result;\n}\n\nconsole.log(is_simple_power(4, 2)); // true\nconsole.log(is_simple_power(125,\
    \ 5)); // true\nconsole.log(is_simple_power(256, 4)); // true\nconsole.log(is_simple_power(243,\
    \ 3)); // true\nconsole.log(is_simple_power(16807, 7)); // true\nconsole.log(is_simple_power(16,\
    \ 4)); // false\nconsole.log(is_simple_power(15, 3)); // false\nconsole.log(is_simple_power(17,\
    \ 4)); // false\nconsole.log(is_simple_power(256, 3)); // false\nconsole.log(is_simple_power(81,\
    \ 4)); // false\nconsole.log(is_simple_power(81, 2)); // false\nconsole.log(is_simple_power(1,\
    \ 1)); // true\nconsole.log(is_simple_power(1, 2)); // false\nconsole.log(is_simple_power(1,\
    \ 3)); // false\nconsole.log(is_simple_power(1, 4)); // false\nconsole.log(is_simple_power(1,\
    \ 5)); // false\nconsole.log(is_simple_power(1, 6)); // false\nconsole.log(is_simple_power(1,\
    \ 7)); // false\nconsole.log(is_simple_power(1, 8)); // false\nconsole.log(is_simple_power(1,\
    \ 9)); // false\nconsole.log(is_simple_power(1, 10)); // false\nconsole.log(is_simple_power(1,\
    \ 11)); // false\nconsole.log(is_simple_power(1, 12)); // false\nconsole.log(is_simple_power(1,\
    \ 13)); // false\nconsole.log(is_simple_power(1, 14)); // false\nconsole.log(is_simple_power(1,\
    \ 15\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqkpcu0h5.ts(43,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpqkpcu0h5.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660013019
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return Number.isInteger(power);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(24, 4));\n\
    console.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(1024, 10));\n\
    console.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 100));\nconsole.log(is_simple_power(1, 1000));\nconsole.log(is_simple_power(1,\
    \ 10000));\nconsole.log(is_simple_power(1, 100000));\nconsole.log(is_simple_power(1,\
    \ 1000000));\nconsole.log(is_simple_power(1, 10000000));\nconsole.log(is_simple_power(1,\
    \ 100000000));\nconsole.log(is_simple_power(1, 1000000000));\nconsole.log(is_simple_power(1,\
    \ 10000000000));\nconsole.log(is_simple_power(1, 100000000000));\nconsole.log(is_simple_power(1,\
    \ 1000000000000));\nconsole.log(is_simple_power(1, 10000000000000));\nconsole.log(is_simple_power(1,\
    \ 100000000000000));\nconsole.log(is_simple_power(1, 1000000000000000));\nconsole.log(is_simple_power(1,\
    \ 10000000000000000));\nconsole.log(is_simple_power(1, 100000000000000000));\n\
    console.log(is_simple_power(1, 1000000000000000000));\nconsole.log(is_simple_power(1,\
    \ 10000000000000000000));\nconsole.log(is_simple_power(1, 100000000000000000000));\n\
    console.log(is_simple_power(1, 1000000000000000000000));\nconsole.log(is_simple_power(1,\
    \ 10000000000000000000000));\nconsole.log(is_simple_power(1, 100000000000000000000000\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpuca71skl.ts(40,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpuca71skl.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660013019
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let num = Math.log(x) / Math.log(n);\n  return Math.floor(num)\
    \ === num;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1,\
    \ 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\n\
    console.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\nconsole.log(is_simple_power(1, 22));\nconsole.log(is_simple_power(1,\
    \ 23));\nconsole.log(is_simple_power(1, 24));\nconsole.log(is_simple_power(1,\
    \ 25));\nconsole.log(is_simple_power(1, 26));\nconsole.log(is_simple_power(1,\
    \ 27));\nconsole.log(is_simple_power(1, 28));\nconsole.log(is_simple_power(1,\
    \ 29\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpysvwqad_.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpysvwqad_.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660013019
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 2));\nconsole.log(is_simple_power(1728,\
    \ 12));\nconsole.log(is_simple_power(3375, 15));\nconsole.log(is_simple_power(32768,\
    \ 16));\nconsole.log(is_simple_power(65536, 16));\nconsole.log(is_simple_power(262144,\
    \ 16));\nconsole.log(is_simple_power(7776, 12));\nconsole.log(is_simple_power(46656,\
    \ 12));\nconsole.log(is_simple_power(117649, 13));\nconsole.log(is_simple_power(823543,\
    \ 13));\nconsole.log(is_simple_power(2097152, 13));\nconsole.log(is_simple_power(78125,\
    \ 5));\nconsole.log(is_simple_power(1679616, 12));\nconsole.log(is_simple_power(279936,\
    \ 12));\nconsole.log(is_simple_power(16777216, 16));\nconsole.log(is_simple_power(474552,\
    \ 12));\nconsole.log(is_simple_power(85766121, 11));\nconsole.log(is_simple_power(16777216,\
    \ 16));\nconsole.log(is_simple_power(2821109907456, 14));\nconsole.log(is_simple_power(35831808,\
    \ 12));\nconsole.log(is_simple_power(387420489, 14));\nconsole.log(is_simple_power(614656,\
    \ 12));\nconsole.log(is_simple_power(205891132094649, 15));\nconsole.log(is_simple_power(612220032,\
    \ 12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmph8j2spcb.ts(39,1): error TS1005: '','' expected.

    ../../../../../tmp/tmph8j2spcb.ts(39,9): error TS1005: '','' expected.

    '
  timestamp: 1660013019
- exit_code: -1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let i = 1;\n    while (n ** i <= x)\
    \ {\n        if (n ** i === x) {\n            result = true;\n        }\n    \
    \    i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(4, 2));\n\
    console.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(72, 3));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'true

    true

    false

    '
  timestamp: 1660013034
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return Math.pow(n,\
    \ Math.round(power)) === x;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(625,\
    \ 6));\nconsole.log(is_simple_power(1024, 2));\nconsole.log(is_simple_power(1024,\
    \ 10));\nconsole.log(is_simple_power(1024, 5));\nconsole.log(is_simple_power(3125,\
    \ 5));\nconsole.log(is_simple_power(243, 3));\nconsole.log(is_simple_power(243,\
    \ 5));\nconsole.log(is_simple_power(243, 6));\nconsole.log(is_simple_power(243,\
    \ 7));\nconsole.log(is_simple_power(243, 8));\nconsole.log(is_simple_power(243,\
    \ 9));\nconsole.log(is_simple_power(243, 10));\nconsole.log(is_simple_power(243,\
    \ 11));\nconsole.log(is_simple_power(243, 12));\nconsole.log(is_simple_power(243,\
    \ 13));\nconsole.log(is_simple_power(243, 14));\nconsole.log(is_simple_power(243,\
    \ 15));\nconsole.log(is_simple_power(243, 16));\nconsole.log(is_simple_power(243,\
    \ 17));\nconsole.log(is_simple_power(243, 18));\nconsole.log(is_simple_power(243,\
    \ 19));\nconsole.log(is_simple_power(243, 20));\nconsole.log(is_simple_power(243,\
    \ 21));\nconsole.log(is_simple_power(243, 22));\nconsole.log(is_simple_power(243,\
    \ 23));\nconsole.log(is_simple_power(243, 24));\nconsole.log(is_simple_power(243,\
    \ 25));\nconsole.log(is_simple_power(243, 26));\nconsole.log(is\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8p_1_6z4.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp8p_1_6z4.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660013019
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let power = Math.log(x) / Math.log(n);\n    return power % 1\
    \ === 0;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9,\
    \ 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(82,\
    \ 3));\nconsole.log(is_simple_power(243, 3));\nconsole.log(is_simple_power(244,\
    \ 3));\nconsole.log(is_simple_power(729, 3));\nconsole.log(is_simple_power(730,\
    \ 3));\nconsole.log(is_simple_power(2187, 3));\nconsole.log(is_simple_power(2188,\
    \ 3));\nconsole.log(is_simple_power(6561, 3));\nconsole.log(is_simple_power(6562,\
    \ 3));\nconsole.log(is_simple_power(19683, 3));\nconsole.log(is_simple_power(19684,\
    \ 3));\nconsole.log(is_simple_power(59049, 3));\nconsole.log(is_simple_power(59050,\
    \ 3));\nconsole.log(is_simple_power(177147, 3));\nconsole.log(is_simple_power(177148,\
    \ 3));\nconsole.log(is_simple_power(531441, 3));\nconsole.log(is_simple_power(531442,\
    \ 3));\nconsole.log(is_simple_power(1594323, 3));\nconsole.log(is_simple_power(1594324,\
    \ 3));\nconsole.log(is_simple_power(4782969, 3));\nconsole.log(is_simple_power(4782970,\
    \ 3));\nconsole.log(is_simple_power(14348907, 3));\nconsole.log(is_simple_power(14348908,\
    \ 3));\nconsole.log(is_simple_power(43046721, 3));\nconsole.log(is_simple_power(43046722,\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl1g2iewy.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660013020
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(9, 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(126,\
    \ 5));\nconsole.log(is_simple_power(125, 3));\nconsole.log(is_simple_power(126,\
    \ 3));\nconsole.log(is_simple_power(125, 125));\nconsole.log(is_simple_power(125,\
    \ 126));\nconsole.log(is_simple_power(125, 127));\nconsole.log(is_simple_power(125,\
    \ 128));\nconsole.log(is_simple_power(125, 129));\nconsole.log(is_simple_power(125,\
    \ 130));\nconsole.log(is_simple_power(125, 131));\nconsole.log(is_simple_power(125,\
    \ 132));\nconsole.log(is_simple_power(125, 133));\nconsole.log(is_simple_power(125,\
    \ 134));\nconsole.log(is_simple_power(125, 135));\nconsole.log(is_simple_power(125,\
    \ 136));\nconsole.log(is_simple_power(125, 137));\nconsole.log(is_simple_power(125,\
    \ 138));\nconsole.log(is_simple_power(125, 139));\nconsole.log(is_simple_power(125,\
    \ 140));\nconsole.log(is_simple_power(125, 141));\nconsole.log(is_simple_power(125,\
    \ 142));\nconsole.log(is_simple_power(125, 143));\nconsole.log(is_simple_power(125,\
    \ 144));\nconsole.log(is_simple_power(125, 145));\nconsole.log(is_simple_power(125,\
    \ 146));\nconsole.log(is_simple_power(125, 147));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprat45o_5.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013020
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(9, 3));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28,\
    \ 3));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(82,\
    \ 3));\nconsole.log(is_simple_power(243, 3));\nconsole.log(is_simple_power(244,\
    \ 3));\nconsole.log(is_simple_power(245, 3));\nconsole.log(is_simple_power(246,\
    \ 3));\nconsole.log(is_simple_power(247, 3));\nconsole.log(is_simple_power(248,\
    \ 3));\nconsole.log(is_simple_power(249, 3));\nconsole.log(is_simple_power(250,\
    \ 3));\nconsole.log(is_simple_power(251, 3));\nconsole.log(is_simple_power(252,\
    \ 3));\nconsole.log(is_simple_power(253, 3));\nconsole.log(is_simple_power(254,\
    \ 3));\nconsole.log(is_simple_power(255, 3));\nconsole.log(is_simple_power(256,\
    \ 3));\nconsole.log(is_simple_power(257, 3));\nconsole.log(is_simple_power(258,\
    \ 3));\nconsole.log(is_simple_power(259, 3));\nconsole.log(is_simple_power(260,\
    \ 3));\nconsole.log(is_simple_power(261, 3));\nconsole.log(is_simple_power(262,\
    \ 3));\nconsole.log(is_simple_power(263, 3));\nconsole.log(is_simple_power(264,\
    \ 3));\nconsole.log(is_simple_power(265, 3));\nconsole.log(is_simple_power(266,\
    \ 3));\nconsole.log(is_simple_power(267, 3));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpf8bhsun0.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013020
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  const root = Math.sqrt(x);\n  if (root % 1 === 0) {\n    return\
    \ root === n;\n  } else {\n    return false;\n  }\n}\n\nconsole.log(is_simple_power(8,\
    \ 2));\nconsole.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(256, 2));\nconsole.log(is_simple_power(25,\
    \ 2));\nconsole.log(is_simple_power(24, 2));\nconsole.log(is_simple_power(576,\
    \ 6));\nconsole.log(is_simple_power(10, 2));\nconsole.log(is_simple_power(10,\
    \ -2));\nconsole.log(is_simple_power(0.25, -2));\nconsole.log(is_simple_power(0.25,\
    \ 2));\nconsole.log(is_simple_power(0.125, -3));\nconsole.log(is_simple_power(0.125,\
    \ 3));\nconsole.log(is_simple_power(0.03125, -5));\nconsole.log(is_simple_power(0.03125,\
    \ 5));\nconsole.log(is_simple_power(0.0078125, -7));\nconsole.log(is_simple_power(0.0078125,\
    \ 7));\nconsole.log(is_simple_power(0.0009765625, -9));\nconsole.log(is_simple_power(0.0009765625,\
    \ 9));\nconsole.log(is_simple_power(0.0001220703125, -11));\nconsole.log(is_simple_power(0.0001220703125,\
    \ 11));\nconsole.log(is_simple_power(0.0000152587890625, -13));\nconsole.log(is_simple_power(0.0000152587890625,\
    \ 13));\nconsole.log(is_simple_power(0.0000019073486328125, -15));\nconsole.log(is_simple_power(0.0000019073486328125,\
    \ 15));\nconsole.log(is_simple_power\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgah87glg.ts(40,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpgah87glg.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660013020
- exit_code: 0
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    for (let i = 0; i < x; i++) {\n    \
    \    if (Math.pow(n, i) === x) {\n            result = true;\n        }\n    }\n\
    \    return result;\n}\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(81,\
    \ 3));\nconsole.log(is_simple_power(81, 4));\nconsole.log(is_simple_power(64,\
    \ 4));\nconsole.log(is_simple_power(64, 2));\nconsole.log(is_simple_power(64,\
    \ 5));\nconsole.log(is_simple_power(64, 6));\nconsole.log(is_simple_power(64,\
    \ 7));\nconsole.log(is_simple_power(64, 8));\nconsole.log(is_simple_power(64,\
    \ 9));\nconsole.log(is_simple_power(64, 10));\nconsole.log(is_simple_power(64,\
    \ 11));\nconsole.log(is_simple_power(64, 12));\nconsole.log(is_simple_power(64,\
    \ 13));\nconsole.log(is_simple_power(64, 14));\nconsole.log(is_simple_power(64,\
    \ 15));\nconsole.log(is_simple_power(64, 16));\nconsole.log(is_simple_power(64,\
    \ 17));\nconsole.log(is_simple_power(64, 18));\nconsole.log(is_simple_power(64,\
    \ 19));\nconsole.log(is_simple_power(64, 20));\nconsole.log(is_simple_power(64,\
    \ 21));\nconsole.log(is_simple_power(64, 22));\nconsole.log(is_simple_power(64,\
    \ 23));\nconsole.log(is_simple_power(64, 24));\nconsole.log(is_simple_power(64,\
    \ 25));\nconsole.log(is_simple_power(64, 26));\nconsole.log(is_simple_power(64,\
    \ 27));\nconsole.log(is_simple_power(64, 28));\nconsole.log(is_simple_power(64,\
    \ 29));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    true

    false

    true

    true

    false

    false

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1660013021
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(125, 3));\nconsole.log(is_simple_power(125,\
    \ 125));\nconsole.log(is_simple_power(125, 1));\nconsole.log(is_simple_power(125,\
    \ 0));\nconsole.log(is_simple_power(1, 125));\nconsole.log(is_simple_power(0,\
    \ 125));\nconsole.log(is_simple_power(0, 0));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 0));\nconsole.log(is_simple_power(0, 1));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3asi1pzp.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013021
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let i = 1;\n  while (Math.pow(n, i) <= x) {\n    if (Math.pow(n,\
    \ i) === x) {\n      return true;\n    }\n    i++;\n  }\n  return false;\n}\n\n\
    console.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(5, 2));\nconsole.log(is_simple_power(8,\
    \ 2));\nconsole.log(is_simple_power(125, 5));\nconsole.log(is_simple_power(216,\
    \ 6));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(0, 0));\n\
    console.log(is_simple_power(1, 0));\nconsole.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1,\
    \ 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\n\
    console.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp45u4qhky.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660013021
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(27, 3));\n\
    console.log(is_simple_power(16, 4));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 2));\nconsole.log(is_simple_power(1024,\
    \ 10));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 2));\n\
    console.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1,\
    \ 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1, 7));\n\
    console.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1,\
    \ 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\nconsole.log(is_simple_power(1,\
    \ 24));\nconsole.log(is_simple_power(1, 25));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbaitx9b4.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013021
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125, 5));\n\
    console.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1024, 2));\n\
    console.log(is_simple_power(1024, 10));\nconsole.log(is_simple_power(1024, 3));\n\
    console.log(is_simple_power(1024, 1));\nconsole.log(is_simple_power(1, 1024));\n\
    console.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1, 0));\nconsole.log(is_simple_power(0,\
    \ 0));\nconsole.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(0, 2));\n\
    console.log(is_simple_power(0, 3));\nconsole.log(is_simple_power(0, 4));\nconsole.log(is_simple_power(0,\
    \ 5));\nconsole.log(is_simple_power(0, 6));\nconsole.log(is_simple_power(0, 7));\n\
    console.log(is_simple_power(0, 8));\nconsole.log(is_simple_power(0, 9));\nconsole.log(is_simple_power(0,\
    \ 10));\nconsole.log(is_simple_power(0, 11));\nconsole.log(is_simple_power(0,\
    \ 12));\nconsole.log(is_simple_power(0, 13));\nconsole.log(is_simple_power(0,\
    \ 14));\nconsole.log(is_simple_power(0, 15));\nconsole.log(is_simple_power(0,\
    \ 16));\nconsole.log(is_simple_power(0, 17));\nconsole.log(is_simple_power(0,\
    \ 18));\nconsole.log(is_simple_power(0, 19));\nconsole.log(is_simple_power(0,\
    \ 20));\nconsole.log(is_simple_power(0, 21));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz5jif3lj.ts(7,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1660013021
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(9, 3));\n\
    console.log(is_simple_power(27, 3));\nconsole.log(is_simple_power(28, 3));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(126, 5));\nconsole.log(is_simple_power(125,\
    \ 3));\nconsole.log(is_simple_power(126, 3));\nconsole.log(is_simple_power(125,\
    \ 6));\nconsole.log(is_simple_power(126, 6));\nconsole.log(is_simple_power(125,\
    \ 125));\nconsole.log(is_simple_power(126, 126));\nconsole.log(is_simple_power(125,\
    \ 1));\nconsole.log(is_simple_power(126, 1));\nconsole.log(is_simple_power(125,\
    \ 0));\nconsole.log(is_simple_power(126, 0));\nconsole.log(is_simple_power(0,\
    \ 0));\nconsole.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(0, 125));\n\
    console.log(is_simple_power(0, 126));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1,\
    \ 125));\nconsole.log(is_simple_power(1, 126));\nconsole.log(is_simple_power(1,\
    \ 0));\nconsole.log(is_simple_power(125, 125));\nconsole.log(is_simple_power(126,\
    \ 126));\nconsole.log(is_simple_power(125, 126));\nconsole.log(is_simple_power(126,\
    \ 125));\nconsole.log(is_simple_power(125, -125));\nconsole.log(is_simple_power(126,\
    \ -126));\nconsole.log(is_simple_power(125, -126));\nconsole.log(is_simple_power(126,\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv428lt14.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660013021
- exit_code: 1
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = Math.log(x) / Math.log(n);\n    return result %\
    \ 1 === 0;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(256, 4));\nconsole.log(is_simple_power(1024,\
    \ 2));\nconsole.log(is_simple_power(1024, 10));\nconsole.log(is_simple_power(1024,\
    \ 3));\nconsole.log(is_simple_power(1024, 1));\nconsole.log(is_simple_power(1,\
    \ 1024));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(1,\
    \ 2));\nconsole.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1, 4));\n\
    console.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1, 6));\nconsole.log(is_simple_power(1,\
    \ 7));\nconsole.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1, 9));\n\
    console.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1, 11));\nconsole.log(is_simple_power(1,\
    \ 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\nconsole.log(is_simple_power(1,\
    \ 24));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp162_l1fj.js:48:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp162_l1fj.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    false

    false

    false

    true

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1660013021
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n    let result = false;\n    let i = 0;\n    while (Math.pow(n, i)\
    \ <= x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n \
    \       }\n        i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(16,\
    \ 2));\nconsole.log(is_simple_power(81, 3));\nconsole.log(is_simple_power(256,\
    \ 4));\nconsole.log(is_simple_power(1024, 5));\nconsole.log(is_simple_power(243,\
    \ 3));\nconsole.log(is_simple_power(32, 4));\nconsole.log(is_simple_power(1, 1));\n\
    console.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1, 6));\n\
    console.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\nconsole.log(is_simple_power(1,\
    \ 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1, 11));\n\
    console.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1, 13));\nconsole.log(is_simple_power(1,\
    \ 14));\nconsole.log(is_simple_power(1, 15));\nconsole.log(is_simple_power(1,\
    \ 16));\nconsole.log(is_simple_power(1, 17));\nconsole.log(is_simple_power(1,\
    \ 18));\nconsole.log(is_simple_power(1, 19));\nconsole.log(is_simple_power(1,\
    \ 20));\nconsole.log(is_simple_power(1, 21));\nconsole.log(is_simple_power(1,\
    \ 22));\nconsole.log(is_simple_power(1, 23));\nconsole.log(\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpevi1r29l.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660013021
- exit_code: 2
  program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\nfunction is_simple_power(x: number, n: number):\
    \ boolean {\n  let result = false;\n  let i = 1;\n  while (Math.pow(n, i) <= x)\
    \ {\n    if (Math.pow(n, i) === x) {\n      result = true;\n    }\n    i++;\n\
    \  }\n  return result;\n}\n\nconsole.log(is_simple_power(4, 2));\nconsole.log(is_simple_power(125,\
    \ 5));\nconsole.log(is_simple_power(625, 5));\nconsole.log(is_simple_power(1,\
    \ 5));\nconsole.log(is_simple_power(1, 1));\nconsole.log(is_simple_power(0, 0));\n\
    console.log(is_simple_power(1, 0));\nconsole.log(is_simple_power(0, 1));\nconsole.log(is_simple_power(1,\
    \ 1));\nconsole.log(is_simple_power(1, 2));\nconsole.log(is_simple_power(1, 3));\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(1, 5));\nconsole.log(is_simple_power(1,\
    \ 6));\nconsole.log(is_simple_power(1, 7));\nconsole.log(is_simple_power(1, 8));\n\
    console.log(is_simple_power(1, 9));\nconsole.log(is_simple_power(1, 10));\nconsole.log(is_simple_power(1,\
    \ 11));\nconsole.log(is_simple_power(1, 12));\nconsole.log(is_simple_power(1,\
    \ 13));\nconsole.log(is_simple_power(1, 14));\nconsole.log(is_simple_power(1,\
    \ 15));\nconsole.log(is_simple_power(1, 16));\nconsole.log(is_simple_power(1,\
    \ 17));\nconsole.log(is_simple_power(1, 18));\nconsole.log(is_simple_power(1,\
    \ 19));\nconsole.log(is_simple_power(1, 20));\nconsole.log(is_simple_power(1,\
    \ 21));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5dyftmcw.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660013021

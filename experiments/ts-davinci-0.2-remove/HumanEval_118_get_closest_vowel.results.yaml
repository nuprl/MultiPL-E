language: ts
name: HumanEval_118_get_closest_vowel
results:
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let result = \"\";\n   \
    \ let closest = word.length;\n    for (let i = 0; i < word.length; i++) {\n  \
    \      if (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0 && i < word.length\
    \ - 1) {\n                if (vowels.indexOf(word[i - 1]) === -1 && vowels.indexOf(word[i\
    \ + 1]) === -1) {\n                    if (i < closest) {\n                  \
    \      closest = i;\n                        result = word[i];\n             \
    \       }\n                }\n            }\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(get_closest_vowel(\"example\"));\nconsole.log(get_closest_vowel(\"\
    hello\"));\nconsole.log(get_closest_vowel(\"apple\"));\nconsole.log(get_closest_vowel(\"\
    b\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    why\"));\nconsole.log(get_closest_vowel(\"\"));\nconsole.log(get_closest_vowel(\"\
    aeiouaeiou\"));\nconsole.log(get_closest_vowel(\"aeiouaeiouaeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiouaeiouaeiouaeiou\"));\nconsole.log(get_closest_vowel(\"aeiouaeiouaeiouaeiouaeiou\"\
    ));\nconsole.log(get_closest_vowel(\"aeiouaeiouaeiouaeiouaeiouaeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiouaeiouaeiouaeiouaeiouaeiouaeiou\"));\nconsole.log(get_closest_vowel(\"aeiouaeiouaeiouaeiouaeiouaeiouaei\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpucc6atwh.ts(39,65): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpucc6atwh.ts(40,1): error TS1005: '','' expected.

    ../../../../tmp/tmpucc6atwh.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660334589
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let closest = word.length;\n    for (let i = word.length - 1; i >=\
    \ 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i\
    \ < closest) {\n                closest = i;\n                result = word[i];\n\
    \            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_v\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpf8e67lnl.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmpf8e67lnl.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334589
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestVowelIndex = -1;\n    let closestConsonantIndex = -1;\n\
    \    let closestConsonant = '';\n    for (let i = word.length - 1; i >= 0; i--)\
    \ {\n        if (vowels.indexOf(word[i]) > -1) {\n            if (closestVowelIndex\
    \ === -1) {\n                closestVowelIndex = i;\n                closestVowel\
    \ = word[i];\n            }\n        } else {\n            if (closestConsonantIndex\
    \ === -1) {\n                closestConsonantIndex = i;\n                closestConsonant\
    \ = word[i];\n            }\n        }\n        if (closestVowelIndex > -1 &&\
    \ closestConsonantIndex > -1) {\n            break;\n        }\n    }\n    if\
    \ (closestVowelIndex > -1 && closestConsonantIndex > -1) {\n        return closestVowel;\n\
    \    }\n    return '';\n}\n\nconsole.log(get_closest_vowel('abcd'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('abcdaeiou'));\n\
    console.log(get_closest_vowel('abcde'));\nconsole.log(get_closest_vowel('abcdeaeiou'));\n\
    console.log(get_closest_vowel('abcdeaeiou'));\nconsole.log(get_closest_vowel('abcdeaeiou'));\n\
    console.log(get_closest_vowel('abcdeaeiou'));\nconsole.log(get_closest_vowel('abcdeaeiou'));\n\
    console.log(get_closest_vowel('abcdeaeiou'));\nconsole.log(get_\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpq12no232.ts(47,1): error TS1005: '','' expected.

    ../../../../tmp/tmpq12no232.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660334589
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let index = word.length -\
    \ 1;\n    let result = '';\n    while (index >= 0) {\n        if (vowels.indexOf(word[index])\
    \ >= 0) {\n            result = word[index];\n            break;\n        }\n\
    \        index--;\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiouy'));\n\
    console.log(get_closest_vowel('aeiouy'));\nconsole.log(get_closest_vowel('aeiouy'));\n\
    console.log(get_closest_vowel('aeiouy'));\nconsole.log(get_closest_vowel('aeiouy'));\n\
    console.log(get_closest_vowel('aeiouy'));\nconsole.log(get_closest_vowel('aeiouy'));\n\
    console.log(get_closest_vowel('aeiouy'));\nconsole.log(get_closest_vowel('aeiouy'));\n\
    console.log(get_closest_vowel('aeiouy'));\nconsole.log(get_closest_vowel('aeiouy'));\n\
    console.log(get_closest_vowel('aeiouy'));\nconsole.log(get_closest_vowel('aeiouy'));\n\
    console.log(get_closest_vowel('aeiouy'));\nconsole.log(get_closest_vowel('aeiouy'));\n\
    console.log(get_closest_vowel('aeiouy'));\nconsole.log(get_closest_vowel\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpsbh9_qlb.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmpsbh9_qlb.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334589
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let closestVowel = '';\n \
    \   let closestDistance = word.length;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0 && i\
    \ < word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) === -1\
    \ && vowels.indexOf(word[i + 1]) === -1) {\n                    if (i < closestDistance)\
    \ {\n                        closestDistance = i;\n                        closestVowel\
    \ = word[i];\n                    }\n                }\n            }\n      \
    \  }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('codewars'));\nconsole.log(get_closest_vowel('sensual'));\n\
    console.log(get_closest_vowel('rhythm'));\nconsole.log(get_closest_vowel('bodacious'));\n\
    console.log(get_closest_vowel('axiom'));\nconsole.log(get_closest_vowel('grrrrgh!'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aaeeeiiioouu'));\n\
    console.log(get_closest_vowel('abcde'));\nconsole.log(get_closest_vowel('abcdeiou'));\n\
    console.log(get_closest_vowel('abcdeaiou'));\nconsole.log(get_closest_vowel('abcdeeaiou'));\n\
    console.log(get_closest_vowel('abcdeeaioue'));\nconsole.log(get_closest_vowel('abcdeeaiouea'));\n\
    console.log(get_closest_vowel('abcdeeaioueae')\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpww20nzfx.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmpww20nzfx.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334589
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let closestVowel = '';\n \
    \   let closestDistance = word.length;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) > -1) {\n            let distance = word.length\
    \ - i;\n            if (distance < closestDistance) {\n                closestDistance\
    \ = distance;\n                closestVowel = word[i];\n            }\n      \
    \  }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpxuzkt9nd.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmpxuzkt9nd.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334589
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let result = '';\n    let\
    \ lastConsonant = 0;\n    for (let i = word.length - 1; i >= 0; i--) {\n     \
    \   if (vowels.indexOf(word[i]) === -1) {\n            lastConsonant = i;\n  \
    \          break;\n        }\n    }\n    for (let i = lastConsonant - 1; i >=\
    \ 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            result\
    \ = word[i];\n            break;\n        }\n    }\n    return result;\n}\n\n\
    console.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('hell'));\n\
    console.log(get_closest_vowel('hll'));\nconsole.log(get_closest_vowel('hlll'));\n\
    console.log(get_closest_vowel('hllll'));\nconsole.log(get_closest_vowel('hlllll'));\n\
    console.log(get_closest_vowel('hllllll'));\nconsole.log(get_closest_vowel('hlllllll'));\n\
    console.log(get_closest_vowel('hllllllll'));\nconsole.log(get_closest_vowel('hlllllllll'));\n\
    console.log(get_closest_vowel('hllllllllll'));\nconsole.log(get_closest_vowel('hlllllllllll'));\n\
    console.log(get_closest_vowel('hllllllllllll'));\nconsole.log(get_closest_vowel('hlllllllllllll'));\n\
    console.log(get_closest_vowel('hllllllllllllll'));\nconsole.log(get_closest_vowel('hlllllllllllllll'));\n\
    console.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmphoezt4v9.js:47:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphoezt4v9.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    e















    '
  timestamp: 1660334589
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let index\
    \ = word.length - 1;\n    while (index >= 0) {\n        if (vowels.includes(word[index]))\
    \ {\n            if (index === 0) {\n                return '';\n            }\n\
    \            if (vowels.includes(word[index - 1])) {\n                index--;\n\
    \                continue;\n            }\n            return word[index];\n \
    \       }\n        index--;\n    }\n    return '';\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('tomorrow'));\nconsole.log(get_closest_vowel('rhythm'));\n\
    console.log(get_closest_vowel('zodiac'));\nconsole.log(get_closest_vowel('chruschtschov'));\n\
    console.log(get_closest_vowel('khrushchev'));\nconsole.log(get_closest_vowel('strength'));\n\
    console.log(get_closest_vowel('catchphrase'));\nconsole.log(get_closest_vowel('twelfthstreet'));\n\
    console.log(get_closest_vowel('mischtschenkoana'));\nconsole.log(get_closest_vowel('a'));\n\
    console.log(get_closest_vowel('e'));\nconsole.log(get_closest_vowel('i'));\nconsole.log(get_closest_vowel('o'));\n\
    console.log(get_closest_vowel('u'));\nconsole.log(get_closest_vowel('z')\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp69dt3o1w.ts(46,1): error TS1005: '','' expected.

    ../../../../tmp/tmp69dt3o1w.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660334589
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    let closestIndex = word.length;\n    for (let i = word.length - 1; i >=\
    \ 0; i--) {\n        if (vowels.indexOf(word[i]) > -1) {\n            if (i <\
    \ closestIndex) {\n                closestIndex = i;\n                closestVowel\
    \ = word[i];\n            }\n        }\n    }\n    return closestVowel;\n}\n\n\
    console.log(get_closest_vowel(\"abcd\"));\nconsole.log(get_closest_vowel(\"abcdeg\"\
    ));\nconsole.log(get_closest_vowel(\"abcdegh\"));\nconsole.log(get_closest_vowel(\"\
    abcdeghi\"));\nconsole.log(get_closest_vowel(\"abcdeghij\"));\nconsole.log(get_closest_vowel(\"\
    abcdeghijk\"));\nconsole.log(get_closest_vowel(\"abcdeghijkl\"));\nconsole.log(get_closest_vowel(\"\
    abcdeghijklm\"));\nconsole.log(get_closest_vowel(\"abcdeghijklmn\"));\nconsole.log(get_closest_vowel(\"\
    abcdeghijklmno\"));\nconsole.log(get_closest_vowel(\"abcdeghijklmnop\"));\nconsole.log(get_closest_vowel(\"\
    abcdeghijklmnopq\"));\nconsole.log(get_closest_vowel(\"abcdeghijklmnopqr\"));\n\
    console.log(get_closest_vowel(\"abcdeghijklmnopqrs\"));\nconsole.log(get_closest_vowel(\"\
    abcdeghijklmnopqrst\"));\nconsole.log(get_closest_vowel(\"abcdeghijklmnopqrstu\"\
    ));\nconsole.log(get_closest_vowel(\"abcdeghijklmnop\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp9ycmr9ir.ts(38,47): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp9ycmr9ir.ts(39,1): error TS1005: '','' expected.

    ../../../../tmp/tmp9ycmr9ir.ts(39,9): error TS1005: '','' expected.

    '
  timestamp: 1660334589
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestIndex = word.length;\n    for (let i = word.length - 1;\
    \ i >= 0; i--) {\n        if (vowels.includes(word[i])) {\n            if (i <\
    \ closestIndex) {\n                closestIndex = i;\n                closestVowel\
    \ = word[i];\n            }\n        }\n    }\n    return closestVowel;\n}\n\n\
    console.log(get_closest_vowel('abcd'));\nconsole.log(get_closest_vowel('abce'));\n\
    console.log(get_closest_vowel('abci'));\nconsole.log(get_closest_vowel('abco'));\n\
    console.log(get_closest_vowel('abcu'));\nconsole.log(get_closest_vowel('abc'));\n\
    console.log(get_closest_vowel('a'));\nconsole.log(get_closest_vowel('b'));\nconsole.log(get_closest_vowel('c'));\n\
    console.log(get_closest_vowel('d'));\nconsole.log(get_closest_vowel('e'));\nconsole.log(get_closest_vowel('f'));\n\
    console.log(get_closest_vowel('g'));\nconsole.log(get_closest_vowel('h'));\nconsole.log(get_closest_vowel('i'));\n\
    console.log(get_closest_vowel('j'));\nconsole.log(get_closest_vowel('k'));\nconsole.log(get_closest_vowel('l'));\n\
    console.log(get_closest_vowel('m'));\nconsole.log(get_closest_vowel('n'));\nconsole.log(get_closest_vowel('o'));\n\
    console\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmp1g9tupuv.js:46:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1g9tupuv.js:60:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'a

    a

    a

    a

    a

    a

    a




    e




    i






    o

    '
  timestamp: 1660334589
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestVowelIndex = word.length;\n    for (let i = word.length\
    \ - 1; i >= 0; i--) {\n        if (vowels.includes(word[i])) {\n            if\
    \ (i < closestVowelIndex) {\n                closestVowel = word[i];\n       \
    \         closestVowelIndex = i;\n            }\n        }\n    }\n    return\
    \ closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmpdcnzebra.js:44:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdcnzebra.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    e

    a


    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    '
  timestamp: 1660334590
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr\
    \ = word.split('');\n    let result = '';\n    for (let i = wordArr.length - 1;\
    \ i >= 0; i--) {\n        if (vowels.includes(wordArr[i])) {\n            if (vowels.includes(wordArr[i\
    \ - 1]) || vowels.includes(wordArr[i + 1])) {\n                continue;\n   \
    \         } else {\n                result = wordArr[i];\n                break;\n\
    \            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('heaven'));\nconsole.log(get_closest_vowel('hamburger'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'e'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpvpmnflm_.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvpmnflm_.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'e',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o

    e

    e

    '
  timestamp: 1660334589
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    let closestVowelIndex = word.length;\n    for (let i = word.length - 1;\
    \ i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if\
    \ (i > 0 && vowels.indexOf(word[i - 1]) === -1) {\n                if (i < closestVowelIndex)\
    \ {\n                    closestVowelIndex = i;\n                    closestVowel\
    \ = word[i];\n                }\n            }\n        }\n    }\n    return closestVowel;\n\
    }\n\nconsole.log(get_closest_vowel(\"hello\"));\nconsole.log(get_closest_vowel(\"\
    codewars\"));\nconsole.log(get_closest_vowel(\"sphinx\"));\nconsole.log(get_closest_vowel(\"\
    hippopotamus\"));\nconsole.log(get_closest_vowel(\"rhinoceros\"));\nconsole.log(get_closest_vowel(\"\
    \"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmpnprdfj_i.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnprdfj_i.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    o

    i

    i

    i


    '
  timestamp: 1660334589
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            let distance\
    \ = word.length - i;\n            if (distance < closestDistance) {\n        \
    \        closestDistance = distance;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmppp0_5vtw.ts(41,37): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmppp0_5vtw.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmppp0_5vtw.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334589
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let closest = word.length;\n    for (let i = word.length - 1; i >=\
    \ 0; i--) {\n        if (vowels.indexOf(word[i]) > -1) {\n            if (i <\
    \ closest) {\n                closest = i;\n                result = word[i];\n\
    \            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmpypc89ciz.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpypc89ciz.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    e

    a


    '
  timestamp: 1660334589
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let distance = 0;\n    let lastConsonant = 0;\n    let firstVowel\
    \ = 0;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            firstVowel = i;\n            break;\n        }\n    }\n\
    \    for (let i = firstVowel - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ === -1) {\n            lastConsonant = i;\n            break;\n        }\n \
    \   }\n    if (lastConsonant === 0) {\n        return result;\n    }\n    for\
    \ (let i = firstVowel; i >= lastConsonant; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            result = word[i];\n            break;\n        }\n  \
    \  }\n    return result;\n}\n\nconsole.log(get_closest_vowel('tbzc'));\nconsole.log(get_closest_vowel('tbzc'));\n\
    console.log(get_closest_vowel('tbzc'));\nconsole.log(get_closest_vowel('tbzc'));\n\
    console.log(get_closest_vowel('tbzc'));\nconsole.log(get_closest_vowel('tbzc'));\n\
    console.log(get_closest_vowel('tbzc'));\nconsole.log(get_closest_vowel('tbzc'));\n\
    console.log(get_closest_vowel('tbzc'));\nconsole.log(get_closest_vowel('tbzc'));\n\
    console.log(get_closest_vowel('tbzc'));\nconsole.log(get_closest_vow\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpu47pqlrn.ts(49,1): error TS1005: '','' expected.

    ../../../../tmp/tmpu47pqlrn.ts(49,9): error TS1005: '','' expected.

    '
  timestamp: 1660334589
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let result = \"\";\n   \
    \ let closest = word.length;\n    for (let i = 0; i < word.length; i++) {\n  \
    \      if (vowels.indexOf(word[i]) != -1) {\n            if (i > 0 && i < word.length\
    \ - 1) {\n                if (vowels.indexOf(word[i - 1]) == -1 && vowels.indexOf(word[i\
    \ + 1]) == -1) {\n                    if (closest > i) {\n                   \
    \     closest = i;\n                        result = word[i];\n              \
    \      }\n                }\n            }\n        }\n    }\n    return result;\n\
    }\nconsole.log(get_closest_vowel(\"hello\"));\nconsole.log(get_closest_vowel(\"\
    helicopter\"));\nconsole.log(get_closest_vowel(\"beach\"));\nconsole.log(get_closest_vowel(\"\
    \"));\nconsole.log(get_closest_vowel(\"a\"));\nconsole.log(get_closest_vowel(\"\
    b\"));\nconsole.log(get_closest_vowel(\"ab\"));\nconsole.log(get_closest_vowel(\"\
    ba\"));\nconsole.log(get_closest_vowel(\"ae\"));\nconsole.log(get_closest_vowel(\"\
    ea\"));\nconsole.log(get_closest_vowel(\"e\"));\nconsole.log(get_closest_vowel(\"\
    eo\"));\nconsole.log(get_closest_vowel(\"oe\"));\nconsole.log(get_closest_vowel(\"\
    o\"));\nconsole.log(get_closest_vowel(\"ou\"));\nconsole.log(get_closest_vowel(\"\
    uo\"));\nconsole.log(get_closest_vowel(\"u\"));\nconsole.log(get_closest_vowel(\"\
    iu\"));\nconsole.log(get_closest_vowel(\"ui\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmpkmsn05i_.js:47:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkmsn05i_.js:61:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    e


















    '
  timestamp: 1660334589
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let min = word.length;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0 && i\
    \ < word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) === -1\
    \ && vowels.indexOf(word[i + 1]) === -1) {\n                    if (i < min) {\n\
    \                        min = i;\n                        result = word[i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('helicopter'));\n\
    console.log(get_closest_vowel('e'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('rhythm'));\nconsole.log(get_closest_vowel('z'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zooz'));\n\
    console.log(get_closest_vowel('zoozo'));\nconsole.log(get_closest_vowel('zoozoo'));\n\
    console.log(get_closest_vowel('zoozooz'));\nconsole.log(get_closest_vowel('zoozoozo'));\n\
    console.log(get_closest_vowel('zoozoozoo'));\nconsole.log(get_closest_vowel('zoozoozooz'));\n\
    console.log(get_closest_vowel('zoozoozoozo'));\nconsole.log(get_closest_vowel('zoozoozoozoo'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmp5tvn7cic.js:44:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5tvn7cic.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    e















    '
  timestamp: 1660334589
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0\
    \ && i < word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) ===\
    \ -1 && vowels.indexOf(word[i + 1]) === -1) {\n                    if (i < closestDistance)\
    \ {\n                        closestDistance = i;\n                        closestVowel\
    \ = word[i];\n                    }\n                }\n            }\n      \
    \  }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('codewars'));\nconsole.log(get_closest_vowel('sensual'));\n\
    console.log(get_closest_vowel('moo'));\nconsole.log(get_closest_vowel('good'));\n\
    console.log(get_closest_vowel('sso'));\nconsole.log(get_closest_vowel('ss'));\n\
    console.log(get_closest_vowel('codewar'));\nconsole.log(get_closest_vowel('oo'));\n\
    console.log(get_closest_vowel('codewars'));\nconsole.log(get_closest_vowel('codewar'));\n\
    console.log(get_closest_vowel('codewars'));\nconsole.log(get_closest_vowel('codewars'));\n\
    console.log(get_closest_vowel('codewars'));\nconsole.log(get_closest_vowel('codewars'));\n\
    console.log(get_closest_vowel('codewars'));\nconsole.log(get_closest_vow\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpsi5zs2ll.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmpsi5zs2ll.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334589
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    const vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestIndex = word.length;\n    for (let i = word.length - 1;\
    \ i >= 0; i--) {\n        if (vowels.includes(word[i])) {\n            if (i <\
    \ closestIndex) {\n                closestIndex = i;\n                closestVowel\
    \ = word[i];\n            }\n        } else {\n            if (closestVowel !==\
    \ '') {\n                return closestVowel;\n            }\n        }\n    }\n\
    \    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('heaven'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('rhythm'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vow\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpuz55026z.ts(45,1): error TS1005: '','' expected.

    ../../../../tmp/tmpuz55026z.ts(45,9): error TS1005: '','' expected.

    '
  timestamp: 1660334589
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0\
    \ && i < word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) ===\
    \ -1 && vowels.indexOf(word[i + 1]) === -1) {\n                    if (i < closestDistance)\
    \ {\n                        closestDistance = i;\n                        closestVowel\
    \ = word[i];\n                    }\n                }\n            }\n      \
    \  }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"hello\"\
    ));\nconsole.log(get_closest_vowel(\"codewars\"));\nconsole.log(get_closest_vowel(\"\
    samsung\"));\nconsole.log(get_closest_vowel(\"abcd\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"baced\"));\nconsole.log(get_closest_vowel(\"\
    b\"));\nconsole.log(get_closest_vowel(\"q\"));\nconsole.log(get_closest_vowel(\"\
    z\"));\nconsole.log(get_closest_vowel(\"bbbb\"));\nconsole.log(get_closest_vowel(\"\
    bbbbb\"));\nconsole.log(get_closest_vowel(\"bbbbbb\"));\nconsole.log(get_closest_vowel(\"\
    bbbbbbb\"));\nconsole.log(get_closest_vowel(\"bbbbbbbb\"));\nconsole.log(get_closest_vowel(\"\
    bbbbbbbbb\"));\nconsole.log(get_closest_vowel(\"bbbbbbbbbb\"));\nconsole.log(get_closest_vowel(\"\
    bbbbbbbb\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpfhz32nth.ts(42,40): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpfhz32nth.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmpfhz32nth.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334589
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    let wordArr = word.split('');\n    let vowelIndex\
    \ = 0;\n    let consonantIndex = 0;\n    let result = '';\n    let lastConsonantIndex\
    \ = 0;\n    let lastVowelIndex = 0;\n    for (let i = 0; i < wordArr.length; i++)\
    \ {\n        if (vowels.indexOf(wordArr[i]) !== -1) {\n            vowelIndex\
    \ = i;\n            for (let j = vowelIndex; j < wordArr.length; j++) {\n    \
    \            if (consonants.indexOf(wordArr[j]) !== -1) {\n                  \
    \  consonantIndex = j;\n                    if (lastConsonantIndex !== 0 && lastVowelIndex\
    \ !== 0) {\n                        if (consonantIndex - vowelIndex < lastConsonantIndex\
    \ - lastVowelIndex) {\n                            result = wordArr[vowelIndex];\n\
    \                            lastConsonantIndex = consonantIndex;\n          \
    \                  lastVowelIndex = vowelIndex;\n                        }\n \
    \                   } else {\n                        result = wordArr[vowelIndex];\n\
    \                        lastConsonantIndex = consonantIndex;\n              \
    \          lastVowelIndex = vowelIndex;\n                    }\n             \
    \   }\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('gfhjk'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('abcd'));\nconsole.log(get_closest_vowel('abcde'));\n\
    console.log(get\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpvv1vtsro.ts(46,1): error TS1005: '','' expected.

    ../../../../tmp/tmpvv1vtsro.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660334589
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let lastConsonant = 0;\n    let firstVowel = 0;\n    for (let i =\
    \ word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) === -1)\
    \ {\n            lastConsonant = i;\n            break;\n        }\n    }\n  \
    \  for (let i = lastConsonant - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            firstVowel = i;\n            break;\n        }\n    }\n\
    \    if (firstVowel !== 0) {\n        result = word[firstVowel];\n    }\n    return\
    \ result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmp8x0ftefz.js:38:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8x0ftefz.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e




    '
  timestamp: 1660334589
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    const vowels = ['a', 'e', 'i', 'o', 'u'];\n    const\
    \ consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    let closestVowel = '';\n    let\
    \ closestVowelIndex = -1;\n    for (let i = word.length - 1; i >= 0; i--) {\n\
    \        if (vowels.includes(word[i])) {\n            closestVowel = word[i];\n\
    \            closestVowelIndex = i;\n            break;\n        }\n    }\n  \
    \  if (closestVowelIndex === -1) {\n        return '';\n    }\n    for (let i\
    \ = closestVowelIndex - 1; i >= 0; i--) {\n        if (consonants.includes(word[i]))\
    \ {\n            return closestVowel;\n        }\n    }\n    return '';\n}\n\n\
    console.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('bcdfghjkl'));\nconsole.log(get_closest_vowel('abcdefghijklmnopqrstuvwxyz'));\n\
    console.log(get_closest_vowel('abcdefghijklmnopqrstuvwxyz'));\nconsole.log(get_closest_vowel('abcdefghijklmnopqrstuvwxyz'));\n\
    console.log(get_closest_vowel('abcdefghijklmnopqrstuvwxyz'));\nconsole.log(get_closest_vowel('abcdefghijklmnopqr\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp8002l0cn.ts(39,50): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp8002l0cn.ts(40,1): error TS1005: '','' expected.

    ../../../../tmp/tmp8002l0cn.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660334595
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr\
    \ = word.split('');\n    let vowelIndex = -1;\n    let consonantIndex = -1;\n\
    \    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
    \ > -1) {\n            vowelIndex = i;\n        }\n        if (vowels.indexOf(wordArr[i])\
    \ === -1 && vowelIndex > -1) {\n            consonantIndex = i;\n            break;\n\
    \        }\n    }\n    return vowelIndex > -1 && consonantIndex > -1 ? wordArr[vowelIndex]\
    \ : '';\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'i'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpasuwdu_z.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasuwdu_z.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'i',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o




    '
  timestamp: 1660334596
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr\
    \ = word.split('');\n    let result = '';\n    for (let i = wordArr.length - 1;\
    \ i >= 0; i--) {\n        if (vowels.includes(wordArr[i])) {\n            if (i\
    \ === wordArr.length - 1) {\n                result = '';\n            } else\
    \ if (vowels.includes(wordArr[i + 1])) {\n                result = '';\n     \
    \       } else {\n                result = wordArr[i];\n            }\n      \
    \  }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('heaven'));\nconsole.log(get_closest_vowel('ham'));\n\
    console.log(get_closest_vowel('zzz'));\nconsole.log(get_closest_vowel('why'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmpghm9fj_i.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpghm9fj_i.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e


    a



    '
  timestamp: 1660334595
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let index\
    \ = word.length - 1;\n    let vowel = '';\n    let consonant = '';\n    let result\
    \ = '';\n    while (index >= 0) {\n        if (vowels.includes(word[index])) {\n\
    \            vowel = word[index];\n            if (consonant !== '') {\n     \
    \           result = vowel;\n                break;\n            }\n        }\
    \ else {\n            consonant = word[index];\n            if (vowel !== '')\
    \ {\n                result = vowel;\n                break;\n            }\n\
    \        }\n        index--;\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmp66mrtd_b.js:41:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp66mrtd_b.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o




    '
  timestamp: 1660334596
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let index\
    \ = word.length - 1;\n    let vowel = '';\n    while (index >= 0) {\n        if\
    \ (vowels.includes(word[index])) {\n            vowel = word[index];\n       \
    \     index--;\n            break;\n        }\n        index--;\n    }\n    while\
    \ (index >= 0) {\n        if (vowels.includes(word[index])) {\n            vowel\
    \ = word[index];\n        }\n        if (!vowels.includes(word[index])) {\n  \
    \          break;\n        }\n        index--;\n    }\n    return vowel;\n}\n\n\
    console.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('codewars'));\n\
    console.log(get_closest_vowel('samsung'));\nconsole.log(get_closest_vowel('abracadabra'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('z'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('z'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('z'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('z'));\nconsole.log(get_closest_vowel('bcd')\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpqv7cy5ap.ts(49,1): error TS1005: '','' expected.

    ../../../../tmp/tmpqv7cy5ap.ts(49,9): error TS1005: '','' expected.

    '
  timestamp: 1660334596
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let index\
    \ = -1;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            index = i;\n            break;\n        }\n    }\n  \
    \  if (index === -1) {\n        return '';\n    }\n    for (let i = index - 1;\
    \ i >= 0; i--) {\n        if (vowels.indexOf(word[i]) === -1) {\n            return\
    \ word[index];\n        }\n    }\n    return '';\n}\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('rhythm'));\nconsole.log(get_closest_vowel('strength'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('ae\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpgmmsm04b.ts(43,34): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpgmmsm04b.ts(44,1): error TS1005: '','' expected.

    ../../../../tmp/tmpgmmsm04b.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660334596
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    let closestVowel = '';\n    let closestDistance\
    \ = 0;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            let distance = 0;\n            for (let j = i; j < word.length;\
    \ j++) {\n                if (consonants.indexOf(word[j]) !== -1) {\n        \
    \            distance++;\n                } else {\n                    break;\n\
    \                }\n            }\n            if (distance > 0 && (distance <\
    \ closestDistance || closestDistance === 0)) {\n                closestDistance\
    \ = distance;\n                closestVowel = word[i];\n            }\n      \
    \  }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('abcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('bcdaeiou'));\n\
    console.log(get_closest_vowel('bcdaeiouxyz'));\nconsole.log(get_closest_vowel('bcdaeiouxyzaeiou'));\n\
    console.log(get_closest_vowel('bcdaeiouxyzaeioubcd'));\nconsole.log(get_closest_vowel('bcdaeiouxyzaeioubcdaeiou'));\n\
    console.log(get_closest_vowel('bcdaeiouxyzaeioubcdaeiouxyz')\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmptd3a1ffd.ts(41,1): error TS1005: '','' expected.

    ../../../../tmp/tmptd3a1ffd.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660334596
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestDistance = 0;\n    let vowelIndex = 0;\n    let consonantIndex\
    \ = 0;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ > -1) {\n            vowelIndex = i;\n            for (let j = i + 1; j < word.length;\
    \ j++) {\n                if (vowels.indexOf(word[j]) == -1) {\n             \
    \       consonantIndex = j;\n                    if (closestDistance == 0 || consonantIndex\
    \ - vowelIndex < closestDistance) {\n                        closestDistance =\
    \ consonantIndex - vowelIndex;\n                        closestVowel = word[i];\n\
    \                    }\n                    break;\n                }\n      \
    \      }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vow\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp8s4_rjcf.ts(46,1): error TS1005: '','' expected.

    ../../../../tmp/tmp8s4_rjcf.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660334595
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) > -1) {\n            if (i < closestDistance)\
    \ {\n                closestDistance = i;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmp1ervo2e4.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ervo2e4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    e

    a


    a

    '
  timestamp: 1660334596
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0\
    \ && i < word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) ===\
    \ -1 && vowels.indexOf(word[i + 1]) === -1) {\n                    if (i < closestDistance)\
    \ {\n                        closestDistance = i;\n                        closestVowel\
    \ = word[i];\n                    }\n                }\n            }\n      \
    \  }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('codewars'));\nconsole.log(get_closest_vowel('sensual'));\n\
    console.log(get_closest_vowel('rhythm'));\nconsole.log(get_closest_vowel('grrrrgh!'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aaaeeeiiiouuu'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('abcd'));\n\
    console.log(get_closest_vowel('abcde'));\nconsole.log(get_closest_vowel('abcdea'));\n\
    console.log(get_closest_vowel('abcdeau'));\nconsole.log(get_closest_vowel('abcdeaiou'));\n\
    console.log(get_closest_vowel('abcdeaioua'));\nconsole.log(get_closest_vowel('abcdeaiouae'));\n\
    console.log(get_closest_vowel('abcdeaiou\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpbe9pb_v7.ts(41,41): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpbe9pb_v7.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmpbe9pb_v7.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334596
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closest\
    \ = '';\n    let closestIndex = word.length;\n    for (let i = word.length - 1;\
    \ i >= 0; i--) {\n        if (vowels.includes(word[i])) {\n            if (i <\
    \ closestIndex) {\n                closestIndex = i;\n                closest\
    \ = word[i];\n            }\n        }\n    }\n    return closest;\n}\n\nconsole.log(get_closest_vowel('abracadabra'));\n\
    console.log(get_closest_vowel('shopper'));\nconsole.log(get_closest_vowel('o'));\n\
    console.log(get_closest_vowel('i'));\nconsole.log(get_closest_vowel('a'));\nconsole.log(get_closest_vowel('u'));\n\
    console.log(get_closest_vowel('e'));\nconsole.log(get_closest_vowel('o'));\nconsole.log(get_closest_vowel('b'));\n\
    console.log(get_closest_vowel('c'));\nconsole.log(get_closest_vowel('d'));\nconsole.log(get_closest_vowel('f'));\n\
    console.log(get_closest_vowel('g'));\nconsole.log(get_closest_vowel('h'));\nconsole.log(get_closest_vowel('j'));\n\
    console.log(get_closest_vowel('k'));\nconsole.log(get_closest_vowel('l'));\nconsole.log(get_closest_vowel('m'));\n\
    console.log(get_closest_vowel('n'));\nconsole.log(get_closest_vowel('p'));\nconsole.log(get_closest_vowel('q'));\n\
    console.log(get_closest\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpma7x2hfx.ts(44,1): error TS1005: '','' expected.

    ../../../../tmp/tmpma7x2hfx.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660334595
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let index\
    \ = word.length - 1;\n    let vowel = '';\n    let consonant = '';\n    while\
    \ (index >= 0) {\n        if (vowels.includes(word[index])) {\n            vowel\
    \ = word[index];\n            if (consonant) {\n                return vowel;\n\
    \            }\n        } else {\n            consonant = word[index];\n     \
    \   }\n        index--;\n    }\n    return '';\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('apple'));\nconsole.log(get_closest_vowel('bacon'));\n\
    console.log(get_closest_vowel('zebra'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoom'));\nconsole.log(get_closest_vowel('zooom'));\n\
    console.log(get_closest_vowel('zoooom'));\nconsole.log(get_closest_vowel('zoooomz'));\n\
    console.log(get_closest_vowel('zoooomzz'));\nconsole.log(get_closest_vowel('zoooomzzz'));\n\
    console.log(get_closest_vowel('zoooomzzzz'));\nconsole.log(get_closest_vowel('zoooomzzzzz'));\n\
    console.log(get_closest_vowel('zoooomzzzzzz'));\nconsole.log(get_closest_vowel('zoooomzzzzzzz'));\n\
    console.log(get_closest_vowel('zoooomzzzzzzzz'));\nconsole.log(get_closest_vowel('zoooomzzzzzzzzz'));\n\
    console.log(get_closest_vowel('zoooomzzzzzzzzzz')\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp6uerf8th.ts(44,1): error TS1005: '','' expected.

    ../../../../tmp/tmp6uerf8th.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660334596
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    const vowels = 'aeiou';\n    let result = '';\n    let\
    \ min = Infinity;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            if (i > 0 && i < word.length - 1) {\n               \
    \ if (vowels.indexOf(word[i - 1]) === -1 && vowels.indexOf(word[i + 1]) === -1)\
    \ {\n                    if (i < min) {\n                        min = i;\n  \
    \                      result = word[i];\n                    }\n            \
    \    }\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('codewars'));\nconsole.log(get_closest_vowel('sensual'));\n\
    console.log(get_closest_vowel('rhythm'));\nconsole.log(get_closest_vowel('beautiful'));\n\
    console.log(get_closest_vowel('beauty'));\nconsole.log(get_closest_vowel('beau'));\n\
    console.log(get_closest_vowel('beaut'));\nconsole.log(get_closest_vowel('beautyful'));\n\
    console.log(get_closest_vowel('beautyfully'));\nconsole.log(get_closest_vowel('beautyfull'));\n\
    console.log(get_closest_vowel('beautyfuller'));\nconsole.log(get_closest_vowel('beautyfullest'));\n\
    console.log(get_closest_vowel('beautyfullies'));\nconsole.log(get_closest_vowel('beautyfullied'));\n\
    console.log(get_closest_vowel('beautyfullies'));\nconsole.log(get_closest_vowel('beautyfullying'));\n\
    console.log(get_closest\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp5ho972fn.ts(44,1): error TS1005: '','' expected.

    ../../../../tmp/tmp5ho972fn.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660334596
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            let distance\
    \ = word.length - i;\n            if (distance < closestDistance) {\n        \
    \        closestDistance = distance;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('babble'));\nconsole.log(get_closest_vowel('shopper'));\n\
    console.log(get_closest_vowel('aardvark'));\nconsole.log(get_closest_vowel('shopper'));\n\
    console.log(get_closest_vowel('shopper'));\nconsole.log(get_closest_vowel('shopper'));\n\
    console.log(get_closest_vowel('shopper'));\nconsole.log(get_closest_vowel('shopper'));\n\
    console.log(get_closest_vowel('shopper'));\nconsole.log(get_closest_vowel('shopper'));\n\
    console.log(get_closest_vowel('shopper'));\nconsole.log(get_closest_vowel('shopper'));\n\
    console.log(get_closest_vowel('shopper'));\nconsole.log(get_closest_vowel('shopper'));\n\
    console.log(get_closest_vowel('shopper'));\nconsole.log(get_closest_vowel('shopper'));\n\
    console.log(get_closest_vowel('shopper'));\nconsole.log(get_closest_vowel\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpvsuju5ak.ts(41,1): error TS1005: '','' expected.

    ../../../../tmp/tmpvsuju5ak.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660334596
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    const vowels = ['a', 'e', 'i', 'o', 'u'];\n    const\
    \ consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    let closestVowel = '';\n    let\
    \ closestVowelIndex = word.length;\n    for (let i = word.length - 1; i >= 0;\
    \ i--) {\n        if (vowels.includes(word[i])) {\n            if (consonants.includes(word[i\
    \ - 1]) && consonants.includes(word[i + 1])) {\n                closestVowel =\
    \ word[i];\n                closestVowelIndex = i;\n                break;\n \
    \           }\n        }\n    }\n    return closestVowel;\n}\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_v\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpjn0ogkds.ts(38,1): error TS1005: '','' expected.

    ../../../../tmp/tmpjn0ogkds.ts(38,9): error TS1005: '','' expected.

    '
  timestamp: 1660334596
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let index = word.length - 1;\n    let found = false;\n    while (index\
    \ >= 0 && !found) {\n        if (vowels.indexOf(word[index]) > -1) {\n       \
    \     result = word[index];\n            found = true;\n        }\n        index--;\n\
    \    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpq2n_3nw2.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmpq2n_3nw2.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334595
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let result = \"\";\n   \
    \ let min = word.length;\n    for (let i = 0; i < word.length; i++) {\n      \
    \  if (vowels.indexOf(word[i]) >= 0) {\n            let j = i + 1;\n         \
    \   while (j < word.length && vowels.indexOf(word[j]) >= 0) {\n              \
    \  j++;\n            }\n            if (j < word.length) {\n                let\
    \ dist = j - i;\n                if (dist < min) {\n                    min =\
    \ dist;\n                    result = word[i];\n                }\n          \
    \  }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"\
    hello\"));\nconsole.log(get_closest_vowel(\"codewars\"));\nconsole.log(get_closest_vowel(\"\
    sauce\"));\nconsole.log(get_closest_vowel(\"a\"));\nconsole.log(get_closest_vowel(\"\
    \"));\nconsole.log(get_closest_vowel(\"z\"));\nconsole.log(get_closest_vowel(\"\
    u\"));\nconsole.log(get_closest_vowel(\"b\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"zaeiou\"));\nconsole.log(get_closest_vowel(\"\
    zaeiouz\"));\nconsole.log(get_closest_vowel(\"zaeiouzz\"));\nconsole.log(get_closest_vowel(\"\
    zaeiouzzz\"));\nconsole.log(get_closest_vowel(\"zaeiouzzzz\"));\nconsole.log(get_closest_vowel(\"\
    zaeiouzzzzz\"));\nconsole.log(get_closest_vowel(\"zaeiouzzzzzz\"));\nconsole.log(get_closest_vowel(\"\
    zaeiou\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmphnqhmbiw.ts(45,38): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmphnqhmbiw.ts(46,1): error TS1005: '','' expected.

    ../../../../tmp/tmphnqhmbiw.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660334596
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let closestVowel = '';\n \
    \   let closestDistance = word.length;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            let distance =\
    \ word.length - i;\n            if (distance < closestDistance) {\n          \
    \      closestDistance = distance;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('world'));\nconsole.log(get_closest_vowel('javascript'));\n\
    console.log(get_closest_vowel('typescript'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoom'));\nconsole.log(get_closest_vowel('zoomer'));\n\
    console.log(get_closest_vowel('zoomerz'));\nconsole.log(get_closest_vowel('zoomerzoom'));\n\
    console.log(get_closest_vowel('zoomerzoomer'));\nconsole.log(get_closest_vowel('zoomerzoomerzoom'));\n\
    console.log(get_closest_vowel('zoomerzoomerzoomer'));\nconsole.log(get_closest_vowel('zoomerzoomerzoomerzoom'));\n\
    console.log(get_closest_vowel('zoomerzoomerzoomerzoomer'));\nconsole.log(get_closest_vowel('zoomerzoomerzoomerzoomerzoom'));\n\
    console.log(get_closest_vowel('zoomerzoomerzoomerzoomerzoomer'));\nconsole.log(get_closest_vowel\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp4_efudpo.ts(40,1): error TS1005: '','' expected.

    ../../../../tmp/tmp4_efudpo.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660334596
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let lastConsonant = word.length;\n\
    \    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ === -1) {\n            lastConsonant = i;\n        } else {\n            if\
    \ (lastConsonant !== word.length) {\n                return word[i];\n       \
    \     }\n        }\n    }\n    return \"\";\n}\n\nconsole.log(get_closest_vowel(\"\
    hello\"));\nconsole.log(get_closest_vowel(\"there\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"why\"));\nconsole.log(get_closest_vowel(\"\
    rhythm\"));\nconsole.log(get_closest_vowel(\"\"));\nconsole.log(get_closest_vowel(\"\
    bcd\"));\nconsole.log(get_closest_vowel(\"abcd\"));\nconsole.log(get_closest_vowel(\"\
    a\"));\nconsole.log(get_closest_vowel(\"ba\"));\nconsole.log(get_closest_vowel(\"\
    ab\"));\nconsole.log(get_closest_vowel(\"bcd\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"why\"));\nconsole.log(get_closest_vowel(\"\
    rhythm\"));\nconsole.log(get_closest_vowel(\"\"));\nconsole.log(get_closest_vowel(\"\
    bcd\"));\nconsole.log(get_closest_vowel(\"abcd\"));\nconsole.log(get_closest_vowel(\"\
    a\"));\nconsole.log(get_closest_vowel(\"ba\"));\nconsole.log(get_closest_vowel(\"\
    ab\"));\nconsole.log(get_cl\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp34x8218k.ts(44,1): error TS1005: '','' expected.

    ../../../../tmp/tmp34x8218k.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660334596
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let min = word.length;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0 && i\
    \ < word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) === -1\
    \ && vowels.indexOf(word[i + 1]) === -1) {\n                    if (i < min) {\n\
    \                        min = i;\n                        result = word[i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmpo_pkzuau.js:45:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo_pkzuau.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    e
















    '
  timestamp: 1660334596
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            let distance\
    \ = word.length - i;\n            if (distance < closestDistance) {\n        \
    \        closestDistance = distance;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"\
    helloworld\"));\nconsole.log(get_closest_vowel(\"helloworld\"));\nconsole.log(get_closest_vowel(\"\
    helloworld\"));\nconsole.log(get_closest_vowel(\"helloworld\"));\nconsole.log(get_closest_vowel(\"\
    helloworld\"));\nconsole.log(get_closest_vowel(\"helloworld\"));\nconsole.log(get_closest_vowel(\"\
    helloworld\"));\nconsole.log(get_closest_vowel(\"helloworld\"));\nconsole.log(get_closest_vowel(\"\
    helloworld\"));\nconsole.log(get_closest_vowel(\"helloworld\"));\nconsole.log(get_closest_vowel(\"\
    helloworld\"));\nconsole.log(get_closest_vowel(\"helloworld\"));\nconsole.log(get_closest_vowel(\"\
    helloworld\"));\nconsole.log(get_closest_vowel(\"helloworld\"));\nconsole.log(get_closest_vowel(\"\
    helloworld\"));\nconsole.log(get_closest_vowel(\"helloworld\"));\nconsole.log(get_closest_vowel(\"\
    helloworld\"));\nconsole.log(get_closest_vowel(\"helloworld\"));\nconsole.log(get_closest_vowel(\"\
    helloworld\"));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpas03ayi7.ts(42,9): error TS1003: Identifier expected.

    '
  timestamp: 1660334596
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let distance = 0;\n    let temp = 0;\n    for (let i = word.length\
    \ - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n       \
    \     if (distance === 0) {\n                distance = word.length - i;\n   \
    \             result = word[i];\n            } else {\n                temp =\
    \ word.length - i;\n                if (temp < distance) {\n                 \
    \   distance = temp;\n                    result = word[i];\n                }\n\
    \            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpvex3fn72.js:37:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvex3fn72.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o


    u

    '
  timestamp: 1660334596
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    let result = '';\n    let closest = word.length;\n\
    \    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            if (consonants.indexOf(word[i - 1]) !== -1 && consonants.indexOf(word[i\
    \ + 1]) !== -1) {\n                if (closest > i) {\n                    closest\
    \ = i;\n                    result = word[i];\n                }\n           \
    \ }\n        }\n    }\n    return result;\n}\nconsole.log(get_closest_vowel('abracadabra'));\n\
    console.log(get_closest_vowel('shopper'));\nconsole.log(get_closest_vowel('happiest'));\n\
    console.log(get_closest_vowel('hostess'));\nconsole.log(get_closest_vowel('abcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_cl\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmphe7jvmvn.ts(39,1): error TS1005: '','' expected.

    ../../../../tmp/tmphe7jvmvn.ts(39,9): error TS1005: '','' expected.

    '
  timestamp: 1660334596
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr\
    \ = word.split('');\n    let closestVowel = '';\n    let closestVowelIndex = 0;\n\
    \    let closestVowelDistance = 0;\n    let consonantCount = 0;\n    for (let\
    \ i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
    \ === -1) {\n            consonantCount++;\n        } else {\n            if (consonantCount\
    \ >= 2) {\n                if (closestVowel === '') {\n                    closestVowel\
    \ = wordArr[i];\n                    closestVowelIndex = i;\n                \
    \    closestVowelDistance = consonantCount;\n                } else {\n      \
    \              if (consonantCount < closestVowelDistance) {\n                \
    \        closestVowel = wordArr[i];\n                        closestVowelIndex\
    \ = i;\n                        closestVowelDistance = consonantCount;\n     \
    \               }\n                }\n            }\n            consonantCount\
    \ = 0;\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('abcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('hbcd'));\n\
    console.log(get_closest_vowel('hbcdi'));\nconsole.log(get_closest_vowel('hbcdio'));\n\
    console.log(get_closest_vowel('hbcdioa'));\nconsole.log(get_closest_vowel('hbcdioae'));\n\
    console.log(get_closest_vowel('hbcdioaei'));\nconsole.log(get_closest_vowel('hbcdioaeiu'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpymf7tgxr.js:54:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpymf7tgxr.js:66:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e


    a









    '
  timestamp: 1660334602
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let distance = 0;\n    let last_consonant = -1;\n    let first_vowel\
    \ = -1;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ > -1) {\n            if (last_consonant > -1) {\n                if (first_vowel\
    \ == -1) {\n                    first_vowel = i;\n                    distance\
    \ = i - last_consonant;\n                } else {\n                    if (i -\
    \ last_consonant < distance) {\n                        distance = i - last_consonant;\n\
    \                        first_vowel = i;\n                    }\n           \
    \     }\n            }\n        } else {\n            last_consonant = i;\n  \
    \      }\n    }\n    if (first_vowel > -1) {\n        result = word[first_vowel];\n\
    \    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('aaaaa'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('abcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('bacedifoguh'));\n\
    console.log(get_closest_vowel('b'));\nconsole.log(get_closest_vowel('ab'));\n\
    console.log(get_closest_vowel('bb'));\nconsole.log(get_closest_vowel('bc'));\n\
    console.log(get_closest_vowel('abc'));\nconsole.log(get_closest_vowel('bbc'));\n\
    console.log(get_closest_vowel('bbcd'));\nconsole.log(get_closest\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp9cpo6lon.ts(50,1): error TS1005: '','' expected.

    ../../../../tmp/tmp9cpo6lon.ts(50,9): error TS1005: '','' expected.

    '
  timestamp: 1660334602
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let min = word.length;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0 && i\
    \ < word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) === -1\
    \ && vowels.indexOf(word[i + 1]) === -1) {\n                    if (i < min) {\n\
    \                        min = i;\n                        result = word[i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('helicopter'));\n\
    console.log(get_closest_vowel('e'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmpumg4if9c.js:45:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpumg4if9c.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    e
















    '
  timestamp: 1660334602
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            result = word[i];\n            break;\n        }\n  \
    \  }\n    return result;\n}\n\nconsole.log(get_closest_vowel('abcd'));\nconsole.log(get_closest_vowel('abcdeg'));\n\
    console.log(get_closest_vowel('abcdegh'));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpqerdg84d.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqerdg84d.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'a

    e

    e

    '
  timestamp: 1660334602
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let index = word.length -\
    \ 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index]) !== -1)\
    \ {\n            if (index === 0) {\n                return '';\n            }\n\
    \            if (vowels.indexOf(word[index - 1]) === -1) {\n                return\
    \ word[index];\n            }\n        }\n        index--;\n    }\n    return\
    \ '';\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('rhythm'));\n\
    console.log(get_closest_vowel('strength'));\nconsole.log(get_closest_vowel('xyz'));\n\
    console.log(get_closest_vowel('aeiouxyz'));\nconsole.log(get_closest_vowel('abc'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('cde'));\n\
    console.log(get_closest_vowel('def'));\nconsole.log(get_closest_vowel('efg'));\n\
    console.log(get_closest_vowel('fgh'));\nconsole.log(get_closest_vowel('ghi'));\n\
    console.log(get_closest_vowel('hij'));\nconsole.log(get_closest_vowel('ijk'));\n\
    console.log(get_closest_vowel('jkl'));\nconsole.log(get_closest_vowel('klm'));\n\
    console.log(get_closest_vowel\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp2ze01rjy.ts(45,1): error TS1005: '','' expected.

    ../../../../tmp/tmp2ze01rjy.ts(45,9): error TS1005: '','' expected.

    '
  timestamp: 1660334602
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let result = \"\";\n   \
    \ let minDistance = word.length;\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            let distance = word.length\
    \ - i;\n            if (distance < minDistance) {\n                minDistance\
    \ = distance;\n                result = word[i];\n            }\n        }\n \
    \   }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"hello\"));\nconsole.log(get_closest_vowel(\"\
    there\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    why\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    rhythm\"));\nconsole.log(get_closest_vowel(\"\"));\nconsole.log(get_closest_vowel(\"\
    a\"));\nconsole.log(get_closest_vowel(\"b\"));\nconsole.log(get_closest_vowel(\"\
    c\"));\nconsole.log(get_closest_vowel(\"d\"));\nconsole.log(get_closest_vowel(\"\
    e\"));\nconsole.log(get_closest_vowel(\"f\"));\nconsole.log(get_closest_vowel(\"\
    g\"));\nconsole.log(get_closest_vowel(\"h\"));\nconsole.log(get_closest_vowel(\"\
    i\"));\nconsole.log(get_closest_vowel(\"j\"));\nconsole.log(get_closest_vowel(\"\
    k\"));\nconsole.log(get_closest_vowel(\"l\"));\nconsole.log(get_closest_vowel(\"\
    m\"));\nconsole.log(get_closest_vowel(\"n\"));\nconsole.log(get_closest\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp6t9qdp_9.ts(45,1): error TS1005: '','' expected.

    ../../../../tmp/tmp6t9qdp_9.ts(45,9): error TS1005: '','' expected.

    '
  timestamp: 1660334602
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let closest = word.length;\n    for (let i = word.length - 1; i >=\
    \ 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i\
    \ < closest) {\n                closest = i;\n                result = word[i];\n\
    \            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmp9hf70e6w.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9hf70e6w.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e


    a


    '
  timestamp: 1660334603
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let distance = word.length;\n    for (let i = word.length - 1; i\
    \ >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if\
    \ (i < distance) {\n                distance = i;\n                result = word[i];\n\
    \            }\n        }\n    }\n    return result;\n}\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('javascript'));\n\
    console.log(get_closest_vowel('beautiful'));\nconsole.log(get_closest_vowel('beauty'));\n\
    console.log(get_closest_vowel('beau'));\nconsole.log(get_closest_vowel('b'));\n\
    console.log(get_closest_vowel('ab'));\nconsole.log(get_closest_vowel('ae'));\n\
    console.log(get_closest_vowel('ea'));\nconsole.log(get_closest_vowel('ee'));\n\
    console.log(get_closest_vowel('aee'));\nconsole.log(get_closest_vowel('aae'));\n\
    console.log(get_closest_vowel('aaa'));\nconsole.log(get_closest_vowel('bbb'));\n\
    console.log(get_closest_vowel('bab'));\nconsole.log(get_closest_vowel('bae'));\n\
    console.log(get_closest_vowel('bea'));\nconsole.log(get_closest_vowel('baeiou'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmppf6ndmup.js:45:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppf6ndmup.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    e

    a


    a

    e

    e

    e


    a

    a

    e

    e

    a

    a

    a


    a

    a

    e

    a

    '
  timestamp: 1660334603
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let distance = word.length;\n    for (let i = word.length - 1; i\
    \ >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if\
    \ (i > 0 && vowels.indexOf(word[i - 1]) === -1) {\n                if (i < distance)\
    \ {\n                    distance = i;\n                    result = word[i];\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\n\n\
    console.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_clos\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp7o8c9g01.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmp7o8c9g01.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334602
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let closest = word.length;\n    for (let i = word.length - 1; i >=\
    \ 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i\
    \ < closest) {\n                closest = i;\n                result = word[i];\n\
    \            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmp2p2lfefk.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2p2lfefk.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    e

    a


    '
  timestamp: 1660334602
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let vowelIndex = -1;\n    let vowelDistance = word.length;\n    for\
    \ (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            if (vowelIndex === -1) {\n                vowelIndex\
    \ = i;\n            } else {\n                if (vowelDistance > vowelIndex -\
    \ i) {\n                    vowelDistance = vowelIndex - i;\n                \
    \    result = word[i];\n                }\n                vowelIndex = i;\n \
    \           }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('codewars'));\nconsole.log(get_closest_vowel('sensual'));\n\
    console.log(get_closest_vowel('moo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpg7kvjib6.ts(46,1): error TS1005: '','' expected.

    ../../../../tmp/tmpg7kvjib6.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660334602
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let wordArray = word.split('');\n    let vowelIndex = 0;\n    let\
    \ closestVowelIndex = 0;\n    let closestDistance = 0;\n    let distance = 0;\n\
    \    for (let i = 0; i < wordArray.length; i++) {\n        if (vowels.indexOf(wordArray[i])\
    \ > -1) {\n            vowelIndex = i;\n            if (vowelIndex > 0 && vowelIndex\
    \ < wordArray.length - 1) {\n                if (vowels.indexOf(wordArray[vowelIndex\
    \ - 1]) === -1 && vowels.indexOf(wordArray[vowelIndex + 1]) === -1) {\n      \
    \              distance = wordArray.length - vowelIndex;\n                   \
    \ if (distance > closestDistance) {\n                        closestDistance =\
    \ distance;\n                        closestVowelIndex = vowelIndex;\n       \
    \             }\n                }\n            }\n        }\n    }\n    if (closestVowelIndex\
    \ > 0) {\n        closestVowel = wordArray[closestVowelIndex];\n    }\n    return\
    \ closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('hll'));\n\
    console.log(get_closest_vowel('hlll'));\nconsole.log(get_closest_vowel('hllll'));\n\
    console.log(get_closest_vowel('hlllll'));\nconsole.log(get_closest_vowel('hllllll'));\n\
    console.log(get_closest_vowel('hlllllll'));\nconsole.log(get_closest_vowel('hllllllll'));\n\
    console.log(get_closest_vowel('hlllllllll'));\nconsole.log(get_closest_vowel('hllllllllll'));\n\
    console.log(get_cl\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp2i_b5m5b.ts(46,1): error TS1005: '','' expected.

    ../../../../tmp/tmp2i_b5m5b.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660334602
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    let closestDistance = 0;\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            let distance = word.length\
    \ - i;\n            if (closestDistance === 0 || distance < closestDistance) {\n\
    \                closestDistance = distance;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"\
    hello\"));\nconsole.log(get_closest_vowel(\"codewars\"));\nconsole.log(get_closest_vowel(\"\
    sapien\"));\nconsole.log(get_closest_vowel(\"oracle\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"rhythm\"));\nconsole.log(get_closest_vowel(\"\
    \"));\nconsole.log(get_closest_vowel(\"b\"));\nconsole.log(get_closest_vowel(\"\
    a\"));\nconsole.log(get_closest_vowel(\"e\"));\nconsole.log(get_closest_vowel(\"\
    u\"));\nconsole.log(get_closest_vowel(\"o\"));\nconsole.log(get_closest_vowel(\"\
    z\"));\nconsole.log(get_closest_vowel(\"y\"));\nconsole.log(get_closest_vowel(\"\
    bcdfghjkl\"));\nconsole.log(get_closest_vowel(\"aeiouaeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiouaeiouaeiou\"));\nconsole.log(get_closest_vowel(\"abcdefghijklmnopqrstuvwxyz\"\
    ));\nconsole.log(get_closest_vowel(\"abcdef\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpn67fwoy7.ts(41,38): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpn67fwoy7.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmpn67fwoy7.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334602
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let index = word.length -\
    \ 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index]) !== -1)\
    \ {\n            if (index === 0) {\n                return '';\n            }\n\
    \            if (vowels.indexOf(word[index - 1]) === -1) {\n                return\
    \ word[index];\n            }\n        }\n        index--;\n    }\n    return\
    \ '';\n}\n\nconsole.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworl'));\n\
    console.log(get_closest_vowel('hellowor'));\nconsole.log(get_closest_vowel('hellowo'));\n\
    console.log(get_closest_vowel('hellow'));\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('hell'));\nconsole.log(get_closest_vowel('hel'));\n\
    console.log(get_closest_vowel('he'));\nconsole.log(get_closest_vowel('h'));\n\
    console.log(get_closest_vowel('a'));\nconsole.log(get_closest_vowel('b'));\nconsole.log(get_closest_vowel('c'));\n\
    console.log(get_closest_vowel('d'));\nconsole.log(get_closest_vowel('e'));\nconsole.log(get_closest_vowel('f'));\n\
    console.log(get_closest_vowel('g'));\nconsole.log(get_closest_vowel('h'));\nconsole.log(get_closest_vowel('i'));\n\
    console.log(get_closest_vowel('j'));\nconsole.log(get_closest_vowel('k'));\nconsole.log\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'i'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmphg5cy99b.js:52:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphg5cy99b.js:62:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'i',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o

    o

    o

    o

    o

    o

    e

    e

    e













    '
  timestamp: 1660334603
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let min = word.length;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0 && i\
    \ < word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) === -1\
    \ && vowels.indexOf(word[i + 1]) === -1) {\n                    if (i < min) {\n\
    \                        min = i;\n                        result = word[i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('codewars'));\n\
    console.log(get_closest_vowel('sensual'));\nconsole.log(get_closest_vowel('rhythm'));\n\
    console.log(get_closest_vowel('grrrrgh!'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aaa'));\nconsole.log(get_closest_vowel('bbb'));\n\
    console.log(get_closest_vowel('ccc'));\nconsole.log(get_closest_vowel('ddd'));\n\
    console.log(get_closest_vowel('eee'));\nconsole.log(get_closest_vowel('fff'));\n\
    console.log(get_closest_vowel('ggg'));\nconsole.log(get_closest_vowel('hhh'));\n\
    console.log(get_closest_vowel('iii'));\nconsole.log(get_closest_vowel('jjj'));\n\
    console.log(get_closest_vowel('kkk'));\nconsole.log(get_closest_\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpt77z6sxt.ts(44,1): error TS1005: '','' expected.

    ../../../../tmp/tmpt77z6sxt.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660334602
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let i = word.length - 1;\n    while (i >= 0) {\n        if (vowels.includes(word[i]))\
    \ {\n            result = word[i];\n            i--;\n            break;\n   \
    \     }\n        i--;\n    }\n    while (i >= 0) {\n        if (vowels.includes(word[i]))\
    \ {\n            return result;\n        }\n        i--;\n    }\n    return result;\n\
    }\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('codewars'));\n\
    console.log(get_closest_vowel('salesperson'));\nconsole.log(get_closest_vowel('zodiac'));\n\
    console.log(get_closest_vowel('zodiacs'));\nconsole.log(get_closest_vowel('zodiacss'));\n\
    console.log(get_closest_vowel('zodiacsss'));\nconsole.log(get_closest_vowel('zodiacssss'));\n\
    console.log(get_closest_vowel('zodiacsssss'));\nconsole.log(get_closest_vowel('zodiacssssss'));\n\
    console.log(get_closest_vowel('zodiacsssssss'));\nconsole.log(get_closest_vowel('zodiacssssssss'));\n\
    console.log(get_closest_vowel('zodiacsssssssss'));\nconsole.log(get_closest_vowel('zodiacssssssssss'));\n\
    console.log(get_closest_vowel('zodiacsssssssssss'));\nconsole.log(get_closest_vowel('zodiacssssssssssss'));\n\
    console.log(get_closest_vowel('zodiacssssssssssss\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpm2spo5in.ts(44,50): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpm2spo5in.ts(45,1): error TS1005: '','' expected.

    ../../../../tmp/tmpm2spo5in.ts(45,9): error TS1005: '','' expected.

    '
  timestamp: 1660334602
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let index = word.length -\
    \ 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index]) !== -1)\
    \ {\n            if (index === 0) {\n                return '';\n            }\n\
    \            if (vowels.indexOf(word[index - 1]) === -1) {\n                return\
    \ word[index];\n            }\n        }\n        index--;\n    }\n    return\
    \ '';\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpmah_29yo.ts(43,37): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpmah_29yo.ts(44,1): error TS1005: '','' expected.

    ../../../../tmp/tmpmah_29yo.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660334602
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let distance = 0;\n    for (let i = word.length - 1; i >= 0; i--)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (distance >\
    \ 1) {\n                return result;\n            }\n            result = word[i];\n\
    \            distance = 0;\n        } else {\n            distance++;\n      \
    \  }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'u'\n    at test (/tmp/tmp3zsfkiog.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3zsfkiog.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o


    a


    a

    '
  timestamp: 1660334603
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestVowelIndex = word.length;\n    for (let i = word.length\
    \ - 1; i >= 0; i--) {\n        if (vowels.includes(word[i])) {\n            if\
    \ (i < closestVowelIndex) {\n                closestVowel = word[i];\n       \
    \         closestVowelIndex = i;\n            }\n        }\n    }\n    return\
    \ closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmpdcnzebra.js:44:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdcnzebra.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    e

    a


    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    '
  timestamp: 1660334590
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let index = word.length - 1;\n    let found = false;\n    while (index\
    \ > 0 && !found) {\n        if (vowels.indexOf(word[index]) > -1) {\n        \
    \    if (vowels.indexOf(word[index - 1]) === -1) {\n                found = true;\n\
    \                result = word[index];\n            }\n        }\n        index--;\n\
    \    }\n    return result;\n}\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('world'));\n\
    console.log(get_closest_vowel('apple'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'i'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmp46aeglzd.js:36:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp46aeglzd.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'i',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o

    o

    e




    '
  timestamp: 1660334603
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    let closestVowelIndex = word.length;\n    for (let i = word.length - 1;\
    \ i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if\
    \ (i < closestVowelIndex) {\n                closestVowel = word[i];\n       \
    \         closestVowelIndex = i;\n            }\n        }\n    }\n    return\
    \ closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"hello\"));\nconsole.log(get_closest_vowel(\"\
    there\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    why\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_cl\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpu7jzexb6.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmpu7jzexb6.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334602
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestVowelIndex = 0;\n    let closestVowelDistance = 0;\n \
    \   for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ > -1) {\n            if (i > 0 && i < word.length - 1) {\n                if\
    \ (vowels.indexOf(word[i - 1]) === -1 && vowels.indexOf(word[i + 1]) === -1) {\n\
    \                    if (closestVowelIndex === 0) {\n                        closestVowel\
    \ = word[i];\n                        closestVowelIndex = i;\n               \
    \         closestVowelDistance = i;\n                    } else {\n          \
    \              if (i < closestVowelDistance) {\n                            closestVowel\
    \ = word[i];\n                            closestVowelIndex = i;\n           \
    \                 closestVowelDistance = i;\n                        }\n     \
    \               }\n                }\n            }\n        }\n    }\n    return\
    \ closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('codewars'));\n\
    console.log(get_closest_vowel('sensual'));\nconsole.log(get_closest_vowel('rhythm'));\n\
    console.log(get_closest_vowel('grrrrgh!'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('abcdefghijklmnopqrstuvwxyz'));\nconsole.log(get_closest_vowel('abcdefghijklmnopqrstuvwxyz'));\n\
    console.log(get_closest_vowel('abcdefghijkl\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp95a3_pzo.ts(44,44): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp95a3_pzo.ts(45,1): error TS1005: '','' expected.

    ../../../../tmp/tmp95a3_pzo.ts(45,9): error TS1005: '','' expected.

    '
  timestamp: 1660334603
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    const vowels = ['a', 'e', 'i', 'o', 'u'];\n    const\
    \ consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    let closestVowel = '';\n    let\
    \ closestVowelIndex = 0;\n    let closestConsonantIndex = 0;\n    let closestConsonant\
    \ = '';\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.includes(word[i]))\
    \ {\n            for (let j = i; j < word.length; j++) {\n                if (consonants.includes(word[j]))\
    \ {\n                    closestConsonant = word[j];\n                    closestConsonantIndex\
    \ = j;\n                    break;\n                }\n            }\n       \
    \     if (closestConsonantIndex - i < closestVowelIndex) {\n                closestVowel\
    \ = word[i];\n                closestVowelIndex = i;\n            }\n        }\n\
    \    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('abcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('dcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('abcde'));\n\
    console.log(get_closest_vowel('abcde'));\nconsole.log(get_closest_vowel('abcde'));\n\
    console.log(get_closest_vowel('abcde'));\nconsole.log(get_closest_vowel('abcde'));\n\
    console.log(get_\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpq6_0es1_.ts(44,1): error TS1005: '','' expected.

    ../../../../tmp/tmpq6_0es1_.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660334603
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let index = word.length\
    \ - 1;\n    let result = \"\";\n    while (index >= 0) {\n        if (vowels.indexOf(word[index])\
    \ !== -1) {\n            result = word[index];\n            break;\n        }\n\
    \        index--;\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"\
    hello\"));\nconsole.log(get_closest_vowel(\"aaaaa\"));\nconsole.log(get_closest_vowel(\"\
    bcd\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpx4rsva1e.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx4rsva1e.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o

    a


    u

    '
  timestamp: 1660334603
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let vowelIndex\
    \ = -1;\n    let vowel = '';\n    for (let i = word.length - 1; i >= 0; i--) {\n\
    \        if (vowels.indexOf(word[i]) > -1) {\n            vowelIndex = i;\n  \
    \          vowel = word[i];\n            break;\n        }\n    }\n    if (vowelIndex\
    \ === -1) {\n        return '';\n    }\n    for (let i = vowelIndex - 1; i >=\
    \ 0; i--) {\n        if (vowels.indexOf(word[i]) === -1) {\n            return\
    \ vowel;\n        }\n    }\n    return '';\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('heaven'));\nconsole.log(get_closest_vowel('helicopter'));\n\
    console.log(get_closest_vowel('xenon'));\nconsole.log(get_closest_vowel('rhythm'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoom'));\n\
    console.log(get_closest_vowel('zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmptnwnn5i0.ts(36,390): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmptnwnn5i0.ts(37,1): error TS1005: '','' expected.

    ../../../../tmp/tmptnwnn5i0.ts(37,9): error TS1005: '','' expected.

    '
  timestamp: 1660334608
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            let distance\
    \ = word.length - i;\n            if (distance < closestDistance) {\n        \
    \        closestDistance = distance;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"\
    hello\"));\nconsole.log(get_closest_vowel(\"world\"));\nconsole.log(get_closest_vowel(\"\
    test\"));\nconsole.log(get_closest_vowel(\"a\"));\nconsole.log(get_closest_vowel(\"\
    b\"));\nconsole.log(get_closest_vowel(\"c\"));\nconsole.log(get_closest_vowel(\"\
    d\"));\nconsole.log(get_closest_vowel(\"e\"));\nconsole.log(get_closest_vowel(\"\
    f\"));\nconsole.log(get_closest_vowel(\"g\"));\nconsole.log(get_closest_vowel(\"\
    h\"));\nconsole.log(get_closest_vowel(\"i\"));\nconsole.log(get_closest_vowel(\"\
    j\"));\nconsole.log(get_closest_vowel(\"k\"));\nconsole.log(get_closest_vowel(\"\
    l\"));\nconsole.log(get_closest_vowel(\"m\"));\nconsole.log(get_closest_vowel(\"\
    n\"));\nconsole.log(get_closest_vowel(\"o\"));\nconsole.log(get_closest_vowel(\"\
    p\"));\nconsole.log(get_closest_vowel(\"q\"));\nconsole.log(get_closest_vowel(\"\
    r\"));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpr12p39iu.ts(45,9): error TS1005: '','' expected.

    '
  timestamp: 1660334608
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let index = word.length -\
    \ 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index]) !== -1)\
    \ {\n            if (index === 0) {\n                return '';\n            }\n\
    \            if (vowels.indexOf(word[index - 1]) === -1) {\n                return\
    \ word[index];\n            }\n        }\n        index--;\n    }\n    return\
    \ '';\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('codewars'));\n\
    console.log(get_closest_vowel('sensual'));\nconsole.log(get_closest_vowel('rhythm'));\n\
    console.log(get_closest_vowel('grrrrgh!'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aaeeouu'));\nconsole.log(get_closest_vowel('abcde'));\n\
    console.log(get_closest_vowel('bbbbb'));\nconsole.log(get_closest_vowel('a'));\n\
    console.log(get_closest_vowel('e'));\nconsole.log(get_closest_vowel('u'));\nconsole.log(get_closest_vowel('b'));\n\
    console.log(get_closest_vowel('z'));\nconsole.log(get_closest_vowel('bcdbcdbcd'));\n\
    console.log(get_closest_vowel('aeiouaeiouaeiou'));\nconsole.log(get_closest_vowel('aeiouaeiouaeiouaeiou'));\n\
    console.log(get_closest_vowel('aeiouaeiouaeiouaeiouaeiou'));\nconsole.log(get_closest_vowel('\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpadiihhmz.ts(42,32): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpadiihhmz.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmpadiihhmz.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334608
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    const vowels = ['a', 'e', 'i', 'o', 'u'];\n    const\
    \ wordArr = word.split('');\n    let vowel = '';\n    let distance = 0;\n    let\
    \ closest = word.length;\n    for (let i = 0; i < wordArr.length; i++) {\n   \
    \     if (vowels.includes(wordArr[i])) {\n            distance = word.length -\
    \ i;\n            if (distance < closest) {\n                closest = distance;\n\
    \                vowel = wordArr[i];\n            }\n        }\n    }\n    return\
    \ vowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp0ktu_7qb.ts(44,1): error TS1005: '','' expected.

    ../../../../tmp/tmp0ktu_7qb.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660334608
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr\
    \ = word.split('');\n    let result = '';\n    let index = wordArr.length - 1;\n\
    \    while (index > 0) {\n        if (vowels.includes(wordArr[index])) {\n   \
    \         if (!vowels.includes(wordArr[index - 1])) {\n                result\
    \ = wordArr[index];\n                break;\n            }\n        }\n      \
    \  index--;\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('abcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('zxcv'));\n\
    console.log(get_closest_vowel('zxcvb'));\nconsole.log(get_closest_vowel('zxcvbaeiou'));\n\
    console.log(get_closest_vowel('zxcvbaeiouzxcvb'));\nconsole.log(get_closest_vowel('zxcvbaeiouzxcvbaeiou'));\n\
    console.log(get_closest_vowel('zxcvbaeiouzxcvbaeiouzxcvb'));\nconsole.log(get_closest_vowel('zxcvbaeiouzxcvbaeiouzxcvbaeiou'));\n\
    console.log(get_closest_vowel('zxcvbaeiouzxcvbaeiouzxcvbaeiouzxcvb'));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'i'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmp2myvq1am.js:40:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2myvq1am.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'i',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '




    a

    a

    a

    a

    a

    a

    '
  timestamp: 1660334609
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestIndex = word.length;\n    for (let i = word.length - 1;\
    \ i >= 0; i--) {\n        if (vowels.includes(word[i])) {\n            if (i <\
    \ closestIndex) {\n                closestIndex = i;\n                closestVowel\
    \ = word[i];\n            }\n        }\n    }\n    return closestVowel;\n}\n\n\
    console.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp7lpqvrjj.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmp7lpqvrjj.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334609
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestIndex = 0;\n    let closestDistance = 0;\n    let isConsonant\
    \ = true;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            if (isConsonant) {\n                closestVowel = word[i];\n\
    \                closestIndex = i;\n                break;\n            }\n  \
    \          else {\n                isConsonant = true;\n            }\n      \
    \  }\n        else {\n            if (isConsonant) {\n                closestDistance\
    \ = word.length - i;\n                isConsonant = false;\n            }\n  \
    \      }\n    }\n    if (closestVowel === '') {\n        return closestVowel;\n\
    \    }\n    for (let i = closestIndex - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            if (isConsonant) {\n                if (closestIndex\
    \ - i < closestDistance) {\n                    closestVowel = word[i];\n    \
    \                closestDistance = closestIndex - i;\n                }\n    \
    \        }\n            else {\n                isConsonant = true;\n        \
    \    }\n        }\n        else {\n            if (isConsonant) {\n          \
    \      isConsonant = false;\n            }\n        }\n    }\n    return closestVowel;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'u'\n    at test (/tmp/tmp2j1r3b7_.js:57:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2j1r3b7_.js:71:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334609
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestIndex = word.length;\n    for (let i = word.length - 1;\
    \ i >= 0; i--) {\n        if (vowels.includes(word[i])) {\n            if (i <\
    \ closestIndex) {\n                closestIndex = i;\n                closestVowel\
    \ = word[i];\n            }\n        }\n    }\n    return closestVowel;\n}\n\n\
    console.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp7lpqvrjj.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmp7lpqvrjj.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334609
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) > -1) {\n            let distance\
    \ = word.length - i;\n            if (distance < closestDistance) {\n        \
    \        closestDistance = distance;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"\
    abcd\"));\nconsole.log(get_closest_vowel(\"abcdeee\"));\nconsole.log(get_closest_vowel(\"\
    abcdeeee\"));\nconsole.log(get_closest_vowel(\"abcdeeeee\"));\nconsole.log(get_closest_vowel(\"\
    abcdeeeeee\"));\nconsole.log(get_closest_vowel(\"abcdeeeeeee\"));\nconsole.log(get_closest_vowel(\"\
    abcdeeeeeeee\"));\nconsole.log(get_closest_vowel(\"abcdeeeeeeeee\"));\nconsole.log(get_closest_vowel(\"\
    abcdeeeeeeeeee\"));\nconsole.log(get_closest_vowel(\"abcdeeeeeeeeeee\"));\nconsole.log(get_closest_vowel(\"\
    abcdeeeeeeeeeeee\"));\nconsole.log(get_closest_vowel(\"abcdeeeeeeeeeeeee\"));\n\
    console.log(get_closest_vowel(\"abcdeeeeeeeeeeeeee\"));\nconsole.log(get_closest_vowel(\"\
    abcdeeeeeeeeeeeeeee\"));\nconsole.log(get_closest_vowel(\"abcdeeeeeeeeeeeeeeee\"\
    ));\nconsole.log(get_closest_vowel(\"abcdeeeeeeeeeeeeeeeee\"));\nconsole.log(get_closest_vowel(\"\
    abcdeeeeeeeeeeeeeeeeee\"));\nconsole.log(get_clos\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp9_p9w3yc.ts(41,1): error TS1005: '','' expected.

    ../../../../tmp/tmp9_p9w3yc.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660334609
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestVowelIndex = -1;\n    let closestConsonantIndex = -1;\n\
    \    let closestConsonant = '';\n    let vowelIndex = -1;\n    let consonantIndex\
    \ = -1;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowelIndex = i;\n            if (closestConsonantIndex\
    \ !== -1) {\n                if (vowelIndex > closestConsonantIndex) {\n     \
    \               closestVowel = word[i];\n                    closestVowelIndex\
    \ = i;\n                    break;\n                }\n            }\n       \
    \ } else {\n            consonantIndex = i;\n            if (closestVowelIndex\
    \ !== -1) {\n                if (consonantIndex < closestVowelIndex) {\n     \
    \               closestConsonant = word[i];\n                    closestConsonantIndex\
    \ = i;\n                }\n            }\n        }\n    }\n    return closestVowel;\n\
    }\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpspy18825.ts(49,32): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpspy18825.ts(50,1): error TS1005: '','' expected.

    ../../../../tmp/tmpspy18825.ts(50,9): error TS1005: '','' expected.

    '
  timestamp: 1660334609
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let closestVowel = '';\n \
    \   let closestDistance = word.length;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i < closestDistance)\
    \ {\n                closestDistance = i;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmp4l7c4xb3.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4l7c4xb3.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    e

    a


    '
  timestamp: 1660334609
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr\
    \ = word.split('');\n    let result = '';\n    let vowelIndex = 0;\n    let consonantIndex\
    \ = 0;\n    let distance = 0;\n    let minDistance = word.length;\n    for (let\
    \ i = 0; i < wordArr.length; i++) {\n        if (vowels.indexOf(wordArr[i]) !==\
    \ -1) {\n            vowelIndex = i;\n            for (let j = vowelIndex; j <\
    \ wordArr.length; j++) {\n                if (vowels.indexOf(wordArr[j]) === -1)\
    \ {\n                    consonantIndex = j;\n                    distance = consonantIndex\
    \ - vowelIndex;\n                    if (distance < minDistance) {\n         \
    \               minDistance = distance;\n                        result = wordArr[vowelIndex];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('he'));\n\
    console.log(get_closest_vowel('helicopter'));\nconsole.log(get_closest_vowel('xray'));\n\
    console.log(get_closest_vowel('rhythm'));\nconsole.log(get_closest_vowel('zebra'));\n\
    console.log(get_closest_vowel('zoom'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoozoo'));\nconsole.log(get_closest_vowel('zoozoozoozoo'));\n\
    console.log(get_closest_vowel('zoozoozoozoozoozoozoozoozoozoozoozoozoozoozoozoozoozoozoozoozoozoozoozoozoozoozoozoozooz\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmphbcekfxx.ts(43,120): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmphbcekfxx.ts(44,1): error TS1005: '','' expected.

    ../../../../tmp/tmphbcekfxx.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660334609
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let closestVowel = '';\n \
    \   let closestDistance = 0;\n    for (let i = 0; i < word.length; i++) {\n  \
    \      if (vowels.indexOf(word[i]) !== -1) {\n            let distance = word.length\
    \ - i;\n            if (distance > closestDistance) {\n                closestDistance\
    \ = distance;\n                closestVowel = word[i];\n            }\n      \
    \  }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('abcd'));\n\
    console.log(get_closest_vowel('abcdeg'));\nconsole.log(get_closest_vowel('abcdegi'));\n\
    console.log(get_closest_vowel('abcdegia'));\nconsole.log(get_closest_vowel('abcdegiaa'));\n\
    console.log(get_closest_vowel('abcdegiaaa'));\nconsole.log(get_closest_vowel('abcdegiaaaa'));\n\
    console.log(get_closest_vowel('abcdegiaaaaa'));\nconsole.log(get_closest_vowel('abcdegiaaaaaa'));\n\
    console.log(get_closest_vowel('abcdegiaaaaaaa'));\nconsole.log(get_closest_vowel('abcdegiaaaaaaaa'));\n\
    console.log(get_closest_vowel('abcdegiaaaaaaaaa'));\nconsole.log(get_closest_vowel('abcdegiaaaaaaaaaa'));\n\
    console.log(get_closest_vowel('abcdegiaaaaaaaaaaa'));\nconsole.log(get_closest_vowel('abcdegiaaaaaaaaaaaa'));\n\
    console.log(get_closest_vowel('abcdegiaaaaaaaaaaaaa'));\nconsole.log(get_closest_vowel('abcdegiaaaaaaaaaaaaaa'));\n\
    console.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpson7poiu.ts(40,9): error TS1003: Identifier expected.

    '
  timestamp: 1660334609
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    let closestDistance = 0;\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.indexOf(word[i]) != -1) {\n            let distance = word.length\
    \ - i;\n            if (distance < closestDistance || closestDistance == 0) {\n\
    \                closestDistance = distance;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"\
    hello\"));\nconsole.log(get_closest_vowel(\"there\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"why\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"rhythm\"));\nconsole.log(get_closest_vowel(\"\
    \"));\nconsole.log(get_closest_vowel(\"qwerty\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"why\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"rhythm\"));\nconsole.log(get_closest_vowel(\"\
    \"));\nconsole.log(get_closest_vowel(\"qwerty\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"why\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"rhythm\"));\nconsole.log(get_closest_vowel(\"\
    \"));\nconsole.log(get_closest_vowel(\"qwerty\"));\nconsole.\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpl50reejr.ts(43,9): error TS1003: Identifier expected.

    '
  timestamp: 1660334609
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let index = word.length - 1;\n    while (index >= 0) {\n        if\
    \ (vowels.includes(word[index])) {\n            result = word[index];\n      \
    \      break;\n        }\n        index--;\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('abcd'));\n\
    console.log(get_closest_vowel('abcde'));\nconsole.log(get_closest_vowel('abcdea'));\n\
    console.log(get_closest_vowel('abcdeae'));\nconsole.log(get_closest_vowel('abcdeaei'));\n\
    console.log(get_closest_vowel('abcdeaeio'));\nconsole.log(get_closest_vowel('abcdeaeiou'));\n\
    console.log(get_closest_vowel('abcdeaeioua'));\nconsole.log(get_closest_vowel('abcdeaeiouae'));\n\
    console.log(get_closest_vowel('abcdeaeiouaei'));\nconsole.log(get_closest_vowel('abcdeaeiouaeio'));\n\
    console.log(get_closest_vowel('abcdeaeiouaeiou'));\nconsole.log(get_closest_vowel('abcdeaeiouaeioua'));\n\
    console.log(get_closest_vowel('abcdeaeiouaeiouae'));\nconsole.log(get_closest_vowel('abcdeaeiouaeiouaei'));\n\
    console.log(get_closest_vowel('abcdeaeiouaeiouaeio'));\nconsole.log(get_closest_vowel('abcdeaeiouaeiouaeiou'));\n\
    console.log(get_closest_vowel('abcdeaeiouae\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp5619s5a8.ts(38,44): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp5619s5a8.ts(39,1): error TS1005: '','' expected.

    ../../../../tmp/tmp5619s5a8.ts(39,9): error TS1005: '','' expected.

    '
  timestamp: 1660334609
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let closestVowel = '';\n \
    \   let closestDistance = word.length;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0 && i\
    \ < word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) === -1\
    \ && vowels.indexOf(word[i + 1]) === -1) {\n                    if (i < closestDistance)\
    \ {\n                        closestDistance = i;\n                        closestVowel\
    \ = word[i];\n                    }\n                }\n            }\n      \
    \  }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('codewars'));\nconsole.log(get_closest_vowel('sensual'));\n\
    console.log(get_closest_vowel('rhythm'));\nconsole.log(get_closest_vowel('grrrrgh!'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aaeeouu'));\n\
    console.log(get_closest_vowel('aeiouuu'));\nconsole.log(get_closest_vowel('aeiouuuu'));\n\
    console.log(get_closest_vowel('aeiouuuuu'));\nconsole.log(get_closest_vowel('aeiouuuuuu'));\n\
    console.log(get_closest_vowel('aeiouuuuuuu'));\nconsole.log(get_closest_vowel('aeiouuuuuuuu'));\n\
    console.log(get_closest_vowel('aeiouuuuuuuuu'));\nconsole.log(get_closest_vowel('aeiouuuuuuuuuu'));\n\
    console.log(get_closest\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp22q5g0fp.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmp22q5g0fp.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334609
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let index\
    \ = word.length - 1;\n    let vowel = '';\n    while (index >= 0) {\n        if\
    \ (vowels.includes(word[index])) {\n            vowel = word[index];\n       \
    \     index--;\n            break;\n        }\n        index--;\n    }\n    while\
    \ (index >= 0) {\n        if (vowels.includes(word[index])) {\n            return\
    \ word[index];\n        }\n        index--;\n    }\n    return vowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('tomorrow'));\nconsole.log(get_closest_vowel('rhythm'));\n\
    console.log(get_closest_vowel('grrrrreat'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('moo'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('ae\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpw7_6t30z.ts(46,34): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpw7_6t30z.ts(47,1): error TS1005: '','' expected.

    ../../../../tmp/tmpw7_6t30z.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660334609
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let distance = 0;\n    let distance_to_vowel = 0;\n    let distance_to_consonant\
    \ = 0;\n    let consonant_index = 0;\n    let vowel_index = 0;\n    for (let i\
    \ = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1)\
    \ {\n            vowel_index = i;\n            break;\n        }\n    }\n    for\
    \ (let i = vowel_index - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ === -1) {\n            consonant_index = i;\n            break;\n        }\n\
    \    }\n    distance_to_vowel = vowel_index - consonant_index;\n    distance_to_consonant\
    \ = word.length - vowel_index;\n    if (distance_to_vowel < distance_to_consonant)\
    \ {\n        distance = distance_to_vowel;\n        result = word[vowel_index];\n\
    \    } else {\n        distance = distance_to_consonant;\n        result = word[vowel_index];\n\
    \    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpswq_qgnk.ts(48,32): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpswq_qgnk.ts(49,1): error TS1005: '','' expected.

    ../../../../tmp/tmpswq_qgnk.ts(49,9): error TS1005: '','' expected.

    '
  timestamp: 1660334609
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let min = word.length;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0 && i\
    \ < word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) === -1\
    \ && vowels.indexOf(word[i + 1]) === -1) {\n                    if (i < min) {\n\
    \                        min = i;\n                        result = word[i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmp1vj_956s.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1vj_956s.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e




    '
  timestamp: 1660334610
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr\
    \ = word.split('');\n    let result = '';\n    let index = 0;\n    let distance\
    \ = 0;\n    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
    \ > -1) {\n            if (i === wordArr.length - 1) {\n                continue;\n\
    \            }\n            if (vowels.indexOf(wordArr[i + 1]) > -1) {\n     \
    \           continue;\n            }\n            if (distance === 0) {\n    \
    \            distance = wordArr.length - 1 - i;\n                index = i;\n\
    \            } else {\n                if (wordArr.length - 1 - i < distance)\
    \ {\n                    distance = wordArr.length - 1 - i;\n                \
    \    index = i;\n                }\n            }\n        }\n    }\n    if (distance\
    \ > 0) {\n        result = wordArr[index];\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('aaaaa'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmp_927xlbg.js:48:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_927xlbg.js:60:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e





    '
  timestamp: 1660334610
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let index = word.length - 1;\n    while (index >= 0) {\n        if\
    \ (vowels.includes(word[index])) {\n            result = word[index];\n      \
    \      break;\n        }\n        index--;\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpzqe7mxec.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzqe7mxec.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o

    e

    u


    '
  timestamp: 1660334610
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    let closestVowel = '';\n    let closestDistance\
    \ = 0;\n    let currentDistance = 0;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            for (let j = i;\
    \ j < word.length; j++) {\n                if (consonants.indexOf(word[j]) !==\
    \ -1) {\n                    currentDistance = j - i;\n                    if\
    \ (currentDistance > closestDistance) {\n                        closestDistance\
    \ = currentDistance;\n                        closestVowel = word[i];\n      \
    \              }\n                }\n            }\n        }\n    }\n    return\
    \ closestVowel;\n}\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('zxcvbnm'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('zxcvbnm'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('zxcvbnm'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('zxcvbnm'));\n\
    console.log(get_closest\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpvhgveia3.ts(41,1): error TS1005: '','' expected.

    ../../../../tmp/tmpvhgveia3.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660334609
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            let distance\
    \ = word.length - i;\n            if (distance < closestDistance) {\n        \
    \        closestDistance = distance;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_v\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpojn6t4m3.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmpojn6t4m3.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334609
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestIndex = word.length;\n    for (let i = word.length - 1;\
    \ i >= 0; i--) {\n        if (vowels.includes(word[i])) {\n            if (i <\
    \ closestIndex) {\n                closestIndex = i;\n                closestVowel\
    \ = word[i];\n            }\n        }\n    }\n    return closestVowel;\n}\n\n\
    console.log(get_closest_vowel('abcd'));\nconsole.log(get_closest_vowel('abcdeee'));\n\
    console.log(get_closest_vowel('abcdeeee'));\nconsole.log(get_closest_vowel('abcdeeeee'));\n\
    console.log(get_closest_vowel('abcdeeeeee'));\nconsole.log(get_closest_vowel('abcdeeeeeee'));\n\
    console.log(get_closest_vowel('abcdeeeeeeee'));\nconsole.log(get_closest_vowel('abcdeeeeeeeee'));\n\
    console.log(get_closest_vowel('abcdeeeeeeeeee'));\nconsole.log(get_closest_vowel('abcdeeeeeeeeeee'));\n\
    console.log(get_closest_vowel('abcdeeeeeeeeeeee'));\nconsole.log(get_closest_vowel('abcdeeeeeeeeeeeee'));\n\
    console.log(get_closest_vowel('abcdeeeeeeeeeeeeee'));\nconsole.log(get_closest_vowel('abcdeeeeeeeeeeeeeee'));\n\
    console.log(get_closest_vowel('abcdeeeeeeeeeeeeeeee'));\nconsole.log(get_closest_vowel('abcdeeeeeeeeeeeeeeeee'));\n\
    console.log(get_closest_vowel('abcdeeeeeeeeeeeeeeeeee'));\nconsole.log(get_closest\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpbyeakf3r.ts(40,1): error TS1005: '','' expected.

    ../../../../tmp/tmpbyeakf3r.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660334610
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr\
    \ = word.split('');\n    let vowelIndex = 0;\n    let distance = 0;\n    let closestVowel\
    \ = '';\n    for (let i = 0; i < wordArr.length; i++) {\n        if (vowels.includes(wordArr[i]))\
    \ {\n            vowelIndex = i;\n            for (let j = vowelIndex; j < wordArr.length;\
    \ j++) {\n                if (!vowels.includes(wordArr[j])) {\n              \
    \      distance = j - vowelIndex;\n                    closestVowel = wordArr[vowelIndex];\n\
    \                    break;\n                }\n            }\n        }\n   \
    \ }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpmuktbr6d.js:49:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmuktbr6d.js:61:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    e















    '
  timestamp: 1660334615
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr\
    \ = word.split('');\n    let vowelIndex = wordArr.length;\n    let vowel = '';\n\
    \    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.includes(wordArr[i]))\
    \ {\n            vowelIndex = i;\n            vowel = wordArr[i];\n          \
    \  break;\n        }\n    }\n    for (let i = vowelIndex - 1; i >= 0; i--) {\n\
    \        if (!vowels.includes(wordArr[i])) {\n            return vowel;\n    \
    \    }\n    }\n    return '';\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou')\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpbngot3al.ts(44,1): error TS1005: '','' expected.

    ../../../../tmp/tmpbngot3al.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660334614
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let counter = 0;\n    for (let i = word.length - 1; i >= 0; i--)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            result = word[i];\n\
    \            counter++;\n        }\n        if (counter === 2) {\n           \
    \ break;\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmpynozvbr2.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpynozvbr2.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e


    o


    '
  timestamp: 1660334615
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestVowelIndex = word.length;\n    for (let i = word.length\
    \ - 1; i >= 0; i--) {\n        if (vowels.includes(word[i])) {\n            if\
    \ (i < closestVowelIndex) {\n                closestVowel = word[i];\n       \
    \         closestVowelIndex = i;\n            }\n        }\n    }\n    return\
    \ closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmpdcnzebra.js:44:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdcnzebra.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    e

    a


    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    '
  timestamp: 1660334590
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            let distance\
    \ = word.length - i;\n            if (distance < closestDistance) {\n        \
    \        closestDistance = distance;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"\
    hello\"));\nconsole.log(get_closest_vowel(\"there\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"why\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_clos\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp4isrvk9h.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmp4isrvk9h.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334615
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let closestVowel = '';\n \
    \   let closestDistance = word.length;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            for (let j = word.length\
    \ - 1; j > i; j--) {\n                if (vowels.indexOf(word[j]) === -1) {\n\
    \                    if (j - i < closestDistance) {\n                        closestDistance\
    \ = j - i;\n                        closestVowel = word[i];\n                \
    \    }\n                    break;\n                }\n            }\n       \
    \ }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('abcd'));\n\
    console.log(get_closest_vowel('abce'));\nconsole.log(get_closest_vowel('abcei'));\n\
    console.log(get_closest_vowel('abceio'));\nconsole.log(get_closest_vowel('abcdeio'));\n\
    console.log(get_closest_vowel('abcdeiou'));\nconsole.log(get_closest_vowel('abcdeio'));\n\
    console.log(get_closest_vowel('abcdeio'));\nconsole.log(get_closest_vowel('abcdeio'));\n\
    console.log(get_closest_vowel('abcdeio'));\nconsole.log(get_closest_vowel('abcdeio'));\n\
    console.log(get_closest_vowel('abcdeio'));\nconsole.log(get_closest_vowel('abcdeio'));\n\
    console.log(get_closest_vowel('abcdeio'));\nconsole.log(get_closest_vowel('abcdeio'));\n\
    console.log(get_closest_vowel('abcdeio'));\nconsole.log(get_closest_vowel('abcdeio'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpqzn25vsi.js:48:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqzn25vsi.js:60:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    '
  timestamp: 1660334616
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let index = word.length -\
    \ 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index]) >= 0)\
    \ {\n            if (index > 0 && vowels.indexOf(word[index - 1]) < 0) {\n   \
    \             return word[index];\n            }\n            if (index < word.length\
    \ - 1 && vowels.indexOf(word[index + 1]) < 0) {\n                return word[index];\n\
    \            }\n        }\n        index--;\n    }\n    return '';\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('world'));\nconsole.log(get_closest_vowel('apple'));\n\
    console.log(get_closest_vowel('a'));\nconsole.log(get_closest_vowel('b'));\nconsole.log(get_closest_vowel('c'));\n\
    console.log(get_closest_vowel('d'));\nconsole.log(get_closest_vowel('e'));\nconsole.log(get_closest_vowel('f'));\n\
    console.log(get_closest_vowel('g'));\nconsole.log(get_closest_vowel('h'));\nconsole.log(get_closest_vowel('i'));\n\
    console.log(get_closest_vowel('j'));\nconsole.log(get_closest_vowel('k'));\nconsole.log(get_closest_vowel('l'));\n\
    console.log(get_closest_vowel('m'));\nconsole.log(get_closest_vowel('n'));\nconsole.log(get_closest_vowel('o'));\n\
    console.log(get_closest_vowel('p'));\nconsole.log(get_closest_vowel('q'));\nconsole.log(get_closest_\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_x27y5he.ts(45,1): error TS1005: '','' expected.

    ../../../../tmp/tmp_x27y5he.ts(45,9): error TS1005: '','' expected.

    '
  timestamp: 1660334615
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let closestVowel = '';\n \
    \   let closestIndex = word.length;\n    for (let i = word.length - 1; i >= 0;\
    \ i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i < closestIndex)\
    \ {\n                closestIndex = i;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aei\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp0dxmkazw.ts(41,35): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp0dxmkazw.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmp0dxmkazw.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334616
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let closestVowel = '';\n \
    \   let closestVowelIndex = word.length;\n    for (let i = word.length - 1; i\
    \ >= 0; i--) {\n        if (vowels.indexOf(word[i]) > -1) {\n            if (i\
    \ < closestVowelIndex) {\n                closestVowel = word[i];\n          \
    \      closestVowelIndex = i;\n            }\n        }\n    }\n    return closestVowel;\n\
    }\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_clos\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmprvukm2e0.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmprvukm2e0.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334615
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    const vowels = ['a', 'e', 'i', 'o', 'u'];\n    const\
    \ wordArr = word.split('');\n    let vowelIndex = -1;\n    let vowel = '';\n \
    \   for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.includes(wordArr[i]))\
    \ {\n            vowelIndex = i;\n            vowel = wordArr[i];\n          \
    \  break;\n        }\n    }\n    if (vowelIndex === -1) {\n        return '';\n\
    \    }\n    for (let i = vowelIndex - 1; i >= 0; i--) {\n        if (!vowels.includes(wordArr[i]))\
    \ {\n            return vowel;\n        }\n    }\n    return '';\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('world'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('example'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('rhythm'));\nconsole.log(get_closest_vowel('beautiful'));\n\
    console.log(get_closest_vowel('beauty'));\nconsole.log(get_closest_vowel('beau'));\n\
    console.log(get_closest_vowel('beaut'));\nconsole.log(get_closest_vowel('bea'));\n\
    console.log(get_closest_vowel('b'));\nconsole.log(get_closest_vowel('aeiouaeiou'));\n\
    console.log(get_closest_vowel('aeiouaeiouaeiou'));\nconsole.log(get_closest_vowel('aeiouaeiouaeiouaeiou'));\n\
    console.log(get_closest_vowel\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpip0_ru2n.ts(46,1): error TS1005: '','' expected.

    ../../../../tmp/tmpip0_ru2n.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660334615
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            let distance\
    \ = word.length - i;\n            if (distance < closestDistance) {\n        \
    \        closestDistance = distance;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_v\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpojn6t4m3.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmpojn6t4m3.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334609
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let closest = word.length;\n    for (let i = word.length - 1; i >=\
    \ 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i\
    \ < closest) {\n                closest = i;\n                result = word[i];\n\
    \            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmp9hf70e6w.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9hf70e6w.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e


    a


    '
  timestamp: 1660334603
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestIndex = word.length;\n    for (let i = word.length - 1;\
    \ i >= 0; i--) {\n        if (vowels.includes(word[i])) {\n            if (i >\
    \ 0 && !vowels.includes(word[i - 1])) {\n                if (i < closestIndex)\
    \ {\n                    closestIndex = i;\n                    closestVowel =\
    \ word[i];\n                }\n            }\n        }\n    }\n    return closestVowel;\n\
    }\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpy4m1ougx.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334616
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestVowelIndex = 0;\n    let wordLength = word.length;\n \
    \   let wordArray = word.split('');\n    let wordArrayLength = wordArray.length;\n\
    \    let vowelIndex = 0;\n    let vowelIndexArray = [];\n    let vowelIndexArrayLength\
    \ = 0;\n    let vowelIndexArrayIndex = 0;\n    let vowelIndexArrayIndexMinusOne\
    \ = 0;\n    let vowelIndexArrayIndexPlusOne = 0;\n    let vowelIndexArrayIndexMinusOneValue\
    \ = '';\n    let vowelIndexArrayIndexPlusOneValue = '';\n    let vowelIndexArrayIndexMinusOneValueIsVowel\
    \ = false;\n    let vowelIndexArrayIndexPlusOneValueIsVowel = false;\n    let\
    \ vowelIndexArrayIndexMinusOneValueIsConsonant = false;\n    let vowelIndexArrayIndexPlusOneValueIsConsonant\
    \ = false;\n    let vowelIndexArrayIndexMinusOneValueIsVowelOrConsonant = false;\n\
    \    let vowelIndexArrayIndexPlusOneValueIsVowelOrConsonant = false;\n    let\
    \ vowelIndexArrayIndexMinusOneValueIsVowelOrConsonantAndNotEmpty = false;\n  \
    \  let vowelIndexArrayIndexPlusOneValueIsVowelOrConsonantAndNotEmpty = false;\n\
    \    let vowelIndexArrayIndexMinusOneValueIsVowelOrConsonantAndNotEmptyAndNotUndefined\
    \ = false;\n    let vowelIndexArrayIndexPlusOneValueIsVowelOrConsonantAndNotEmptyAndNotUndefined\
    \ = false;\n    let vowelIndexArrayIndexMinusOneValueIsVowelOrConsonantAndNotEmptyAndNotUndefinedAndNotNull\
    \ = false;\n    let vowelIndexArrayIndexPlusOneValueIsVowelOrConsonantAndNotEmptyAndNotUndefinedAndNotNull\
    \ = false;\n    let vowelIndexArrayIndexMinusOneValueIsVowelOrConsonantAndNotEmptyAndNotUndefinedAndNotNullAndNotNaN\
    \ = false;\n    let vowelIndexArrayIndexPlusOneValueIsVowelOrConsonantAndNotEmptyAndNotUndefinedAndNotNullAnd\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpex33p63p.ts(57,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660334616
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let min = Number.MAX_VALUE;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0\
    \ && i < word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) ===\
    \ -1 && vowels.indexOf(word[i + 1]) === -1) {\n                    if (i < min)\
    \ {\n                        min = i;\n                        result = word[i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('heaven'));\n\
    console.log(get_closest_vowel('apple'));\nconsole.log(get_closest_vowel('bacon'));\n\
    console.log(get_closest_vowel('a'));\nconsole.log(get_closest_vowel('e'));\nconsole.log(get_closest_vowel('i'));\n\
    console.log(get_closest_vowel('o'));\nconsole.log(get_closest_vowel('u'));\nconsole.log(get_closest_vowel('z'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp57hweebi.ts(43,35): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp57hweebi.ts(44,1): error TS1005: '','' expected.

    ../../../../tmp/tmp57hweebi.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660334615
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr\
    \ = word.split('');\n    let vowelIndex = wordArr.length;\n    let vowel = '';\n\
    \    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.includes(wordArr[i]))\
    \ {\n            vowelIndex = i;\n            vowel = wordArr[i];\n          \
    \  break;\n        }\n    }\n    for (let i = vowelIndex - 1; i >= 0; i--) {\n\
    \        if (!vowels.includes(wordArr[i])) {\n            return vowel;\n    \
    \    }\n    }\n    return '';\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('zxcvbnm'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('zxcvbnm'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('zxcvbnm'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('zxcvbnm'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('zxcvbnm'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('zxcvbnm'));\nconsole.log(get\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp5yu0lf_5.ts(44,1): error TS1005: '','' expected.

    ../../../../tmp/tmp5yu0lf_5.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660334616
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr\
    \ = word.split('');\n    let result = '';\n    let index = wordArr.length - 1;\n\
    \    while (index > 0) {\n        if (vowels.includes(wordArr[index])) {\n   \
    \         if (!vowels.includes(wordArr[index - 1])) {\n                result\
    \ = wordArr[index];\n                break;\n            }\n        }\n      \
    \  index--;\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'i'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpffh8phvv.js:49:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpffh8phvv.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'i',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o

    e


















    '
  timestamp: 1660334616
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let index = word.length\
    \ - 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index]) >= 0)\
    \ {\n            if (index > 0 && vowels.indexOf(word[index - 1]) < 0) {\n   \
    \             return word[index];\n            }\n            if (index < word.length\
    \ - 1 && vowels.indexOf(word[index + 1]) < 0) {\n                return word[index];\n\
    \            }\n        }\n        index--;\n    }\n    return \"\";\n}\n\nconsole.log(get_closest_vowel(\"\
    hello\"));\nconsole.log(get_closest_vowel(\"codewars\"));\nconsole.log(get_closest_vowel(\"\
    sessions\"));\nconsole.log(get_closest_vowel(\"parakeet\"));\nconsole.log(get_closest_vowel(\"\
    zoom\"));\nconsole.log(get_closest_vowel(\"rhythm\"));\nconsole.log(get_closest_vowel(\"\
    \"));\nconsole.log(get_closest_vowel(\"a\"));\nconsole.log(get_closest_vowel(\"\
    e\"));\nconsole.log(get_closest_vowel(\"i\"));\nconsole.log(get_closest_vowel(\"\
    o\"));\nconsole.log(get_closest_vowel(\"u\"));\nconsole.log(get_closest_vowel(\"\
    z\"));\nconsole.log(get_closest_vowel(\"zodiac\"));\nconsole.log(get_closest_vowel(\"\
    chruschtschov\"));\nconsole.log(get_closest_vowel(\"khrushchev\"));\nconsole.log(get_closest_vowel(\"\
    strength\"));\nconsole.log(get_closest_vowel(\"catchphrase\"));\nconsole.log(get_closest_vowel(\"\
    twelfthstreet\"));\nconsole.log(get_closest_\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp6ic4eauz.ts(44,1): error TS1005: '','' expected.

    ../../../../tmp/tmp6ic4eauz.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660334616
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr\
    \ = word.split('');\n    let result = '';\n    let vowelIndex = 0;\n    let consonantIndex\
    \ = 0;\n    let distance = 0;\n    let minDistance = word.length;\n    for (let\
    \ i = 0; i < wordArr.length; i++) {\n        if (vowels.indexOf(wordArr[i]) !==\
    \ -1) {\n            vowelIndex = i;\n            for (let j = i; j < wordArr.length;\
    \ j++) {\n                if (vowels.indexOf(wordArr[j]) === -1) {\n         \
    \           consonantIndex = j;\n                    distance = consonantIndex\
    \ - vowelIndex;\n                    if (distance < minDistance) {\n         \
    \               minDistance = distance;\n                        result = wordArr[vowelIndex];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result;\n}\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou')\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp666qgha7.ts(46,1): error TS1005: '','' expected.

    ../../../../tmp/tmp666qgha7.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660334616
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArray\
    \ = word.split('');\n    let vowelIndex = 0;\n    let vowel = '';\n    let consonantIndex\
    \ = 0;\n    let consonant = '';\n    let closestVowel = '';\n    let closestVowelIndex\
    \ = 0;\n    let closestConsonantIndex = 0;\n    let closestConsonant = '';\n \
    \   let closestDistance = 0;\n    let distance = 0;\n    let vowelFound = false;\n\
    \    let consonantFound = false;\n    for (let i = wordArray.length - 1; i >=\
    \ 0; i--) {\n        if (vowels.indexOf(wordArray[i]) > -1) {\n            vowelFound\
    \ = true;\n            vowelIndex = i;\n            vowel = wordArray[i];\n  \
    \      }\n        if (vowelFound) {\n            if (vowels.indexOf(wordArray[i])\
    \ === -1) {\n                consonantFound = true;\n                consonantIndex\
    \ = i;\n                consonant = wordArray[i];\n            }\n        }\n\
    \        if (vowelFound && consonantFound) {\n            distance = vowelIndex\
    \ - consonantIndex;\n            if (closestDistance === 0) {\n              \
    \  closestDistance = distance;\n                closestVowelIndex = vowelIndex;\n\
    \                closestVowel = vowel;\n                closestConsonantIndex\
    \ = consonantIndex;\n                closestConsonant = consonant;\n         \
    \   } else if (distance < closestDistance) {\n                closestDistance\
    \ = distance;\n                closestVowelIndex = vowelIndex;\n             \
    \   closestVowel = vowel;\n                closestConsonantIndex = consonantIndex;\n\
    \                closestConsonant = consonant;\n            }\n            vowelFound\
    \ = false;\n            consonantFound = false;\n        }\n    }\n    if (closestDistance\
    \ === 0) {\n        return '';\n    } else {\n        return closestVowel;\n \
    \   }\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp3gm6si0n.ts(62,32): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp3gm6si0n.ts(63,1): error TS1005: '','' expected.

    ../../../../tmp/tmp3gm6si0n.ts(63,9): error TS1005: '','' expected.

    '
  timestamp: 1660334616
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let index = word.length -\
    \ 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index]) >= 0)\
    \ {\n            if (index === 0) {\n                return '';\n            }\n\
    \            if (vowels.indexOf(word[index - 1]) < 0) {\n                return\
    \ word[index];\n            }\n        }\n        index--;\n    }\n    return\
    \ '';\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('apple'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'i'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmph1nfjpsj.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmph1nfjpsj.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'i',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o

    e



    '
  timestamp: 1660334616
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    const vowels = ['a', 'e', 'i', 'o', 'u'];\n    const\
    \ consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    let closestVowel = '';\n    let\
    \ closestVowelIndex = 0;\n    let closestConsonantIndex = 0;\n    for (let i =\
    \ 0; i < word.length; i++) {\n        if (vowels.includes(word[i])) {\n      \
    \      for (let j = i + 1; j < word.length; j++) {\n                if (consonants.includes(word[j]))\
    \ {\n                    if (j - i > closestVowelIndex - closestConsonantIndex)\
    \ {\n                        closestVowelIndex = i;\n                        closestConsonantIndex\
    \ = j;\n                        closestVowel = word[i];\n                    }\n\
    \                    break;\n                }\n            }\n        }\n   \
    \ }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('zxcvbnm'));\nconsole.log(get_closest_vowel('zxcvbnmasdfghjklqwertyuiop'));\n\
    console.log(get_closest_vowel('zxcvbnmasdfghjklqwertyuiopzxcvbnmasdfghjklqwertyuiopzxcvbnmasdfghjklqwertyuiopzxcvbnmasdfghjklqwertyuiopzxcvbnmasdfghjklqwertyuiopzxcvbn\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp5lpy9b2b.ts(37,168): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp5lpy9b2b.ts(38,1): error TS1005: '','' expected.

    ../../../../tmp/tmp5lpy9b2b.ts(38,9): error TS1005: '','' expected.

    '
  timestamp: 1660334616
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let result = '';\n    let\
    \ min = Infinity;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            let left = word.slice(0, i);\n            let right =\
    \ word.slice(i + 1);\n            if (left.length > 0 && right.length > 0) {\n\
    \                let leftLast = left[left.length - 1];\n                let rightFirst\
    \ = right[0];\n                if (vowels.indexOf(leftLast) === -1 && vowels.indexOf(rightFirst)\
    \ === -1) {\n                    let distance = right.length;\n              \
    \      if (distance < min) {\n                        min = distance;\n      \
    \                  result = word[i];\n                    }\n                }\n\
    \            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('abracadabra'));\n\
    console.log(get_closest_vowel('shopper'));\nconsole.log(get_closest_vowel('flipflop'));\n\
    console.log(get_closest_vowel('happiest'));\nconsole.log(get_closest_vowel('mellow'));\n\
    console.log(get_closest_vowel('yellow'));\nconsole.log(get_closest_vowel('rhythm'));\n\
    console.log(get_closest_vowel('programmer'));\nconsole.log(get_closest_vowel('e'));\n\
    console.log(get_closest_vowel('i'));\nconsole.log(get_closest_vowel('o'));\nconsole.log(get_closest_vowel('u'));\n\
    console.log(get_closest_vowel('a'));\nconsole.log(get_closest_vowel('b'));\nconsole.log(get_closest_vowel('c'));\n\
    console.log(get_closest\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpvtuwcw3p.ts(47,1): error TS1005: '','' expected.

    ../../../../tmp/tmpvtuwcw3p.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1660334616
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) > -1) {\n            if (i > 0 &&\
    \ i < word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) ===\
    \ -1 && vowels.indexOf(word[i + 1]) === -1) {\n                    if (i < closestDistance)\
    \ {\n                        closestDistance = i;\n                        closestVowel\
    \ = word[i];\n                    }\n                }\n            }\n      \
    \  }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"hello\"\
    ));\nconsole.log(get_closest_vowel(\"codewars\"));\nconsole.log(get_closest_vowel(\"\
    sapientia\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    b\"));\nconsole.log(get_closest_vowel(\"q\"));\nconsole.log(get_closest_vowel(\"\
    \"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmpgwlc999g.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgwlc999g.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    o

    a





    '
  timestamp: 1660334616
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let index = word.length - 1;\n    let found = false;\n    while (index\
    \ >= 0 && !found) {\n        if (vowels.indexOf(word[index]) !== -1) {\n     \
    \       result = word[index];\n            found = true;\n        }\n        index--;\n\
    \    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmp8kkm0ti9.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8kkm0ti9.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o


    u


    '
  timestamp: 1660334616
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let closestVowel = '';\n \
    \   let closestDistance = word.length;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) > -1) {\n            if (i > 0 && i <\
    \ word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) === -1 &&\
    \ vowels.indexOf(word[i + 1]) === -1) {\n                    if (i < closestDistance)\
    \ {\n                        closestDistance = i;\n                        closestVowel\
    \ = word[i];\n                    }\n                }\n            }\n      \
    \  }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('codewars'));\nconsole.log(get_closest_vowel('sensual'));\n\
    console.log(get_closest_vowel('rhythm'));\nconsole.log(get_closest_vowel('grrrrgh!'));\n\
    console.log(get_closest_vowel('shhhh'));\nconsole.log(get_closest_vowel('gtfo'));\n\
    console.log(get_closest_vowel('coffee'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aaaeeeiiiioooouuu'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('abcd'));\nconsole.log(get_closest_vowel('abcde'));\n\
    console.log(get_closest_vowel('abcdea'));\nconsole.log(get_closest_vowel('abcdeai'));\n\
    console.log(get_closest_vowel('abcdeao'));\nconsole.log(get_closest_vowel('abcde\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpbmhsjw4e.ts(42,37): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpbmhsjw4e.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmpbmhsjw4e.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334616
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let result = \"\";\n   \
    \ let last_vowel = -1;\n    for (let i = word.length - 1; i >= 0; i--) {\n   \
    \     if (vowels.indexOf(word[i]) > -1) {\n            last_vowel = i;\n     \
    \       break;\n        }\n    }\n    for (let i = last_vowel - 1; i >= 0; i--)\
    \ {\n        if (vowels.indexOf(word[i]) == -1) {\n            result = word[last_vowel];\n\
    \            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"\
    hello\"));\nconsole.log(get_closest_vowel(\"codewars\"));\nconsole.log(get_closest_vowel(\"\
    sensual\"));\nconsole.log(get_closest_vowel(\"rhythm\"));\nconsole.log(get_closest_vowel(\"\
    grrrrgh!\"));\nconsole.log(get_closest_vowel(\"\"));\nconsole.log(get_closest_vowel(\"\
    a\"));\nconsole.log(get_closest_vowel(\"e\"));\nconsole.log(get_closest_vowel(\"\
    ou\"));\nconsole.log(get_closest_vowel(\"zodiac\"));\nconsole.log(get_closest_vowel(\"\
    why\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'i'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmp_fytp6qa.js:43:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_fytp6qa.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'i',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o

    a

    a







    a


    '
  timestamp: 1660334621
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            closestVowel = word[i];\n            break;\n       \
    \ }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"hello\"\
    ));\nconsole.log(get_closest_vowel(\"bcd\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"why\"));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpr3rqbh9c.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr3rqbh9c.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o


    u


    '
  timestamp: 1660334622
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let last_consonant = '';\n    let last_vowel = '';\n    let last_vowel_index\
    \ = 0;\n    let last_consonant_index = 0;\n    for (let i = word.length - 1; i\
    \ >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            last_vowel\
    \ = word[i];\n            last_vowel_index = i;\n            if (last_consonant\
    \ !== '') {\n                result = last_vowel;\n                break;\n  \
    \          }\n        } else {\n            last_consonant = word[i];\n      \
    \      last_consonant_index = i;\n            if (last_vowel !== '') {\n     \
    \           result = last_vowel;\n                break;\n            }\n    \
    \    }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('heaven'));\nconsole.log(get_closest_vowel('hollow'));\n\
    console.log(get_closest_vowel('h'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('rhythm'));\n\
    console.log(get_closest_vowel('strength'));\nconsole.log(get_closest_vowel('moon'));\n\
    console.log(get_closest_vowel('misty'));\nconsole.log(get_closest_vowel('beautiful'));\n\
    console.log(get_closest_vowel('shy'));\nconsole.log(get_closest_vowel('sigh'));\n\
    console.log(get_closest_vowel('sighs'));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmp69hokpg7.js:53:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp69hokpg7.js:65:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o

    e

    o





    e

    o

    i

    u


    i

    i

    '
  timestamp: 1660334622
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let i = word.length - 1;\n\
    \    while (i >= 0) {\n        if (vowels.indexOf(word[i]) !== -1) {\n       \
    \     if (i === word.length - 1) {\n                i--;\n                continue;\n\
    \            }\n            if (vowels.indexOf(word[i + 1]) === -1) {\n      \
    \          return word[i];\n            }\n        }\n        i--;\n    }\n  \
    \  return \"\";\n}\n\nconsole.log(get_closest_vowel(\"hello\"));\nconsole.log(get_closest_vowel(\"\
    bcd\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    why\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmplh4nfttl.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplh4nfttl.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e




    '
  timestamp: 1660334622
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let index = word.length - 1;\n    let found = false;\n    while (index\
    \ >= 0 && !found) {\n        if (vowels.indexOf(word[index]) >= 0) {\n       \
    \     result = word[index];\n            found = true;\n        }\n        index--;\n\
    \    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpx5yaqh5s.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmpx5yaqh5s.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334622
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let distance = word.length;\n    for (let i = word.length - 1; i\
    \ >= 0; i--) {\n        if (vowels.indexOf(word[i]) > -1) {\n            if (i\
    \ > 0 && vowels.indexOf(word[i - 1]) === -1) {\n                if (i < distance)\
    \ {\n                    distance = i;\n                    result = word[i];\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\n\n\
    console.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('codewars'));\n\
    console.log(get_closest_vowel('salesperson'));\nconsole.log(get_closest_vowel('zephyr'));\n\
    console.log(get_closest_vowel('zephyr'));\nconsole.log(get_closest_vowel('zephyr'));\n\
    console.log(get_closest_vowel('zephyr'));\nconsole.log(get_closest_vowel('zephyr'));\n\
    console.log(get_closest_vowel('zephyr'));\nconsole.log(get_closest_vowel('zephyr'));\n\
    console.log(get_closest_vowel('zephyr'));\nconsole.log(get_closest_vowel('zephyr'));\n\
    console.log(get_closest_vowel('zephyr'));\nconsole.log(get_closest_vowel('zephyr'));\n\
    console.log(get_closest_vowel('zephyr'));\nconsole.log(get_closest_vowel('zephyr'));\n\
    console.log(get_closest_vowel('zephyr'));\nconsole.log(get_closest_vowel('zephyr'));\n\
    console.log(get_\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_az_zu2d.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmp_az_zu2d.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334622
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let index = word.length\
    \ - 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index]) >= 0)\
    \ {\n            if (index > 0 && vowels.indexOf(word[index - 1]) < 0) {\n   \
    \             return word[index];\n            }\n            if (index < word.length\
    \ - 1 && vowels.indexOf(word[index + 1]) < 0) {\n                return word[index];\n\
    \            }\n        }\n        index--;\n    }\n    return \"\";\n}\n\nconsole.log(get_closest_vowel(\"\
    hello\"));\nconsole.log(get_closest_vowel(\"zodiac\"));\nconsole.log(get_closest_vowel(\"\
    apple\"));\nconsole.log(get_closest_vowel(\"eee\"));\nconsole.log(get_closest_vowel(\"\
    \"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpigg0un4r.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpigg0un4r.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o

    a

    e



    '
  timestamp: 1660334623
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    const vowels = ['a', 'e', 'i', 'o', 'u'];\n    const\
    \ wordArr = word.split('');\n    let vowelIndex = -1;\n    for (let i = wordArr.length\
    \ - 1; i >= 0; i--) {\n        if (vowels.includes(wordArr[i])) {\n          \
    \  vowelIndex = i;\n            break;\n        }\n    }\n    if (vowelIndex ===\
    \ -1) {\n        return '';\n    }\n    for (let i = vowelIndex; i >= 0; i--)\
    \ {\n        if (!vowels.includes(wordArr[i])) {\n            return wordArr[vowelIndex];\n\
    \        }\n    }\n    return '';\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('rhythm'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zzz'));\n\
    console.log(get_closest_vowel('zzzzz'));\nconsole.log(get_closest_vowel('zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpska00i4h.ts(36,354): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpska00i4h.ts(37,1): error TS1005: '','' expected.

    ../../../../tmp/tmpska00i4h.ts(37,9): error TS1005: '','' expected.

    '
  timestamp: 1660334622
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let lastConsonant = '';\n    let lastVowel = '';\n    for (let i\
    \ = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1)\
    \ {\n            lastVowel = word[i];\n            if (lastConsonant !== '') {\n\
    \                closestVowel = lastVowel;\n                break;\n         \
    \   }\n        } else {\n            lastConsonant = word[i];\n        }\n   \
    \ }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmp94701wum.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp94701wum.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e




    '
  timestamp: 1660334623
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    var vowels = ['a', 'e', 'i', 'o', 'u'];\n    var index\
    \ = word.length - 1;\n    var vowel = '';\n    var consonant = '';\n    while\
    \ (index >= 0) {\n        if (vowels.indexOf(word[index]) >= 0) {\n          \
    \  vowel = word[index];\n            if (consonant) {\n                return\
    \ vowel;\n            }\n        } else {\n            consonant = word[index];\n\
    \            if (vowel) {\n                return vowel;\n            }\n    \
    \    }\n        index--;\n    }\n    return '';\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('zxcvbn'));\nconsole.log(get_closest_vowel('zxcvbnm'));\n\
    console.log(get_closest_vowel('zxcvbnma'));\nconsole.log(get_closest_vowel('zxcvbnmas'));\n\
    console.log(get_closest_vowel('zxcvbnmasd'));\nconsole.log(get_closest_vowel('zxcvbnmasdf'));\n\
    console.log(get_closest_vowel('zxcvbnmasdfg'));\nconsole.log(get_closest_vowel('zxcvbnmasdfgh'));\n\
    console.log(get_closest_vowel('zxcvbnmasdfghj'));\nconsole.log(get_closest_vowel('zxcvbnmasdfghjk'));\n\
    console.log(get_closest_vowel('zxcvbnmasdfghjkl'));\nconsole.log(get_cl\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpl9o771sb.ts(46,1): error TS1005: '','' expected.

    ../../../../tmp/tmpl9o771sb.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660334622
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) > -1) {\n            let distance\
    \ = word.length - i;\n            if (distance < closestDistance) {\n        \
    \        closestDistance = distance;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('abcd'));\n\
    console.log(get_closest_vowel('abcdeg'));\nconsole.log(get_closest_vowel('abcdegi'));\n\
    console.log(get_closest_vowel('abcdegia'));\nconsole.log(get_closest_vowel('abcdegiaa'));\n\
    console.log(get_closest_vowel('abcdegiaaa'));\nconsole.log(get_closest_vowel('abcdegiaaaa'));\n\
    console.log(get_closest_vowel('abcdegiaaaaa'));\nconsole.log(get_closest_vowel('abcdegiaaaaaa'));\n\
    console.log(get_closest_vowel('abcdegiaaaaaaa'));\nconsole.log(get_closest_vowel('abcdegiaaaaaaaa'));\n\
    console.log(get_closest_vowel('abcdegiaaaaaaaaa'));\nconsole.log(get_closest_vowel('abcdegiaaaaaaaaaa'));\n\
    console.log(get_closest_vowel('abcdegiaaaaaaaaaaa'));\nconsole.log(get_closest_vowel('abcdegiaaaaaaaaaaaa'));\n\
    console.log(get_closest_vowel('abcdegiaaaaaaaaaaaaa'));\nconsole.log(get_closest_vowel('ab\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpoims2ejw.ts(39,34): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpoims2ejw.ts(40,1): error TS1005: '','' expected.

    ../../../../tmp/tmpoims2ejw.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660334623
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let distance = word.length;\n    for (let i = word.length - 1; i\
    \ >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if\
    \ (i === word.length - 1) {\n                return '';\n            }\n     \
    \       if (vowels.indexOf(word[i + 1]) === -1) {\n                if (word.length\
    \ - i < distance) {\n                    distance = word.length - i;\n       \
    \             result = word[i];\n                }\n            }\n        }\n\
    \    }\n    return result;\n}\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpb5nh9_f5.js:49:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpb5nh9_f5.js:61:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '

















    '
  timestamp: 1660334622
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    let closestVowelIndex = word.length;\n    for (let i = word.length - 1;\
    \ i >= 0; i--) {\n        if (vowels.indexOf(word[i]) >= 0) {\n            if\
    \ (i < closestVowelIndex) {\n                closestVowel = word[i];\n       \
    \         closestVowelIndex = i;\n            }\n        }\n    }\n    return\
    \ closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"hello\"));\nconsole.log(get_closest_vowel(\"\
    there\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    why\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp7vg_ic8x.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmp7vg_ic8x.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334622
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            result = word[i];\n            break;\n        }\n  \
    \  }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpmk29kq_p.js:44:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmk29kq_p.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o

    e

    u


    u

    u

    u

    u

    u

    u

    u

    u

    u

    u

    u

    u

    u

    u

    u

    u

    u

    '
  timestamp: 1660334623
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let min = word.length;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0 && i\
    \ < word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) === -1\
    \ && vowels.indexOf(word[i + 1]) === -1) {\n                    if (i < min) {\n\
    \                        min = i;\n                        result = word[i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('abcd'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmprutpej4t.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprutpej4t.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e





    '
  timestamp: 1660334623
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let index\
    \ = word.length - 1;\n    let result = '';\n    while (index >= 0) {\n       \
    \ if (vowels.includes(word[index])) {\n            result = word[index];\n   \
    \         break;\n        }\n        index--;\n    }\n    return result;\n}\n\n\
    console.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpyrs6z5rj.js:47:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrs6z5rj.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o

    e

    u


    u


    u


    u


    u


    u


    u


    u


    u


    u


    '
  timestamp: 1660334623
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i < closestDistance)\
    \ {\n                closestDistance = i;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"\
    abcd\"));\nconsole.log(get_closest_vowel(\"abcde\"));\nconsole.log(get_closest_vowel(\"\
    abcdea\"));\nconsole.log(get_closest_vowel(\"abcdeai\"));\nconsole.log(get_closest_vowel(\"\
    abcdeaio\"));\nconsole.log(get_closest_vowel(\"abcdeaiou\"));\nconsole.log(get_closest_vowel(\"\
    abcdeaioua\"));\nconsole.log(get_closest_vowel(\"abcdeaiouae\"));\nconsole.log(get_closest_vowel(\"\
    abcdeaiouaei\"));\nconsole.log(get_closest_vowel(\"abcdeaiouaeio\"));\nconsole.log(get_closest_vowel(\"\
    abcdeaiouaeiou\"));\nconsole.log(get_closest_vowel(\"abcdeaiouaeioua\"));\nconsole.log(get_closest_vowel(\"\
    abcdeaiouaeiouae\"));\nconsole.log(get_closest_vowel(\"abcdeaiouaeiouaei\"));\n\
    console.log(get_closest_vowel(\"abcdeaiouaeiouaeio\"));\nconsole.log(get_closest_vowel(\"\
    abcdeaiouaeiouaeiou\"));\nconsole.log(get_closest_vowel(\"abcdeaiouaeiouaeioua\"\
    ));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_zfj0bml.ts(39,9): error TS1003: Identifier expected.

    '
  timestamp: 1660334623
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let min = word.length;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0 && i\
    \ < word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) === -1\
    \ && vowels.indexOf(word[i + 1]) === -1) {\n                    if (min > i) {\n\
    \                        min = i;\n                        result = word[i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result;\n}\n\nconsole.log(get_closest_vowel('hear'));\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('hello world'));\nconsole.log(get_closest_vowel('hello\
    \ world!'));\nconsole.log(get_closest_vowel('hello world!'));\nconsole.log(get_closest_vowel('hello\
    \ world!'));\nconsole.log(get_closest_vowel('hello world!'));\nconsole.log(get_closest_vowel('hello\
    \ world!'));\nconsole.log(get_closest_vowel('hello world!'));\nconsole.log(get_closest_vowel('hello\
    \ world!'));\nconsole.log(get_closest_vowel('hello world!'));\nconsole.log(get_closest_vowel('hello\
    \ world!'));\nconsole.log(get_closest_vowel('hello world!'));\nconsole.log(get_closest_vowel('hello\
    \ world!'));\nconsole.log(get_closest_vowel('hello world!'));\nconsole.log(get_closest_vowel('hello\
    \ world!'));\nconsole.log(get_closest_vowel('hello world!\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpyag6712o.ts(42,44): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpyag6712o.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmpyag6712o.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334623
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    let closestVowel = '';\n    let closestIndex\
    \ = -1;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ > -1) {\n            if (closestIndex > -1) {\n                if (i < closestIndex)\
    \ {\n                    closestVowel = word[i];\n                    closestIndex\
    \ = i;\n                }\n            } else {\n                closestVowel\
    \ = word[i];\n                closestIndex = i;\n            }\n        } else\
    \ if (consonants.indexOf(word[i]) > -1) {\n            if (closestIndex > -1)\
    \ {\n                return closestVowel;\n            }\n        }\n    }\n \
    \   return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'e'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpx5rxag6i.js:50:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx5rxag6i.js:62:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'e',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o

    e

    a


    a


    a


    a


    a


    '
  timestamp: 1660334623
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let minDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            let distance\
    \ = word.length - i;\n            if (distance < minDistance) {\n            \
    \    minDistance = distance;\n                result = word[i];\n            }\n\
    \        }\n    }\n    return result;\n}\nconsole.log(get_closest_vowel('hello'));\
    \ // e\nconsole.log(get_closest_vowel('world')); // o\nconsole.log(get_closest_vowel('apple'));\
    \ // e\nconsole.log(get_closest_vowel('bcd')); // ''\nconsole.log(get_closest_vowel('aeiou'));\
    \ // ''\nconsole.log(get_closest_vowel('why')); // y\nconsole.log(get_closest_vowel('a'));\
    \ // ''\nconsole.log(get_closest_vowel('b')); // ''\nconsole.log(get_closest_vowel('ab'));\
    \ // ''\nconsole.log(get_closest_vowel('ba')); // a\nconsole.log(get_closest_vowel('bb'));\
    \ // ''\nconsole.log(get_closest_vowel('bbb')); // ''\nconsole.log(get_closest_vowel('bbbb'));\
    \ // ''\nconsole.log(get_closest_vowel('bbbbb')); // ''\nconsole.log(get_closest_vowel('bbbbbb'));\
    \ // ''\nconsole.log(get_closest_vowel('bbbbbbb')); // ''\nconsole.log(get_closest_vowel('bbbbbbbb'));\
    \ // ''\nconsole.log(get_closest_vowel('bbbbbbbbb')); // ''\nconsole.\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp3z1t7u40.ts(40,9): error TS1003: Identifier expected.

    '
  timestamp: 1660334623
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let distance = 0;\n    let prev_char = '';\n    let curr_char = '';\n\
    \    let next_char = '';\n    let curr_distance = 0;\n    for (let i = 0; i <\
    \ word.length; i++) {\n        curr_char = word[i];\n        if (i > 0) {\n  \
    \          prev_char = word[i - 1];\n        }\n        if (i < word.length -\
    \ 1) {\n            next_char = word[i + 1];\n        }\n        if (vowels.indexOf(curr_char)\
    \ > -1) {\n            if (vowels.indexOf(prev_char) === -1 && vowels.indexOf(next_char)\
    \ === -1) {\n                curr_distance = i;\n                if (result ===\
    \ '') {\n                    result = curr_char;\n                    distance\
    \ = curr_distance;\n                } else {\n                    if (curr_distance\
    \ < distance) {\n                        result = curr_char;\n               \
    \         distance = curr_distance;\n                    }\n                }\n\
    \            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('abcd'));\n\
    console.log(get_closest_vowel('abcdi'));\nconsole.log(get_closest_vowel('abcdio'));\n\
    console.log(get_closest_vowel('abcdioe'));\nconsole.log(get_closest_vowel('abcdioeu'));\n\
    console.log(get_closest_vowel('abcdioeua'));\nconsole.log(get_closest_vowel('abcdioeuaa'));\n\
    console.log(get_closest_vowel('abcdioeuaaa'));\nconsole.log(get_closest_vowel('abcdioeuaaae'));\n\
    console.log(get_closest_vowel('\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp54jnckq9.ts(50,32): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp54jnckq9.ts(51,1): error TS1005: '','' expected.

    ../../../../tmp/tmp54jnckq9.ts(51,9): error TS1005: '','' expected.

    '
  timestamp: 1660334623
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let result = '';\n    let\
    \ index = word.length - 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index])\
    \ >= 0) {\n            result = word[index];\n            break;\n        }\n\
    \        index--;\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('rhythm'));\n\
    console.log(get_closest_vowel('zodiac'));\nconsole.log(get_closest_vowel('chirp'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpgrzlzk1c.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgrzlzk1c.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o

    e

    u



    a

    i

    '
  timestamp: 1660334623
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) > -1) {\n            for (let j\
    \ = i + 1; j < word.length; j++) {\n                if (vowels.indexOf(word[j])\
    \ > -1) {\n                    if (j - i < closestDistance) {\n              \
    \          closestDistance = j - i;\n                        closestVowel = word[i];\n\
    \                    }\n                    break;\n                }\n      \
    \      }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"\
    abracadabra\"));\nconsole.log(get_closest_vowel(\"programming\"));\nconsole.log(get_closest_vowel(\"\
    abcd\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    bcd\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(get_closest_vowel(\"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpyr67dlep.ts(34,384): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpyr67dlep.ts(35,1): error TS1005: '','' expected.

    ../../../../tmp/tmpyr67dlep.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1660334623
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let result = '';\n    let\
    \ index = word.length - 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index])\
    \ >= 0) {\n            result = word[index];\n            break;\n        }\n\
    \        index--;\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpe3mdkxzf.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmpe3mdkxzf.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334627
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let distance = 0;\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            if (i !== 0 && i !==\
    \ word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) === -1 &&\
    \ vowels.indexOf(word[i + 1]) === -1) {\n                    if (result === '')\
    \ {\n                        result = word[i];\n                        distance\
    \ = Math.abs(i - word.length);\n                    } else {\n               \
    \         if (Math.abs(i - word.length) < distance) {\n                      \
    \      result = word[i];\n                            distance = Math.abs(i -\
    \ word.length);\n                        }\n                    }\n          \
    \      }\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('hello world'));\nconsole.log(get_closest_vowel('hello\
    \ world, how are you?'));\nconsole.log(get_closest_vowel('hello world, how are\
    \ you? I am fine.'));\nconsole.log(get_closest_vowel('hello world, how are you?\
    \ I am fine. What about you?'));\nconsole.log(get_closest_vowel('hello world,\
    \ how are you? I am fine. What about you? I am fine too!'));\nconsole.log(get_closest_vowel('hello\
    \ world, how are you? I am fine. What about you? I am fine too! And you?'));\n\
    console.log(get_closest_vowel('hello world, how are you? I am fine. What about\
    \ you? I am fine too! And you? I am fine too!'));\nconsole.log(get_closest_vowel('hello\
    \ world, how are you? I am fine. What about you? I am fine too! And you\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpsnzkgn_y.ts(39,107): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpsnzkgn_y.ts(40,1): error TS1005: '','' expected.

    ../../../../tmp/tmpsnzkgn_y.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660334628
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let result = \"\";\n   \
    \ let lastConsonant = -1;\n    for (let i = word.length - 1; i >= 0; i--) {\n\
    \        if (vowels.indexOf(word[i]) === -1) {\n            lastConsonant = i;\n\
    \            break;\n        }\n    }\n    for (let i = lastConsonant - 1; i >=\
    \ 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            result\
    \ = word[i];\n            break;\n        }\n    }\n    return result;\n}\nconsole.log(get_closest_vowel(\"\
    hello\"));\nconsole.log(get_closest_vowel(\"heaven\"));\nconsole.log(get_closest_vowel(\"\
    lucky\"));\nconsole.log(get_closest_vowel(\"zoo\"));\nconsole.log(get_closest_vowel(\"\
    zoom\"));\nconsole.log(get_closest_vowel(\"zoomed\"));\nconsole.log(get_closest_vowel(\"\
    zoomer\"));\nconsole.log(get_closest_vowel(\"zoomers\"));\nconsole.log(get_closest_vowel(\"\
    zoomerss\"));\nconsole.log(get_closest_vowel(\"zoomersss\"));\nconsole.log(get_closest_vowel(\"\
    zoomerssss\"));\nconsole.log(get_closest_vowel(\"zoomersssss\"));\nconsole.log(get_closest_vowel(\"\
    zoomerssssss\"));\nconsole.log(get_closest_vowel(\"zoomersssssss\"));\nconsole.log(get_closest_vowel(\"\
    zoomerssssssss\"));\nconsole.log(get_closest_vowel(\"zoomersssssssss\"));\nconsole.log(get_closest_vowel(\"\
    zoomersssssss\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpjkjqmo6a.ts(41,45): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpjkjqmo6a.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmpjkjqmo6a.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334628
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let closestVowel = '';\n \
    \   let closestDistance = Infinity;\n    let currentDistance = Infinity;\n   \
    \ for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            currentDistance = word.length - i;\n            if (currentDistance\
    \ < closestDistance) {\n                closestDistance = currentDistance;\n \
    \               closestVowel = word[i];\n            }\n        }\n    }\n   \
    \ return closestVowel;\n}\n\nconsole.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpq4vybhtf.ts(42,32): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpq4vybhtf.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmpq4vybhtf.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334628
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    let closestVowelIndex = -1;\n    let closestConsonantIndex = -1;\n    for\
    \ (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ > -1) {\n            closestVowel = word[i];\n            closestVowelIndex\
    \ = i;\n            break;\n        }\n    }\n    for (let i = closestVowelIndex\
    \ - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) === -1) {\n       \
    \     closestConsonantIndex = i;\n            break;\n        }\n    }\n    if\
    \ (closestVowelIndex === -1 || closestConsonantIndex === -1) {\n        return\
    \ \"\";\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"\
    hello\"));\nconsole.log(get_closest_vowel(\"there\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"why\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpdir4lhtk.ts(46,1): error TS1005: '','' expected.

    ../../../../tmp/tmpdir4lhtk.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660334629
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let min = word.length;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0 && i\
    \ < word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) === -1\
    \ && vowels.indexOf(word[i + 1]) === -1) {\n                    if (i < min) {\n\
    \                        min = i;\n                        result = word[i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('he'));\n\
    console.log(get_closest_vowel('h'));\nconsole.log(get_closest_vowel('hie'));\n\
    console.log(get_closest_vowel('hiee'));\nconsole.log(get_closest_vowel('hieee'));\n\
    console.log(get_closest_vowel('hieeee'));\nconsole.log(get_closest_vowel('hieeeee'));\n\
    console.log(get_closest_vowel('hieeeeee'));\nconsole.log(get_closest_vowel('hieeeeeee'));\n\
    console.log(get_closest_vowel('hieeeeeeee'));\nconsole.log(get_closest_vowel('hieeeeeeeee'));\n\
    console.log(get_closest_vowel('hieeeeeeeeee'));\nconsole.log(get_closest_vowel('hieeeeeeeeeee'));\n\
    console.log(get_closest_vowel('hieeeeeeeeeeee'));\nconsole.log(get_closest_vowel('hieeeeeeeeeeeee'));\n\
    console.log(get\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpci7i3p57.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmpci7i3p57.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334628
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let minDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            let distance\
    \ = word.length - i;\n            if (distance < minDistance) {\n            \
    \    minDistance = distance;\n                result = word[i];\n            }\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('codewars'));\nconsole.log(get_closest_vowel('abracadabra'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('zxcvbnm'));\n\
    console.log(get_closest_vowel('bbb'));\nconsole.log(get_closest_vowel('abcd'));\n\
    console.log(get_closest_vowel('abcde'));\nconsole.log(get_closest_vowel('abcde'));\n\
    console.log(get_closest_vowel('abcde'));\nconsole.log(get_closest_vowel('abcde'));\n\
    console.log(get_closest_vowel('abcde'));\nconsole.log(get_closest_vowel('abcde'));\n\
    console.log(get_closest_vowel('abcde'));\nconsole.log(get_closest_vowel('abcde'));\n\
    console.log(get_closest_vowel('abcde'));\nconsole.log(get_closest_vowel('abcde'));\n\
    console.log(get_closest_\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpb2nwwte6.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmpb2nwwte6.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334629
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestIndex = word.length;\n    for (let i = word.length - 1;\
    \ i >= 0; i--) {\n        if (vowels.includes(word[i])) {\n            if (i <\
    \ closestIndex) {\n                closestIndex = i;\n                closestVowel\
    \ = word[i];\n            }\n        }\n    }\n    return closestVowel;\n}\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_v\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpwxba28g3.ts(41,1): error TS1005: '','' expected.

    ../../../../tmp/tmpwxba28g3.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660334629
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let lastVowel = 0;\n    let lastConsonant = 0;\n    let lastIndex\
    \ = word.length - 1;\n    for (let i = lastIndex; i >= 0; i--) {\n        if (vowels.includes(word[i]))\
    \ {\n            lastVowel = i;\n            if (lastConsonant > 0) {\n      \
    \          result = word[lastVowel];\n                break;\n            }\n\
    \        } else {\n            lastConsonant = i;\n            if (lastVowel >\
    \ 0) {\n                result = word[lastVowel];\n                break;\n  \
    \          }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('rhythm'));\nconsole.log(get_closest_vowel('zodiac'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpgwj0y89a.ts(47,35): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpgwj0y89a.ts(48,1): error TS1005: '','' expected.

    ../../../../tmp/tmpgwj0y89a.ts(48,9): error TS1005: '','' expected.

    '
  timestamp: 1660334629
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    const vowels = ['a', 'e', 'i', 'o', 'u'];\n    const\
    \ wordArr = word.split('');\n    let result = '';\n    for (let i = wordArr.length\
    \ - 1; i >= 0; i--) {\n        if (vowels.includes(wordArr[i])) {\n          \
    \  if (vowels.includes(wordArr[i - 1]) || vowels.includes(wordArr[i + 1])) {\n\
    \                continue;\n            } else {\n                result = wordArr[i];\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(get_closest_vowel('abcd'));\nconsole.log(get_closest_vowel('abcdeg'));\n\
    console.log(get_closest_vowel('abcdegh'));\nconsole.log(get_closest_vowel('abcdeghi'));\n\
    console.log(get_closest_vowel('abcdeghij'));\nconsole.log(get_closest_vowel('abcdeghijkl'));\n\
    console.log(get_closest_vowel('abcdeghijklmn'));\nconsole.log(get_closest_vowel('abcdeghijklmnop'));\n\
    console.log(get_closest_vowel('abcdeghijklmnopq'));\nconsole.log(get_closest_vowel('abcdeghijklmnopqr'));\n\
    console.log(get_closest_vowel('abcdeghijklmnopqrs'));\nconsole.log(get_closest_vowel('abcdeghijklmnopqrst'));\n\
    console.log(get_closest_vowel('abcdeghijklmnopqrstu'));\nconsole.log(get_closest_vowel('abcdeghijklmnopqrstuv'));\n\
    console.log(get_closest_vowel('abcdeghijklmnopqrst\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpds85d509.ts(38,51): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpds85d509.ts(39,1): error TS1005: '','' expected.

    ../../../../tmp/tmpds85d509.ts(39,9): error TS1005: '','' expected.

    '
  timestamp: 1660334629
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestDistance = 0;\n    let wordArray = word.split('');\n \
    \   let wordLength = wordArray.length;\n    let vowelIndex = 0;\n    let vowelDistance\
    \ = 0;\n    let consonantDistance = 0;\n    let consonantIndex = 0;\n    let consonantFound\
    \ = false;\n    let vowelFound = false;\n    let vowelFoundIndex = 0;\n    let\
    \ consonantFoundIndex = 0;\n    for (let i = 0; i < wordLength; i++) {\n     \
    \   if (vowels.indexOf(wordArray[i]) > -1) {\n            vowelFound = true;\n\
    \            vowelFoundIndex = i;\n            if (consonantFound) {\n       \
    \         vowelDistance = vowelFoundIndex - consonantFoundIndex;\n           \
    \     if (vowelDistance < closestDistance || closestDistance === 0) {\n      \
    \              closestDistance = vowelDistance;\n                    closestVowel\
    \ = wordArray[vowelFoundIndex];\n                }\n            }\n        } else\
    \ {\n            consonantFound = true;\n            consonantFoundIndex = i;\n\
    \        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmpey281a57.js:54:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpey281a57.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    e










    '
  timestamp: 1660334630
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let index = word.length\
    \ - 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index]) >= 0)\
    \ {\n            if (index === 0) {\n                return \"\";\n          \
    \  }\n            if (vowels.indexOf(word[index - 1]) < 0) {\n               \
    \ return word[index];\n            }\n        }\n        index--;\n    }\n   \
    \ return \"\";\n}\n\nconsole.log(get_closest_vowel(\"hello\"));\nconsole.log(get_closest_vowel(\"\
    there\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    why\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    rhythm\"));\nconsole.log(get_closest_vowel(\"\"));\nconsole.log(get_closest_vowel(\"\
    bcd\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp2j02cf44.ts(45,1): error TS1005: '','' expected.

    ../../../../tmp/tmp2j02cf44.ts(45,9): error TS1005: '','' expected.

    '
  timestamp: 1660334629
- exit_code: 0
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let result = '';\n    let\
    \ distance = Infinity;\n    for (let i = 0; i < word.length; i++) {\n        if\
    \ (vowels.indexOf(word[i]) !== -1) {\n            let left = word[i - 1];\n  \
    \          let right = word[i + 1];\n            if (left && right && vowels.indexOf(left)\
    \ === -1 && vowels.indexOf(right) === -1) {\n                let temp = Math.abs(i\
    \ - word.length);\n                if (temp < distance) {\n                  \
    \  distance = temp;\n                    result = word[i];\n                }\n\
    \            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'e




    '
  timestamp: 1660334629
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    const vowels = \"aeiou\";\n    const wordArr = word.split(\"\
    \");\n    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.includes(wordArr[i]))\
    \ {\n            if (i === wordArr.length - 1) {\n                return \"\"\
    ;\n            }\n            if (!vowels.includes(wordArr[i + 1])) {\n      \
    \          return wordArr[i];\n            }\n        }\n    }\n    return \"\"\
    ;\n}\n\nconsole.log(get_closest_vowel(\"hello\"));\nconsole.log(get_closest_vowel(\"\
    codewars\"));\nconsole.log(get_closest_vowel(\"sensual\"));\nconsole.log(get_closest_vowel(\"\
    moo\"));\nconsole.log(get_closest_vowel(\"good\"));\nconsole.log(get_closest_vowel(\"\
    beautiful\"));\nconsole.log(get_closest_vowel(\"beauty\"));\nconsole.log(get_closest_vowel(\"\
    beautiful\"));\nconsole.log(get_closest_vowel(\"beauty\"));\nconsole.log(get_closest_vowel(\"\
    beautiful\"));\nconsole.log(get_closest_vowel(\"beauty\"));\nconsole.log(get_closest_vowel(\"\
    beautiful\"));\nconsole.log(get_closest_vowel(\"beauty\"));\nconsole.log(get_closest_vowel(\"\
    beautiful\"));\nconsole.log(get_closest_vowel(\"beauty\"));\nconsole.log(get_closest_vowel(\"\
    beautiful\"));\nconsole.log(get_closest_vowel(\"beauty\"));\nconsole.log(get_closest_vowel(\"\
    beautiful\"));\nconsole.log(get_closest_vowel(\"beauty\"));\nconsole.log(get_closest_vowel(\"\
    beautiful\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpxrmmwdmi.js:47:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxrmmwdmi.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '

    a

    a


    o

    u

    u

    u

    u

    u

    u

    u

    u

    u

    u

    u

    u

    u

    u

    u

    '
  timestamp: 1660334630
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let result = '';\n    let\
    \ min = word.length;\n    for (let i = 0; i < word.length; i++) {\n        if\
    \ (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0 && i < word.length\
    \ - 1) {\n                if (vowels.indexOf(word[i - 1]) === -1 && vowels.indexOf(word[i\
    \ + 1]) === -1) {\n                    if (i < min) {\n                      \
    \  min = i;\n                        result = word[i];\n                    }\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\n\n\
    console.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('codewars'));\n\
    console.log(get_closest_vowel('sensual'));\nconsole.log(get_closest_vowel('rhythm'));\n\
    console.log(get_closest_vowel('youth'));\nconsole.log(get_closest_vowel('mst'));\n\
    console.log(get_closest_vowel('e'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiouy'));\n\
    console.log(get_closest_vowel('aeiouybcdfghjkl'));\nconsole.log(get_closest_vowel('bcdfghjkl'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('aeiouuvwxyz'));\n\
    console.log(get_closest_vowel('aeio'));\nconsole.log(get_closest_vowel('aeiouybcdfghjklmnopqrstuvwxyz'));\n\
    console.log(get_clos\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpcy_q7vb5.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmpcy_q7vb5.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334630
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let wordArr = word.split('');\n\
    \    let result = '';\n    let vowelIndex = 0;\n    let wordIndex = 0;\n    let\
    \ distance = 0;\n    for (let i = 0; i < wordArr.length; i++) {\n        if (vowels.indexOf(wordArr[i])\
    \ > -1) {\n            vowelIndex = i;\n            for (let j = vowelIndex +\
    \ 1; j < wordArr.length; j++) {\n                if (vowels.indexOf(wordArr[j])\
    \ === -1) {\n                    wordIndex = j;\n                    break;\n\
    \                }\n            }\n            if (wordIndex - vowelIndex < distance\
    \ || distance === 0) {\n                distance = wordIndex - vowelIndex;\n \
    \               result = wordArr[vowelIndex];\n            }\n        }\n    }\n\
    \    return result;\n}\n\nconsole.log(get_closest_vowel('abcd'));\nconsole.log(get_closest_vowel('abcdeg'));\n\
    console.log(get_closest_vowel('abcdegh'));\nconsole.log(get_closest_vowel('abcdeghi'));\n\
    console.log(get_closest_vowel('abcdeghij'));\nconsole.log(get_closest_vowel('abcdeghijk'));\n\
    console.log(get_closest_vowel('abcdeghijkl'));\nconsole.log(get_closest_vowel('abcdeghijklm'));\n\
    console.log(get_closest_vowel('abcdeghijklmn'));\nconsole.log(get_closest_vowel('abcdeghijklmno'));\n\
    console.log(get_closest_vowel('abcdeghijklmnop'));\nconsole.log(get_closest_vowel('abcdeghijklmnopq'));\n\
    console.log(get_closest_vowel('abcdeghijklmnopqr'));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmpvoh5nzjg.js:47:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvoh5nzjg.js:61:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'a

    a

    a

    i

    a

    a

    a

    a

    a

    o

    a

    a

    a

    '
  timestamp: 1660334630
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let min = word.length;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0 && i\
    \ < word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) === -1\
    \ && vowels.indexOf(word[i + 1]) === -1) {\n                    if (min > i) {\n\
    \                        min = i;\n                        result = word[i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('heaven'));\n\
    console.log(get_closest_vowel('lucky'));\nconsole.log(get_closest_vowel('apple'));\n\
    console.log(get_closest_vowel('bannana'));\nconsole.log(get_closest_vowel('orange'));\n\
    console.log(get_closest_vowel('pineapple'));\nconsole.log(get_closest_vowel('watermelon'));\n\
    console.log(get_closest_vowel('mango'));\nconsole.log(get_closest_vowel('strawberry'));\n\
    console.log(get_closest_vowel('peach'));\nconsole.log(get_closest_vowel('pear'));\n\
    console.log(get_closest_vowel('cherry'));\nconsole.log(get_closest_vowel('grape'));\n\
    console.log(get_closest_vowel('apricot'));\nconsole.log(get_closest_vowel('plum'));\n\
    console.log(get_closest_vowel('coconut'));\nconsole.log(get_closest\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpohnzt92z.ts(44,1): error TS1005: '','' expected.

    ../../../../tmp/tmpohnzt92z.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660334629
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0\
    \ && i < word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) ===\
    \ -1 && vowels.indexOf(word[i + 1]) === -1) {\n                    if (i < closestDistance)\
    \ {\n                        closestDistance = i;\n                        closestVowel\
    \ = word[i];\n                    }\n                }\n            }\n      \
    \  }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_cl\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpkcp2odb3.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmpkcp2odb3.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334630
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let distance = word.length;\n    for (let i = word.length - 1; i\
    \ >= 0; i--) {\n        if (vowels.indexOf(word[i]) > -1) {\n            if (i\
    \ < distance) {\n                distance = i;\n                result = word[i];\n\
    \            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('codewars'));\nconsole.log(get_closest_vowel('sauce'));\n\
    console.log(get_closest_vowel('a'));\nconsole.log(get_closest_vowel('z'));\nconsole.log(get_closest_vowel('why'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmptpd0m6oa.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptpd0m6oa.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    o

    a

    a



    '
  timestamp: 1660334630
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestVowelIndex = 0;\n    let closestVowelDistance = 0;\n \
    \   let wordLength = word.length;\n    for (let i = 0; i < wordLength; i++) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            if (i > closestVowelIndex)\
    \ {\n                closestVowelIndex = i;\n                closestVowel = word[i];\n\
    \                closestVowelDistance = wordLength - i;\n            }\n     \
    \   }\n    }\n    return closestVowel;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpbwxhe6sh.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbwxhe6sh.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334630
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestIndex = 0;\n    let wordArray = word.split('');\n    for\
    \ (let i = wordArray.length - 1; i >= 0; i--) {\n        if (vowels.includes(wordArray[i]))\
    \ {\n            if (i === wordArray.length - 1) {\n                closestVowel\
    \ = wordArray[i];\n                closestIndex = i;\n            } else if (vowels.includes(wordArray[i\
    \ + 1])) {\n                closestVowel = wordArray[i];\n                closestIndex\
    \ = i;\n            } else {\n                return wordArray[i];\n         \
    \   }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpbnu9ugwi.js:38:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbnu9ugwi.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e


    a


    '
  timestamp: 1660334630
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let distance = word.length;\n    for (let i = word.length - 1; i\
    \ >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if\
    \ (i < distance) {\n                distance = i;\n                result = word[i];\n\
    \            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('codewars'));\nconsole.log(get_closest_vowel('salesperson'));\n\
    console.log(get_closest_vowel('a'));\nconsole.log(get_closest_vowel('ok'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmp8yqnt69y.js:44:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8yqnt69y.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    o

    a

    a

    o

    a


    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    a

    '
  timestamp: 1660334630
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr\
    \ = word.split('');\n    let result = '';\n    let counter = 0;\n    for (let\
    \ i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
    \ !== -1) {\n            result = wordArr[i];\n            counter++;\n      \
    \  }\n        if (counter === 2) {\n            break;\n        }\n    }\n   \
    \ return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('heaven'));\n\
    console.log(get_closest_vowel('hollow'));\nconsole.log(get_closest_vowel('h'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmpwvdp2f0x.js:45:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwvdp2f0x.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    a

    o


    o


    o

    o

    o

    o

    o

    o

    o

    o

    o

    o

    o

    o

    o

    '
  timestamp: 1660334630
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr\
    \ = word.split('');\n    let vowelIndex = -1;\n    for (let i = wordArr.length\
    \ - 1; i >= 0; i--) {\n        if (vowels.includes(wordArr[i])) {\n          \
    \  vowelIndex = i;\n            break;\n        }\n    }\n    if (vowelIndex ===\
    \ -1) {\n        return '';\n    }\n    let consonantIndex = -1;\n    for (let\
    \ i = vowelIndex - 1; i >= 0; i--) {\n        if (!vowels.includes(wordArr[i]))\
    \ {\n            consonantIndex = i;\n            break;\n        }\n    }\n \
    \   if (consonantIndex === -1) {\n        return '';\n    }\n    return wordArr[vowelIndex];\n\
    }\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('aeiou'));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'i'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpi4z0zrs5.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi4z0zrs5.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'i',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o



    '
  timestamp: 1660334634
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    let wordArr = word.split('');\n    let vowelIndex\
    \ = 0;\n    let consonantIndex = 0;\n    let vowel = '';\n    let consonant =\
    \ '';\n    let closestVowel = '';\n    let closestVowelIndex = 0;\n    let closestConsonantIndex\
    \ = 0;\n    let closestConsonant = '';\n    let closestVowelDistance = 0;\n  \
    \  let distance = 0;\n    for (let i = 0; i < wordArr.length; i++) {\n       \
    \ if (vowels.indexOf(wordArr[i]) !== -1) {\n            vowel = wordArr[i];\n\
    \            vowelIndex = i;\n            for (let j = vowelIndex; j < wordArr.length;\
    \ j++) {\n                if (consonants.indexOf(wordArr[j]) !== -1) {\n     \
    \               consonant = wordArr[j];\n                    consonantIndex =\
    \ j;\n                    distance = consonantIndex - vowelIndex;\n          \
    \          if (closestVowelDistance === 0) {\n                        closestVowelDistance\
    \ = distance;\n                        closestVowel = vowel;\n               \
    \         closestVowelIndex = vowelIndex;\n                        closestConsonant\
    \ = consonant;\n                        closestConsonantIndex = consonantIndex;\n\
    \                    } else if (distance < closestVowelDistance) {\n         \
    \               closestVowelDistance = distance;\n                        closestVowel\
    \ = vowel;\n                        closestVowelIndex = vowelIndex;\n        \
    \                closestConsonant = consonant;\n                        closestConsonantIndex\
    \ = consonantIndex;\n                    }\n                }\n            }\n\
    \        }\n    }\n    if (closestVowelDistance === 0) {\n        return '';\n\
    \    } else {\n        return closestVowel\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmptf2u582a.ts(72,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660334634
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let closest = word.length;\n    for (let i = word.length - 1; i >=\
    \ 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i\
    \ < closest) {\n                closest = i;\n                result = word[i];\n\
    \            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmp9hf70e6w.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9hf70e6w.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e


    a


    '
  timestamp: 1660334603
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let closest_vowel = '';\n\
    \    let closest_vowel_index = word.length;\n    for (let i = word.length - 1;\
    \ i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if\
    \ (i < closest_vowel_index) {\n                closest_vowel = word[i];\n    \
    \            closest_vowel_index = i;\n            }\n        } else {\n     \
    \       if (closest_vowel !== '') {\n                return closest_vowel;\n \
    \           }\n        }\n    }\n    return closest_vowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('rhythm'));\nconsole.log(get_closest_vowel('strength'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_clos\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpcgwipk7w.ts(44,1): error TS1005: '','' expected.

    ../../../../tmp/tmpcgwipk7w.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660334634
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            let distance\
    \ = word.length - i;\n            if (distance < closestDistance) {\n        \
    \        closestDistance = distance;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('codewars'));\nconsole.log(get_closest_vowel('samsung'));\n\
    console.log(get_closest_vowel('abcd'));\nconsole.log(get_closest_vowel('javascript'));\n\
    console.log(get_closest_vowel('knuth'));\nconsole.log(get_closest_vowel('a'));\n\
    console.log(get_closest_vowel('u'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp5ten1ffp.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334635
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) > -1) {\n            let distance\
    \ = word.length - i;\n            if (distance < closestDistance) {\n        \
    \        closestDistance = distance;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou')\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpbzog8mto.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmpbzog8mto.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334634
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n  let vowels = ['a', 'e', 'i', 'o', 'u'];\n  let wordArr\
    \ = word.split('');\n  let vowelIndex = 0;\n  let vowel = '';\n  let vowelDistance\
    \ = 0;\n  let closestVowel = '';\n  let closestVowelDistance = 0;\n  for (let\
    \ i = 0; i < wordArr.length; i++) {\n    if (vowels.includes(wordArr[i])) {\n\
    \      vowelIndex = i;\n      vowel = wordArr[i];\n      vowelDistance = wordArr.length\
    \ - vowelIndex;\n      if (vowelDistance > closestVowelDistance) {\n        closestVowel\
    \ = vowel;\n        closestVowelDistance = vowelDistance;\n      }\n    }\n  }\n\
    \  return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('world'));\n\
    console.log(get_closest_vowel('a'));\nconsole.log(get_closest_vowel('b'));\nconsole.log(get_closest_vowel('c'));\n\
    console.log(get_closest_vowel('d'));\nconsole.log(get_closest_vowel('e'));\nconsole.log(get_closest_vowel('f'));\n\
    console.log(get_closest_vowel('g'));\nconsole.log(get_closest_vowel('h'));\nconsole.log(get_closest_vowel('i'));\n\
    console.log(get_closest_vowel('j'));\nconsole.log(get_closest_vowel('k'));\nconsole.log(get_closest_vowel('l'));\n\
    console.log(get_closest_vowel('m'));\nconsole.log(get_closest_vowel('n'));\nconsole.log(get_closest_vowel('o'));\n\
    console\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould\
    \ loosely deep-equal\n\n'u'\n    at test (/tmp/tmp2fkam9l3.js:49:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2fkam9l3.js:63:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected:\
    \ 'u',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'e

    o

    a




    e




    i






    o

    '
  timestamp: 1660334636
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    let closestVowel = '';\n    let closestVowelIndex\
    \ = 0;\n    let closestConsonantIndex = 0;\n    let closestConsonant = '';\n \
    \   let wordArray = word.split('');\n    for (let i = 0; i < wordArray.length;\
    \ i++) {\n        if (vowels.indexOf(wordArray[i]) !== -1) {\n            closestVowel\
    \ = wordArray[i];\n            closestVowelIndex = i;\n            for (let j\
    \ = closestVowelIndex; j < wordArray.length; j++) {\n                if (consonants.indexOf(wordArray[j])\
    \ !== -1) {\n                    closestConsonant = wordArray[j];\n          \
    \          closestConsonantIndex = j;\n                    break;\n          \
    \      }\n            }\n            if (closestConsonantIndex > closestVowelIndex)\
    \ {\n                return closestVowel;\n            }\n        }\n    }\n \
    \   return '';\n}\nconsole.log(get_closest_vowel('abcd'));\nconsole.log(get_closest_vowel('abcdeg'));\n\
    console.log(get_closest_vowel('abcdegi'));\nconsole.log(get_closest_vowel('abcdegik'));\n\
    console.log(get_closest_vowel('abcdegikl'));\nconsole.log(get_closest_vowel('abcdegiklm'));\n\
    console.log(get_closest_vowel('abcdegiklmn'));\nconsole.log(get_closest_vowel('abcdegiklmnop'));\n\
    console.log(get_closest\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp4x397jlr.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmp4x397jlr.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334635
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let index = word.length - 1;\n    let is_vowel = false;\n    while\
    \ (index >= 0) {\n        if (vowels.indexOf(word[index]) >= 0) {\n          \
    \  is_vowel = true;\n        } else {\n            if (is_vowel) {\n         \
    \       return word[index + 1];\n            }\n        }\n        index--;\n\
    \    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('rhythm'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('z\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpcgfh4o2e.ts(44,33): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpcgfh4o2e.ts(45,1): error TS1005: '','' expected.

    ../../../../tmp/tmpcgfh4o2e.ts(45,9): error TS1005: '','' expected.

    '
  timestamp: 1660334635
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let closestVowel = '';\n \
    \   let closestVowelIndex = word.length;\n    for (let i = word.length - 1; i\
    \ >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if\
    \ (i > 0 && vowels.indexOf(word[i - 1]) === -1) {\n                if (i < closestVowelIndex)\
    \ {\n                    closestVowelIndex = i;\n                    closestVowel\
    \ = word[i];\n                }\n            }\n        }\n    }\n    return closestVowel;\n\
    }\n\nconsole.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel('helloworld'));\n\
    console.log(get_closest_vowel('helloworld'));\nconsole.log(get_closest_vowel\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpm2nrpkyu.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmpm2nrpkyu.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334636
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    const vowels = ['a', 'e', 'i', 'o', 'u'];\n    const\
    \ wordArr = word.split('');\n    let result = '';\n    for (let i = wordArr.length\
    \ - 1; i >= 0; i--) {\n        if (vowels.includes(wordArr[i])) {\n          \
    \  result = wordArr[i];\n            break;\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp0zkpqbua.ts(41,1): error TS1005: '','' expected.

    ../../../../tmp/tmp0zkpqbua.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660334636
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let closest = word.length;\n    for (let i = word.length - 1; i >=\
    \ 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i\
    \ < closest) {\n                closest = i;\n                result = word[i];\n\
    \            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('zxcvbn'));\nconsole.log(get_closest_vowel('zxcvbnm'));\n\
    console.log(get_closest_vowel('zxcvbnma'));\nconsole.log(get_closest_vowel('zxcvbnmas'));\n\
    console.log(get_closest_vowel('zxcvbnmasd'));\nconsole.log(get_closest_vowel('zxcvbnmasdf'));\n\
    console.log(get_closest_vowel('zxcvbnmasdfg'));\nconsole.log(get_closest_vowel('zxcvbnmasdfgh'));\n\
    console.log(get_closest_vowel('zxcvbnmasdfghj'));\nconsole.log(get_closest_vowel('zxcvbnmasdfghjk'));\n\
    console.log(get_closest_vowel('zxcvbnmasdfghjkl'));\nconsole.log(get_closest_vowel('zxcvbnmasdfghjkl;'));\n\
    console.log(get_closest_vow\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpytevv13z.ts(40,1): error TS1005: '','' expected.

    ../../../../tmp/tmpytevv13z.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660334636
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let closestVowel = '';\n \
    \   let closestVowelIndex = 0;\n    let closestVowelDistance = 0;\n    let currentVowelIndex\
    \ = 0;\n    let currentVowelDistance = 0;\n    let currentConsonantIndex = 0;\n\
    \    let currentConsonantDistance = 0;\n    let currentConsonant = '';\n    let\
    \ currentVowel = '';\n    let currentVowelIndex = 0;\n    let currentVowelDistance\
    \ = 0;\n    let currentConsonantIndex = 0;\n    let currentConsonantDistance =\
    \ 0;\n    let currentConsonant = '';\n    let currentVowel = '';\n    let currentVowelIndex\
    \ = 0;\n    let currentVowelDistance = 0;\n    let currentConsonantIndex = 0;\n\
    \    let currentConsonantDistance = 0;\n    let currentConsonant = '';\n    let\
    \ currentVowel = '';\n    let currentVowelIndex = 0;\n    let currentVowelDistance\
    \ = 0;\n    let currentConsonantIndex = 0;\n    let currentConsonantDistance =\
    \ 0;\n    let currentConsonant = '';\n    let currentVowel = '';\n    let currentVowelIndex\
    \ = 0;\n    let currentVowelDistance = 0;\n    let currentConsonantIndex = 0;\n\
    \    let currentConsonantDistance = 0;\n    let currentConsonant = '';\n    let\
    \ currentVowel = '';\n    let currentVowelIndex = 0;\n    let currentVowelDistance\
    \ = 0;\n    let currentConsonantIndex = 0;\n    let currentConsonantDistance =\
    \ 0;\n    let currentConsonant = '';\n    let currentVowel = '';\n    let currentVowelIndex\
    \ = 0;\n    let currentVowelDistance = 0;\n    let currentConsonantIndex = 0;\n\
    \    let currentConsonantDistance = 0;\n    let currentConsonant = '';\n    let\
    \ currentVowel = '';\n    let currentVowelIndex = 0;\n    let currentVowelDistance\
    \ = 0\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpz76bbnpr.ts(77,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660334636
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    let closestIndex = word.length;\n    for (let i = word.length - 1; i >=\
    \ 0; i--) {\n        if (vowels.indexOf(word[i]) >= 0) {\n            if (i <\
    \ closestIndex) {\n                closestIndex = i;\n                closestVowel\
    \ = word[i];\n            }\n        }\n    }\n    return closestVowel;\n}\n\n\
    console.log(get_closest_vowel(\"hello\"));\nconsole.log(get_closest_vowel(\"bcd\"\
    ));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    why\"));\nconsole.log(get_closest_vowel(\"\"));\nconsole.log(get_closest_vowel(\"\
    qrstu\"));\nconsole.log(get_closest_vowel(\"aeiouy\"));\nconsole.log(get_closest_vowel(\"\
    aeiouybcdfg\"));\nconsole.log(get_closest_vowel(\"abcde\"));\nconsole.log(get_closest_vowel(\"\
    abcdi\"));\nconsole.log(get_closest_vowel(\"abcdio\"));\nconsole.log(get_closest_vowel(\"\
    bcdio\"));\nconsole.log(get_closest_vowel(\"bcdiou\"));\nconsole.log(get_closest_vowel(\"\
    bcdfg\"));\nconsole.log(get_closest_vowel(\"bcdy\"));\nconsole.log(get_closest_vowel(\"\
    bcdioe\"));\nconsole.log(get_closest_vowel(\"bcdioeu\"));\nconsole.log(get_closest_vowel(\"\
    bcdioeuy\"));\nconsole.log(get_closest_vowel(\"bcdioeuyfg\"));\nconsole.log(get_clos\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpwcb5_2cb.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmpwcb5_2cb.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334636
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let result = '';\n    let\
    \ min = word.length;\n    for (let i = 0; i < word.length; i++) {\n        if\
    \ (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0 && i < word.length\
    \ - 1) {\n                if (vowels.indexOf(word[i - 1]) === -1 && vowels.indexOf(word[i\
    \ + 1]) === -1) {\n                    if (i < min) {\n                      \
    \  min = i;\n                        result = word[i];\n                    }\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('heaven'));\nconsole.log(get_closest_vowel('zodiac'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(get_closest_vowel('zoo'));\n\
    console.log(get_closest_vowel('zoo'));\nconsole.log(\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpsl4rhqb9.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660334636
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let result = \"\";\n   \
    \ let count = 0;\n    let index = 0;\n    let lastIndex = 0;\n    for (let i =\
    \ word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1)\
    \ {\n            if (count === 0) {\n                index = i;\n            \
    \    count++;\n            } else {\n                lastIndex = i;\n        \
    \        break;\n            }\n        }\n    }\n    if (count === 1) {\n   \
    \     result = word[index];\n    } else if (count === 2) {\n        if (index\
    \ - lastIndex === 1) {\n            result = word[index];\n        } else {\n\
    \            result = word[lastIndex];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(get_closest_vowel(\"hello\"));\nconsole.log(get_closest_vowel(\"\
    there\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    why\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    ae\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp39m94zxo.ts(51,34): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp39m94zxo.ts(52,1): error TS1005: '','' expected.

    ../../../../tmp/tmp39m94zxo.ts(52,9): error TS1005: '','' expected.

    '
  timestamp: 1660334636
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let index = word.length -\
    \ 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index]) !== -1)\
    \ {\n            if (index === 0) {\n                return '';\n            }\n\
    \            if (vowels.indexOf(word[index - 1]) === -1) {\n                return\
    \ word[index];\n            }\n        }\n        index--;\n    }\n    return\
    \ '';\n}\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('bcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'i'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpivb_3b1a.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpivb_3b1a.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'i',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o




    '
  timestamp: 1660334636
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let lastVowel = \"\";\n\
    \    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            lastVowel = word[i];\n            break;\n        }\n\
    \    }\n    if (lastVowel === \"\") {\n        return \"\";\n    }\n    let closestVowel\
    \ = lastVowel;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            closestVowel = word[i];\n        } else {\n         \
    \   break;\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"\
    hello\"));\nconsole.log(get_closest_vowel(\"codewars\"));\nconsole.log(get_closest_vowel(\"\
    sapien\"));\nconsole.log(get_closest_vowel(\"codewarrior\"));\nconsole.log(get_closest_vowel(\"\
    oranges\"));\nconsole.log(get_closest_vowel(\"supercalifragilisticexpialidocious\"\
    ));\nconsole.log(get_closest_vowel(\"aeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeioua\"));\nconsole.log(get_closest_vowel(\"abc\"));\nconsole.log(get_closest_vowel(\"\
    b\"));\nconsole.log(get_closest_vowel(\"abcd\"));\nconsole.log(get_closest_vowel(\"\
    bbcd\"));\nconsole.log(get_closest_vowel(\"bbcdx\"));\nconsole.log(get_closest_vowel(\"\
    bbcdxy\"));\nconsole.log(get_closest_vowel(\"bbcdxyz\"));\nconsole.log(get_closest_vowel\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp8yr_8qsl.ts(46,1): error TS1005: '','' expected.

    ../../../../tmp/tmp8yr_8qsl.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660334636
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            let distance\
    \ = word.length - i;\n            if (distance < closestDistance) {\n        \
    \        closestDistance = distance;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"\
    abcd\"));\nconsole.log(get_closest_vowel(\"abce\"));\nconsole.log(get_closest_vowel(\"\
    abcdi\"));\nconsole.log(get_closest_vowel(\"abcdiou\"));\nconsole.log(get_closest_vowel(\"\
    abcde\"));\nconsole.log(get_closest_vowel(\"abcdei\"));\nconsole.log(get_closest_vowel(\"\
    abcdeio\"));\nconsole.log(get_closest_vowel(\"abcdeioi\"));\nconsole.log(get_closest_vowel(\"\
    abcdeioiu\"));\nconsole.log(get_closest_vowel(\"abcdeioiua\"));\nconsole.log(get_closest_vowel(\"\
    abcdeioiuaa\"));\nconsole.log(get_closest_vowel(\"abcdeioiuaaa\"));\nconsole.log(get_closest_vowel(\"\
    abcdeioiuaaaa\"));\nconsole.log(get_closest_vowel(\"abcdeioiuaaaaa\"));\nconsole.log(get_closest_vowel(\"\
    abcdeioiuaaaaaa\"));\nconsole.log(get_closest_vowel(\"abcdeioiuaaaaaaa\"));\n\
    console.log(get_closest_vowel(\"abcdeioiuaaaaaaaa\"));\nconsole.log(get_closest_vowel(\"\
    abcde\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp1gzk02px.ts(40,37): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp1gzk02px.ts(41,1): error TS1005: '','' expected.

    ../../../../tmp/tmp1gzk02px.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660334636
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let vowelIndex\
    \ = -1;\n    let vowel = '';\n    for (let i = word.length - 1; i >= 0; i--) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            vowelIndex = i;\n\
    \            vowel = word[i];\n            break;\n        }\n    }\n    if (vowelIndex\
    \ === -1) {\n        return '';\n    }\n    for (let i = vowelIndex - 1; i >=\
    \ 0; i--) {\n        if (vowels.indexOf(word[i]) === -1) {\n            return\
    \ vowel;\n        }\n    }\n    return '';\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'i'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmp7212r8hd.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7212r8hd.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'i',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334637
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr\
    \ = word.split('');\n    let vowel = '';\n    let vowelIndex = 0;\n    for (let\
    \ i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.includes(wordArr[i]))\
    \ {\n            vowel = wordArr[i];\n            vowelIndex = i;\n          \
    \  break;\n        }\n    }\n    for (let i = vowelIndex - 1; i >= 0; i--) {\n\
    \        if (!vowels.includes(wordArr[i])) {\n            return vowel;\n    \
    \    }\n    }\n    return '';\n}\nconsole.log(get_closest_vowel('abcd'));\nconsole.log(get_closest_vowel('abce'));\n\
    console.log(get_closest_vowel('abcei'));\nconsole.log(get_closest_vowel('abceio'));\n\
    console.log(get_closest_vowel('abceiou'));\nconsole.log(get_closest_vowel('abceioua'));\n\
    console.log(get_closest_vowel('abceiouae'));\nconsole.log(get_closest_vowel('abceiouaef'));\n\
    console.log(get_closest_vowel('abceiouaefg'));\nconsole.log(get_closest_vowel('abceiouaefgh'));\n\
    console.log(get_closest_vowel('abceiouaefghi'));\nconsole.log(get_closest_vowel('abceiouaefghij'));\n\
    console.log(get_closest_vowel('abceiouaefghijk'));\nconsole.log(get_closest_vowel('abceiouaefghijkl'));\n\
    console.log(get_closest_vowel('abceiouaefghij\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp8towo1ib.ts(40,46): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp8towo1ib.ts(41,1): error TS1005: '','' expected.

    ../../../../tmp/tmp8towo1ib.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660334636
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let closestVowel = '';\n \
    \   let closestDistance = word.length;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            let distance =\
    \ word.length - i;\n            if (distance < closestDistance) {\n          \
    \      closestDistance = distance;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('rhythm'));\nconsole.log(get_closest_vowel('sdfghjkl'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_cl\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpudqazmm6.ts(43,1): error TS1005: '','' expected.

    ../../../../tmp/tmpudqazmm6.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1660334636
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let closestVowel = \"\"\
    ;\n    let closestVowelIndex = word.length;\n    for (let i = word.length - 1;\
    \ i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if\
    \ (i < closestVowelIndex) {\n                closestVowel = word[i];\n       \
    \         closestVowelIndex = i;\n            }\n        }\n    }\n    return\
    \ closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"hello\"));\nconsole.log(get_closest_vowel(\"\
    heaven\"));\nconsole.log(get_closest_vowel(\"what\"));\nconsole.log(get_closest_vowel(\"\
    bacon\"));\nconsole.log(get_closest_vowel(\"\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"aeiouaeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiouaeiouaeiou\"));\nconsole.log(get_closest_vowel(\"aeiouaeiouaeiouaeiou\"));\n\
    console.log(get_closest_vowel(\"aeiouaeiouaeiouaeiouaeiou\"));\nconsole.log(get_closest_vowel(\"\
    aeiouaeiouaeiouaeiouaeiouaeiou\"));\nconsole.log(get_closest_vowel(\"aeiouaeiouaeiouaeiouaeiouaeiouaeiou\"\
    ));\nconsole.log(get_closest_vowel(\"aeiouaeiouaeiouaeiouaeiouaeiouaeiouaeiou\"\
    ));\nconsole.log(get_closest_vowel(\"aeiouaeiouaeiouaeiouaeiouaeiouaeiouaeiouaeiou\"\
    ));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp286bb_9h.ts(36,9): error TS1003: Identifier expected.

    '
  timestamp: 1660334637
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestDistance = 0;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) > -1) {\n            let distance = 0;\n\
    \            for (let j = i + 1; j < word.length; j++) {\n                if (vowels.indexOf(word[j])\
    \ > -1) {\n                    break;\n                }\n                distance++;\n\
    \            }\n            if (distance > closestDistance) {\n              \
    \  closestDistance = distance;\n                closestVowel = word[i];\n    \
    \        }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpsh2q7p3g.ts(46,1): error TS1005: '','' expected.

    ../../../../tmp/tmpsh2q7p3g.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660334637
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr\
    \ = word.split('');\n    let result = '';\n    for (let i = wordArr.length - 1;\
    \ i >= 0; i--) {\n        if (vowels.includes(wordArr[i])) {\n            if (vowels.includes(wordArr[i\
    \ - 1]) || vowels.includes(wordArr[i + 1])) {\n                continue;\n   \
    \         } else {\n                result = wordArr[i];\n                break;\n\
    \            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('there'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('aeiou'));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'e'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpbg8_vwzx.js:48:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbg8_vwzx.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'e',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o

    e

















    '
  timestamp: 1660334639
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = 'aeiou';\n    let closestVowel = '';\n \
    \   let closestDistance = word.length;\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            let distance =\
    \ word.length - i;\n            if (distance < closestDistance) {\n          \
    \      closestDistance = distance;\n                closestVowel = word[i];\n\
    \            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('abcd'));\n\
    console.log(get_closest_vowel('abcdeg'));\nconsole.log(get_closest_vowel('abcdegh'));\n\
    console.log(get_closest_vowel('abcdeghi'));\nconsole.log(get_closest_vowel('abcdeghij'));\n\
    console.log(get_closest_vowel('abcdeghijk'));\nconsole.log(get_closest_vowel('abcdeghijkl'));\n\
    console.log(get_closest_vowel('abcdeghijklm'));\nconsole.log(get_closest_vowel('abcdeghijklmn'));\n\
    console.log(get_closest_vowel('abcdeghijklmno'));\nconsole.log(get_closest_vowel('abcdeghijklmnop'));\n\
    console.log(get_closest_vowel('abcdeghijklmnopq'));\nconsole.log(get_closest_vowel('abcdeghijklmnopqr'));\n\
    console.log(get_closest_vowel('abcdeghijklmnopqrs'));\nconsole.log(get_closest_vowel('abcdeghijklmnopqrst'));\n\
    console.log(get_closest_vowel('abcdeghijklmnopqrstu'));\nconsole.log(get_closest_vow\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpfp4hieck.ts(40,1): error TS1005: '','' expected.

    ../../../../tmp/tmpfp4hieck.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1660334639
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let minDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            let distance\
    \ = word.length - i;\n            if (distance < minDistance) {\n            \
    \    minDistance = distance;\n                result = word[i];\n            }\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('codewars'));\nconsole.log(get_closest_vowel('salesperson'));\n\
    console.log(get_closest_vowel('zodiac'));\nconsole.log(get_closest_vowel('zodiacs'));\n\
    console.log(get_closest_vowel('zodiacss'));\nconsole.log(get_closest_vowel('zodiacsss'));\n\
    console.log(get_closest_vowel('zodiacssss'));\nconsole.log(get_closest_vowel('zodiacsssss'));\n\
    console.log(get_closest_vowel('zodiacssssss'));\nconsole.log(get_closest_vowel('zodiacsssssss'));\n\
    console.log(get_closest_vowel('zodiacssssssss'));\nconsole.log(get_closest_vowel('zodiacsssssssss'));\n\
    console.log(get_closest_vowel('zodiacssssssssss'));\nconsole.log(get_closest_vowel('zodiacsssssssssss'));\n\
    console.log(get_closest_vowel('zodiacssssssssssss'));\nconsole.log(get_closest_vowel('zodiacsssssssssssss'));\n\
    console.log(get_cl\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpxpkwtlpd.ts(41,1): error TS1005: '','' expected.

    ../../../../tmp/tmpxpkwtlpd.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660334639
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr\
    \ = word.split('');\n    let result = '';\n    let index = 0;\n    for (let i\
    \ = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
    \ !== -1) {\n            index = i;\n            break;\n        }\n    }\n  \
    \  for (let i = index; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
    \ === -1) {\n            result = wordArr[index];\n            break;\n      \
    \  }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('codewars'));\nconsole.log(get_closest_vowel('sauce'));\n\
    console.log(get_closest_vowel('sauce'));\nconsole.log(get_closest_vowel('sauce'));\n\
    console.log(get_closest_vowel('sauce'));\nconsole.log(get_closest_vowel('sauce'));\n\
    console.log(get_closest_vowel('sauce'));\nconsole.log(get_closest_vowel('sauce'));\n\
    console.log(get_closest_vowel('sauce'));\nconsole.log(get_closest_vowel('sauce'));\n\
    console.log(get_closest_vowel('sauce'));\nconsole.log(get_closest_vowel('sauce'));\n\
    console.log(get_closest_vowel('sauce'));\nconsole.log(get_closest_vowel('sauce'));\n\
    console.log(get_closest_vowel('sauce'));\nconsole.log(get_closest_vowel('s\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"\
    ),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp1f6nszwg.ts(43,33): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp1f6nszwg.ts(44,1): error TS1005: '','' expected.

    ../../../../tmp/tmp1f6nszwg.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660334639
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = \"aeiou\";\n    let result = \"\";\n   \
    \ let index = word.length - 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index])\
    \ >= 0) {\n            result = word[index];\n            break;\n        }\n\
    \        index--;\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"\
    hello\"));\nconsole.log(get_closest_vowel(\"there\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"why\"));\nconsole.log(get_closest_vowel(\"\
    aeiou\"));\nconsole.log(get_closest_vowel(\"rhythm\"));\nconsole.log(get_closest_vowel(\"\
    \"));\nconsole.log(get_closest_vowel(\"bcd\"));\nconsole.log(get_closest_vowel(\"\
    AEIOU\"));\nconsole.log(get_closest_vowel(\"bcd\"));\nconsole.log(get_closest_vowel(\"\
    AEIOU\"));\nconsole.log(get_closest_vowel(\"bcd\"));\nconsole.log(get_closest_vowel(\"\
    AEIOU\"));\nconsole.log(get_closest_vowel(\"bcd\"));\nconsole.log(get_closest_vowel(\"\
    AEIOU\"));\nconsole.log(get_closest_vowel(\"bcd\"));\nconsole.log(get_closest_vowel(\"\
    AEIOU\"));\nconsole.log(get_closest_vowel(\"bcd\"));\nconsole.log(get_closest_vowel(\"\
    AEIOU\"));\nconsole.log(get_closest_vowel(\"bcd\"));\nconsole.log(get_closest_vowel(\"\
    AEIOU\"));\nconsole.log(get_closest_vowel(\"bcd\"));\nconsole\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpl_kmnnp5.js:48:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl_kmnnp5.js:60:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o

    e

    u


    u


















    '
  timestamp: 1660334639
- exit_code: 1
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    let index = word.length - 1;\n    while (index > 0) {\n        if\
    \ (vowels.includes(word[index])) {\n            if (!vowels.includes(word[index\
    \ - 1])) {\n                result = word[index];\n                break;\n  \
    \          }\n        }\n        index--;\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('aeiou'));\n\
    console.log(get_closest_vowel('why'));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'i'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmprzc9o3dx.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprzc9o3dx.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'i',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'o




    '
  timestamp: 1660334639
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    let closestVowel = '';\n    let closestVowelIndex\
    \ = word.length;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            if (i > 0 && consonants.indexOf(word[i - 1]) !== -1)\
    \ {\n                if (i < closestVowelIndex) {\n                    closestVowelIndex\
    \ = i;\n                    closestVowel = word[i];\n                }\n     \
    \       }\n            if (i < word.length - 1 && consonants.indexOf(word[i +\
    \ 1]) !== -1) {\n                if (i < closestVowelIndex) {\n              \
    \      closestVowelIndex = i;\n                    closestVowel = word[i];\n \
    \               }\n            }\n        }\n    }\n    return closestVowel;\n\
    }\n\nconsole.log(get_closest_vowel('hello'));\nconsole.log(get_closest_vowel('there'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('why'));\n\
    console.log(get_closest_vowel('aei\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = get_closest_vowel;\n\
    \  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp3o9lgj5x.ts(41,35): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp3o9lgj5x.ts(42,1): error TS1005: '','' expected.

    ../../../../tmp/tmp3o9lgj5x.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1660334639
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (i > 0\
    \ && i < word.length - 1) {\n                if (vowels.indexOf(word[i - 1]) ===\
    \ -1 && vowels.indexOf(word[i + 1]) === -1) {\n                    if (i < closestDistance)\
    \ {\n                        closestDistance = i;\n                        closestVowel\
    \ = word[i];\n                    }\n                }\n            }\n      \
    \  }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('bcd'));\nconsole.log(get_closest_vowel('abcd'));\n\
    console.log(get_closest_vowel('aeiou'));\nconsole.log(get_closest_vowel('aeioua'));\n\
    console.log(get_closest_vowel('bcdaeiou'));\nconsole.log(get_closest_vowel('bcdaeioua'));\n\
    console.log(get_closest_vowel('abcde'));\nconsole.log(get_closest_vowel('abcdea'));\n\
    console.log(get_closest_vowel('abcdeaiou'));\nconsole.log(get_closest_vowel('abcdeaioua'));\n\
    console.log(get_closest_vowel('abcdeaiouaeiou'));\nconsole.log(get_closest_vowel('abcdeaiouaeioua'));\n\
    console.log(get_closest_vowel('abcdeaiouaeiouaeiou'));\nconsole.log(get_closest_vowel('abcdeaiouaeiou\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp9h5rq4_5.ts(40,46): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp9h5rq4_5.ts(41,1): error TS1005: '','' expected.

    ../../../../tmp/tmp9h5rq4_5.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1660334639
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr\
    \ = word.split('');\n    let vowelIndex = -1;\n    let closestVowel = '';\n  \
    \  for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
    \ > -1) {\n            vowelIndex = i;\n            closestVowel = wordArr[i];\n\
    \            break;\n        }\n    }\n    if (vowelIndex === -1) {\n        return\
    \ '';\n    }\n    for (let i = vowelIndex - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
    \ === -1) {\n            return closestVowel;\n        }\n    }\n    return '';\n\
    }\n\nconsole.log(get_closest_vowel('abracadabra'));\nconsole.log(get_closest_vowel('shopper'));\n\
    console.log(get_closest_vowel('o'));\nconsole.log(get_closest_vowel('hello'));\n\
    console.log(get_closest_vowel('aaaaa'));\nconsole.log(get_closest_vowel('bbbbb'));\n\
    console.log(get_closest_vowel('ccccc'));\nconsole.log(get_closest_vowel('ddddd'));\n\
    console.log(get_closest_vowel('eeeee'));\nconsole.log(get_closest_vowel('fffff'));\n\
    console.log(get_closest_vowel('ggggg'));\nconsole.log(get_closest_vowel('hhhhh'));\n\
    console.log(get_closest_vowel('iiiii'));\nconsole.log(get_closest_vowel('jjjjj'));\n\
    console.log(get_closest_vowel('kkkkk'));\nconsole.log(\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
    full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
    eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
    bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
    quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
    Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpnxvcwhpc.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1660334639
- exit_code: 2
  program: "//You are given a word. Your task is to find the closest vowel that stands\
    \ between \n// two consonants from the right side of the word (case sensitive).\n\
    // Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n// find any vowel met the above condition. \n// You may assume that\
    \ the given string contains English letter only.\n// Example:\nfunction get_closest_vowel(word:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let closestVowel\
    \ = '';\n    let closestIndex = word.length;\n    for (let i = word.length - 1;\
    \ i >= 0; i--) {\n        if (vowels.includes(word[i])) {\n            if (i <\
    \ closestIndex) {\n                closestIndex = i;\n                closestVowel\
    \ = word[i];\n            }\n        }\n    }\n    return closestVowel;\n}\n\n\
    console.log(get_closest_vowel('abcd'));\nconsole.log(get_closest_vowel('abcdeg'));\n\
    console.log(get_closest_vowel('abcdegi'));\nconsole.log(get_closest_vowel('abcdegio'));\n\
    console.log(get_closest_vowel('abcdegioo'));\nconsole.log(get_closest_vowel('abcdegioou'));\n\
    console.log(get_closest_vowel('abcdegioouu'));\nconsole.log(get_closest_vowel('abcdegioouua'));\n\
    console.log(get_closest_vowel('abcdegioouuae'));\nconsole.log(get_closest_vowel('abcdegioouuaei'));\n\
    console.log(get_closest_vowel('abcdegioouuaeio'));\nconsole.log(get_closest_vowel('abcdegioouuaeioo'));\n\
    console.log(get_closest_vowel('abcdegioouuaeioou'));\nconsole.log(get_closest_vowel('abcdegioouuaeioouu'));\n\
    console.log(get_closest_vowel('abcdegioouuaeioouua'));\nconsole.log(get_closest_vowel('abcdegioouuaeioouuae'));\n\
    console.log(get\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
    yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
    easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
    ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
    most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
    ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
    anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
    Above\"),\"o\");\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpcr_r9jlu.ts(39,1): error TS1005: '','' expected.

    ../../../../tmp/tmpcr_r9jlu.ts(39,9): error TS1005: '','' expected.

    '
  timestamp: 1660334639

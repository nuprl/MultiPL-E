{
  "language": "ts",
  "name": "HumanEval_152_compare",
  "results": [
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [7, 9, 5]));\nconsole.log(compare([5, 9, 7], [9, 5, 7]));\nconsole.log(compare([5, 9, 7], [9, 7, 5]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [1, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 1, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 1]));\nconsole.log(compare([5, 9, 7], [4, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 8, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 6]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 0, 0, 0 ]\n[ 2, 0, 2 ]\n[ 4, 4, 0 ]\n[ 4, 2, 2 ]\n[ 0, 0, 0 ]\n[ 4, 0, 0 ]\n[ 0, 8, 0 ]\n[ 0, 0, 6 ]\n[ 1, 0, 0 ]\n[ 0, 1, 0 ]\n[ 0, 0, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 6, 7], [3, 6, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 8], [8, 9, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 3, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 6, 7], [3, 6, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 1, 1]));\nconsole.log(compare([1, 2, 3], [2, 2, 2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n[ 0, 1, 2 ]\n[ 1, 0, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 2,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 2, 1]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 1, 1]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 1, 2]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 3, 2]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 1, 2]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 3, 2]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 1, 2]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 3, 2]));\nconsole.log(compare\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpqqe9m2th.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmpqqe9m2th.ts(40,9): error TS1005: ',' expected.\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([5, 6, 7], [3, 6, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 2, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 6, 7], [3, 6, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n  return game.map((num, i) => Math.abs(num - guess[i]));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 8], [8, 9, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 3, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 6, 7], [3, 6, 10]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 6, 7], [3, 6, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n[ 0, 0, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 8]));\nconsole.log(compare([5, 9, 7], [5, 10, 7]));\nconsole.log(compare([5, 9, 7], [6, 9, 7]));\nconsole.log(compare([5, 9, 7], [6, 10, 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 0, 0, 0 ]\n[ 0, 0, 1 ]\n[ 0, 1, 0 ]\n[ 1, 0, 0 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n  return game.map((score, i) => Math.abs(score - guess[i]));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n  let result: number[] = [];\n  for (let i = 0; i < game.length; i++) {\n    if (game[i] === guess[i]) {\n      result.push(0);\n    } else {\n      result.push(Math.abs(game[i] - guess[i]));\n    }\n  }\n  return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n  return game.map((num, i) => Math.abs(num - guess[i]));\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3])); // [0, 0, 0]\nconsole.log(compare([1, 2, 3], [2, 2, 3])); // [1, 0, 0]\nconsole.log(compare([1, 2, 3], [3, 2, 1])); // [2, 0, 2]\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 0, 0 ]\n[ 2, 0, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n  return game.map((score, i) => Math.abs(score - guess[i]));\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3])); // [0, 0, 0]\nconsole.log(compare([1, 2, 3], [2, 2, 3])); // [1, 0, 0]\nconsole.log(compare([1, 2, 3], [3, 2, 1])); // [2, 0, 2]\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 0, 0 ]\n[ 2, 0, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 6, 7], [3, 6, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n  return game.map((score, i) => Math.abs(score - guess[i]));\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3])); // [0, 0, 0]\nconsole.log(compare([1, 2, 3], [2, 2, 3])); // [1, 0, 0]\nconsole.log(compare([1, 2, 3], [3, 2, 1])); // [2, 0, 2]\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 0, 0 ]\n[ 2, 0, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 6, 7], [3, 6, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 3, 2]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 1, 2]));\nconsole.log(compare([4, 2, 3], [1, 3, 2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 1, 1 ]\n[ 1, 1, 2 ]\n[ 2, 1, 1 ]\n[ 3, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n  return game.map((num, i) => Math.abs(num - guess[i]));\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3])); // [0, 0, 0]\nconsole.log(compare([3, 2, 1], [1, 2, 3])); // [2, 0, 2]\nconsole.log(compare([1, 2, 3], [3, 2, 1])); // [2, 0, 2]\nconsole.log(compare([1, 2, 3], [1, 2, 1])); // [0, 0, 2]\nconsole.log(compare([1, 2, 3], [1, 2, 4])); // [0, 0, 1]\nconsole.log(compare([1, 2, 3], [1, 2, 5])); // [0, 0, 2]\nconsole.log(compare([1, 2, 3], [1, 2, 6])); // [0, 0, 3]\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 2, 0, 2 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n[ 0, 0, 1 ]\n[ 0, 0, 2 ]\n[ 0, 0, 3 ]\n",
      "timestamp": 1660332681
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 3, 2]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 1, 2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 1, 1 ]\n[ 1, 1, 2 ]\n[ 2, 1, 1 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 6, 7], [3, 6, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 2,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n  return game.map((score, i) => Math.abs(score - guess[i]));\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3])); // [0, 0, 0]\nconsole.log(compare([3, 2, 1], [1, 2, 3])); // [2, 0, 2]\nconsole.log(compare([1, 2, 3], [3, 2, 1])); // [2, 0, 2]\nconsole.log(compare([1, 5, 3, 4], [1, 4, 3, 5])); // [0, 1, 0, 1]\nconsole.log(compare([1, 5, 3, 4], [1, 4, 3, 4])); // [0, 1, 0, 0]\nconsole.log(compare([1, 5, 3, 4], [1, 4, 3, 6])); // [0, 1, 0, 2]\nconsole.log(compare([1, 5, 3, 4], [1, 4, 3, 0])); // [0, 1, 0, 4]\nconsole.log(compare([1, 5, 3, 4], [1, 4, 3, -2])); // [0, 1, 0, 6]\nconsole.log(compare([6, 4, 2], [1, 2, 3])); // [5, 2, 1]\nconsole.log(compare([6, 4, 2], [8, 2, 3])); // [2, 2, 1]\nconsole.log(compare([6, 4, 2], [6, 2, 3])); // [0, 2, 1]\nconsole.log(compare([6, 4, 2], [7, 2, 3])); // [1, 2, 1]\nconsole.log(compare([6, 4, 2], [5, 2, 3])); // [1, 2, 1]\nconsole.log(compare([6, 4, 2], [6, 2, 1])); // [0, 0, 1]\nconsole.log(compare([6, 4, 2], [6, 2, 5])); // [0, 0, 3]\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpskam_w1e.ts(29,9): error TS1005: ',' expected.\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 3, 2]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 1, 2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 1, 1 ]\n[ 1, 1, 2 ]\n[ 2, 1, 1 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    return game.map((x, i) => Math.abs(x - guess[i]));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 6, 7], [3, 6, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n[ 0, 0, 1 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 1, 3]));\nconsole.log(compare([1, 2, 3], [1, 2, 4]));\nconsole.log(compare([1, 2, 3], [1, 3, 2]));\nconsole.log(compare([1, 2, 3], [2, 1, 1]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 1, 2]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [3, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 3, 2]));\nconsole.log(compare([1, 2, 3], [3, 3, 3]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n[ 0, 1, 0 ]\n[ 0, 0, 1 ]\n[ 0, 1, 1 ]\n[ 1, 1, 2 ]\n[ 1, 1, 2 ]\n[ 2, 1, 1 ]\n[ 2, 0, 2 ]\n[ 2, 1, 2 ]\n[ 2, 1, 1 ]\n[ 2, 1, 0 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 2,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3])); // [0, 0, 0]\nconsole.log(compare([1, 2, 3], [2, 1, 3])); // [0, 2, 0]\nconsole.log(compare([1, 2, 3], [3, 2, 1])); // [2, 0, 2]\nconsole.log(compare([1, 2, 3], [1, 2, 1])); // [0, 0, 2]\nconsole.log(compare([5, 6, 7], [3, 6, 10])); // [2, 0, 3]\nconsole.log(compare([5, 7, 9], [5, 7, 9])); // [0, 0, 0]\nconsole.log(compare([5, 7, 9], [5, 7, 10])); // [0, 0, 1]\nconsole.log(compare([5, 7, 9], [5, 7, 8])); // [0, 0, 1]\nconsole.log(compare([5, 7, 9], [6, 7, 8])); // [1, 0, 1]\nconsole.log(compare([5, 7, 9], [4, 7, 8])); // [1, 0, 1]\nconsole.log(compare([5, 7, 9], [5, 8, 9])); // [0, 1, 0]\nconsole.log(compare([5, 7, 9], [5, 6, 9])); // [0, 1, 0]\nconsole.log(compare([5, 7, 9], [5, 7, 8])); // [0, 0, 1]\nconsole.log(compare([5, 7, 9], [4, 6, 8])); // [1, 1, 1]\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpmzed6xdg.ts(35,9): error TS1005: ',' expected.\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 2,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 1, 3]));\nconsole.log(compare([1, 2, 3], [1, 2, 4]));\nconsole.log(compare([1, 2, 3], [1, 3, 2]));\nconsole.log(compare([1, 2, 3], [2, 1, 1]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 1, 2]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [3, 3, 3]));\nconsole.log(compare([1, 2, 3], [1, 1, 1]));\nconsole.log(compare([1, 2, 3], [2, 2, 2]));\nconsole.log(compare([1, 2, 3], [3, 3, 3]));\nconsole.log(compare([1, 2, 3], [4, 4, 4]));\nconsole.log(compare([1, 2, 3], [0, 0, 0]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\nconsole.log(compare([1, 2, 3], [3, 4, 5]));\nconsole.log(comp\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpdojxlrpl.ts(41,1): error TS1005: ',' expected.\n../../../../tmp/tmpdojxlrpl.ts(41,9): error TS1005: ',' expected.\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n  let result: number[] = [];\n  for (let i = 0; i < game.length; i++) {\n    if (game[i] === guess[i]) {\n      result.push(0);\n    } else {\n      result.push(Math.abs(game[i] - guess[i]));\n    }\n  }\n  return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 2,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 8]));\nconsole.log(compare([5, 9, 7], [5, 10, 7]));\nconsole.log(compare([5, 9, 7], [6, 9, 7]));\nconsole.log(compare([5, 9, 7], [6, 10, 8]));\nconsole.log(compare([5, 9, 7], [6, 10, 7]));\nconsole.log(compare([5, 9, 7], [6, 9, 8]));\nconsole.log(compare([5, 9, 7], [5, 10, 8]));\nconsole.log(compare([5, 9, 7], [6, 10, 8]));\nconsole.log(compare([5, 9, 7], [6, 9, 8]));\nconsole.log(compare([5, 9, 7], [5, 10, 8]));\nconsole.log(compare([5, 9, 7], [6, 10, 8]));\nconsole.log(compare([5, 9, 7], [6, 9, 8]));\nconsole.log(compare([5, 9, 7], [5, 10, 8]));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmppj66htrm.ts(40,9): error TS1005: ',' expected.\n",
      "timestamp": 1660332681
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] == guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n  return game.map((score, i) => Math.abs(score - guess[i]));\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3])); // [0, 0, 0]\nconsole.log(compare([1, 2, 3], [2, 2, 3])); // [1, 0, 0]\nconsole.log(compare([1, 2, 3], [3, 2, 1])); // [2, 0, 2]\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 0, 0 ]\n[ 2, 0, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 6, 7], [3, 6, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 6, 7], [3, 6, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 8]));\nconsole.log(compare([5, 9, 7], [5, 10, 7]));\nconsole.log(compare([5, 9, 7], [6, 9, 7]));\nconsole.log(compare([5, 9, 7], [6, 10, 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 0, 0, 0 ]\n[ 0, 0, 1 ]\n[ 0, 1, 0 ]\n[ 1, 0, 0 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 6, 7], [3, 6, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 6, 7], [3, 6, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 3, 2]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 1, 2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 1, 1 ]\n[ 1, 1, 2 ]\n[ 2, 1, 1 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 8]));\nconsole.log(compare([5, 9, 7], [5, 10, 7]));\nconsole.log(compare([5, 9, 7], [6, 9, 7]));\nconsole.log(compare([5, 9, 7], [6, 10, 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 0, 0, 0 ]\n[ 0, 0, 1 ]\n[ 0, 1, 0 ]\n[ 1, 0, 0 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    return game.map((e, i) => Math.abs(e - guess[i]));\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 2, 1]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 1, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 0, 2 ]\n[ 2, 0, 2 ]\n[ 0, 1, 2 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    return game.map((score, i) => score === guess[i] ? 0 : Math.abs(score - guess[i]));\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3])); // [0, 0, 0]\nconsole.log(compare([3, 2, 1], [1, 2, 3])); // [2, 0, 2]\nconsole.log(compare([1, 2, 3], [3, 2, 1])); // [2, 0, 2]\nconsole.log(compare([1, 5, 3, 4], [1, 4, 3, 5])); // [0, 1, 0, 1]\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 2, 0, 2 ]\n[ 2, 0, 2 ]\n[ 0, 1, 0, 1 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    return game.map((score, i) => Math.abs(score - guess[i]));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    return game.map((score, i) => Math.abs(score - guess[i]));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 8]));\nconsole.log(compare([5, 9, 7], [5, 10, 7]));\nconsole.log(compare([5, 9, 7], [6, 9, 7]));\nconsole.log(compare([5, 9, 7], [6, 10, 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 0, 0, 0 ]\n[ 0, 0, 1 ]\n[ 0, 1, 0 ]\n[ 1, 0, 0 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 6, 7], [3, 6, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 3, 2]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 1, 2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 1, 1 ]\n[ 1, 1, 2 ]\n[ 2, 1, 1 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 1, 1]));\nconsole.log(compare([1, 2, 3], [2, 2, 2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n[ 0, 1, 2 ]\n[ 1, 0, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    return game.map((score, i) => {\n        const guessScore = guess[i];\n        return guessScore === score ? 0 : Math.abs(score - guessScore);\n    });\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 2, 1]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 1, 1]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 1, 2]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 3, 2]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 1, 2]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 3, 2]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 1, 2]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 3, 2]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 0, 2 ]\n[ 2, 0, 2 ]\n[ 0, 1, 2 ]\n[ 1, 1, 0 ]\n[ 1, 1, 2 ]\n[ 2, 1, 1 ]\n[ 2, 0, 2 ]\n[ 0, 1, 1 ]\n[ 1, 1, 0 ]\n[ 1, 1, 2 ]\n[ 2, 1, 1 ]\n[ 2, 0, 2 ]\n[ 0, 1, 1 ]\n[ 1, 1, 0 ]\n[ 1, 1, 2 ]\n[ 2, 1, 1 ]\n[ 2, 0, 2 ]\n[ 0, 1, 1 ]\n[ 1, 1, 0 ]\n[ 1, 1, 2 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 8]));\nconsole.log(compare([5, 9, 7], [5, 10, 7]));\nconsole.log(compare([5, 9, 7], [6, 9, 7]));\nconsole.log(compare([5, 9, 7], [6, 10, 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 0, 0, 0 ]\n[ 0, 0, 1 ]\n[ 0, 1, 0 ]\n[ 1, 0, 0 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    return game.map((score, i) => Math.abs(score - guess[i]));\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3])); // [0, 0, 0]\nconsole.log(compare([1, 2, 3], [2, 2, 3])); // [1, 0, 0]\nconsole.log(compare([1, 2, 3], [3, 2, 1])); // [2, 0, 2]\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 0, 0 ]\n[ 2, 0, 2 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    game.forEach((element, index) => {\n        if (element === guess[index]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(element - guess[index]));\n        }\n    });\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 6, 7], [3, 6, 10]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 0, 3 ]\n",
      "timestamp": 1660332683
    },
    {
      "exit_code": 2,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    return game.map((score, i) => {\n        return Math.abs(score - guess[i]);\n    });\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 2, 1]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 1, 1]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 1, 2]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 3, 2]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 1, 2]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 3, 2]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 1, 2]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 3, 2]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 1\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpr1ggqapa.ts(37,1): error TS1005: ',' expected.\n../../../../tmp/tmpr1ggqapa.ts(37,9): error TS1005: ',' expected.\n",
      "timestamp": 1660332683
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    return game.map((score, i) => {\n        return Math.abs(score - guess[i]);\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660332684
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    return game.map((score, i) => Math.abs(score - guess[i]));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 2,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        result.push(Math.abs(game[i] - guess[i]));\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 2, 1]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 1, 1]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [1, 3, 2]));\nconsole.log(compare([1, 2, 3], [3, 1, 2]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 2, 1]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 1, 1]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [1, 3, 2]));\nconsole.log(compare([1, 2, 3], [3, 1, 2]));\nconsole.log(compare([1, 2, 3], [2, 3, 1]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 2, 1]));\nconsole.log(compare([1, 2, 3],\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpi4nwvri9.ts(38,9): error TS1005: ',' expected.\n",
      "timestamp": 1660332684
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [7, 9, 5]));\nconsole.log(compare([5, 9, 7], [9, 5, 7]));\nconsole.log(compare([5, 9, 7], [9, 7, 5]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 0, 0, 0 ]\n[ 2, 0, 2 ]\n[ 4, 4, 0 ]\n[ 4, 2, 2 ]\n[ 0, 0, 0 ]\n[ 0, 0, 0 ]\n[ 0, 0, 0 ]\n[ 0, 0, 0 ]\n[ 0, 0, 0 ]\n[ 0, 0, 0 ]\n[ 0, 0, 0 ]\n[ 0, 0, 0 ]\n[ 0, 0, 0 ]\n[ 0, 0, 0 ]\n",
      "timestamp": 1660332684
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 8], [8, 9, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 3, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 1, 1]));\nconsole.log(compare([1, 2, 3], [2, 2, 2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n[ 0, 1, 2 ]\n[ 1, 0, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 8]));\nconsole.log(compare([5, 9, 7], [5, 10, 7]));\nconsole.log(compare([5, 9, 7], [6, 9, 7]));\nconsole.log(compare([5, 9, 7], [6, 10, 8]));\nconsole.log(compare([5, 9, 7], [6, 10, 8]));\nconsole.log(compare([5, 9, 7], [5, 10, 8]));\nconsole.log(compare([5, 9, 7], [6, 9, 8]));\nconsole.log(compare([5, 9, 7], [6, 10, 7]));\nconsole.log(compare([5, 9, 7], [5, 10, 7]));\nconsole.log(compare([5, 9, 7], [6, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 8]));\nconsole.log(compare([5, 9, 7], [5, 10, 8]));\nconsole.log(compare([5, 9, 7], [6, 10, 7]));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 0, 0, 0 ]\n[ 0, 0, 1 ]\n[ 0, 1, 0 ]\n[ 1, 0, 0 ]\n[ 1, 1, 1 ]\n[ 1, 1, 1 ]\n[ 0, 1, 1 ]\n[ 1, 0, 1 ]\n[ 1, 1, 0 ]\n[ 0, 1, 0 ]\n[ 1, 0, 0 ]\n[ 0, 0, 1 ]\n[ 0, 1, 1 ]\n[ 1, 1, 0 ]\n",
      "timestamp": 1660332684
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 6, 7], [3, 6, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 6, 7], [3, 6, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 0, 3 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 1, 3]));\nconsole.log(compare([1, 2, 3], [1, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n[ 0, 1, 0 ]\n[ 0, 0, 1 ]\n",
      "timestamp": 1660332684
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 0, 2 ]\n",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 1, 1, 0 ]\n[ 0, 0, 0 ]\n[ 2, 0, 2 ]\n",
      "timestamp": 1660332684
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [5, 9, 7]));\nconsole.log(compare([5, 9, 7], [5, 9, 8]));\nconsole.log(compare([5, 9, 7], [5, 10, 7]));\nconsole.log(compare([5, 9, 7], [6, 9, 7]));\nconsole.log(compare([5, 9, 7], [6, 10, 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 0, 0, 0 ]\n[ 0, 0, 1 ]\n[ 0, 1, 0 ]\n[ 1, 0, 0 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    return game.map((score, i) => Math.abs(score - guess[i]));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660332682
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] == guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332684
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 1, 1, 1 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    return game.map((score, i) => Math.abs(score - guess[i]));\n}\n\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 1, 1, 0 ]\n[ 0, 0, 0 ]\n[ 2, 0, 2 ]\n",
      "timestamp": 1660332684
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [7, 5, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 4, 2 ]\n",
      "timestamp": 1660332678
    },
    {
      "exit_code": 0,
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\nfunction compare(game: number[], guess: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3], [1, 2, 3]));\nconsole.log(compare([1, 2, 3], [2, 1, 3]));\nconsole.log(compare([1, 2, 3], [3, 2, 1]));\nconsole.log(compare([1, 2, 3], [1, 10, 2]));\nconsole.log(compare([1, 2, 3], [0, -2, -3]));\nconsole.log(compare([5, 9, 7], [3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "[ 0, 0, 0 ]\n[ 1, 1, 0 ]\n[ 2, 0, 2 ]\n[ 0, 8, 1 ]\n[ 1, 4, 6 ]\n[ 2, 7, 6 ]\n",
      "timestamp": 1660332678
    }
  ]
}
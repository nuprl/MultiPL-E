{
  "language": "ts",
  "name": "HumanEval_97_multiply",
  "results": [
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 2));\nconsole.log(multiply(10, 3));\nconsole.log(multiply(10, 4));\nconsole.log(multiply(10, 5));\nconsole.log(multiply(10, 6));\nconsole.log(multiply(10, 7));\nconsole.log(multiply(10, 8));\nconsole.log(multiply(10, 9));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 11));\nconsole.log(multiply(10, 12));\nconsole.log(multiply(10, 13));\nconsole.log(multiply(10, 14));\nconsole.log(multiply(10, 15));\nconsole.log(multiply(10, 16));\nconsole.log(multiply(10, 17));\nconsole.log(multiply(10, 18));\nconsole.log(multiply(10, 19));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 21));\nconsole.log(multiply(10, 22));\nconsole.log(multiply(10, 23));\nconsole.log(multiply(10, 24));\nconsole.log(multiply(10, 25));\nconsole.log(multiply(10, 26));\nconsole.log(multiply(10, 27));\nconsole.log(multiply(10, 28));\nconsole.log(multiply(10, 29));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 31));\nconsole.log(multiply(10, 32));\nconsole.log(multiply(10, 33));\nconsole.log(multiply(10, 34));\nconsole.log(multiply(10, 35));\nconsole.log(multiply(10, 36));\nconsole.log(multiply(10, 37));\nconsole.log(multiply(10, 38));\nconsole.log(multiply(10, 39));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp05rxz7in.js:52:12)\n    at Object.<anonymous> (/tmp/tmp05rxz7in.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 3));\nconsole.log(multiply(5, 6));\nconsole.log(multiply(5, 8));\nconsole.log(multiply(5, 9));\nconsole.log(multiply(5, 10));\nconsole.log(multiply(5, 11));\nconsole.log(multiply(5, 12));\nconsole.log(multiply(5, 13));\nconsole.log(multiply(5, 14));\nconsole.log(multiply(5, 15));\nconsole.log(multiply(5, 16));\nconsole.log(multiply(5, 17));\nconsole.log(multiply(5, 18));\nconsole.log(multiply(5, 19));\nconsole.log(multiply(5, 20));\nconsole.log(multiply(5, 21));\nconsole.log(multiply(5, 22));\nconsole.log(multiply(5, 23));\nconsole.log(multiply(5, 24));\nconsole.log(multiply(5, 25));\nconsole.log(multiply(5, 26));\nconsole.log(multiply(5, 27));\nconsole.log(multiply(5, 28));\nconsole.log(multiply(5, 29));\nconsole.log(multiply(5, 30));\nconsole.log(multiply(5, 31));\nconsole.log(multiply(5, 32));\nconsole.log(multiply(5, 33));\nconsole.log(multiply(5, 34));\nconsole.log(multiply(5, 35));\nconsole.log(multiply(5, 36));\nconsole.log(multiply(5, 37));\nconsole.log(multiply(5, 38));\nconsole.log(multiply(5, 39));\nconsole.log(multiply(5, 40));\nconsole.log(multiply(5, 41));\nconsole.log(multiply(5, 42));\nconsole.log(multiply(5, 43));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp26900_h3.js:52:12)\n    at Object.<anonymous> (/tmp/tmp26900_h3.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "15\n30\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(12, 12));\nconsole.log(multiply(123, 123));\nconsole.log(multiply(123, 1));\nconsole.log(multiply(1, 123));\nconsole.log(multiply(0, 123));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp5p_h9onk.js:24:12)\n    at Object.<anonymous> (/tmp/tmp5p_h9onk.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "4\n9\n3\n3\n0\n0\n0\n1\n0\n0\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, -20));\nconsole.log(multiply(10, 0));\nconsole.log(multiply(10, 1));\nconsole.log(multiply(10, 2));\nconsole.log(multiply(10, 3));\nconsole.log(multiply(10, 4));\nconsole.log(multiply(10, 5));\nconsole.log(multiply(10, 6));\nconsole.log(multiply(10, 7));\nconsole.log(multiply(10, 8));\nconsole.log(multiply(10, 9));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 11));\nconsole.log(multiply(10, 12));\nconsole.log(multiply(10, 13));\nconsole.log(multiply(10, 14));\nconsole.log(multiply(10, 15));\nconsole.log(multiply(10, 16));\nconsole.log(multiply(10, 17));\nconsole.log(multiply(10, 18));\nconsole.log(multiply(10, 19));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 21));\nconsole.log(multiply(10, 22));\nconsole.log(multiply(10, 23));\nconsole.log(multiply(10, 24));\nconsole.log(multiply(10, 25));\nconsole.log(multiply(10, 26));\nconsole.log(multiply(10, 27));\nconsole.log(multiply(10, 28));\nconsole.log(multiply(10, 29));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 31));\nconsole.log(multiply(10, 32));\nconsole.log(multiply(10, 33));\nconsole.log(multiply(10, 34));\nconsole.log(multiply(10, 35));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp0jb_2823.js:52:12)\n    at Object.<anonymous> (/tmp/tmp0jb_2823.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n-0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    const aString = a.toString();\n    const bString = b.toString();\n    const aUnit = aString[aString.length - 1];\n    const bUnit = bString[bString.length - 1];\n    return Number(aUnit) * Number(bUnit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1000));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 1));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(2, 1));\nconsole.log(multiply(2, 2));\nconsole.log(multiply(8, 9));\nconsole.log(multiply(9, 8));\nconsole.log(multiply(9, 9));\nconsole.log(multiply(9, 0));\nconsole.log(multiply(0, 9));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1000));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 1));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(2, 1));\nconsole.log(multiply(2, 2));\nconsole.log(multiply(8, 9));\nconsole.log(multiply(9, 8));\nconsole.log(multiply(9, 9));\nconsole.log(multiply(9, 0));\nconsole.log(multiply(0, 9));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpuxm469g1.js:44:12)\n    at Object.<anonymous> (/tmp/tmpuxm469g1.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n25\n0\n0\n0\n0\n1\n2\n2\n4\n72\n72\n81\n0\n0\n18\n25\n0\n0\n0\n0\n1\n2\n2\n4\n72\n72\n81\n0\n0\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    const product = a * b;\n    const productString = product.toString();\n    const productStringLength = productString.length;\n    const productStringLastDigit = productString[productStringLength - 1];\n    const productStringLastDigitNumber = Number(productStringLastDigit);\n    return productStringLastDigitNumber;\n}\n\nconsole.log(multiply(2, 3));\nconsole.log(multiply(2, 4));\nconsole.log(multiply(2, 5));\nconsole.log(multiply(2, 6));\nconsole.log(multiply(2, 7));\nconsole.log(multiply(2, 8));\nconsole.log(multiply(2, 9));\nconsole.log(multiply(2, 10));\nconsole.log(multiply(2, 11));\nconsole.log(multiply(2, 12));\nconsole.log(multiply(2, 13));\nconsole.log(multiply(2, 14));\nconsole.log(multiply(2, 15));\nconsole.log(multiply(2, 16));\nconsole.log(multiply(2, 17));\nconsole.log(multiply(2, 18));\nconsole.log(multiply(2, 19));\nconsole.log(multiply(2, 20));\nconsole.log(multiply(2, 21));\nconsole.log(multiply(2, 22));\nconsole.log(multiply(2, 23));\nconsole.log(multiply(2, 24));\nconsole.log(multiply(2, 25));\nconsole.log(multiply(2, 26));\nconsole.log(multiply(2, 27));\nconsole.log(multiply(2, 28));\nconsole.log(multiply(2, 29));\nconsole.log(multiply(2, 30));\nconsole.log(multiply(2, 31));\nconsole.log(multiply(2, 32));\nconsole.log(multiply(2, 33));\nconsole.log(multiply(2, 34));\nconsole.log(multiply(2, 35));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpphzg16fw.js:50:12)\n    at Object.<anonymous> (/tmp/tmpphzg16fw.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "6\n8\n0\n2\n4\n6\n8\n0\n2\n4\n6\n8\n0\n2\n4\n6\n8\n0\n2\n4\n6\n8\n0\n2\n4\n6\n8\n0\n2\n4\n6\n8\n0\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2));\nconsole.log(multiply(5, 2));\nconsole.log(multiply(10, 2));\nconsole.log(multiply(25, 2));\nconsole.log(multiply(123, 45));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp_6kbrmk5.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_6kbrmk5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n10\n0\n10\n15\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    let aArr = a.toString().split('');\n    let bArr = b.toString().split('');\n    return parseInt(aArr[aArr.length - 1]) * parseInt(bArr[bArr.length - 1]);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1000));\nconsole.log(multiply(0, 1000));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 1));\nconsole.log(multiply(1, 10));\nconsole.log(multiply(10, 1));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1000));\nconsole.log(multiply(0, 1000));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 1));\nconsole.log(multiply(1, 10));\nconsole.log(multiply(10, 1));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1000));\nconsole.log(multiply(0, 1000));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 1));\nconsole.log(multiply(1,\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp5iuk8mjb.ts(45,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 45)); // 6\nconsole.log(multiply(123, 456)); // 8\nconsole.log(multiply(123, 4567)); // 0\nconsole.log(multiply(123, 45678)); // 0\nconsole.log(multiply(123, 456789)); // 0\nconsole.log(multiply(123, 4567890)); // 0\nconsole.log(multiply(123, 45678901)); // 0\nconsole.log(multiply(123, 456789012)); // 0\nconsole.log(multiply(123, 4567890123)); // 0\nconsole.log(multiply(123, 45678901234)); // 0\nconsole.log(multiply(123, 456789012345)); // 0\nconsole.log(multiply(123, 4567890123456)); // 0\nconsole.log(multiply(123, 45678901234567)); // 0\nconsole.log(multiply(123, 456789012345678)); // 0\nconsole.log(multiply(123, 4567890123456789)); // 0\nconsole.log(multiply(123, 45678901234567890)); // 0\nconsole.log(multiply(123, 456789012345678901)); // 0\nconsole.log(multiply(123, 4567890123456789012)); // 0\nconsole.log(multiply(123, 45678901234567890123)); // 0\nconsole.log(multiply(123, 456789012345678901234)); // 0\nconsole.log(multiply(123, 4567890123456789012345)); // 0\nconsole.log(multiply(123, 45678901234567890123456)); // 0\nconsole.log(multiply(123, 456789012345678901234567)); // 0\nconsole.log(multiply(123, 4567890123456789012345678)); // 0\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpqjlq91k6.js:39:12)\n    at Object.<anonymous> (/tmp/tmpqjlq91k6.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "15\n18\n21\n24\n27\n0\n3\n6\n9\n12\n15\n18\n21\n24\n27\n24\n6\n6\n18\n24\n12\n12\n6\n6\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpgkyi_r8_.js:52:12)\n    at Object.<anonymous> (/tmp/tmpgkyi_r8_.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpdvp_m12i.js:15:12)\n    at Object.<anonymous> (/tmp/tmpdvp_m12i.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 10));\nconsole.log(multiply(5, -10));\nconsole.log(multiply(5, 0));\nconsole.log(multiply(5, 1));\nconsole.log(multiply(5, 2));\nconsole.log(multiply(5, 3));\nconsole.log(multiply(5, 4));\nconsole.log(multiply(5, 5));\nconsole.log(multiply(5, 6));\nconsole.log(multiply(5, 7));\nconsole.log(multiply(5, 8));\nconsole.log(multiply(5, 9));\nconsole.log(multiply(5, 10));\nconsole.log(multiply(5, 11));\nconsole.log(multiply(5, 12));\nconsole.log(multiply(5, 13));\nconsole.log(multiply(5, 14));\nconsole.log(multiply(5, 15));\nconsole.log(multiply(5, 16));\nconsole.log(multiply(5, 17));\nconsole.log(multiply(5, 18));\nconsole.log(multiply(5, 19));\nconsole.log(multiply(5, 20));\nconsole.log(multiply(5, 21));\nconsole.log(multiply(5, 22));\nconsole.log(multiply(5, 23));\nconsole.log(multiply(5, 24));\nconsole.log(multiply(5, 25));\nconsole.log(multiply(5, 26));\nconsole.log(multiply(5, 27));\nconsole.log(multiply(5, 28));\nconsole.log(multiply(5, 29));\nconsole.log(multiply(5, 30));\nconsole.log(multiply(5, 31));\nconsole.log(multiply(5, 32));\nconsole.log(multiply(5, 33));\nconsole.log(multiply(5, 34));\nconsole.log(multiply(5, 35));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp8tc933yx.js:52:12)\n    at Object.<anonymous> (/tmp/tmp8tc933yx.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n-0\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 45)); // 6\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(123, 4567)); // 2\nconsole.log(multiply(123, 45678)); // 0\nconsole.log(multiply(123, 456789)); // 0\nconsole.log(multiply(123, 4567890)); // 0\nconsole.log(multiply(123, 45678901)); // 0\nconsole.log(multiply(123, 456789012)); // 0\nconsole.log(multiply(123, 4567890123)); // 0\nconsole.log(multiply(123, 45678901234)); // 0\nconsole.log(multiply(123, 456789012345)); // 0\nconsole.log(multiply(123, 4567890123456)); // 0\nconsole.log(multiply(123, 45678901234567)); // 0\nconsole.log(multiply(123, 456789012345678)); // 0\nconsole.log(multiply(123, 4567890123456789)); // 0\nconsole.log(multiply(123, 45678901234567890)); // 0\nconsole.log(multiply(123, 456789012345678901)); // 0\nconsole.log(multiply(123, 4567890123456789012)); // 0\nconsole.log(multiply(123, 45678901234567890123)); // 0\nconsole.log(multiply(123, 456789012345678901234)); // 0\nconsole.log(multiply(123, 4567890123456789012345)); // 0\nconsole.log(multiply(123, 45678901234567890123456)); // 0\nconsole.log(multiply(123, 456789012345678901234567)); // 0\nconsole.log(multiply(123, 4567890123456789012345678)); // 0\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpt5zjlf6k.js:39:12)\n    at Object.<anonymous> (/tmp/tmpt5zjlf6k.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "15\n18\n21\n24\n27\n0\n3\n6\n9\n12\n15\n18\n21\n24\n27\n24\n6\n6\n18\n24\n12\n12\n6\n6\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(1, 3)); // 3\nconsole.log(multiply(1, 4)); // 4\nconsole.log(multiply(1, 5)); // 5\nconsole.log(multiply(1, 6)); // 6\nconsole.log(multiply(1, 7)); // 7\nconsole.log(multiply(1, 8)); // 8\nconsole.log(multiply(1, 9)); // 9\nconsole.log(multiply(1, 10)); // 0\nconsole.log(multiply(1, 11)); // 1\nconsole.log(multiply(1, 12)); // 2\nconsole.log(multiply(1, 13)); // 3\nconsole.log(multiply(1, 14)); // 4\nconsole.log(multiply(1, 15)); // 5\nconsole.log(multiply(1, 16)); // 6\nconsole.log(multiply(1, 17)); // 7\nconsole.log(multiply(1, 18)); // 8\nconsole.log(multiply(1, 19)); // 9\nconsole.log(multiply(1, 20)); // 0\nconsole.log(multiply(1, 21)); // 1\nconsole.log(multiply(1, 22)); // 2\nconsole.log(multiply(1, 23)); // 3\nconsole.log(multiply(1, 24)); // 4\nconsole.log(multiply(1, 25)); // 5\nconsole.log(multiply(1, 26)); // 6\nconsole.log(multiply(1, 27)); // 7\nconsole.log(multiply(1, 28)); // 8\nconsole.log(multiply(1, 29)); // 9\nconsole.log(multiply(1, 30)); // 0\nconsole.log(multiply(1, 31)); // 1\nconsole.log(multiply(1, 32)); // 2\nconsole.log(multiply(1, 33)); // 3\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpncwqt7tn.js:47:12)\n    at Object.<anonymous> (/tmp/tmpncwqt7tn.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n1\n2\n3\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 5));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 0));\nconsole.log(multiply(0, 10));\nconsole.log(multiply(0, 0));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp8l1ewy3r.js:19:12)\n    at Object.<anonymous> (/tmp/tmp8l1ewy3r.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "25\n0\n0\n0\n0\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(5, 2)); // 10\nconsole.log(multiply(4, 5)); // 20\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 0)); // 0\nconsole.log(multiply(0, 9)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(0, 1)); // 0\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpdetybzz2.js:24:12)\n    at Object.<anonymous> (/tmp/tmpdetybzz2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n10\n20\n81\n0\n0\n0\n1\n0\n0\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpdvp_m12i.js:15:12)\n    at Object.<anonymous> (/tmp/tmpdvp_m12i.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 40));\nconsole.log(multiply(10, 50));\nconsole.log(multiply(10, 60));\nconsole.log(multiply(10, 70));\nconsole.log(multiply(10, 80));\nconsole.log(multiply(10, 90));\nconsole.log(multiply(10, 100));\nconsole.log(multiply(10, 110));\nconsole.log(multiply(10, 120));\nconsole.log(multiply(10, 130));\nconsole.log(multiply(10, 140));\nconsole.log(multiply(10, 150));\nconsole.log(multiply(10, 160));\nconsole.log(multiply(10, 170));\nconsole.log(multiply(10, 180));\nconsole.log(multiply(10, 190));\nconsole.log(multiply(10, 200));\nconsole.log(multiply(10, 210));\nconsole.log(multiply(10, 220));\nconsole.log(multiply(10, 230));\nconsole.log(multiply(10, 240));\nconsole.log(multiply(10, 250));\nconsole.log(multiply(10, 260));\nconsole.log(multiply(10, 270));\nconsole.log(multiply(10, 280));\nconsole.log(multiply(10, 290));\nconsole.log(multiply(10, 300));\nconsole.log(multiply(10, 310));\nconsole.log(multiply(10, 320));\nconsole.log(multiply(10, 330));\nconsole.log(multiply(10, 340));\nconsole.log(multiply(10, 350));\nconsole.log(multiply(10, 360));\nconsole.log(multiply(10, 370));\nconsole.log(multiply(10, 380));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp6izqod2x.js:52:12)\n    at Object.<anonymous> (/tmp/tmp6izqod2x.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 1));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 100));\nconsole.log(multiply(10, 1000));\nconsole.log(multiply(10, 10000));\nconsole.log(multiply(10, 100000));\nconsole.log(multiply(10, 1000000));\nconsole.log(multiply(10, 10000000));\nconsole.log(multiply(10, 100000000));\nconsole.log(multiply(10, 1000000000));\nconsole.log(multiply(10, 10000000000));\nconsole.log(multiply(10, 100000000000));\nconsole.log(multiply(10, 1000000000000));\nconsole.log(multiply(10, 10000000000000));\nconsole.log(multiply(10, 100000000000000));\nconsole.log(multiply(10, 1000000000000000));\nconsole.log(multiply(10, 10000000000000000));\nconsole.log(multiply(10, 100000000000000000));\nconsole.log(multiply(10, 1000000000000000000));\nconsole.log(multiply(10, 10000000000000000000));\nconsole.log(multiply(10, 100000000000000000000));\nconsole.log(multiply(10, 1000000000000000000000));\nconsole.log(multiply(10, 10000000000000000000000));\nconsole.log(multiply(10, 100000000000000000000000));\nconsole.log(multiply(10, 1000000000000000000000000));\nconsole.log(multiply(10, 10000000000000000000000000));\nconsole.log(multiply(10, 100000000000000000000000000));\nconsole.log(multiply(10, 1000000000000000000000000000));\nconsole.log(multiply(10, 10000000000000000000000000000));\nconsole.log(multiply(10, 100000000000000000000000000000));\nconsole.log(multiply(10, 1000000000000000000000000000000));\nconsole.log(multiply(10, 10000000000000000000000000000000));\nconsole.log(multiply(10, 100000000000000000000000000000000));\nconsole.log(multiply(10\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpvjn2tmfn.ts(43,1): error TS1005: ',' expected.\n../../../../tmp/tmpvjn2tmfn.ts(43,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return Number(a.toString().slice(-1)) * Number(b.toString().slice(-1));\n}\n\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 888)); // 5\nconsole.log(multiply(12, 5)); // 2\nconsole.log(multiply(102, 202)); // 4\nconsole.log(multiply(0, 100)); // 0\nconsole.log(multiply(100, 0)); // 0\nconsole.log(multiply(123456789, 987654321)); // 9\nconsole.log(multiply(123456789, 987654321)); // 9\nconsole.log(multiply(123456789, 987654321)); // 9\nconsole.log(multiply(123456789, 987654321)); // 9\nconsole.log(multiply(123456789, 987654321)); // 9\nconsole.log(multiply(123456789, 987654321)); // 9\nconsole.log(multiply(123456789, 987654321)); // 9\nconsole.log(multiply(123456789, 987654321)); // 9\nconsole.log(multiply(123456789, 987654321)); // 9\nconsole.log(multiply(123456789, 987654321)); // 9\nconsole.log(multiply(123456789, 987654321)); // 9\nconsole.log(multiply(123456789, 987654321)); // 9\nconsole.log(multiply(123456789, 987654321)); // 9\nconsole.log(multiply(123456789, 987654321)); // 9\nconsole.log(multiply(123456789, 987654321)); // 9\nconsole.log(multiply(123456789, 987654321)); // 9\nconsole.log(multiply(123456789, 987654321)); // 9\nconsole.log(multiply(123456789, 98765\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpplmjc23_.ts(33,1): error TS1005: ',' expected.\n../../../../tmp/tmpplmjc23_.ts(33,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    let aString = a.toString();\n    let bString = b.toString();\n    let aLast = aString.slice(-1);\n    let bLast = bString.slice(-1);\n    let aLastNum = parseInt(aLast);\n    let bLastNum = parseInt(bLast);\n    return aLastNum * bLastNum;\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 55));\nconsole.log(multiply(0, 30));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 0));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "18\n25\n0\n0\n1\n0\n0\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 40));\nconsole.log(multiply(10, 50));\nconsole.log(multiply(10, 60));\nconsole.log(multiply(10, 70));\nconsole.log(multiply(10, 80));\nconsole.log(multiply(10, 90));\nconsole.log(multiply(10, 100));\nconsole.log(multiply(10, 110));\nconsole.log(multiply(10, 120));\nconsole.log(multiply(10, 130));\nconsole.log(multiply(10, 140));\nconsole.log(multiply(10, 150));\nconsole.log(multiply(10, 160));\nconsole.log(multiply(10, 170));\nconsole.log(multiply(10, 180));\nconsole.log(multiply(10, 190));\nconsole.log(multiply(10, 200));\nconsole.log(multiply(10, 210));\nconsole.log(multiply(10, 220));\nconsole.log(multiply(10, 230));\nconsole.log(multiply(10, 240));\nconsole.log(multiply(10, 250));\nconsole.log(multiply(10, 260));\nconsole.log(multiply(10, 270));\nconsole.log(multiply(10, 280));\nconsole.log(multiply(10, 290));\nconsole.log(multiply(10, 300));\nconsole.log(multiply(10, 310));\nconsole.log(multiply(10, 320));\nconsole.log(multiply(10, 330));\nconsole.log(multiply(10, 340));\nconsole.log(multiply(10, 350));\nconsole.log(multiply(10, 360));\nconsole.log(multiply(10, 370));\nconsole.log(multiply(10, 380));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp6uqnadb8.js:53:12)\n    at Object.<anonymous> (/tmp/tmp6uqnadb8.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, -20));\nconsole.log(multiply(10, 0));\nconsole.log(multiply(10, 1));\nconsole.log(multiply(10, 2));\nconsole.log(multiply(10, 3));\nconsole.log(multiply(10, 4));\nconsole.log(multiply(10, 5));\nconsole.log(multiply(10, 6));\nconsole.log(multiply(10, 7));\nconsole.log(multiply(10, 8));\nconsole.log(multiply(10, 9));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 11));\nconsole.log(multiply(10, 12));\nconsole.log(multiply(10, 13));\nconsole.log(multiply(10, 14));\nconsole.log(multiply(10, 15));\nconsole.log(multiply(10, 16));\nconsole.log(multiply(10, 17));\nconsole.log(multiply(10, 18));\nconsole.log(multiply(10, 19));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 21));\nconsole.log(multiply(10, 22));\nconsole.log(multiply(10, 23));\nconsole.log(multiply(10, 24));\nconsole.log(multiply(10, 25));\nconsole.log(multiply(10, 26));\nconsole.log(multiply(10, 27));\nconsole.log(multiply(10, 28));\nconsole.log(multiply(10, 29));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 31));\nconsole.log(multiply(10, 32));\nconsole.log(multiply(10, 33));\nconsole.log(multiply(10, 34));\nconsole.log(multiply(10, 35));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp0jb_2823.js:52:12)\n    at Object.<anonymous> (/tmp/tmp0jb_2823.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n-0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(12, 3));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(0, 123));\nconsole.log(multiply(0, 0));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpnwcbyyab.js:19:12)\n    at Object.<anonymous> (/tmp/tmpnwcbyyab.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "6\n18\n0\n0\n0\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 40));\nconsole.log(multiply(10, 50));\nconsole.log(multiply(10, 60));\nconsole.log(multiply(10, 70));\nconsole.log(multiply(10, 80));\nconsole.log(multiply(10, 90));\nconsole.log(multiply(10, 100));\nconsole.log(multiply(10, 110));\nconsole.log(multiply(10, 120));\nconsole.log(multiply(10, 130));\nconsole.log(multiply(10, 140));\nconsole.log(multiply(10, 150));\nconsole.log(multiply(10, 160));\nconsole.log(multiply(10, 170));\nconsole.log(multiply(10, 180));\nconsole.log(multiply(10, 190));\nconsole.log(multiply(10, 200));\nconsole.log(multiply(10, 210));\nconsole.log(multiply(10, 220));\nconsole.log(multiply(10, 230));\nconsole.log(multiply(10, 240));\nconsole.log(multiply(10, 250));\nconsole.log(multiply(10, 260));\nconsole.log(multiply(10, 270));\nconsole.log(multiply(10, 280));\nconsole.log(multiply(10, 290));\nconsole.log(multiply(10, 300));\nconsole.log(multiply(10, 310));\nconsole.log(multiply(10, 320));\nconsole.log(multiply(10, 330));\nconsole.log(multiply(10, 340));\nconsole.log(multiply(10, 350));\nconsole.log(multiply(10, 360));\nconsole.log(multiply(10, 370));\nconsole.log(multiply(10, 380));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpl_hd4ksp.js:52:12)\n    at Object.<anonymous> (/tmp/tmpl_hd4ksp.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333621
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return a * b;\n}\n\nconsole.log(multiply(2, 3));\nconsole.log(multiply(5, 2));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(1, 9));\nconsole.log(multiply(9, 1));\nconsole.log(multiply(9, 9));\nconsole.log(multiply(9, 0));\nconsole.log(multiply(0, 9));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60976\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpfde0j_bb.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfde0j_bb.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60976,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "6\n10\n0\n9\n9\n81\n0\n0\n",
      "timestamp": 1660333621
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return Number(a.toString().slice(-1)) * Number(b.toString().slice(-1));\n}\n\nconsole.log(multiply(123, 45)); // 6\nconsole.log(multiply(123, 456)); // 6\nconsole.log(multiply(123, 4567)); // 7\nconsole.log(multiply(123, 45678)); // 8\nconsole.log(multiply(123, 456789)); // 9\nconsole.log(multiply(123, 4567890)); // 0\nconsole.log(multiply(123, 45678901)); // 1\nconsole.log(multiply(123, 456789012)); // 2\nconsole.log(multiply(123, 4567890123)); // 3\nconsole.log(multiply(123, 45678901234)); // 4\nconsole.log(multiply(123, 456789012345)); // 5\nconsole.log(multiply(123, 4567890123456)); // 6\nconsole.log(multiply(123, 45678901234567)); // 7\nconsole.log(multiply(123, 456789012345678)); // 8\nconsole.log(multiply(123, 4567890123456789)); // 9\nconsole.log(multiply(123, 45678901234567890)); // 0\nconsole.log(multiply(123, 456789012345678901)); // 1\nconsole.log(multiply(123, 4567890123456789012)); // 2\nconsole.log(multiply(123, 45678901234567890123)); // 3\nconsole.log(multiply(123, 456789012345678901234)); // 4\nconsole.log(multiply(123, 4567890123456789012345)); // 5\nconsole.log(multiply(123, 45678901234567890123456)); // 6\nconsole.log(multiply(123, 456789012345678901234567)); // 7\nconsole.log(multiply(123, 4567890123\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmptmc07dn_.ts(33,1): error TS1005: ',' expected.\n../../../../tmp/tmptmc07dn_.ts(33,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333621
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 2));\nconsole.log(multiply(10, 5));\nconsole.log(multiply(10, 7));\nconsole.log(multiply(10, 9));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp7x0d2a6w.js:18:12)\n    at Object.<anonymous> (/tmp/tmp7x0d2a6w.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10)); // 0\nconsole.log(multiply(10, 1)); // 0\nconsole.log(multiply(10, 2)); // 0\nconsole.log(multiply(10, 3)); // 0\nconsole.log(multiply(10, 4)); // 0\nconsole.log(multiply(10, 5)); // 0\nconsole.log(multiply(10, 6)); // 0\nconsole.log(multiply(10, 7)); // 0\nconsole.log(multiply(10, 8)); // 0\nconsole.log(multiply(10, 9)); // 0\nconsole.log(multiply(10, 10)); // 0\nconsole.log(multiply(10, 11)); // 0\nconsole.log(multiply(10, 12)); // 0\nconsole.log(multiply(10, 13)); // 0\nconsole.log(multiply(10, 14)); // 0\nconsole.log(multiply(10, 15)); // 0\nconsole.log(multiply(10, 16)); // 0\nconsole.log(multiply(10, 17)); // 0\nconsole.log(multiply(10, 18)); // 0\nconsole.log(multiply(10, 19)); // 0\nconsole.log(multiply(10, 20)); // 0\nconsole.log(multiply(10, 21)); // 0\nconsole.log(multiply(10, 22)); // 0\nconsole.log(multiply(10, 23)); // 0\nconsole.log(multiply(10, 24)); // 0\nconsole.log(multiply(10, 25)); // 0\nconsole.log(multiply(10, 26)); // 0\nconsole.log(multiply(10, 27)); // 0\nconsole.log(multiply(10, 28)); // 0\nconsole.log(multiply(10, 29)); // 0\nconsole.log(multiply(10, 30)); // 0\nconsole.log(multiply(10, 31)); // 0\nconsole.log(multiply(10, 32)); // 0\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpn8py9_gi.js:47:12)\n    at Object.<anonymous> (/tmp/tmpn8py9_gi.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return a * b;\n}\n\nconsole.log(multiply(5, 3));\nconsole.log(multiply(5, -3));\nconsole.log(multiply(-5, -3));\nconsole.log(multiply(5, 0));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60976\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp2zec9ft_.js:15:12)\n    at Object.<anonymous> (/tmp/tmp2zec9ft_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60976,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "15\n-15\n15\n0\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10)); // 0\nconsole.log(multiply(10, 1)); // 0\nconsole.log(multiply(10, 2)); // 0\nconsole.log(multiply(10, 3)); // 0\nconsole.log(multiply(10, 4)); // 0\nconsole.log(multiply(10, 5)); // 0\nconsole.log(multiply(10, 6)); // 0\nconsole.log(multiply(10, 7)); // 0\nconsole.log(multiply(10, 8)); // 0\nconsole.log(multiply(10, 9)); // 0\nconsole.log(multiply(10, 10)); // 0\nconsole.log(multiply(10, 11)); // 0\nconsole.log(multiply(10, 12)); // 0\nconsole.log(multiply(10, 13)); // 0\nconsole.log(multiply(10, 14)); // 0\nconsole.log(multiply(10, 15)); // 0\nconsole.log(multiply(10, 16)); // 0\nconsole.log(multiply(10, 17)); // 0\nconsole.log(multiply(10, 18)); // 0\nconsole.log(multiply(10, 19)); // 0\nconsole.log(multiply(10, 20)); // 0\nconsole.log(multiply(10, 21)); // 0\nconsole.log(multiply(10, 22)); // 0\nconsole.log(multiply(10, 23)); // 0\nconsole.log(multiply(10, 24)); // 0\nconsole.log(multiply(10, 25)); // 0\nconsole.log(multiply(10, 26)); // 0\nconsole.log(multiply(10, 27)); // 0\nconsole.log(multiply(10, 28)); // 0\nconsole.log(multiply(10, 29)); // 0\nconsole.log(multiply(10, 30)); // 0\nconsole.log(multiply(10, 31)); // 0\nconsole.log(multiply(10, 32)); // 0\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpn8py9_gi.js:47:12)\n    at Object.<anonymous> (/tmp/tmpn8py9_gi.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2));\nconsole.log(multiply(5, 2));\nconsole.log(multiply(10, 2));\nconsole.log(multiply(25, 2));\nconsole.log(multiply(123, 45));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp_6kbrmk5.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_6kbrmk5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n10\n0\n10\n15\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpdvp_m12i.js:15:12)\n    at Object.<anonymous> (/tmp/tmpdvp_m12i.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 3)); // 15\nconsole.log(multiply(5, 4)); // 20\nconsole.log(multiply(5, 5)); // 25\nconsole.log(multiply(5, 6)); // 30\nconsole.log(multiply(5, 7)); // 35\nconsole.log(multiply(5, 8)); // 40\nconsole.log(multiply(5, 9)); // 45\nconsole.log(multiply(5, 10)); // 50\nconsole.log(multiply(5, 11)); // 55\nconsole.log(multiply(5, 12)); // 60\nconsole.log(multiply(5, 13)); // 65\nconsole.log(multiply(5, 14)); // 70\nconsole.log(multiply(5, 15)); // 75\nconsole.log(multiply(5, 16)); // 80\nconsole.log(multiply(5, 17)); // 85\nconsole.log(multiply(5, 18)); // 90\nconsole.log(multiply(5, 19)); // 95\nconsole.log(multiply(5, 20)); // 100\nconsole.log(multiply(5, 21)); // 105\nconsole.log(multiply(5, 22)); // 110\nconsole.log(multiply(5, 23)); // 115\nconsole.log(multiply(5, 24)); // 120\nconsole.log(multiply(5, 25)); // 125\nconsole.log(multiply(5, 26)); // 130\nconsole.log(multiply(5, 27)); // 135\nconsole.log(multiply(5, 28)); // 140\nconsole.log(multiply(5, 29)); // 145\nconsole.log(multiply(5, 30)); // 150\nconsole.log(multiply(5, 31)); // 155\nconsole.log(multiply(5, 32)); // 160\nconsole.log(multiply(5, 33)); // 165\nconsole.log(multiply(5, 34)); // 170\nconsole.log(multiply(5, 35)); // 175\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp1pad63f3.js:47:12)\n    at Object.<anonymous> (/tmp/tmp1pad63f3.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 1));\nconsole.log(multiply(10, 0));\nconsole.log(multiply(10, 2));\nconsole.log(multiply(10, 3));\nconsole.log(multiply(10, 4));\nconsole.log(multiply(10, 5));\nconsole.log(multiply(10, 6));\nconsole.log(multiply(10, 7));\nconsole.log(multiply(10, 8));\nconsole.log(multiply(10, 9));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 11));\nconsole.log(multiply(10, 12));\nconsole.log(multiply(10, 13));\nconsole.log(multiply(10, 14));\nconsole.log(multiply(10, 15));\nconsole.log(multiply(10, 16));\nconsole.log(multiply(10, 17));\nconsole.log(multiply(10, 18));\nconsole.log(multiply(10, 19));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 21));\nconsole.log(multiply(10, 22));\nconsole.log(multiply(10, 23));\nconsole.log(multiply(10, 24));\nconsole.log(multiply(10, 25));\nconsole.log(multiply(10, 26));\nconsole.log(multiply(10, 27));\nconsole.log(multiply(10, 28));\nconsole.log(multiply(10, 29));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 31));\nconsole.log(multiply(10, 32));\nconsole.log(multiply(10, 33));\nconsole.log(multiply(10, 34));\nconsole.log(multiply(10, 35));\nconsole.log(multiply(10, 36));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp1p5vo4i9.js:52:12)\n    at Object.<anonymous> (/tmp/tmp1p5vo4i9.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return Number(a.toString().slice(-1)) * Number(b.toString().slice(-1));\n}\n\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 40));\nconsole.log(multiply(10, 50));\nconsole.log(multiply(10, 60));\nconsole.log(multiply(10, 70));\nconsole.log(multiply(10, 80));\nconsole.log(multiply(10, 90));\nconsole.log(multiply(10, 100));\nconsole.log(multiply(10, 110));\nconsole.log(multiply(10, 120));\nconsole.log(multiply(10, 130));\nconsole.log(multiply(10, 140));\nconsole.log(multiply(10, 150));\nconsole.log(multiply(10, 160));\nconsole.log(multiply(10, 170));\nconsole.log(multiply(10, 180));\nconsole.log(multiply(10, 190));\nconsole.log(multiply(10, 200));\nconsole.log(multiply(10, 210));\nconsole.log(multiply(10, 220));\nconsole.log(multiply(10, 230));\nconsole.log(multiply(10, 240));\nconsole.log(multiply(10, 250));\nconsole.log(multiply(10, 260));\nconsole.log(multiply(10, 270));\nconsole.log(multiply(10, 280));\nconsole.log(multiply(10, 290));\nconsole.log(multiply(10, 300));\nconsole.log(multiply(10, 310));\nconsole.log(multiply(10, 320));\nconsole.log(multiply(10, 330));\nconsole.log(multiply(10, 340));\nconsole.log(multiply(10, 350));\nconsole.log(multiply(10, 360));\nconsole.log(multiply(10, 370));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 3));\nconsole.log(multiply(1, 4));\nconsole.log(multiply(1, 5));\nconsole.log(multiply(1, 6));\nconsole.log(multiply(1, 7));\nconsole.log(multiply(1, 8));\nconsole.log(multiply(1, 9));\nconsole.log(multiply(1, 10));\nconsole.log(multiply(1, 11));\nconsole.log(multiply(1, 12));\nconsole.log(multiply(1, 13));\nconsole.log(multiply(1, 14));\nconsole.log(multiply(1, 15));\nconsole.log(multiply(1, 16));\nconsole.log(multiply(1, 17));\nconsole.log(multiply(1, 18));\nconsole.log(multiply(1, 19));\nconsole.log(multiply(1, 20));\nconsole.log(multiply(1, 21));\nconsole.log(multiply(1, 22));\nconsole.log(multiply(1, 23));\nconsole.log(multiply(1, 24));\nconsole.log(multiply(1, 25));\nconsole.log(multiply(1, 26));\nconsole.log(multiply(1, 27));\nconsole.log(multiply(1, 28));\nconsole.log(multiply(1, 29));\nconsole.log(multiply(1, 30));\nconsole.log(multiply(1, 31));\nconsole.log(multiply(1, 32));\nconsole.log(multiply(1, 33));\nconsole.log(multiply(1, 34));\nconsole.log(multiply(1, 35));\nconsole.log(multiply(1, 36));\nconsole.log(multiply(1, 37));\nconsole.log(multiply(1, 38));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpjhdzv35o.js:52:12)\n    at Object.<anonymous> (/tmp/tmpjhdzv35o.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n1\n2\n3\n4\n5\n6\n7\n8\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return Number(String(a).slice(-1)) * Number(String(b).slice(-1));\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1000));\nconsole.log(multiply(0, 1000));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "18\n25\n0\n0\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return Number(a.toString().split('').pop()) * Number(b.toString().split('').pop());\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 777));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(123, -5));\nconsole.log(multiply(-5, -5));\nconsole.log(multiply(-5, 0));\nconsole.log(multiply(0, -5));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "18\n35\n0\n0\n15\n25\n0\n0\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 10));\nconsole.log(multiply(5, -10));\nconsole.log(multiply(5, 0));\nconsole.log(multiply(5, 1));\nconsole.log(multiply(5, 2));\nconsole.log(multiply(5, 3));\nconsole.log(multiply(5, 4));\nconsole.log(multiply(5, 5));\nconsole.log(multiply(5, 6));\nconsole.log(multiply(5, 7));\nconsole.log(multiply(5, 8));\nconsole.log(multiply(5, 9));\nconsole.log(multiply(5, 10));\nconsole.log(multiply(5, 11));\nconsole.log(multiply(5, 12));\nconsole.log(multiply(5, 13));\nconsole.log(multiply(5, 14));\nconsole.log(multiply(5, 15));\nconsole.log(multiply(5, 16));\nconsole.log(multiply(5, 17));\nconsole.log(multiply(5, 18));\nconsole.log(multiply(5, 19));\nconsole.log(multiply(5, 20));\nconsole.log(multiply(5, 21));\nconsole.log(multiply(5, 22));\nconsole.log(multiply(5, 23));\nconsole.log(multiply(5, 24));\nconsole.log(multiply(5, 25));\nconsole.log(multiply(5, 26));\nconsole.log(multiply(5, 27));\nconsole.log(multiply(5, 28));\nconsole.log(multiply(5, 29));\nconsole.log(multiply(5, 30));\nconsole.log(multiply(5, 31));\nconsole.log(multiply(5, 32));\nconsole.log(multiply(5, 33));\nconsole.log(multiply(5, 34));\nconsole.log(multiply(5, 35));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp8tc933yx.js:52:12)\n    at Object.<anonymous> (/tmp/tmp8tc933yx.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n-0\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpgkyi_r8_.js:52:12)\n    at Object.<anonymous> (/tmp/tmpgkyi_r8_.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n20\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return Number(a.toString().slice(-1)) * Number(b.toString().slice(-1));\n}\n\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 555)); // 25\nconsole.log(multiply(1000, 1000)); // 0\nconsole.log(multiply(0, 2)); // 0\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(33, 44)); // 12\nconsole.log(multiply(10, 11)); // 0\nconsole.log(multiply(93, 65)); // 15\nconsole.log(multiply(100, 100)); // 0\nconsole.log(multiply(99, 99)); // 81\nconsole.log(multiply(98, 98)); // 16\nconsole.log(multiply(97, 97)); // 49\nconsole.log(multiply(96, 96)); // 36\nconsole.log(multiply(95, 95)); // 25\nconsole.log(multiply(94, 94)); // 16\nconsole.log(multiply(93, 93)); // 49\nconsole.log(multiply(92, 92)); // 16\nconsole.log(multiply(91, 91)); // 81\nconsole.log(multiply(90, 90)); // 0\nconsole.log(multiply(89, 89)); // 81\nconsole.log(multiply(88, 88)); // 64\nconsole.log(multiply(87, 87)); // 49\nconsole.log(multiply(86, 86)); // 36\nconsole.log(multiply(85, 85)); // 25\nconsole.log(multiply(84, 84)); // 16\nconsole.log(multiply(83, 83)); // 49\nconsole.log(multiply(82, 82)); // 64\nconsole.log(multiply(81, 81)); // 81\nconsole.log(multiply(80, 80)); // 0\nconsole.log(multiply(79, 79)); // 81\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "18\n25\n0\n0\n2\n0\n1\n12\n0\n15\n0\n81\n64\n49\n36\n25\n16\n9\n4\n1\n0\n81\n64\n49\n36\n25\n16\n9\n4\n1\n0\n81\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(12, 13));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(1, 0));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpl6_powp8.js:17:12)\n    at Object.<anonymous> (/tmp/tmpl6_powp8.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "6\n20\n0\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 777)); // 35\nconsole.log(multiply(5, 5)); // 25\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 777)); // 35\nconsole.log(multiply(5, 5)); // 25\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpbgxyy9m4.js:20:12)\n    at Object.<anonymous> (/tmp/tmpbgxyy9m4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n35\n25\n18\n35\n25\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10)); // 0\nconsole.log(multiply(10, 1)); // 0\nconsole.log(multiply(10, 2)); // 0\nconsole.log(multiply(10, 3)); // 0\nconsole.log(multiply(10, 4)); // 0\nconsole.log(multiply(10, 5)); // 0\nconsole.log(multiply(10, 6)); // 0\nconsole.log(multiply(10, 7)); // 0\nconsole.log(multiply(10, 8)); // 0\nconsole.log(multiply(10, 9)); // 0\nconsole.log(multiply(10, 10)); // 0\nconsole.log(multiply(10, 11)); // 0\nconsole.log(multiply(10, 12)); // 0\nconsole.log(multiply(10, 13)); // 0\nconsole.log(multiply(10, 14)); // 0\nconsole.log(multiply(10, 15)); // 0\nconsole.log(multiply(10, 16)); // 0\nconsole.log(multiply(10, 17)); // 0\nconsole.log(multiply(10, 18)); // 0\nconsole.log(multiply(10, 19)); // 0\nconsole.log(multiply(10, 20)); // 0\nconsole.log(multiply(10, 21)); // 0\nconsole.log(multiply(10, 22)); // 0\nconsole.log(multiply(10, 23)); // 0\nconsole.log(multiply(10, 24)); // 0\nconsole.log(multiply(10, 25)); // 0\nconsole.log(multiply(10, 26)); // 0\nconsole.log(multiply(10, 27)); // 0\nconsole.log(multiply(10, 28)); // 0\nconsole.log(multiply(10, 29)); // 0\nconsole.log(multiply(10, 30)); // 0\nconsole.log(multiply(10, 31)); // 0\nconsole.log(multiply(10, 32)); // 0\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpn8py9_gi.js:47:12)\n    at Object.<anonymous> (/tmp/tmpn8py9_gi.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 15));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 3));\nconsole.log(multiply(1, 4));\nconsole.log(multiply(1, 5));\nconsole.log(multiply(1, 6));\nconsole.log(multiply(1, 7));\nconsole.log(multiply(1, 8));\nconsole.log(multiply(1, 9));\nconsole.log(multiply(2, 2));\nconsole.log(multiply(2, 3));\nconsole.log(multiply(2, 4));\nconsole.log(multiply(2, 5));\nconsole.log(multiply(2, 6));\nconsole.log(multiply(2, 7));\nconsole.log(multiply(2, 8));\nconsole.log(multiply(2, 9));\nconsole.log(multiply(3, 3));\nconsole.log(multiply(3, 4));\nconsole.log(multiply(3, 5));\nconsole.log(multiply(3, 6));\nconsole.log(multiply(3, 7));\nconsole.log(multiply(3, 8));\nconsole.log(multiply(3, 9));\nconsole.log(multiply(4, 4));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 6));\nconsole.log(multiply(4, 7));\nconsole.log(multiply(4, 8));\nconsole.log(multiply(4, 9));\nconsole.log(multiply(5, 5));\nconsole.log(multiply(5, 6));\nconsole.log(multiply(5, 7));\nconsole.log(multiply(5, 8));\nconsole.log(multiply(5, 9));\nconsole.log(multiply(6, 6));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpko6uo3xf.js:52:12)\n    at Object.<anonymous> (/tmp/tmpko6uo3xf.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n1\n0\n2\n3\n4\n5\n6\n7\n8\n9\n4\n6\n8\n10\n12\n14\n16\n18\n9\n12\n15\n18\n21\n24\n27\n16\n20\n24\n28\n32\n36\n25\n30\n35\n40\n45\n36\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 55));\nconsole.log(multiply(0, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 0));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp6vrd9y8t.js:21:12)\n    at Object.<anonymous> (/tmp/tmp6vrd9y8t.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n25\n0\n0\n2\n0\n0\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    let product = a * b;\n    let unitDigit = product % 10;\n    return unitDigit;\n}\n\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 3));\nconsole.log(multiply(1, 4));\nconsole.log(multiply(1, 5));\nconsole.log(multiply(1, 6));\nconsole.log(multiply(1, 7));\nconsole.log(multiply(1, 8));\nconsole.log(multiply(1, 9));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(2, 2));\nconsole.log(multiply(2, 3));\nconsole.log(multiply(2, 4));\nconsole.log(multiply(2, 5));\nconsole.log(multiply(2, 6));\nconsole.log(multiply(2, 7));\nconsole.log(multiply(2, 8));\nconsole.log(multiply(2, 9));\nconsole.log(multiply(2, 0));\nconsole.log(multiply(3, 3));\nconsole.log(multiply(3, 4));\nconsole.log(multiply(3, 5));\nconsole.log(multiply(3, 6));\nconsole.log(multiply(3, 7));\nconsole.log(multiply(3, 8));\nconsole.log(multiply(3, 9));\nconsole.log(multiply(3, 0));\nconsole.log(multiply(4, 4));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 6));\nconsole.log(multiply(4, 7));\nconsole.log(multiply(4, 8));\nconsole.log(multiply(4, 9));\nconsole.log(multiply(4, 0));\nconsole.log(multiply(5, 5));\nconsole.log(multiply(5, 6));\nconsole.log(multiply(5, 7));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmphvftjqmc.js:50:12)\n    at Object.<anonymous> (/tmp/tmphvftjqmc.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n4\n6\n8\n0\n2\n4\n6\n8\n0\n9\n2\n5\n8\n1\n4\n7\n0\n6\n0\n4\n8\n2\n6\n0\n5\n0\n5\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 5));\nconsole.log(multiply(1, 5));\nconsole.log(multiply(5, 1));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 1));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 0));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpmr_1zh1r.js:52:12)\n    at Object.<anonymous> (/tmp/tmpmr_1zh1r.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "25\n5\n5\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return Number(a.toString().slice(-1)) * Number(b.toString().slice(-1));\n}\n\nconsole.log(multiply(123, 45));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123, 4567));\nconsole.log(multiply(123, 45678));\nconsole.log(multiply(123, 456789));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "15\n18\n21\n24\n27\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return Math.floor(a / 10) * Math.floor(b / 10);\n}\n\nconsole.log(multiply(10, 10)); // 0\nconsole.log(multiply(1, 10)); // 0\nconsole.log(multiply(10, 1)); // 0\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(10, 11)); // 0\nconsole.log(multiply(11, 10)); // 0\nconsole.log(multiply(11, 11)); // 1\nconsole.log(multiply(12, 12)); // 4\nconsole.log(multiply(12, 13)); // 4\nconsole.log(multiply(13, 12)); // 4\nconsole.log(multiply(13, 13)); // 9\nconsole.log(multiply(13, 14)); // 8\nconsole.log(multiply(14, 13)); // 8\nconsole.log(multiply(14, 14)); // 6\nconsole.log(multiply(14, 15)); // 0\nconsole.log(multiply(15, 14)); // 0\nconsole.log(multiply(15, 15)); // 1\nconsole.log(multiply(15, 16)); // 0\nconsole.log(multiply(16, 15)); // 0\nconsole.log(multiply(16, 16)); // 6\nconsole.log(multiply(16, 17)); // 2\nconsole.log(multiply(17, 16)); // 2\nconsole.log(multiply(17, 17)); // 9\nconsole.log(multiply(17, 18)); // 6\nconsole.log(multiply(18, 17)); // 6\nconsole.log(multiply(18, 18)); // 4\nconsole.log(multiply(18, 19)); // 2\nconsole.log(multiply(19, 18)); // 2\nconsole.log(multiply(19, 19)); // 1\nconsole.log(multiply(19, 20)); // 0\nconsole.log(multiply(20, 19)); // 0\nconsole.log(multiply(20, 20)); // 0\nconsole.log(multiply(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpv8doj_a5.ts(42,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return Number(String(a).slice(-1)) * Number(String(b).slice(-1));\n}\n\nconsole.log(multiply(123, 45));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123, 4567));\nconsole.log(multiply(123, 45678));\nconsole.log(multiply(123, 456789));\nconsole.log(multiply(123, 4567890));\nconsole.log(multiply(123, 45678901));\nconsole.log(multiply(123, 456789012));\nconsole.log(multiply(123, 4567890123));\nconsole.log(multiply(123, 45678901234));\nconsole.log(multiply(123, 456789012345));\nconsole.log(multiply(123, 4567890123456));\nconsole.log(multiply(123, 45678901234567));\nconsole.log(multiply(123, 456789012345678));\nconsole.log(multiply(123, 4567890123456789));\nconsole.log(multiply(123, 45678901234567890));\nconsole.log(multiply(123, 456789012345678901));\nconsole.log(multiply(123, 4567890123456789012));\nconsole.log(multiply(123, 45678901234567890123));\nconsole.log(multiply(123, 456789012345678901234));\nconsole.log(multiply(123, 4567890123456789012345));\nconsole.log(multiply(123, 45678901234567890123456));\nconsole.log(multiply(123, 456789012345678901234567));\nconsole.log(multiply(123, 4567890123456789012345678));\nconsole.log(multiply(123, 45678901234567890123456789));\nconsole.log(multiply(123, 45678901\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmprsk_pnub.ts(35,1): error TS1005: ',' expected.\n../../../../tmp/tmprsk_pnub.ts(35,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 2));\nconsole.log(multiply(5, 3));\nconsole.log(multiply(5, 4));\nconsole.log(multiply(5, 5));\nconsole.log(multiply(5, 6));\nconsole.log(multiply(5, 7));\nconsole.log(multiply(5, 8));\nconsole.log(multiply(5, 9));\nconsole.log(multiply(5, 10));\nconsole.log(multiply(5, 11));\nconsole.log(multiply(5, 12));\nconsole.log(multiply(5, 13));\nconsole.log(multiply(5, 14));\nconsole.log(multiply(5, 15));\nconsole.log(multiply(5, 16));\nconsole.log(multiply(5, 17));\nconsole.log(multiply(5, 18));\nconsole.log(multiply(5, 19));\nconsole.log(multiply(5, 20));\nconsole.log(multiply(5, 21));\nconsole.log(multiply(5, 22));\nconsole.log(multiply(5, 23));\nconsole.log(multiply(5, 24));\nconsole.log(multiply(5, 25));\nconsole.log(multiply(5, 26));\nconsole.log(multiply(5, 27));\nconsole.log(multiply(5, 28));\nconsole.log(multiply(5, 29));\nconsole.log(multiply(5, 30));\nconsole.log(multiply(5, 31));\nconsole.log(multiply(5, 32));\nconsole.log(multiply(5, 33));\nconsole.log(multiply(5, 34));\nconsole.log(multiply(5, 35));\nconsole.log(multiply(5, 36));\nconsole.log(multiply(5, 37));\nconsole.log(multiply(5, 38));\nconsole.log(multiply(5, 39));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpr2_t4a3l.js:52:12)\n    at Object.<anonymous> (/tmp/tmpr2_t4a3l.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 1));\nconsole.log(multiply(10, 0));\nconsole.log(multiply(10, -1));\nconsole.log(multiply(10, -10));\nconsole.log(multiply(10, -100));\nconsole.log(multiply(10, -1000));\nconsole.log(multiply(10, -10000));\nconsole.log(multiply(10, -100000));\nconsole.log(multiply(10, -1000000));\nconsole.log(multiply(10, -10000000));\nconsole.log(multiply(10, -100000000));\nconsole.log(multiply(10, -1000000000));\nconsole.log(multiply(10, -10000000000));\nconsole.log(multiply(10, -100000000000));\nconsole.log(multiply(10, -1000000000000));\nconsole.log(multiply(10, -10000000000000));\nconsole.log(multiply(10, -100000000000000));\nconsole.log(multiply(10, -1000000000000000));\nconsole.log(multiply(10, -10000000000000000));\nconsole.log(multiply(10, -100000000000000000));\nconsole.log(multiply(10, -1000000000000000000));\nconsole.log(multiply(10, -10000000000000000000));\nconsole.log(multiply(10, -100000000000000000000));\nconsole.log(multiply(10, -1000000000000000000000));\nconsole.log(multiply(10, -10000000000000000000000));\nconsole.log(multiply(10, -100000000000000000000000));\nconsole.log(multiply(10, -1000000000000000000000000));\nconsole.log(multiply(10, -10000000000000000000000000));\nconsole.log(multiply(10, -100000000000000000000000000));\nconsole.log(multiply(10, -1000000000000000000000000000));\nconsole.log(multiply(10, -10000000000000000000000000000));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp058x5ho6.js:47:12)\n    at Object.<anonymous> (/tmp/tmp058x5ho6.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    let aStr = a.toString();\n    let bStr = b.toString();\n    let aUnit = aStr[aStr.length - 1];\n    let bUnit = bStr[bStr.length - 1];\n    return parseInt(aUnit) * parseInt(bUnit);\n}\n\nconsole.log(multiply(12, 12));\nconsole.log(multiply(123, 12));\nconsole.log(multiply(123, 123));\nconsole.log(multiply(123, 1234));\nconsole.log(multiply(123, 12345));\nconsole.log(multiply(123, 123456));\nconsole.log(multiply(123, 1234567));\nconsole.log(multiply(123, 12345678));\nconsole.log(multiply(123, 123456789));\nconsole.log(multiply(123, 1234567890));\nconsole.log(multiply(123, 12345678901));\nconsole.log(multiply(123, 123456789012));\nconsole.log(multiply(123, 1234567890123));\nconsole.log(multiply(123, 12345678901234));\nconsole.log(multiply(123, 123456789012345));\nconsole.log(multiply(123, 1234567890123456));\nconsole.log(multiply(123, 12345678901234567));\nconsole.log(multiply(123, 123456789012345678));\nconsole.log(multiply(123, 1234567890123456789));\nconsole.log(multiply(123, 12345678901234567890));\nconsole.log(multiply(123, 123456789012345678901));\nconsole.log(multiply(123, 1234567890123456789012));\nconsole.log(multiply(123, 12345678901234567890123));\nconsole.log(multiply(123, 123456789012345678901234));\nconsole.log(multiply(123, 12345678901\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpvqdzrdrl.ts(38,1): error TS1005: ',' expected.\n../../../../tmp/tmpvqdzrdrl.ts(38,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 45));\nconsole.log(multiply(12, 45));\nconsole.log(multiply(1, 45));\nconsole.log(multiply(0, 45));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(123, 4));\nconsole.log(multiply(123, 5));\nconsole.log(multiply(123, 9));\nconsole.log(multiply(123, 10));\nconsole.log(multiply(123, 11));\nconsole.log(multiply(123, 99));\nconsole.log(multiply(123, 100));\nconsole.log(multiply(123, 101));\nconsole.log(multiply(123, 999));\nconsole.log(multiply(123, 1000));\nconsole.log(multiply(123, 1001));\nconsole.log(multiply(123, 9999));\nconsole.log(multiply(123, 10000));\nconsole.log(multiply(123, 10001));\nconsole.log(multiply(123, 99999));\nconsole.log(multiply(123, 100000));\nconsole.log(multiply(123, 100001));\nconsole.log(multiply(123, 999999));\nconsole.log(multiply(123, 1000000));\nconsole.log(multiply(123, 1000001));\nconsole.log(multiply(123, 9999999));\nconsole.log(multiply(123, 10000000));\nconsole.log(multiply(123, 10000001));\nconsole.log(multiply(123, 99999999));\nconsole.log(multiply(123, 100000000));\nconsole.log(multiply(123, 100000001));\nconsole.log(multiply(123, 999999999));\nconsole.log(multiply(123, 1000000000));\nconsole.log(multiply(123, 1000000001));\nconsole.log(multiply(123, 9999999999));\nconsole.log(multiply(123, 10000000000\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpqe_b4iuc.ts(45,1): error TS1005: ',' expected.\n../../../../tmp/tmpqe_b4iuc.ts(45,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 40));\nconsole.log(multiply(10, 50));\nconsole.log(multiply(10, 60));\nconsole.log(multiply(10, 70));\nconsole.log(multiply(10, 80));\nconsole.log(multiply(10, 90));\nconsole.log(multiply(10, 100));\nconsole.log(multiply(10, 110));\nconsole.log(multiply(10, 120));\nconsole.log(multiply(10, 130));\nconsole.log(multiply(10, 140));\nconsole.log(multiply(10, 150));\nconsole.log(multiply(10, 160));\nconsole.log(multiply(10, 170));\nconsole.log(multiply(10, 180));\nconsole.log(multiply(10, 190));\nconsole.log(multiply(10, 200));\nconsole.log(multiply(10, 210));\nconsole.log(multiply(10, 220));\nconsole.log(multiply(10, 230));\nconsole.log(multiply(10, 240));\nconsole.log(multiply(10, 250));\nconsole.log(multiply(10, 260));\nconsole.log(multiply(10, 270));\nconsole.log(multiply(10, 280));\nconsole.log(multiply(10, 290));\nconsole.log(multiply(10, 300));\nconsole.log(multiply(10, 310));\nconsole.log(multiply(10, 320));\nconsole.log(multiply(10, 330));\nconsole.log(multiply(10, 340));\nconsole.log(multiply(10, 350));\nconsole.log(multiply(10, 360));\nconsole.log(multiply(10, 370));\nconsole.log(multiply(10, 380));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpl_hd4ksp.js:52:12)\n    at Object.<anonymous> (/tmp/tmpl_hd4ksp.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333621
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return Number(String(a).split('').pop()) * Number(String(b).split('').pop());\n}\n\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 777)); // 35\nconsole.log(multiply(1000, 2000)); // 0\nconsole.log(multiply(1451, 5555)); // 5\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(0, 1)); // 0\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(2, 1)); // 2\nconsole.log(multiply(2, 2)); // 4\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(10, 10)); // 0\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 777)); // 35\nconsole.log(multiply(1000, 2000)); // 0\nconsole.log(multiply(1451, 5555)); // 5\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(0, 1)); // 0\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(2, 1)); // 2\nconsole.log(multiply(2, 2)); // 4\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(10, 10)); // 0\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 777)); // 35\nconsole.log(multiply(1000, 2000)); // 0\nconsole.log(multiply(1451, 5555)); // 5\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multip\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp2ir3vxmi.ts(41,1): error TS1005: ',' expected.\n../../../../tmp/tmp2ir3vxmi.ts(41,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 45));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123, 4567));\nconsole.log(multiply(123, 45678));\nconsole.log(multiply(123, 456789));\nconsole.log(multiply(123, 4567890));\nconsole.log(multiply(123, 45678901));\nconsole.log(multiply(123, 456789012));\nconsole.log(multiply(123, 4567890123));\nconsole.log(multiply(123, 45678901234));\nconsole.log(multiply(123, 456789012345));\nconsole.log(multiply(123, 4567890123456));\nconsole.log(multiply(123, 45678901234567));\nconsole.log(multiply(123, 456789012345678));\nconsole.log(multiply(123, 4567890123456789));\nconsole.log(multiply(123, 45678901234567890));\nconsole.log(multiply(123, 456789012345678901));\nconsole.log(multiply(123, 4567890123456789012));\nconsole.log(multiply(123, 45678901234567890123));\nconsole.log(multiply(123, 456789012345678901234));\nconsole.log(multiply(123, 4567890123456789012345));\nconsole.log(multiply(123, 45678901234567890123456));\nconsole.log(multiply(123, 456789012345678901234567));\nconsole.log(multiply(123, 4567890123456789012345678));\nconsole.log(multiply(123, 45678901234567890123456789));\nconsole.log(multiply(123, 456789012345678901234567890));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpck4qvl5z.js:40:12)\n    at Object.<anonymous> (/tmp/tmpck4qvl5z.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "15\n18\n21\n24\n27\n0\n3\n6\n9\n12\n15\n18\n21\n24\n27\n24\n6\n6\n18\n24\n12\n12\n6\n6\n6\n12\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(25, 30));\nconsole.log(multiply(8, 4));\nconsole.log(multiply(122, 81));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmph9aimx2n.js:19:12)\n    at Object.<anonymous> (/tmp/tmph9aimx2n.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n2\n0\n32\n2\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return Number(a.toString().slice(-1)) * Number(b.toString().slice(-1));\n}\n\nconsole.log(multiply(123, 45));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123, 4567));\nconsole.log(multiply(123, 45678));\nconsole.log(multiply(123, 456789));\nconsole.log(multiply(123, 4567890));\nconsole.log(multiply(123, 45678901));\nconsole.log(multiply(123, 456789012));\nconsole.log(multiply(123, 4567890123));\nconsole.log(multiply(123, 45678901234));\nconsole.log(multiply(123, 456789012345));\nconsole.log(multiply(123, 4567890123456));\nconsole.log(multiply(123, 45678901234567));\nconsole.log(multiply(123, 456789012345678));\nconsole.log(multiply(123, 4567890123456789));\nconsole.log(multiply(123, 45678901234567890));\nconsole.log(multiply(123, 456789012345678901));\nconsole.log(multiply(123, 4567890123456789012));\nconsole.log(multiply(123, 45678901234567890123));\nconsole.log(multiply(123, 456789012345678901234));\nconsole.log(multiply(123, 4567890123456789012345));\nconsole.log(multiply(123, 45678901234567890123456));\nconsole.log(multiply(123, 456789012345678901234567));\nconsole.log(multiply(123, 4567890123456789012345678));\nconsole.log(multiply(123, 45678901234567890123456789));\nconsole.log(multiply(123, 4567\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpcunce5mk.ts(35,1): error TS1005: ',' expected.\n../../../../tmp/tmpcunce5mk.ts(35,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    let aStr = a.toString();\n    let bStr = b.toString();\n    let aLast = aStr.charAt(aStr.length - 1);\n    let bLast = bStr.charAt(bStr.length - 1);\n    return parseInt(aLast) * parseInt(bLast);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1000));\nconsole.log(multiply(0, 1000));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 1));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 10));\nconsole.log(multiply(10, 1));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(99, 99));\nconsole.log(multiply(37, 41));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "18\n25\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n81\n7\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 45));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123, 4567));\nconsole.log(multiply(123, 45678));\nconsole.log(multiply(123, 456789));\nconsole.log(multiply(123, 4567890));\nconsole.log(multiply(123, 45678901));\nconsole.log(multiply(123, 456789012));\nconsole.log(multiply(123, 4567890123));\nconsole.log(multiply(123, 45678901234));\nconsole.log(multiply(123, 456789012345));\nconsole.log(multiply(123, 4567890123456));\nconsole.log(multiply(123, 45678901234567));\nconsole.log(multiply(123, 456789012345678));\nconsole.log(multiply(123, 4567890123456789));\nconsole.log(multiply(123, 45678901234567890));\nconsole.log(multiply(123, 456789012345678901));\nconsole.log(multiply(123, 4567890123456789012));\nconsole.log(multiply(123, 45678901234567890123));\nconsole.log(multiply(123, 456789012345678901234));\nconsole.log(multiply(123, 4567890123456789012345));\nconsole.log(multiply(123, 45678901234567890123456));\nconsole.log(multiply(123, 456789012345678901234567));\nconsole.log(multiply(123, 4567890123456789012345678));\nconsole.log(multiply(123, 45678901234567890123456789));\nconsole.log(multiply(123, 456789012345678901234567890));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpck4qvl5z.js:40:12)\n    at Object.<anonymous> (/tmp/tmpck4qvl5z.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "15\n18\n21\n24\n27\n0\n3\n6\n9\n12\n15\n18\n21\n24\n27\n24\n6\n6\n18\n24\n12\n12\n6\n6\n6\n12\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return Number(String(a).slice(-1)) * Number(String(b).slice(-1));\n}\n\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 555)); // 25\nconsole.log(multiply(1000, 55)); // 0\nconsole.log(multiply(0, 55)); // 0\nconsole.log(multiply(1, 55)); // 5\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 555)); // 25\nconsole.log(multiply(1000, 55)); // 0\nconsole.log(multiply(0, 55)); // 0\nconsole.log(multiply(1, 55)); // 5\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(0, 0)); // 0\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "18\n25\n0\n0\n5\n1\n0\n0\n18\n25\n0\n0\n5\n1\n0\n0\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    let aString = a.toString();\n    let bString = b.toString();\n    let aLastDigit = aString.charAt(aString.length - 1);\n    let bLastDigit = bString.charAt(bString.length - 1);\n    return Number(aLastDigit) * Number(bLastDigit);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1000));\nconsole.log(multiply(0, 1000));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 1));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(2, 1));\nconsole.log(multiply(2, 2));\nconsole.log(multiply(8, 9));\nconsole.log(multiply(9, 8));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1000));\nconsole.log(multiply(0, 1000));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 1));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(2, 1));\nconsole.log(multiply(2, 2));\nconsole.log(multiply(8, 9));\nconsole.log(multiply(9, 8));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpt8lb4o_1.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmpt8lb4o_1.ts(46,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 2));\nconsole.log(multiply(10, 3));\nconsole.log(multiply(10, 4));\nconsole.log(multiply(10, 5));\nconsole.log(multiply(10, 6));\nconsole.log(multiply(10, 7));\nconsole.log(multiply(10, 8));\nconsole.log(multiply(10, 9));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 11));\nconsole.log(multiply(10, 12));\nconsole.log(multiply(10, 13));\nconsole.log(multiply(10, 14));\nconsole.log(multiply(10, 15));\nconsole.log(multiply(10, 16));\nconsole.log(multiply(10, 17));\nconsole.log(multiply(10, 18));\nconsole.log(multiply(10, 19));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 21));\nconsole.log(multiply(10, 22));\nconsole.log(multiply(10, 23));\nconsole.log(multiply(10, 24));\nconsole.log(multiply(10, 25));\nconsole.log(multiply(10, 26));\nconsole.log(multiply(10, 27));\nconsole.log(multiply(10, 28));\nconsole.log(multiply(10, 29));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 31));\nconsole.log(multiply(10, 32));\nconsole.log(multiply(10, 33));\nconsole.log(multiply(10, 34));\nconsole.log(multiply(10, 35));\nconsole.log(multiply(10, 36));\nconsole.log(multiply(10, 37));\nconsole.log(multiply(10, 38));\nconsole.log(multiply(10, 39));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp05rxz7in.js:52:12)\n    at Object.<anonymous> (/tmp/tmp05rxz7in.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 1));\nconsole.log(multiply(10, 0));\nconsole.log(multiply(10, -1));\nconsole.log(multiply(10, -10));\nconsole.log(multiply(10, -100));\nconsole.log(multiply(10, -1000));\nconsole.log(multiply(10, -10000));\nconsole.log(multiply(10, -100000));\nconsole.log(multiply(10, -1000000));\nconsole.log(multiply(10, -10000000));\nconsole.log(multiply(10, -100000000));\nconsole.log(multiply(10, -1000000000));\nconsole.log(multiply(10, -10000000000));\nconsole.log(multiply(10, -100000000000));\nconsole.log(multiply(10, -1000000000000));\nconsole.log(multiply(10, -10000000000000));\nconsole.log(multiply(10, -100000000000000));\nconsole.log(multiply(10, -1000000000000000));\nconsole.log(multiply(10, -10000000000000000));\nconsole.log(multiply(10, -100000000000000000));\nconsole.log(multiply(10, -1000000000000000000));\nconsole.log(multiply(10, -10000000000000000000));\nconsole.log(multiply(10, -100000000000000000000));\nconsole.log(multiply(10, -1000000000000000000000));\nconsole.log(multiply(10, -10000000000000000000000));\nconsole.log(multiply(10, -100000000000000000000000));\nconsole.log(multiply(10, -1000000000000000000000000));\nconsole.log(multiply(10, -10000000000000000000000000));\nconsole.log(multiply(10, -100000000000000000000000000));\nconsole.log(multiply(10, -1000000000000000000000000000));\nconsole.log(multiply(10, -10000000000000000000000000000));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp058x5ho6.js:47:12)\n    at Object.<anonymous> (/tmp/tmp058x5ho6.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp4hx2915k.js:14:12)\n    at Object.<anonymous> (/tmp/tmp4hx2915k.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333626
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    let aArr = a.toString().split('');\n    let bArr = b.toString().split('');\n    return Number(aArr[aArr.length - 1]) * Number(bArr[bArr.length - 1]);\n}\nconsole.log(multiply(123, 456));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "18\n",
      "timestamp": 1660333626
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    let product = a * b;\n    let unitDigit = product % 10;\n    return unitDigit;\n}\n\nconsole.log(multiply(5, 2));\nconsole.log(multiply(5, 3));\nconsole.log(multiply(5, 4));\nconsole.log(multiply(5, 5));\nconsole.log(multiply(5, 6));\nconsole.log(multiply(5, 7));\nconsole.log(multiply(5, 8));\nconsole.log(multiply(5, 9));\nconsole.log(multiply(5, 10));\nconsole.log(multiply(5, 11));\nconsole.log(multiply(5, 12));\nconsole.log(multiply(5, 13));\nconsole.log(multiply(5, 14));\nconsole.log(multiply(5, 15));\nconsole.log(multiply(5, 16));\nconsole.log(multiply(5, 17));\nconsole.log(multiply(5, 18));\nconsole.log(multiply(5, 19));\nconsole.log(multiply(5, 20));\nconsole.log(multiply(5, 21));\nconsole.log(multiply(5, 22));\nconsole.log(multiply(5, 23));\nconsole.log(multiply(5, 24));\nconsole.log(multiply(5, 25));\nconsole.log(multiply(5, 26));\nconsole.log(multiply(5, 27));\nconsole.log(multiply(5, 28));\nconsole.log(multiply(5, 29));\nconsole.log(multiply(5, 30));\nconsole.log(multiply(5, 31));\nconsole.log(multiply(5, 32));\nconsole.log(multiply(5, 33));\nconsole.log(multiply(5, 34));\nconsole.log(multiply(5, 35));\nconsole.log(multiply(5, 36));\nconsole.log(multiply(5, 37));\nconsole.log(multiply(5, 38));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpg4ovqjv8.js:50:12)\n    at Object.<anonymous> (/tmp/tmpg4ovqjv8.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n5\n0\n5\n0\n5\n0\n5\n0\n5\n0\n5\n0\n5\n0\n5\n0\n5\n0\n5\n0\n5\n0\n5\n0\n5\n0\n5\n0\n5\n0\n5\n0\n5\n0\n5\n0\n",
      "timestamp": 1660333626
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpdvp_m12i.js:15:12)\n    at Object.<anonymous> (/tmp/tmpdvp_m12i.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return a % 10 * b % 10;\n}\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 3));\nconsole.log(multiply(1, 4));\nconsole.log(multiply(1, 5));\nconsole.log(multiply(1, 6));\nconsole.log(multiply(1, 7));\nconsole.log(multiply(1, 8));\nconsole.log(multiply(1, 9));\nconsole.log(multiply(1, 10));\nconsole.log(multiply(1, 11));\nconsole.log(multiply(1, 12));\nconsole.log(multiply(1, 13));\nconsole.log(multiply(1, 14));\nconsole.log(multiply(1, 15));\nconsole.log(multiply(1, 16));\nconsole.log(multiply(1, 17));\nconsole.log(multiply(1, 18));\nconsole.log(multiply(1, 19));\nconsole.log(multiply(1, 20));\nconsole.log(multiply(1, 21));\nconsole.log(multiply(1, 22));\nconsole.log(multiply(1, 23));\nconsole.log(multiply(1, 24));\nconsole.log(multiply(1, 25));\nconsole.log(multiply(1, 26));\nconsole.log(multiply(1, 27));\nconsole.log(multiply(1, 28));\nconsole.log(multiply(1, 29));\nconsole.log(multiply(1, 30));\nconsole.log(multiply(1, 31));\nconsole.log(multiply(1, 32));\nconsole.log(multiply(1, 33));\nconsole.log(multiply(1, 34));\nconsole.log(multiply(1, 35));\nconsole.log(multiply(1, 36));\nconsole.log(multiply(1, 37));\nconsole.log(multiply(1, 38));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp51s1_h40.ts(47,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return Number(a.toString().slice(-1)) * Number(b.toString().slice(-1));\n}\n\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 888)); // 0\nconsole.log(multiply(9, 0)); // 0\nconsole.log(multiply(0, 9)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 888)); // 0\nconsole.log(multiply(9, 0)); // 0\nconsole.log(multiply(0, 9)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 888)); // 0\nconsole.log(multiply(9, 0)); // 0\nconsole.log(multiply(0, 9)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 888)); // 0\nconsole.log(multiply(9, 0)); // 0\nconsole.log(multiply(0, 9)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 888)); // 0\nconsole.log(multiply(9, 0)); // 0\nconsole.log(multiply(0, 9)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 888)); // 0\nconsole.log(multiply(9, 0)); // 0\nconsole.log(multiply(0, 9)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(123, 456)); // 4\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp7pssk8xm.ts(41,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10));\nconsole.log(multiply(5, 10));\nconsole.log(multiply(10, 5));\nconsole.log(multiply(5, 5));\nconsole.log(multiply(10, 1));\nconsole.log(multiply(1, 10));\nconsole.log(multiply(1, 1));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp36_kkt1b.js:21:12)\n    at Object.<anonymous> (/tmp/tmp36_kkt1b.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n25\n0\n0\n1\n",
      "timestamp": 1660333626
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a * b) % 10;\n}\n\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 3));\nconsole.log(multiply(1, 4));\nconsole.log(multiply(1, 5));\nconsole.log(multiply(1, 6));\nconsole.log(multiply(1, 7));\nconsole.log(multiply(1, 8));\nconsole.log(multiply(1, 9));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(2, 2));\nconsole.log(multiply(2, 3));\nconsole.log(multiply(2, 4));\nconsole.log(multiply(2, 5));\nconsole.log(multiply(2, 6));\nconsole.log(multiply(2, 7));\nconsole.log(multiply(2, 8));\nconsole.log(multiply(2, 9));\nconsole.log(multiply(2, 0));\nconsole.log(multiply(3, 2));\nconsole.log(multiply(3, 3));\nconsole.log(multiply(3, 4));\nconsole.log(multiply(3, 5));\nconsole.log(multiply(3, 6));\nconsole.log(multiply(3, 7));\nconsole.log(multiply(3, 8));\nconsole.log(multiply(3, 9));\nconsole.log(multiply(3, 0));\nconsole.log(multiply(4, 2));\nconsole.log(multiply(4, 3));\nconsole.log(multiply(4, 4));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 6));\nconsole.log(multiply(4, 7));\nconsole.log(multiply(4, 8));\nconsole.log(multiply(4, 9));\nconsole.log(multiply(4, 0));\nconsole.log(multiply(5, 2));\nconsole.log(multiply(5, 3));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmphu4cvcqa.js:50:12)\n    at Object.<anonymous> (/tmp/tmphu4cvcqa.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n3\n4\n5\n6\n7\n8\n9\n0\n4\n6\n8\n0\n2\n4\n6\n8\n0\n6\n9\n2\n5\n8\n1\n4\n7\n0\n8\n2\n6\n0\n4\n8\n2\n6\n0\n0\n5\n",
      "timestamp": 1660333626
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return a * b;\n}\n\nconsole.log(multiply(1, 2));\nconsole.log(multiply(2, 3));\nconsole.log(multiply(2, 4));\nconsole.log(multiply(2, 5));\nconsole.log(multiply(2, 6));\nconsole.log(multiply(2, 7));\nconsole.log(multiply(2, 8));\nconsole.log(multiply(2, 9));\nconsole.log(multiply(2, 10));\nconsole.log(multiply(2, 11));\nconsole.log(multiply(2, 12));\nconsole.log(multiply(2, 13));\nconsole.log(multiply(2, 14));\nconsole.log(multiply(2, 15));\nconsole.log(multiply(2, 16));\nconsole.log(multiply(2, 17));\nconsole.log(multiply(2, 18));\nconsole.log(multiply(2, 19));\nconsole.log(multiply(2, 20));\nconsole.log(multiply(2, 21));\nconsole.log(multiply(2, 22));\nconsole.log(multiply(2, 23));\nconsole.log(multiply(2, 24));\nconsole.log(multiply(2, 25));\nconsole.log(multiply(2, 26));\nconsole.log(multiply(2, 27));\nconsole.log(multiply(2, 28));\nconsole.log(multiply(2, 29));\nconsole.log(multiply(2, 30));\nconsole.log(multiply(2, 31));\nconsole.log(multiply(2, 32));\nconsole.log(multiply(2, 33));\nconsole.log(multiply(2, 34));\nconsole.log(multiply(2, 35));\nconsole.log(multiply(2, 36));\nconsole.log(multiply(2, 37));\nconsole.log(multiply(2, 38));\nconsole.log(multiply(2, 39));\nconsole.log(multiply\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpr63dmp77.ts(48,1): error TS1005: ',' expected.\n../../../../tmp/tmpr63dmp77.ts(48,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(12, 12)); // 4\nconsole.log(multiply(123, 123)); // 9\nconsole.log(multiply(123, 1)); // 3\nconsole.log(multiply(123, 0)); // 0\nconsole.log(multiply(0, 123)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(123, -1)); // -3\nconsole.log(multiply(-1, 123)); // -3\nconsole.log(multiply(-1, -1)); // 1\nconsole.log(multiply(-123, -123)); // 9\nconsole.log(multiply(-123, 1)); // -3\nconsole.log(multiply(-123, 0)); // 0\nconsole.log(multiply(0, -123)); // 0\nconsole.log(multiply(-123, -1)); // 3\nconsole.log(multiply(-123, 123)); // -9\nconsole.log(multiply(123, -123)); // -9\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpspkpibpb.js:31:12)\n    at Object.<anonymous> (/tmp/tmpspkpibpb.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n4\n9\n3\n0\n0\n0\n-3\n-3\n1\n9\n-3\n-0\n-0\n3\n-9\n-9\n",
      "timestamp": 1660333626
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 2));\nconsole.log(multiply(10, 3));\nconsole.log(multiply(10, 4));\nconsole.log(multiply(10, 5));\nconsole.log(multiply(10, 6));\nconsole.log(multiply(10, 7));\nconsole.log(multiply(10, 8));\nconsole.log(multiply(10, 9));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 11));\nconsole.log(multiply(10, 12));\nconsole.log(multiply(10, 13));\nconsole.log(multiply(10, 14));\nconsole.log(multiply(10, 15));\nconsole.log(multiply(10, 16));\nconsole.log(multiply(10, 17));\nconsole.log(multiply(10, 18));\nconsole.log(multiply(10, 19));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 21));\nconsole.log(multiply(10, 22));\nconsole.log(multiply(10, 23));\nconsole.log(multiply(10, 24));\nconsole.log(multiply(10, 25));\nconsole.log(multiply(10, 26));\nconsole.log(multiply(10, 27));\nconsole.log(multiply(10, 28));\nconsole.log(multiply(10, 29));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 31));\nconsole.log(multiply(10, 32));\nconsole.log(multiply(10, 33));\nconsole.log(multiply(10, 34));\nconsole.log(multiply(10, 35));\nconsole.log(multiply(10, 36));\nconsole.log(multiply(10, 37));\nconsole.log(multiply(10, 38));\nconsole.log(multiply(10, 39));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp05rxz7in.js:52:12)\n    at Object.<anonymous> (/tmp/tmp05rxz7in.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return a * b;\n}\n\nconsole.log(multiply(2, 3));\nconsole.log(multiply(2, 4));\nconsole.log(multiply(2, 5));\nconsole.log(multiply(2, 6));\nconsole.log(multiply(2, 7));\nconsole.log(multiply(2, 8));\nconsole.log(multiply(2, 9));\nconsole.log(multiply(2, 10));\nconsole.log(multiply(2, 11));\nconsole.log(multiply(2, 12));\nconsole.log(multiply(2, 13));\nconsole.log(multiply(2, 14));\nconsole.log(multiply(2, 15));\nconsole.log(multiply(2, 16));\nconsole.log(multiply(2, 17));\nconsole.log(multiply(2, 18));\nconsole.log(multiply(2, 19));\nconsole.log(multiply(2, 20));\nconsole.log(multiply(2, 21));\nconsole.log(multiply(2, 22));\nconsole.log(multiply(2, 23));\nconsole.log(multiply(2, 24));\nconsole.log(multiply(2, 25));\nconsole.log(multiply(2, 26));\nconsole.log(multiply(2, 27));\nconsole.log(multiply(2, 28));\nconsole.log(multiply(2, 29));\nconsole.log(multiply(2, 30));\nconsole.log(multiply(2, 31));\nconsole.log(multiply(2, 32));\nconsole.log(multiply(2, 33));\nconsole.log(multiply(2, 34));\nconsole.log(multiply(2, 35));\nconsole.log(multiply(2, 36));\nconsole.log(multiply(2, 37));\nconsole.log(multiply(2, 38));\nconsole.log(multiply(2, 39));\nconsole.log(multiply(2, 40));\nconsole.log(multiply\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp4qvx91k1.ts(48,1): error TS1005: ',' expected.\n../../../../tmp/tmp4qvx91k1.ts(48,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 4)); // 20\nconsole.log(multiply(3, 4)); // 12\nconsole.log(multiply(2, 4)); // 8\nconsole.log(multiply(1, 4)); // 4\nconsole.log(multiply(0, 4)); // 0\nconsole.log(multiply(5, 0)); // 0\nconsole.log(multiply(5, 1)); // 5\nconsole.log(multiply(5, 2)); // 10\nconsole.log(multiply(5, 3)); // 15\nconsole.log(multiply(5, 5)); // 25\nconsole.log(multiply(5, 6)); // 30\nconsole.log(multiply(5, 7)); // 35\nconsole.log(multiply(5, 8)); // 40\nconsole.log(multiply(5, 9)); // 45\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 8)); // 72\nconsole.log(multiply(9, 7)); // 63\nconsole.log(multiply(9, 6)); // 54\nconsole.log(multiply(9, 5)); // 45\nconsole.log(multiply(9, 4)); // 36\nconsole.log(multiply(9, 3)); // 27\nconsole.log(multiply(9, 2)); // 18\nconsole.log(multiply(9, 1)); // 9\nconsole.log(multiply(9, 0)); // 0\nconsole.log(multiply(8, 9)); // 72\nconsole.log(multiply(8, 8)); // 64\nconsole.log(multiply(8, 7)); // 56\nconsole.log(multiply(8, 6)); // 48\nconsole.log(multiply(8, 5)); // 40\nconsole.log(multiply(8, 4)); // 32\nconsole.log(multiply(8, 3)); // 24\nconsole.log(multiply(8, 2)); // 16\nconsole.log(multiply(8, 1)); // 8\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpavddowfs.js:47:12)\n    at Object.<anonymous> (/tmp/tmpavddowfs.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "20\n12\n8\n4\n0\n0\n5\n10\n15\n25\n30\n35\n40\n45\n81\n72\n63\n54\n45\n36\n27\n18\n9\n0\n72\n64\n56\n48\n40\n32\n24\n16\n8\n",
      "timestamp": 1660333626
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2));\nconsole.log(multiply(5, 2));\nconsole.log(multiply(10, 2));\nconsole.log(multiply(100, 2));\nconsole.log(multiply(100, 20));\nconsole.log(multiply(100, 200));\nconsole.log(multiply(100, 2000));\nconsole.log(multiply(100, 20000));\nconsole.log(multiply(100, 200000));\nconsole.log(multiply(100, 2000000));\nconsole.log(multiply(100, 20000000));\nconsole.log(multiply(100, 200000000));\nconsole.log(multiply(100, 2000000000));\nconsole.log(multiply(100, 20000000000));\nconsole.log(multiply(100, 200000000000));\nconsole.log(multiply(100, 2000000000000));\nconsole.log(multiply(100, 20000000000000));\nconsole.log(multiply(100, 200000000000000));\nconsole.log(multiply(100, 2000000000000000));\nconsole.log(multiply(100, 20000000000000000));\nconsole.log(multiply(100, 200000000000000000));\nconsole.log(multiply(100, 2000000000000000000));\nconsole.log(multiply(100, 20000000000000000000));\nconsole.log(multiply(100, 200000000000000000000));\nconsole.log(multiply(100, 2000000000000000000000));\nconsole.log(multiply(100, 20000000000000000000000));\nconsole.log(multiply(100, 200000000000000000000000));\nconsole.log(multiply(100, 2000000000000000000000000));\nconsole.log(multiply(100, 20000000000000000000000000));\nconsole.log(multiply(100, 200000000000000000000000000));\nconsole.log(multiply(100, 2000000000000000000000000000));\nconsole.log(multiply(100, 20000000000000000000000000000));\nconsole.log(multiply(100, 200000000000000000000000000000));\nconsole.log(multiply(100, 2000000000000000000000000000000));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmprkq_cw6j.js:49:12)\n    at Object.<anonymous> (/tmp/tmprkq_cw6j.js:55:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n10\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333626
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 555));\nconsole.log(multiply(0, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(9, 9));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 555));\nconsole.log(multiply(0, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(9, 9));\nconsole.log(multiply(10, 10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpm2xm0_st.js:28:12)\n    at Object.<anonymous> (/tmp/tmpm2xm0_st.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n25\n0\n0\n2\n81\n0\n18\n25\n0\n0\n2\n81\n0\n",
      "timestamp": 1660333626
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 2));\nconsole.log(multiply(5, 3));\nconsole.log(multiply(5, 4));\nconsole.log(multiply(5, 5));\nconsole.log(multiply(5, 6));\nconsole.log(multiply(5, 7));\nconsole.log(multiply(5, 8));\nconsole.log(multiply(5, 9));\nconsole.log(multiply(5, 10));\nconsole.log(multiply(5, 11));\nconsole.log(multiply(5, 12));\nconsole.log(multiply(5, 13));\nconsole.log(multiply(5, 14));\nconsole.log(multiply(5, 15));\nconsole.log(multiply(5, 16));\nconsole.log(multiply(5, 17));\nconsole.log(multiply(5, 18));\nconsole.log(multiply(5, 19));\nconsole.log(multiply(5, 20));\nconsole.log(multiply(5, 21));\nconsole.log(multiply(5, 22));\nconsole.log(multiply(5, 23));\nconsole.log(multiply(5, 24));\nconsole.log(multiply(5, 25));\nconsole.log(multiply(5, 26));\nconsole.log(multiply(5, 27));\nconsole.log(multiply(5, 28));\nconsole.log(multiply(5, 29));\nconsole.log(multiply(5, 30));\nconsole.log(multiply(5, 31));\nconsole.log(multiply(5, 32));\nconsole.log(multiply(5, 33));\nconsole.log(multiply(5, 34));\nconsole.log(multiply(5, 35));\nconsole.log(multiply(5, 36));\nconsole.log(multiply(5, 37));\nconsole.log(multiply(5, 38));\nconsole.log(multiply(5, 39));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpr2_t4a3l.js:52:12)\n    at Object.<anonymous> (/tmp/tmpr2_t4a3l.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return Number(String(a).slice(-1)) * Number(String(b).slice(-1));\n}\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, -5));\nconsole.log(multiply(4, 0));\nconsole.log(multiply(4, 1));\nconsole.log(multiply(4, 10));\nconsole.log(multiply(4, 11));\nconsole.log(multiply(4, 12));\nconsole.log(multiply(4, 13));\nconsole.log(multiply(4, 14));\nconsole.log(multiply(4, 15));\nconsole.log(multiply(4, 16));\nconsole.log(multiply(4, 17));\nconsole.log(multiply(4, 18));\nconsole.log(multiply(4, 19));\nconsole.log(multiply(4, 20));\nconsole.log(multiply(4, 21));\nconsole.log(multiply(4, 22));\nconsole.log(multiply(4, 23));\nconsole.log(multiply(4, 24));\nconsole.log(multiply(4, 25));\nconsole.log(multiply(4, 26));\nconsole.log(multiply(4, 27));\nconsole.log(multiply(4, 28));\nconsole.log(multiply(4, 29));\nconsole.log(multiply(4, 30));\nconsole.log(multiply(4, 31));\nconsole.log(multiply(4, 32));\nconsole.log(multiply(4, 33));\nconsole.log(multiply(4, 34));\nconsole.log(multiply(4, 35));\nconsole.log(multiply(4, 36));\nconsole.log(multiply(4, 37));\nconsole.log(multiply(4, 38));\nconsole.log(multiply(4, 39));\nconsole.log(multiply(4, 40));\nconsole.log(multiply(4, 41));\nconsole.log(multiply(4, 42));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "20\n20\n0\n4\n0\n4\n8\n12\n16\n20\n24\n28\n32\n36\n0\n4\n8\n12\n16\n20\n24\n28\n32\n36\n0\n4\n8\n12\n16\n20\n24\n28\n32\n36\n0\n4\n8\n",
      "timestamp": 1660333628
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return Number(String(a).slice(-1)) * Number(String(b).slice(-1));\n}\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1000));\nconsole.log(multiply(0, 1000));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(0, 0));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "18\n25\n0\n0\n0\n0\n",
      "timestamp": 1660333628
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 2));\nconsole.log(multiply(25, 2));\nconsole.log(multiply(123, 45));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpoz8mgthz.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoz8mgthz.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n10\n15\n",
      "timestamp": 1660333628
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 555));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpw81bmmak.js:17:12)\n    at Object.<anonymous> (/tmp/tmpw81bmmak.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n25\n0\n",
      "timestamp": 1660333628
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp4hx2915k.js:14:12)\n    at Object.<anonymous> (/tmp/tmp4hx2915k.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333626
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    let product = a * b;\n    let productString = product.toString();\n    let productArray = productString.split('');\n    let productArrayLength = productArray.length;\n    let productLastDigit = productArray[productArrayLength - 1];\n    let productLastDigitNumber = Number(productLastDigit);\n    return productLastDigitNumber;\n}\n\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 5));\nconsole.log(mult\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpgmit2mj8.ts(48,1): error TS1005: ',' expected.\n../../../../tmp/tmpgmit2mj8.ts(48,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333628
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 777));\nconsole.log(multiply(1000, 2000));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(0, 1));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(2, 1));\nconsole.log(multiply(2, 2));\nconsole.log(multiply(9, 9));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(11, 11));\nconsole.log(multiply(12, 12));\nconsole.log(multiply(13, 13));\nconsole.log(multiply(14, 14));\nconsole.log(multiply(15, 15));\nconsole.log(multiply(16, 16));\nconsole.log(multiply(17, 17));\nconsole.log(multiply(18, 18));\nconsole.log(multiply(19, 19));\nconsole.log(multiply(20, 20));\nconsole.log(multiply(21, 21));\nconsole.log(multiply(22, 22));\nconsole.log(multiply(23, 23));\nconsole.log(multiply(24, 24));\nconsole.log(multiply(25, 25));\nconsole.log(multiply(26, 26));\nconsole.log(multiply(27, 27));\nconsole.log(multiply(28, 28));\nconsole.log(multiply(29, 29));\nconsole.log(multiply(30, 30));\nconsole.log(multiply(31, 31));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(33, 33));\nconsole.log(multiply(34, 34));\nconsole.log(multiply(35, 35));\nconsole.log(multiply(36, 36));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpt6r9irww.js:52:12)\n    at Object.<anonymous> (/tmp/tmpt6r9irww.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n35\n0\n1\n0\n0\n0\n2\n2\n4\n81\n0\n1\n4\n9\n16\n25\n36\n49\n64\n81\n0\n1\n4\n9\n16\n25\n36\n49\n64\n81\n0\n1\n4\n9\n16\n25\n36\n",
      "timestamp": 1660333629
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 555));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpw81bmmak.js:17:12)\n    at Object.<anonymous> (/tmp/tmpw81bmmak.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n25\n0\n",
      "timestamp": 1660333628
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2));\nconsole.log(multiply(10, 2));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(100, 20));\nconsole.log(multiply(100, 200));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpv27n0h1q.js:19:12)\n    at Object.<anonymous> (/tmp/tmpv27n0h1q.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n0\n0\n0\n0\n",
      "timestamp": 1660333629
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2));\nconsole.log(multiply(5, 2));\nconsole.log(multiply(9, 2));\nconsole.log(multiply(10, 2));\nconsole.log(multiply(0, 2));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 10));\nconsole.log(multiply(1, 11));\nconsole.log(multiply(1, 12));\nconsole.log(multiply(1, 13));\nconsole.log(multiply(1, 14));\nconsole.log(multiply(1, 15));\nconsole.log(multiply(1, 16));\nconsole.log(multiply(1, 17));\nconsole.log(multiply(1, 18));\nconsole.log(multiply(1, 19));\nconsole.log(multiply(1, 20));\nconsole.log(multiply(1, 21));\nconsole.log(multiply(1, 22));\nconsole.log(multiply(1, 23));\nconsole.log(multiply(1, 24));\nconsole.log(multiply(1, 25));\nconsole.log(multiply(1, 26));\nconsole.log(multiply(1, 27));\nconsole.log(multiply(1, 28));\nconsole.log(multiply(1, 29));\nconsole.log(multiply(1, 30));\nconsole.log(multiply(1, 31));\nconsole.log(multiply(1, 32));\nconsole.log(multiply(1, 33));\nconsole.log(multiply(1, 34));\nconsole.log(multiply(1, 35));\nconsole.log(multiply(1, 36));\nconsole.log(multiply(1, 37));\nconsole.log(multiply(1, 38));\nconsole.log(multiply(1, 39));\nconsole.log(multiply(1, 40));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmplgu3ijal.js:52:12)\n    at Object.<anonymous> (/tmp/tmplgu3ijal.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n10\n18\n0\n0\n0\n1\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n",
      "timestamp": 1660333629
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return a % 10 * b % 10;\n}\nconsole.log(multiply(5, 5));\nconsole.log(multiply(5, 2));\nconsole.log(multiply(5, 3));\nconsole.log(multiply(5, 4));\nconsole.log(multiply(5, 6));\nconsole.log(multiply(5, 7));\nconsole.log(multiply(5, 8));\nconsole.log(multiply(5, 9));\nconsole.log(multiply(5, 10));\nconsole.log(multiply(5, 11));\nconsole.log(multiply(5, 12));\nconsole.log(multiply(5, 13));\nconsole.log(multiply(5, 14));\nconsole.log(multiply(5, 15));\nconsole.log(multiply(5, 16));\nconsole.log(multiply(5, 17));\nconsole.log(multiply(5, 18));\nconsole.log(multiply(5, 19));\nconsole.log(multiply(5, 20));\nconsole.log(multiply(5, 21));\nconsole.log(multiply(5, 22));\nconsole.log(multiply(5, 23));\nconsole.log(multiply(5, 24));\nconsole.log(multiply(5, 25));\nconsole.log(multiply(5, 26));\nconsole.log(multiply(5, 27));\nconsole.log(multiply(5, 28));\nconsole.log(multiply(5, 29));\nconsole.log(multiply(5, 30));\nconsole.log(multiply(5, 31));\nconsole.log(multiply(5, 32));\nconsole.log(multiply(5, 33));\nconsole.log(multiply(5, 34));\nconsole.log(multiply(5, 35));\nconsole.log(multiply(5, 36));\nconsole.log(multiply(5, 37));\nconsole.log(multiply(5, 38));\nconsole.log(multiply(5, 39));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpf9fvht4b.ts(47,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333629
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return Number(a.toString().split('').pop()) * Number(b.toString().split('').pop());\n}\n\nconsole.log(multiply(123, 456));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "18\n",
      "timestamp": 1660333629
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1000));\nconsole.log(multiply(0, 1000));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(0, 0));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp49isb5ez.js:20:12)\n    at Object.<anonymous> (/tmp/tmp49isb5ez.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n25\n0\n0\n0\n0\n",
      "timestamp": 1660333629
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 20));\nconsole.log(multiply(5, 20));\nconsole.log(multiply(0, 20));\nconsole.log(multiply(1, 20));\nconsole.log(multiply(10, 2));\nconsole.log(multiply(10, 0));\nconsole.log(multiply(10, 1));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpi1ghrov7.js:21:12)\n    at Object.<anonymous> (/tmp/tmpi1ghrov7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333629
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 40));\nconsole.log(multiply(10, 50));\nconsole.log(multiply(10, 60));\nconsole.log(multiply(10, 70));\nconsole.log(multiply(10, 80));\nconsole.log(multiply(10, 90));\nconsole.log(multiply(10, 100));\nconsole.log(multiply(10, 110));\nconsole.log(multiply(10, 120));\nconsole.log(multiply(10, 130));\nconsole.log(multiply(10, 140));\nconsole.log(multiply(10, 150));\nconsole.log(multiply(10, 160));\nconsole.log(multiply(10, 170));\nconsole.log(multiply(10, 180));\nconsole.log(multiply(10, 190));\nconsole.log(multiply(10, 200));\nconsole.log(multiply(10, 210));\nconsole.log(multiply(10, 220));\nconsole.log(multiply(10, 230));\nconsole.log(multiply(10, 240));\nconsole.log(multiply(10, 250));\nconsole.log(multiply(10, 260));\nconsole.log(multiply(10, 270));\nconsole.log(multiply(10, 280));\nconsole.log(multiply(10, 290));\nconsole.log(multiply(10, 300));\nconsole.log(multiply(10, 310));\nconsole.log(multiply(10, 320));\nconsole.log(multiply(10, 330));\nconsole.log(multiply(10, 340));\nconsole.log(multiply(10, 350));\nconsole.log(multiply(10, 360));\nconsole.log(multiply(10, 370));\nconsole.log(multiply(10, 380));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpl_hd4ksp.js:52:12)\n    at Object.<anonymous> (/tmp/tmpl_hd4ksp.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333621
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10)); // 0\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(1, 3)); // 3\nconsole.log(multiply(1, 4)); // 4\nconsole.log(multiply(1, 5)); // 5\nconsole.log(multiply(1, 6)); // 6\nconsole.log(multiply(1, 7)); // 7\nconsole.log(multiply(1, 8)); // 8\nconsole.log(multiply(1, 9)); // 9\nconsole.log(multiply(1, 10)); // 0\nconsole.log(multiply(2, 2)); // 4\nconsole.log(multiply(2, 3)); // 6\nconsole.log(multiply(2, 4)); // 8\nconsole.log(multiply(2, 5)); // 0\nconsole.log(multiply(2, 6)); // 2\nconsole.log(multiply(2, 7)); // 4\nconsole.log(multiply(2, 8)); // 6\nconsole.log(multiply(2, 9)); // 8\nconsole.log(multiply(2, 10)); // 0\nconsole.log(multiply(3, 3)); // 9\nconsole.log(multiply(3, 4)); // 2\nconsole.log(multiply(3, 5)); // 5\nconsole.log(multiply(3, 6)); // 8\nconsole.log(multiply(3, 7)); // 1\nconsole.log(multiply(3, 8)); // 4\nconsole.log(multiply(3, 9)); // 7\nconsole.log(multiply(3, 10)); // 0\nconsole.log(multiply(4, 4)); // 6\nconsole.log(multiply(4, 5)); // 0\nconsole.log(multiply(4, 6)); // 4\nconsole.log(multiply(4, 7)); // 8\nconsole.log(multiply(4, 8)); // 2\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpt7ckvbot.js:47:12)\n    at Object.<anonymous> (/tmp/tmpt7ckvbot.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n4\n6\n8\n10\n12\n14\n16\n18\n0\n9\n12\n15\n18\n21\n24\n27\n0\n16\n20\n24\n28\n32\n",
      "timestamp": 1660333629
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 2));\nconsole.log(multiply(5, 3));\nconsole.log(multiply(5, 4));\nconsole.log(multiply(5, 5));\nconsole.log(multiply(5, 6));\nconsole.log(multiply(5, 7));\nconsole.log(multiply(5, 8));\nconsole.log(multiply(5, 9));\nconsole.log(multiply(5, 10));\nconsole.log(multiply(5, 11));\nconsole.log(multiply(5, 12));\nconsole.log(multiply(5, 13));\nconsole.log(multiply(5, 14));\nconsole.log(multiply(5, 15));\nconsole.log(multiply(5, 16));\nconsole.log(multiply(5, 17));\nconsole.log(multiply(5, 18));\nconsole.log(multiply(5, 19));\nconsole.log(multiply(5, 20));\nconsole.log(multiply(5, 21));\nconsole.log(multiply(5, 22));\nconsole.log(multiply(5, 23));\nconsole.log(multiply(5, 24));\nconsole.log(multiply(5, 25));\nconsole.log(multiply(5, 26));\nconsole.log(multiply(5, 27));\nconsole.log(multiply(5, 28));\nconsole.log(multiply(5, 29));\nconsole.log(multiply(5, 30));\nconsole.log(multiply(5, 31));\nconsole.log(multiply(5, 32));\nconsole.log(multiply(5, 33));\nconsole.log(multiply(5, 34));\nconsole.log(multiply(5, 35));\nconsole.log(multiply(5, 36));\nconsole.log(multiply(5, 37));\nconsole.log(multiply(5, 38));\nconsole.log(multiply(5, 39));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpr2_t4a3l.js:52:12)\n    at Object.<anonymous> (/tmp/tmpr2_t4a3l.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2));\nconsole.log(multiply(5, 2));\nconsole.log(multiply(10, 2));\nconsole.log(multiply(25, 2));\nconsole.log(multiply(52, 2));\nconsole.log(multiply(100, 2));\nconsole.log(multiply(125, 2));\nconsole.log(multiply(252, 2));\nconsole.log(multiply(500, 2));\nconsole.log(multiply(1000, 2));\nconsole.log(multiply(1250, 2));\nconsole.log(multiply(2500, 2));\nconsole.log(multiply(5000, 2));\nconsole.log(multiply(10000, 2));\nconsole.log(multiply(25000, 2));\nconsole.log(multiply(50000, 2));\nconsole.log(multiply(100000, 2));\nconsole.log(multiply(250000, 2));\nconsole.log(multiply(500000, 2));\nconsole.log(multiply(1000000, 2));\nconsole.log(multiply(2500000, 2));\nconsole.log(multiply(5000000, 2));\nconsole.log(multiply(10000000, 2));\nconsole.log(multiply(25000000, 2));\nconsole.log(multiply(50000000, 2));\nconsole.log(multiply(100000000, 2));\nconsole.log(multiply(250000000, 2));\nconsole.log(multiply(500000000, 2));\nconsole.log(multiply(1000000000, 2));\nconsole.log(multiply(2500000000, 2));\nconsole.log(multiply(5000000000, 2));\nconsole.log(multiply(10000000000, 2));\nconsole.log(multiply(250000000000, 2));\nconsole.log(multiply(50000000000, 2));\nconsole.log(multiply(100000000000, 2));\nconsole.log(multiply(2500000000000\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpq1u4lmvc.ts(45,1): error TS1005: ',' expected.\n../../../../tmp/tmpq1u4lmvc.ts(45,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333629
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  let aString = a.toString();\n  let bString = b.toString();\n  let aUnit = parseInt(aString[aString.length - 1]);\n  let bUnit = parseInt(bString[bString.length - 1]);\n  return aUnit * bUnit;\n}\n\nconsole.log(multiply(123, 456));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "18\n",
      "timestamp": 1660333629
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    let aString = a.toString();\n    let bString = b.toString();\n    let aLastDigit = aString.charAt(aString.length - 1);\n    let bLastDigit = bString.charAt(bString.length - 1);\n    return parseInt(aLastDigit) * parseInt(bLastDigit);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 55));\nconsole.log(multiply(0, 30));\nconsole.log(multiply(1, 1));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "18\n25\n0\n0\n1\n",
      "timestamp": 1660333629
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 2));\nconsole.log(multiply(10, 3));\nconsole.log(multiply(10, 4));\nconsole.log(multiply(10, 5));\nconsole.log(multiply(10, 6));\nconsole.log(multiply(10, 7));\nconsole.log(multiply(10, 8));\nconsole.log(multiply(10, 9));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 11));\nconsole.log(multiply(10, 12));\nconsole.log(multiply(10, 13));\nconsole.log(multiply(10, 14));\nconsole.log(multiply(10, 15));\nconsole.log(multiply(10, 16));\nconsole.log(multiply(10, 17));\nconsole.log(multiply(10, 18));\nconsole.log(multiply(10, 19));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 21));\nconsole.log(multiply(10, 22));\nconsole.log(multiply(10, 23));\nconsole.log(multiply(10, 24));\nconsole.log(multiply(10, 25));\nconsole.log(multiply(10, 26));\nconsole.log(multiply(10, 27));\nconsole.log(multiply(10, 28));\nconsole.log(multiply(10, 29));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 31));\nconsole.log(multiply(10, 32));\nconsole.log(multiply(10, 33));\nconsole.log(multiply(10, 34));\nconsole.log(multiply(10, 35));\nconsole.log(multiply(10, 36));\nconsole.log(multiply(10, 37));\nconsole.log(multiply(10, 38));\nconsole.log(multiply(10, 39));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp05rxz7in.js:52:12)\n    at Object.<anonymous> (/tmp/tmp05rxz7in.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(1, 3)); // 3\nconsole.log(multiply(2, 4)); // 8\nconsole.log(multiply(5, 6)); // 30\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 0)); // 0\nconsole.log(multiply(0, 9)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(1, 9)); // 9\nconsole.log(multiply(9, 1)); // 9\nconsole.log(multiply(10, 11)); // 0\nconsole.log(multiply(11, 99)); // 9\nconsole.log(multiply(99, 11)); // 9\nconsole.log(multiply(23, 23)); // 9\nconsole.log(multiply(100, 100)); // 0\nconsole.log(multiply(100, 0)); // 0\nconsole.log(multiply(0, 100)); // 0\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 555)); // 25\nconsole.log(multiply(1000, 1000)); // 0\nconsole.log(multiply(1234, 5678)); // 48\nconsole.log(multiply(12345, 6789)); // 54\nconsole.log(multiply(1234567, 8901234)); // 86\nconsole.log(multiply(12345678, 9012345)); // 72\nconsole.log(multiply(123456789, 901234567)); // 81\nconsole.log(multiply(1234567890, 9012345678)); // 0\nconsole.log(multiply(12345678901, 90123456789)); // 9\nconsole.log(multiply(123456789012, 901234567890)); // 18\nconsole.log(multiply(12345678901\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpr8b9g921.ts(39,1): error TS1005: ',' expected.\n../../../../tmp/tmpr8b9g921.ts(39,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333629
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 45)); // 6\nconsole.log(multiply(12, 45)); // 6\nconsole.log(multiply(123, 4)); // 6\nconsole.log(multiply(123, 0)); // 0\nconsole.log(multiply(0, 45)); // 0\nconsole.log(multiply(123, -45)); // -6\nconsole.log(multiply(-12, 45)); // -6\nconsole.log(multiply(123, -4)); // -6\nconsole.log(multiply(-123, -45)); // 6\nconsole.log(multiply(-12, -45)); // 6\nconsole.log(multiply(-123, -4)); // 6\nconsole.log(multiply(-123, 0)); // 0\nconsole.log(multiply(0, -45)); // 0\nconsole.log(multiply(-123, 45)); // -6\nconsole.log(multiply(12, -45)); // -6\nconsole.log(multiply(-123, 4)); // -6\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpha9ezlu7.js:30:12)\n    at Object.<anonymous> (/tmp/tmpha9ezlu7.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "15\n10\n12\n0\n0\n-15\n-10\n-12\n15\n10\n12\n-0\n-0\n-15\n-10\n-12\n",
      "timestamp": 1660333629
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 40));\nconsole.log(multiply(10, 50));\nconsole.log(multiply(10, 60));\nconsole.log(multiply(10, 70));\nconsole.log(multiply(10, 80));\nconsole.log(multiply(10, 90));\nconsole.log(multiply(10, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpixynf4oz.js:24:12)\n    at Object.<anonymous> (/tmp/tmpixynf4oz.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333629
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2));\nconsole.log(multiply(5, 2));\nconsole.log(multiply(10, 2));\nconsole.log(multiply(25, 2));\nconsole.log(multiply(123, 45));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmphs1kuzj3.js:19:12)\n    at Object.<anonymous> (/tmp/tmphs1kuzj3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n10\n0\n10\n15\n",
      "timestamp": 1660333629
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return Number(a.toString().slice(-1)) * Number(b.toString().slice(-1));\n}\n\nconsole.log(multiply(10, 2));\nconsole.log(multiply(10, 3));\nconsole.log(multiply(10, 4));\nconsole.log(multiply(10, 5));\nconsole.log(multiply(10, 6));\nconsole.log(multiply(10, 7));\nconsole.log(multiply(10, 8));\nconsole.log(multiply(10, 9));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 11));\nconsole.log(multiply(10, 12));\nconsole.log(multiply(10, 13));\nconsole.log(multiply(10, 14));\nconsole.log(multiply(10, 15));\nconsole.log(multiply(10, 16));\nconsole.log(multiply(10, 17));\nconsole.log(multiply(10, 18));\nconsole.log(multiply(10, 19));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 21));\nconsole.log(multiply(10, 22));\nconsole.log(multiply(10, 23));\nconsole.log(multiply(10, 24));\nconsole.log(multiply(10, 25));\nconsole.log(multiply(10, 26));\nconsole.log(multiply(10, 27));\nconsole.log(multiply(10, 28));\nconsole.log(multiply(10, 29));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 31));\nconsole.log(multiply(10, 32));\nconsole.log(multiply(10, 33));\nconsole.log(multiply(10, 34));\nconsole.log(multiply(10, 35));\nconsole.log(multiply(10, 36));\nconsole.log(multiply(10, 37));\nconsole.log(multiply(10, 38));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333629
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 2));\nconsole.log(multiply(5, 3));\nconsole.log(multiply(5, 4));\nconsole.log(multiply(5, 5));\nconsole.log(multiply(5, 6));\nconsole.log(multiply(5, 7));\nconsole.log(multiply(5, 8));\nconsole.log(multiply(5, 9));\nconsole.log(multiply(5, 10));\nconsole.log(multiply(5, 11));\nconsole.log(multiply(5, 12));\nconsole.log(multiply(5, 13));\nconsole.log(multiply(5, 14));\nconsole.log(multiply(5, 15));\nconsole.log(multiply(5, 16));\nconsole.log(multiply(5, 17));\nconsole.log(multiply(5, 18));\nconsole.log(multiply(5, 19));\nconsole.log(multiply(5, 20));\nconsole.log(multiply(5, 21));\nconsole.log(multiply(5, 22));\nconsole.log(multiply(5, 23));\nconsole.log(multiply(5, 24));\nconsole.log(multiply(5, 25));\nconsole.log(multiply(5, 26));\nconsole.log(multiply(5, 27));\nconsole.log(multiply(5, 28));\nconsole.log(multiply(5, 29));\nconsole.log(multiply(5, 30));\nconsole.log(multiply(5, 31));\nconsole.log(multiply(5, 32));\nconsole.log(multiply(5, 33));\nconsole.log(multiply(5, 34));\nconsole.log(multiply(5, 35));\nconsole.log(multiply(5, 36));\nconsole.log(multiply(5, 37));\nconsole.log(multiply(5, 38));\nconsole.log(multiply(5, 39));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpxx8jyd0t.js:52:12)\n    at Object.<anonymous> (/tmp/tmpxx8jyd0t.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n",
      "timestamp": 1660333629
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 5));\nconsole.log(multiply(10, 1));\nconsole.log(multiply(10, 0));\nconsole.log(multiply(10, -1));\nconsole.log(multiply(10, -5));\nconsole.log(multiply(10, -10));\nconsole.log(multiply(-10, -10));\nconsole.log(multiply(-10, -5));\nconsole.log(multiply(-10, -1));\nconsole.log(multiply(-10, 0));\nconsole.log(multiply(-10, 1));\nconsole.log(multiply(-10, 5));\nconsole.log(multiply(-10, 10));\nconsole.log(multiply(5, -10));\nconsole.log(multiply(1, -10));\nconsole.log(multiply(0, -10));\nconsole.log(multiply(-1, -10));\nconsole.log(multiply(-5, -10));\nconsole.log(multiply(-10, -10));\nconsole.log(multiply(-10, -5));\nconsole.log(multiply(-10, -1));\nconsole.log(multiply(-10, 0));\nconsole.log(multiply(-10, 1));\nconsole.log(multiply(-10, 5));\nconsole.log(multiply(-10, 10));\nconsole.log(multiply(5, 10));\nconsole.log(multiply(1, 10));\nconsole.log(multiply(0, 10));\nconsole.log(multiply(-1, 10));\nconsole.log(multiply(-5, 10));\nconsole.log(multiply(-10, 10));\nconsole.log(multiply(-10, 5));\nconsole.log(multiply(-10, 1));\nconsole.log(multiply(-10, 0));\nconsole.log(multiply(-10, -1));\nconsole.log(multiply(-10, -\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpli4x0s13.ts(46,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333629
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return a % 10 * b % 10;\n}\n\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(2, 3)); // 6\nconsole.log(multiply(6, 4)); // 4\nconsole.log(multiply(6, 9)); // 4\nconsole.log(multiply(9, 9)); // 1\nconsole.log(multiply(9, 0)); // 0\nconsole.log(multiply(0, 9)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(0, 1)); // 0\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(2, 3)); // 6\nconsole.log(multiply(6, 4)); // 4\nconsole.log(multiply(6, 9)); // 4\nconsole.log(multiply(9, 9)); // 1\nconsole.log(multiply(9, 0)); // 0\nconsole.log(multiply(0, 9)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(0, 1)); // 0\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp1b9jlql9.js:33:12)\n    at Object.<anonymous> (/tmp/tmp1b9jlql9.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n2\n6\n4\n4\n1\n0\n0\n0\n0\n0\n1\n2\n6\n4\n4\n1\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333631
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(5, 2)); // 10\nconsole.log(multiply(10, 2)); // 0\nconsole.log(multiply(27, 81)); // 7\nconsole.log(multiply(12, 13)); // 6\nconsole.log(multiply(123, 45)); // 15\nconsole.log(multiply(22, 7)); // 14\nconsole.log(multiply(100, 200)); // 0\nconsole.log(multiply(123456789, 987654321)); // 9\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp3d6iwjqg.js:23:12)\n    at Object.<anonymous> (/tmp/tmp3d6iwjqg.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n10\n0\n7\n6\n15\n14\n0\n9\n",
      "timestamp": 1660333632
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return a * b;\n}\n\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 2));\nconsole.log(multiply\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp3ffsl7bg.ts(48,1): error TS1005: ',' expected.\n../../../../tmp/tmp3ffsl7bg.ts(48,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333631
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(2, 3));\nconsole.log(multiply(5, 2));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(8, 9));\nconsole.log(multiply(7, 4));\nconsole.log(multiply(6, 2));\nconsole.log(multiply(5, 5));\nconsole.log(multiply(4, 9));\nconsole.log(multiply(3, 3));\nconsole.log(multiply(2, 7));\nconsole.log(multiply(1, 8));\nconsole.log(multiply(9, 1));\nconsole.log(multiply(8, 2));\nconsole.log(multiply(7, 3));\nconsole.log(multiply(6, 4));\nconsole.log(multiply(5, 6));\nconsole.log(multiply(4, 7));\nconsole.log(multiply(3, 8));\nconsole.log(multiply(2, 9));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 1));\nconsole.log(multiply(9, 9));\nconsole.log(multiply(8, 8));\nconsole.log(multiply(7, 7));\nconsole.log(multiply(6, 6));\nconsole.log(multiply(5, 5));\nconsole.log(multiply(4, 4));\nconsole.log(multiply(3, 3));\nconsole.log(multiply(2, 2));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(0, 0));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpn2p3nks1.js:45:12)\n    at Object.<anonymous> (/tmp/tmpn2p3nks1.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "6\n10\n1\n72\n28\n12\n25\n36\n9\n14\n8\n9\n16\n21\n24\n30\n28\n24\n18\n0\n0\n81\n64\n49\n36\n25\n16\n9\n4\n1\n0\n",
      "timestamp": 1660333631
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 55));\nconsole.log(multiply(0, 50));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(33, 44));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpfkt56cfm.js:21:12)\n    at Object.<anonymous> (/tmp/tmpfkt56cfm.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n25\n0\n0\n0\n1\n12\n",
      "timestamp": 1660333632
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(12, 12));\nconsole.log(multiply(123, 123));\nconsole.log(multiply(123, 12));\nconsole.log(multiply(12, 123));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpduyv8s7z.js:18:12)\n    at Object.<anonymous> (/tmp/tmpduyv8s7z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "4\n9\n6\n6\n",
      "timestamp": 1660333632
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return Number(a.toString().slice(-1)) * Number(b.toString().slice(-1));\n}\n\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 555)); // 25\nconsole.log(multiply(1000, 1000)); // 0\nconsole.log(multiply(123, 5)); // 15\nconsole.log(multiply(5, 123)); // 15\nconsole.log(multiply(123, 0)); // 0\nconsole.log(multiply(0, 123)); // 0\nconsole.log(multiply(123, -5)); // -5\nconsole.log(multiply(-5, 123)); // -5\nconsole.log(multiply(123, -50)); // 0\nconsole.log(multiply(-50, 123)); // 0\nconsole.log(multiply(123, -500)); // 0\nconsole.log(multiply(-500, 123)); // 0\nconsole.log(multiply(123, -5000)); // 0\nconsole.log(multiply(-5000, 123)); // 0\nconsole.log(multiply(123, -50000)); // 0\nconsole.log(multiply(-50000, 123)); // 0\nconsole.log(multiply(123, -500000)); // 0\nconsole.log(multiply(-500000, 123)); // 0\nconsole.log(multiply(123, -5000000)); // 0\nconsole.log(multiply(-5000000, 123)); // 0\nconsole.log(multiply(123, -50000000)); // 0\nconsole.log(multiply(-50000000, 123)); // 0\nconsole.log(multiply(123, -500000000)); // 0\nconsole.log(multiply(-500000000, 123)); // 0\nconsole.log(multiply(123, -5000000000)); // 0\nconsole.log(multiply(-5000000000, 123)); // 0\nconsole.log(multiply(123, -50000000000)); // 0\nconsole.log(multiply(-50000000000, 123)); // 0\nconsole.log(multiply(123, -500000000000));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "18\n25\n0\n15\n15\n0\n0\n15\n15\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333632
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    const aLastDigit = a % 10;\n    const bLastDigit = b % 10;\n    return aLastDigit * bLastDigit;\n}\n\nconsole.log(multiply(3, 4)); // 12\nconsole.log(multiply(3, 3)); // 9\nconsole.log(multiply(3, 2)); // 6\nconsole.log(multiply(3, 1)); // 3\nconsole.log(multiply(3, 0)); // 0\nconsole.log(multiply(3, -1)); // -3\nconsole.log(multiply(3, -2)); // -6\nconsole.log(multiply(3, -3)); // -9\nconsole.log(multiply(3, -4)); // -12\nconsole.log(multiply(3, -5)); // -15\nconsole.log(multiply(3, -6)); // -18\nconsole.log(multiply(3, -7)); // -21\nconsole.log(multiply(3, -8)); // -24\nconsole.log(multiply(3, -9)); // -27\nconsole.log(multiply(3, -10)); // -30\nconsole.log(multiply(3, -11)); // -33\nconsole.log(multiply(3, -12)); // -36\nconsole.log(multiply(3, -13)); // -39\nconsole.log(multiply(3, -14)); // -42\nconsole.log(multiply(3, -15)); // -45\nconsole.log(multiply(3, -16)); // -48\nconsole.log(multiply(3, -17)); // -51\nconsole.log(multiply(3, -18)); // -54\nconsole.log(multiply(3, -19)); // -57\nconsole.log(multiply(3, -20)); // -60\nconsole.log(multiply(3, -21)); // -63\nconsole.log(multiply(3, -22)); // -66\nconsole.log(multiply(3, -23)); // -69\nconsole.log(mult\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp37njpyq5.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmp37njpyq5.ts(40,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333632
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 45)); // 6\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(123, 4567)); // 6\nconsole.log(multiply(123, 45678)); // 6\nconsole.log(multiply(123, 456789)); // 6\nconsole.log(multiply(123, 4567890)); // 6\nconsole.log(multiply(123, 45678901)); // 6\nconsole.log(multiply(123, 456789012)); // 6\nconsole.log(multiply(123, 4567890123)); // 6\nconsole.log(multiply(123, 45678901234)); // 6\nconsole.log(multiply(123, 456789012345)); // 6\nconsole.log(multiply(123, 4567890123456)); // 6\nconsole.log(multiply(123, 45678901234567)); // 6\nconsole.log(multiply(123, 456789012345678)); // 6\nconsole.log(multiply(123, 4567890123456789)); // 6\nconsole.log(multiply(123, 45678901234567890)); // 6\nconsole.log(multiply(123, 456789012345678901)); // 6\nconsole.log(multiply(123, 4567890123456789012)); // 6\nconsole.log(multiply(123, 45678901234567890123)); // 6\nconsole.log(multiply(123, 456789012345678901234)); // 6\nconsole.log(multiply(123, 4567890123456789012345)); // 6\nconsole.log(multiply(123, 45678901234567890123456)); // 6\nconsole.log(multiply(123, 456789012345678901234567)); // 6\nconsole.log(multiply(123, 4567890123456789012345678)); // 6\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpsst1dd40.js:39:12)\n    at Object.<anonymous> (/tmp/tmpsst1dd40.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "15\n18\n21\n24\n27\n0\n3\n6\n9\n12\n15\n18\n21\n24\n27\n24\n6\n6\n18\n24\n12\n12\n6\n6\n",
      "timestamp": 1660333633
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return Number(String(a).slice(-1)) * Number(String(b).slice(-1));\n}\n\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 555)); // 25\nconsole.log(multiply(1000, 55)); // 0\nconsole.log(multiply(0, 55)); // 0\nconsole.log(multiply(1, 55)); // 5\nconsole.log(multiply(1, 5)); // 5\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(0, 1)); // 0\nconsole.log(multiply(0, 10)); // 0\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(10, 0)); // 0\nconsole.log(multiply(10, 1)); // 0\nconsole.log(multiply(10, 10)); // 0\nconsole.log(multiply(10, 11)); // 0\nconsole.log(multiply(10, 12)); // 2\nconsole.log(multiply(10, 13)); // 3\nconsole.log(multiply(10, 14)); // 4\nconsole.log(multiply(10, 15)); // 5\nconsole.log(multiply(10, 16)); // 6\nconsole.log(multiply(10, 17)); // 7\nconsole.log(multiply(10, 18)); // 8\nconsole.log(multiply(10, 19)); // 9\nconsole.log(multiply(10, 20)); // 0\nconsole.log(multiply(10, 21)); // 1\nconsole.log(multiply(10, 22)); // 2\nconsole.log(multiply(10, 23)); // 3\nconsole.log(multiply(10, 24)); // 4\nconsole.log(multiply(10, 25)); // 5\nconsole.log(multiply(10, 26)); // 6\nconsole.log(multiply(10, 27)); // 7\nconsole.log(multiply(10, 28)); // 8\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "18\n25\n0\n0\n5\n5\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333633
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return Number(a.toString().split('').pop()) * Number(b.toString().split('').pop());\n}\n\nconsole.log(multiply(10, 2)); // 2\nconsole.log(multiply(10, 3)); // 3\nconsole.log(multiply(10, 4)); // 4\nconsole.log(multiply(10, 5)); // 0\nconsole.log(multiply(10, 6)); // 6\nconsole.log(multiply(10, 7)); // 0\nconsole.log(multiply(10, 8)); // 8\nconsole.log(multiply(10, 9)); // 0\nconsole.log(multiply(10, 10)); // 0\nconsole.log(multiply(10, 11)); // 0\nconsole.log(multiply(10, 12)); // 2\nconsole.log(multiply(10, 13)); // 3\nconsole.log(multiply(10, 14)); // 4\nconsole.log(multiply(10, 15)); // 0\nconsole.log(multiply(10, 16)); // 6\nconsole.log(multiply(10, 17)); // 0\nconsole.log(multiply(10, 18)); // 8\nconsole.log(multiply(10, 19)); // 0\nconsole.log(multiply(10, 20)); // 0\nconsole.log(multiply(10, 21)); // 0\nconsole.log(multiply(10, 22)); // 2\nconsole.log(multiply(10, 23)); // 3\nconsole.log(multiply(10, 24)); // 4\nconsole.log(multiply(10, 25)); // 0\nconsole.log(multiply(10, 26)); // 6\nconsole.log(multiply(10, 27)); // 0\nconsole.log(multiply(10, 28)); // 8\nconsole.log(multiply(10, 29)); // 0\nconsole.log(multiply(10, 30)); // 0\nconsole.log(multiply(10, 31)); // 0\nconsole.log(multiply(10, 32)); // 2\nconsole.log(multiply(10, 33)); //\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333633
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 2));\nconsole.log(multiply(5, 3));\nconsole.log(multiply(5, 4));\nconsole.log(multiply(5, 5));\nconsole.log(multiply(5, 6));\nconsole.log(multiply(5, 7));\nconsole.log(multiply(5, 8));\nconsole.log(multiply(5, 9));\nconsole.log(multiply(5, 10));\nconsole.log(multiply(5, 11));\nconsole.log(multiply(5, 12));\nconsole.log(multiply(5, 13));\nconsole.log(multiply(5, 14));\nconsole.log(multiply(5, 15));\nconsole.log(multiply(5, 16));\nconsole.log(multiply(5, 17));\nconsole.log(multiply(5, 18));\nconsole.log(multiply(5, 19));\nconsole.log(multiply(5, 20));\nconsole.log(multiply(5, 21));\nconsole.log(multiply(5, 22));\nconsole.log(multiply(5, 23));\nconsole.log(multiply(5, 24));\nconsole.log(multiply(5, 25));\nconsole.log(multiply(5, 26));\nconsole.log(multiply(5, 27));\nconsole.log(multiply(5, 28));\nconsole.log(multiply(5, 29));\nconsole.log(multiply(5, 30));\nconsole.log(multiply(5, 31));\nconsole.log(multiply(5, 32));\nconsole.log(multiply(5, 33));\nconsole.log(multiply(5, 34));\nconsole.log(multiply(5, 35));\nconsole.log(multiply(5, 36));\nconsole.log(multiply(5, 37));\nconsole.log(multiply(5, 38));\nconsole.log(multiply(5, 39));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpr2_t4a3l.js:52:12)\n    at Object.<anonymous> (/tmp/tmpr2_t4a3l.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    let aString = a.toString();\n    let bString = b.toString();\n    let aLastIndex = aString.length - 1;\n    let bLastIndex = bString.length - 1;\n    let aLastDigit = parseInt(aString[aLastIndex]);\n    let bLastDigit = parseInt(bString[bLastIndex]);\n    return aLastDigit * bLastDigit;\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1000));\nconsole.log(multiply(0, 1000));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(0, 0));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "18\n25\n0\n0\n0\n0\n",
      "timestamp": 1660333633
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 2));\nconsole.log(multiply(10, 3));\nconsole.log(multiply(10, 4));\nconsole.log(multiply(10, 5));\nconsole.log(multiply(10, 6));\nconsole.log(multiply(10, 7));\nconsole.log(multiply(10, 8));\nconsole.log(multiply(10, 9));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 11));\nconsole.log(multiply(10, 12));\nconsole.log(multiply(10, 13));\nconsole.log(multiply(10, 14));\nconsole.log(multiply(10, 15));\nconsole.log(multiply(10, 16));\nconsole.log(multiply(10, 17));\nconsole.log(multiply(10, 18));\nconsole.log(multiply(10, 19));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 21));\nconsole.log(multiply(10, 22));\nconsole.log(multiply(10, 23));\nconsole.log(multiply(10, 24));\nconsole.log(multiply(10, 25));\nconsole.log(multiply(10, 26));\nconsole.log(multiply(10, 27));\nconsole.log(multiply(10, 28));\nconsole.log(multiply(10, 29));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 31));\nconsole.log(multiply(10, 32));\nconsole.log(multiply(10, 33));\nconsole.log(multiply(10, 34));\nconsole.log(multiply(10, 35));\nconsole.log(multiply(10, 36));\nconsole.log(multiply(10, 37));\nconsole.log(multiply(10, 38));\nconsole.log(multiply(10, 39));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp05rxz7in.js:52:12)\n    at Object.<anonymous> (/tmp/tmp05rxz7in.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return Math.floor(a / 10) * Math.floor(b / 10);\n}\n\nconsole.log(multiply(10, 11));\nconsole.log(multiply(21, 22));\nconsole.log(multiply(21, 23));\nconsole.log(multiply(21, 24));\nconsole.log(multiply(21, 25));\nconsole.log(multiply(21, 26));\nconsole.log(multiply(21, 27));\nconsole.log(multiply(21, 28));\nconsole.log(multiply(21, 29));\nconsole.log(multiply(21, 30));\nconsole.log(multiply(21, 31));\nconsole.log(multiply(21, 32));\nconsole.log(multiply(21, 33));\nconsole.log(multiply(21, 34));\nconsole.log(multiply(21, 35));\nconsole.log(multiply(21, 36));\nconsole.log(multiply(21, 37));\nconsole.log(multiply(21, 38));\nconsole.log(multiply(21, 39));\nconsole.log(multiply(21, 40));\nconsole.log(multiply(21, 41));\nconsole.log(multiply(21, 42));\nconsole.log(multiply(21, 43));\nconsole.log(multiply(21, 44));\nconsole.log(multiply(21, 45));\nconsole.log(multiply(21, 46));\nconsole.log(multiply(21, 47));\nconsole.log(multiply(21, 48));\nconsole.log(multiply(21, 49));\nconsole.log(multiply(21, 50));\nconsole.log(multiply(21, 51));\nconsole.log(multiply(21, 52));\nconsole.log(multiply(21, 53));\nconsole.log(multiply(21, 54));\nconsole.log(multiply(21, 55));\nconsole.log(multiply(21, 56));\nconsole.log(multiply(21, 57));\nconsole.log(multiply\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp6lkebc_9.ts(47,1): error TS1005: ',' expected.\n../../../../tmp/tmp6lkebc_9.ts(47,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333632
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 5));\nconsole.log(multiply(2, 3));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(1, 5));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 1));\nconsole.log(multiply(0, 0));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmppz5w_txg.js:22:12)\n    at Object.<anonymous> (/tmp/tmppz5w_txg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "25\n6\n20\n5\n1\n0\n0\n0\n",
      "timestamp": 1660333633
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(12, 34));\nconsole.log(multiply(123, 45));\nconsole.log(multiply(123, 456));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpg8zh5tg6.js:17:12)\n    at Object.<anonymous> (/tmp/tmpg8zh5tg6.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "8\n15\n18\n",
      "timestamp": 1660333633
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return Number(String(a).slice(-1)) * Number(String(b).slice(-1));\n}\n\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 555)); // 25\nconsole.log(multiply(1000, 1000)); // 0\nconsole.log(multiply(123, 5)); // 15\nconsole.log(multiply(5, 123)); // 15\nconsole.log(multiply(123, 0)); // 0\nconsole.log(multiply(0, 123)); // 0\nconsole.log(multiply(123, -5)); // -5\nconsole.log(multiply(-5, 123)); // -5\nconsole.log(multiply(123, 1)); // 3\nconsole.log(multiply(1, 123)); // 3\nconsole.log(multiply(123, 9)); // 7\nconsole.log(multiply(9, 123)); // 7\nconsole.log(multiply(123, -9)); // -7\nconsole.log(multiply(-9, 123)); // -7\nconsole.log(multiply(123, -1)); // -3\nconsole.log(multiply(-1, 123)); // -3\nconsole.log(multiply(123, -0)); // 0\nconsole.log(multiply(-0, 123)); // 0\nconsole.log(multiply(123, -123)); // -9\nconsole.log(multiply(-123, 123)); // -9\nconsole.log(multiply(123, -456)); // -4\nconsole.log(multiply(-456, 123)); // -4\nconsole.log(multiply(123, -789)); // -6\nconsole.log(multiply(-789, 123)); // -6\nconsole.log(multiply(123, -1000)); // -0\nconsole.log(multiply(-1000, 123)); // -0\nconsole.log(multiply(123, -5678)); // -2\nconsole.log(multiply(-5678, 123)); // -2\nconsole.log(multiply(123, -9876)); // -8\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "18\n25\n0\n15\n15\n0\n0\n15\n15\n3\n3\n27\n27\n27\n27\n3\n3\n0\n0\n9\n9\n18\n18\n27\n27\n0\n0\n24\n24\n18\n",
      "timestamp": 1660333633
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2));\nconsole.log(multiply(12, 2));\nconsole.log(multiply(1, 22));\nconsole.log(multiply(12, 22));\nconsole.log(multiply(123, 45));\nconsole.log(multiply(123, 456));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp0mrjv__1.js:20:12)\n    at Object.<anonymous> (/tmp/tmp0mrjv__1.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n4\n2\n4\n15\n18\n",
      "timestamp": 1660333633
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a * b) % 10;\n}\n\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 9));\nconsole.log(multiply(9, 9));\nconsole.log(multiply(9, 0));\nconsole.log(multiply(0, 9));\nconsole.log(multiply(0, 0));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmphpys4r4e.js:17:12)\n    at Object.<anonymous> (/tmp/tmphpys4r4e.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n9\n1\n0\n0\n0\n",
      "timestamp": 1660333633
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(1, 3)); // 3\nconsole.log(multiply(1, 4)); // 4\nconsole.log(multiply(1, 5)); // 5\nconsole.log(multiply(1, 6)); // 6\nconsole.log(multiply(1, 7)); // 7\nconsole.log(multiply(1, 8)); // 8\nconsole.log(multiply(1, 9)); // 9\nconsole.log(multiply(1, 10)); // 0\nconsole.log(multiply(1, 11)); // 1\nconsole.log(multiply(1, 12)); // 2\nconsole.log(multiply(1, 13)); // 3\nconsole.log(multiply(1, 14)); // 4\nconsole.log(multiply(1, 15)); // 5\nconsole.log(multiply(1, 16)); // 6\nconsole.log(multiply(1, 17)); // 7\nconsole.log(multiply(1, 18)); // 8\nconsole.log(multiply(1, 19)); // 9\nconsole.log(multiply(1, 20)); // 0\nconsole.log(multiply(1, 21)); // 1\nconsole.log(multiply(1, 22)); // 2\nconsole.log(multiply(1, 23)); // 3\nconsole.log(multiply(1, 24)); // 4\nconsole.log(multiply(1, 25)); // 5\nconsole.log(multiply(1, 26)); // 6\nconsole.log(multiply(1, 27)); // 7\nconsole.log(multiply(1, 28)); // 8\nconsole.log(multiply(1, 29)); // 9\nconsole.log(multiply(1, 30)); // 0\nconsole.log(multiply(1, 31)); // 1\nconsole.log(multiply(1, 32)); // 2\nconsole.log(multiply(1, 33)); // 3\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp5hpl6ov2.js:47:12)\n    at Object.<anonymous> (/tmp/tmp5hpl6ov2.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n1\n2\n3\n",
      "timestamp": 1660333633
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 555)); // 30\nconsole.log(multiply(1000, 1000)); // 0\nconsole.log(multiply(0, 2)); // 0\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 555)); // 30\nconsole.log(multiply(1000, 1000)); // 0\nconsole.log(multiply(0, 2)); // 0\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(0, 0)); // 0\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmph6mxo9a2.js:28:12)\n    at Object.<anonymous> (/tmp/tmph6mxo9a2.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n25\n0\n0\n2\n0\n0\n18\n25\n0\n0\n2\n0\n0\n",
      "timestamp": 1660333633
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(12, 34));\nconsole.log(multiply(123, 45));\nconsole.log(multiply(123, 456));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpg8zh5tg6.js:17:12)\n    at Object.<anonymous> (/tmp/tmpg8zh5tg6.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "8\n15\n18\n",
      "timestamp": 1660333633
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return Number(a.toString().split('').pop()) * Number(b.toString().split('').pop());\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 555));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "18\n25\n0\n",
      "timestamp": 1660333633
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 40));\nconsole.log(multiply(10, 50));\nconsole.log(multiply(10, 60));\nconsole.log(multiply(10, 70));\nconsole.log(multiply(10, 80));\nconsole.log(multiply(10, 90));\nconsole.log(multiply(10, 100));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpntcp_ius.js:24:12)\n    at Object.<anonymous> (/tmp/tmpntcp_ius.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333633
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 777)); // 35\nconsole.log(multiply(1000, 2000)); // 0\nconsole.log(multiply(1451, 16)); // 6\nconsole.log(multiply(99, 99)); // 81\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(0, 1)); // 0\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(2, 2)); // 4\nconsole.log(multiply(2, 3)); // 6\nconsole.log(multiply(3, 3)); // 9\nconsole.log(multiply(3, 4)); // 12\nconsole.log(multiply(4, 4)); // 16\nconsole.log(multiply(4, 5)); // 20\nconsole.log(multiply(5, 5)); // 25\nconsole.log(multiply(5, 6)); // 30\nconsole.log(multiply(6, 6)); // 36\nconsole.log(multiply(6, 7)); // 42\nconsole.log(multiply(7, 7)); // 49\nconsole.log(multiply(7, 8)); // 56\nconsole.log(multiply(8, 8)); // 64\nconsole.log(multiply(8, 9)); // 72\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 10)); // 90\nconsole.log(multiply(10, 10)); // 100\nconsole.log(multiply(10, 11)); // 110\nconsole.log(multiply(11, 11)); // 121\nconsole.log(multiply(11, 12)); // 132\nconsole.log(multiply(12, 12)); // 144\nconsole.log(multiply(12, 13)); // 156\nconsole.log(multiply(13, 13));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpqwg4mamw.js:47:12)\n    at Object.<anonymous> (/tmp/tmpqwg4mamw.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n35\n0\n6\n81\n0\n0\n0\n1\n2\n4\n6\n9\n12\n16\n20\n25\n30\n36\n42\n49\n56\n64\n72\n81\n0\n0\n0\n1\n2\n4\n6\n9\n",
      "timestamp": 1660333633
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 40));\nconsole.log(multiply(10, 50));\nconsole.log(multiply(10, 60));\nconsole.log(multiply(10, 70));\nconsole.log(multiply(10, 80));\nconsole.log(multiply(10, 90));\nconsole.log(multiply(10, 100));\nconsole.log(multiply(10, 110));\nconsole.log(multiply(10, 120));\nconsole.log(multiply(10, 130));\nconsole.log(multiply(10, 140));\nconsole.log(multiply(10, 150));\nconsole.log(multiply(10, 160));\nconsole.log(multiply(10, 170));\nconsole.log(multiply(10, 180));\nconsole.log(multiply(10, 190));\nconsole.log(multiply(10, 200));\nconsole.log(multiply(10, 210));\nconsole.log(multiply(10, 220));\nconsole.log(multiply(10, 230));\nconsole.log(multiply(10, 240));\nconsole.log(multiply(10, 250));\nconsole.log(multiply(10, 260));\nconsole.log(multiply(10, 270));\nconsole.log(multiply(10, 280));\nconsole.log(multiply(10, 290));\nconsole.log(multiply(10, 300));\nconsole.log(multiply(10, 310));\nconsole.log(multiply(10, 320));\nconsole.log(multiply(10, 330));\nconsole.log(multiply(10, 340));\nconsole.log(multiply(10, 350));\nconsole.log(multiply(10, 360));\nconsole.log(multiply(10, 370));\nconsole.log(multiply(10, 380));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpl_hd4ksp.js:52:12)\n    at Object.<anonymous> (/tmp/tmpl_hd4ksp.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333621
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return Math.floor(a % 10) * Math.floor(b % 10);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1000));\nconsole.log(multiply(0, 1000));\nconsole.log(multiply(123, 0));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpo1o8tyt5.js:19:12)\n    at Object.<anonymous> (/tmp/tmpo1o8tyt5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n25\n0\n0\n0\n",
      "timestamp": 1660333635
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 2));\nconsole.log(multiply(5, 3));\nconsole.log(multiply(5, 4));\nconsole.log(multiply(5, 5));\nconsole.log(multiply(5, 6));\nconsole.log(multiply(5, 7));\nconsole.log(multiply(5, 8));\nconsole.log(multiply(5, 9));\nconsole.log(multiply(5, 10));\nconsole.log(multiply(5, 11));\nconsole.log(multiply(5, 12));\nconsole.log(multiply(5, 13));\nconsole.log(multiply(5, 14));\nconsole.log(multiply(5, 15));\nconsole.log(multiply(5, 16));\nconsole.log(multiply(5, 17));\nconsole.log(multiply(5, 18));\nconsole.log(multiply(5, 19));\nconsole.log(multiply(5, 20));\nconsole.log(multiply(5, 21));\nconsole.log(multiply(5, 22));\nconsole.log(multiply(5, 23));\nconsole.log(multiply(5, 24));\nconsole.log(multiply(5, 25));\nconsole.log(multiply(5, 26));\nconsole.log(multiply(5, 27));\nconsole.log(multiply(5, 28));\nconsole.log(multiply(5, 29));\nconsole.log(multiply(5, 30));\nconsole.log(multiply(5, 31));\nconsole.log(multiply(5, 32));\nconsole.log(multiply(5, 33));\nconsole.log(multiply(5, 34));\nconsole.log(multiply(5, 35));\nconsole.log(multiply(5, 36));\nconsole.log(multiply(5, 37));\nconsole.log(multiply(5, 38));\nconsole.log(multiply(5, 39));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpr2_t4a3l.js:52:12)\n    at Object.<anonymous> (/tmp/tmpr2_t4a3l.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 555));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmprr9oxe_z.js:17:12)\n    at Object.<anonymous> (/tmp/tmprr9oxe_z.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n25\n0\n",
      "timestamp": 1660333635
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(12, 34));\nconsole.log(multiply(123, 45));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123, 4567));\nconsole.log(multiply(123, 45678));\nconsole.log(multiply(123, 456789));\nconsole.log(multiply(123, 4567890));\nconsole.log(multiply(123, 45678901));\nconsole.log(multiply(123, 456789012));\nconsole.log(multiply(123, 4567890123));\nconsole.log(multiply(123, 45678901234));\nconsole.log(multiply(123, 456789012345));\nconsole.log(multiply(123, 4567890123456));\nconsole.log(multiply(123, 45678901234567));\nconsole.log(multiply(123, 456789012345678));\nconsole.log(multiply(123, 4567890123456789));\nconsole.log(multiply(123, 45678901234567890));\nconsole.log(multiply(123, 456789012345678901));\nconsole.log(multiply(123, 4567890123456789012));\nconsole.log(multiply(123, 45678901234567890123));\nconsole.log(multiply(123, 456789012345678901234));\nconsole.log(multiply(123, 4567890123456789012345));\nconsole.log(multiply(123, 45678901234567890123456));\nconsole.log(multiply(123, 456789012345678901234567));\nconsole.log(multiply(123, 4567890123456789012345678));\nconsole.log(multiply(123, 45678901234567890123456789));\nconsole.log(multiply(123, 45\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp8hnw4c3i.ts(36,1): error TS1005: ',' expected.\n../../../../tmp/tmp8hnw4c3i.ts(36,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333635
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 2));\nconsole.log(multiply(10, 3));\nconsole.log(multiply(10, 4));\nconsole.log(multiply(10, 5));\nconsole.log(multiply(10, 6));\nconsole.log(multiply(10, 7));\nconsole.log(multiply(10, 8));\nconsole.log(multiply(10, 9));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 11));\nconsole.log(multiply(10, 12));\nconsole.log(multiply(10, 13));\nconsole.log(multiply(10, 14));\nconsole.log(multiply(10, 15));\nconsole.log(multiply(10, 16));\nconsole.log(multiply(10, 17));\nconsole.log(multiply(10, 18));\nconsole.log(multiply(10, 19));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 21));\nconsole.log(multiply(10, 22));\nconsole.log(multiply(10, 23));\nconsole.log(multiply(10, 24));\nconsole.log(multiply(10, 25));\nconsole.log(multiply(10, 26));\nconsole.log(multiply(10, 27));\nconsole.log(multiply(10, 28));\nconsole.log(multiply(10, 29));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 31));\nconsole.log(multiply(10, 32));\nconsole.log(multiply(10, 33));\nconsole.log(multiply(10, 34));\nconsole.log(multiply(10, 35));\nconsole.log(multiply(10, 36));\nconsole.log(multiply(10, 37));\nconsole.log(multiply(10, 38));\nconsole.log(multiply(10, 39));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp05rxz7in.js:52:12)\n    at Object.<anonymous> (/tmp/tmp05rxz7in.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(5, 2)); // 10\nconsole.log(multiply(7, 4)); // 28\nconsole.log(multiply(9, 8)); // 72\nconsole.log(multiply(3, 3)); // 9\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 0)); // 0\nconsole.log(multiply(9, 1)); // 9\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(0, 9)); // 0\nconsole.log(multiply(1, 9)); // 9\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 9)); // 81\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpzw8ctvra.js:47:12)\n    at Object.<anonymous> (/tmp/tmpzw8ctvra.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n10\n28\n72\n9\n81\n0\n9\n0\n0\n9\n81\n81\n81\n81\n81\n81\n81\n81\n81\n81\n81\n81\n81\n81\n81\n81\n81\n81\n81\n81\n81\n81\n",
      "timestamp": 1660333635
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10)); // 0\nconsole.log(multiply(10, 1)); // 0\nconsole.log(multiply(10, 2)); // 0\nconsole.log(multiply(10, 3)); // 0\nconsole.log(multiply(10, 4)); // 0\nconsole.log(multiply(10, 5)); // 0\nconsole.log(multiply(10, 6)); // 0\nconsole.log(multiply(10, 7)); // 0\nconsole.log(multiply(10, 8)); // 0\nconsole.log(multiply(10, 9)); // 0\nconsole.log(multiply(10, 10)); // 0\nconsole.log(multiply(10, 11)); // 0\nconsole.log(multiply(10, 12)); // 0\nconsole.log(multiply(10, 13)); // 0\nconsole.log(multiply(10, 14)); // 0\nconsole.log(multiply(10, 15)); // 0\nconsole.log(multiply(10, 16)); // 0\nconsole.log(multiply(10, 17)); // 0\nconsole.log(multiply(10, 18)); // 0\nconsole.log(multiply(10, 19)); // 0\nconsole.log(multiply(10, 20)); // 0\nconsole.log(multiply(10, 21)); // 0\nconsole.log(multiply(10, 22)); // 0\nconsole.log(multiply(10, 23)); // 0\nconsole.log(multiply(10, 24)); // 0\nconsole.log(multiply(10, 25)); // 0\nconsole.log(multiply(10, 26)); // 0\nconsole.log(multiply(10, 27)); // 0\nconsole.log(multiply(10, 28)); // 0\nconsole.log(multiply(10, 29)); // 0\nconsole.log(multiply(10, 30)); // 0\nconsole.log(multiply(10, 31)); // 0\nconsole.log(multiply(10, 32)); // 0\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp8asenmc2.js:47:12)\n    at Object.<anonymous> (/tmp/tmp8asenmc2.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333635
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a * b) % 10;\n}\n\nconsole.log(multiply(2, 3));\nconsole.log(multiply(5, 2));\nconsole.log(multiply(9, 9));\nconsole.log(multiply(9, 0));\nconsole.log(multiply(0, 9));\nconsole.log(multiply(0, 0));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp8ekzlyke.js:17:12)\n    at Object.<anonymous> (/tmp/tmp8ekzlyke.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "6\n0\n1\n0\n0\n0\n",
      "timestamp": 1660333636
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  const aDigit = a % 10;\n  const bDigit = b % 10;\n  return aDigit * bDigit;\n}\n\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(5, 2)); // 10\nconsole.log(multiply(9, 2)); // 18\nconsole.log(multiply(9, 3)); // 27\nconsole.log(multiply(10, 11)); // 0\nconsole.log(multiply(0, 30)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(0, 1)); // 0\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(1, 9)); // 9\nconsole.log(multiply(9, 1)); // 9\nconsole.log(multiply(10, 10)); // 0\nconsole.log(multiply(10, 100)); // 0\nconsole.log(multiply(100, 100)); // 0\nconsole.log(multiply(100, 10)); // 0\nconsole.log(multiply(100, 1)); // 0\nconsole.log(multiply(1, 100)); // 0\nconsole.log(multiply(123, 45)); // 15\nconsole.log(multiply(22, 7)); // 14\nconsole.log(multiply(100, 0)); // 0\nconsole.log(multiply(0, 100)); // 0\nconsole.log(multiply(123, 0)); // 0\nconsole.log(multiply(0, 123)); // 0\nconsole.log(multiply(123, 1)); // 3\nconsole.log(multiply(1, 123)); // 3\nconsole.log(multiply(123, 9)); // 27\nconsole.log(multiply(9, 123)); // 27\nconsole.log(multiply(123, 12)); // 6\nconsole.log(multiply(12, 123)); // 6\nconsole.log(multiply(123, 22)); // 6\nconsole.log(multiply(22,\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpf8jsq8fj.ts(43,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333636
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 55));\nconsole.log(multiply(0, 50));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(33, 44));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 55));\nconsole.log(multiply(0, 50));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(33, 44));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 55));\nconsole.log(multiply(0, 50));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(33, 44));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 55));\nconsole.log(multiply(0, 50));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(33, 44));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 55));\nconsole.log(multiply(0, 50));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(33, 44));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpnsculfa2.ts(47,1): error TS1005: ',' expected.\n../../../../tmp/tmpnsculfa2.ts(47,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333636
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(12, 13));\nconsole.log(multiply(5, 2));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 1));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(25, 25));\nconsole.log(multiply(123, 56));\nconsole.log(multiply(123, 1));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(0, 123));\nconsole.log(multiply(1, 123));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 1));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(25, 25));\nconsole.log(multiply(123, 56));\nconsole.log(multiply(123, 1));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(0, 123));\nconsole.log(multiply(1, 123));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp76ssu6wm.js:36:12)\n    at Object.<anonymous> (/tmp/tmp76ssu6wm.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "6\n10\n0\n0\n0\n1\n25\n18\n3\n0\n0\n3\n0\n0\n0\n1\n25\n18\n3\n0\n0\n3\n",
      "timestamp": 1660333636
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2));\nconsole.log(multiply(5, 2));\nconsole.log(multiply(10, 2));\nconsole.log(multiply(0, 2));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(25, 25));\nconsole.log(multiply(123, 56));\nconsole.log(multiply(123, 1));\nconsole.log(multiply(1, 123));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(123, 123));\nconsole.log(multiply(123, 321));\nconsole.log(multiply(321, 123));\nconsole.log(multiply(32, 123));\nconsole.log(multiply(32, 321));\nconsole.log(multiply(123, 32));\nconsole.log(multiply(321, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\nconsole.log(multiply(32, 32));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpl1_cqwg0.js:52:12)\n    at Object.<anonymous> (/tmp/tmpl1_cqwg0.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n10\n0\n0\n0\n0\n25\n18\n3\n3\n1\n9\n3\n3\n6\n2\n6\n2\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n",
      "timestamp": 1660333636
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 20));\nconsole.log(multiply(5, 10));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 1));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 3));\nconsole.log(multiply(1, 4));\nconsole.log(multiply(1, 5));\nconsole.log(multiply(1, 6));\nconsole.log(multiply(1, 7));\nconsole.log(multiply(1, 8));\nconsole.log(multiply(1, 9));\nconsole.log(multiply(1, 10));\nconsole.log(multiply(1, 11));\nconsole.log(multiply(1, 12));\nconsole.log(multiply(1, 13));\nconsole.log(multiply(1, 14));\nconsole.log(multiply(1, 15));\nconsole.log(multiply(1, 16));\nconsole.log(multiply(1, 17));\nconsole.log(multiply(1, 18));\nconsole.log(multiply(1, 19));\nconsole.log(multiply(1, 20));\nconsole.log(multiply(1, 21));\nconsole.log(multiply(1, 22));\nconsole.log(multiply(1, 23));\nconsole.log(multiply(1, 24));\nconsole.log(multiply(1, 25));\nconsole.log(multiply(1, 26));\nconsole.log(multiply(1, 27));\nconsole.log(multiply(1, 28));\nconsole.log(multiply(1, 29));\nconsole.log(multiply(1, 30));\nconsole.log(multiply(1, 31));\nconsole.log(multiply(1, 32));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp9bikjkoe.js:52:12)\n    at Object.<anonymous> (/tmp/tmp9bikjkoe.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n2\n1\n0\n0\n0\n2\n3\n4\n5\n6\n7\n8\n9\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n1\n2\n",
      "timestamp": 1660333636
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return a % 10 * b % 10;\n}\n\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(5, 2)); // 10\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(0, 1)); // 0\nconsole.log(multiply(25, 25)); // 6\nconsole.log(multiply(1, 25)); // 5\nconsole.log(multiply(25, 1)); // 5\nconsole.log(multiply(123, 56)); // 3\nconsole.log(multiply(123, 1)); // 3\nconsole.log(multiply(123, 0)); // 0\nconsole.log(multiply(0, 123)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(123, -22)); // 6\nconsole.log(multiply(-22, 123)); // 6\nconsole.log(multiply(-22, -22)); // 4\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpnvvtjwn6.js:27:12)\n    at Object.<anonymous> (/tmp/tmpnvvtjwn6.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n0\n0\n0\n0\n5\n5\n5\n8\n3\n0\n0\n0\n-6\n-6\n4\n",
      "timestamp": 1660333636
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 9));\nconsole.log(multiply(9, 9));\nconsole.log(multiply(9, 0));\nconsole.log(multiply(0, 9));\nconsole.log(multiply(0, 0));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpjzq7zot0.js:20:12)\n    at Object.<anonymous> (/tmp/tmpjzq7zot0.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n9\n81\n0\n0\n0\n",
      "timestamp": 1660333636
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp4hx2915k.js:14:12)\n    at Object.<anonymous> (/tmp/tmp4hx2915k.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333626
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(10, 2)); // 0\nconsole.log(multiply(10, 20)); // 0\nconsole.log(multiply(10, 0)); // 0\nconsole.log(multiply(0, 10)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 0)); // 0\nconsole.log(multiply(0, 123)); // 0\nconsole.log(multiply(123, -456)); // -18\nconsole.log(multiply(-123, 456)); // -18\nconsole.log(multiply(-123, -456)); // 18\nconsole.log(multiply(123, -0)); // 0\nconsole.log(multiply(-0, 123)); // 0\nconsole.log(multiply(-0, -0)); // 0\nconsole.log(multiply(123, -456)); // -18\nconsole.log(multiply(-123, 456)); // -18\nconsole.log(multiply(-123, -456)); // 18\nconsole.log(multiply(123, -0)); // 0\nconsole.log(multiply(-0, 123)); // 0\nconsole.log(multiply(-0, -0)); // 0\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpxqm26ev2.js:35:12)\n    at Object.<anonymous> (/tmp/tmpxqm26ev2.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n0\n0\n0\n0\n0\n18\n0\n0\n-18\n-18\n18\n-0\n-0\n0\n-18\n-18\n18\n-0\n-0\n0\n",
      "timestamp": 1660333637
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 3)); // 15\nconsole.log(multiply(5, 4)); // 20\nconsole.log(multiply(5, 5)); // 25\nconsole.log(multiply(5, 6)); // 30\nconsole.log(multiply(5, 7)); // 35\nconsole.log(multiply(5, 8)); // 40\nconsole.log(multiply(5, 9)); // 45\nconsole.log(multiply(5, 10)); // 50\nconsole.log(multiply(5, 11)); // 55\nconsole.log(multiply(5, 12)); // 60\nconsole.log(multiply(5, 13)); // 65\nconsole.log(multiply(5, 14)); // 70\nconsole.log(multiply(5, 15)); // 75\nconsole.log(multiply(5, 16)); // 80\nconsole.log(multiply(5, 17)); // 85\nconsole.log(multiply(5, 18)); // 90\nconsole.log(multiply(5, 19)); // 95\nconsole.log(multiply(5, 20)); // 100\nconsole.log(multiply(5, 21)); // 105\nconsole.log(multiply(5, 22)); // 110\nconsole.log(multiply(5, 23)); // 115\nconsole.log(multiply(5, 24)); // 120\nconsole.log(multiply(5, 25)); // 125\nconsole.log(multiply(5, 26)); // 130\nconsole.log(multiply(5, 27)); // 135\nconsole.log(multiply(5, 28)); // 140\nconsole.log(multiply(5, 29)); // 145\nconsole.log(multiply(5, 30)); // 150\nconsole.log(multiply(5, 31)); // 155\nconsole.log(multiply(5, 32)); // 160\nconsole.log(multiply(5, 33)); // 165\nconsole.log(multiply(5, 34)); // 170\nconsole.log(multiply(5, 35)); // 175\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp1pad63f3.js:47:12)\n    at Object.<anonymous> (/tmp/tmp1pad63f3.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 555)); // 30\nconsole.log(multiply(1000, 1000)); // 0\nconsole.log(multiply(0, 2)); // 0\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(8, 9)); // 72\nconsole.log(multiply(9, 8)); // 72\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 1)); // 9\nconsole.log(multiply(1, 9)); // 9\nconsole.log(multiply(9, 10)); // 90\nconsole.log(multiply(10, 9)); // 90\nconsole.log(multiply(10, 10)); // 100\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 555)); // 30\nconsole.log(multiply(1000, 1000)); // 0\nconsole.log(multiply(0, 2)); // 0\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(8, 9)); // 72\nconsole.log(multiply(9, 8)); // 72\nconsole.log(multiply(9, 9)); // 81\nconsole.log(multiply(9, 1)); // 9\nconsole.log(multiply(1, 9)); // 9\nconsole.log(multiply(9, 10)); // 90\nconsole.log(multiply(10, 9)); // 90\nconsole.log(multiply(10, 10)); // 100\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpt8glo85v.js:46:12)\n    at Object.<anonymous> (/tmp/tmpt8glo85v.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n25\n0\n0\n2\n0\n0\n1\n72\n72\n81\n9\n9\n0\n0\n0\n18\n25\n0\n0\n2\n0\n0\n1\n72\n72\n81\n9\n9\n0\n0\n0\n",
      "timestamp": 1660333636
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(1, 3)); // 3\nconsole.log(multiply(1, 4)); // 4\nconsole.log(multiply(1, 5)); // 5\nconsole.log(multiply(1, 6)); // 6\nconsole.log(multiply(1, 7)); // 7\nconsole.log(multiply(1, 8)); // 8\nconsole.log(multiply(1, 9)); // 9\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(2, 2)); // 4\nconsole.log(multiply(2, 3)); // 6\nconsole.log(multiply(2, 4)); // 8\nconsole.log(multiply(2, 5)); // 0\nconsole.log(multiply(2, 6)); // 2\nconsole.log(multiply(2, 7)); // 4\nconsole.log(multiply(2, 8)); // 6\nconsole.log(multiply(2, 9)); // 8\nconsole.log(multiply(2, 0)); // 0\nconsole.log(multiply(3, 3)); // 9\nconsole.log(multiply(3, 4)); // 2\nconsole.log(multiply(3, 5)); // 5\nconsole.log(multiply(3, 6)); // 8\nconsole.log(multiply(3, 7)); // 1\nconsole.log(multiply(3, 8)); // 4\nconsole.log(multiply(3, 9)); // 7\nconsole.log(multiply(3, 0)); // 0\nconsole.log(multiply(4, 4)); // 6\nconsole.log(multiply(4, 5)); // 0\nconsole.log(multiply(4, 6)); // 4\nconsole.log(multiply(4, 7)); // 8\nconsole.log(multiply(4, 8)); // 2\nconsole.log(multiply(4, 9)); // 6\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmprf9tma_q.js:47:12)\n    at Object.<anonymous> (/tmp/tmprf9tma_q.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n4\n6\n8\n10\n12\n14\n16\n18\n0\n9\n12\n15\n18\n21\n24\n27\n0\n16\n20\n24\n28\n32\n36\n",
      "timestamp": 1660333636
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return a % 10 * b % 10;\n}\n\nconsole.log(multiply(10, 2));\nconsole.log(multiply(10, 3));\nconsole.log(multiply(10, 4));\nconsole.log(multiply(10, 5));\nconsole.log(multiply(10, 6));\nconsole.log(multiply(10, 7));\nconsole.log(multiply(10, 8));\nconsole.log(multiply(10, 9));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 11));\nconsole.log(multiply(10, 12));\nconsole.log(multiply(10, 13));\nconsole.log(multiply(10, 14));\nconsole.log(multiply(10, 15));\nconsole.log(multiply(10, 16));\nconsole.log(multiply(10, 17));\nconsole.log(multiply(10, 18));\nconsole.log(multiply(10, 19));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 21));\nconsole.log(multiply(10, 22));\nconsole.log(multiply(10, 23));\nconsole.log(multiply(10, 24));\nconsole.log(multiply(10, 25));\nconsole.log(multiply(10, 26));\nconsole.log(multiply(10, 27));\nconsole.log(multiply(10, 28));\nconsole.log(multiply(10, 29));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 31));\nconsole.log(multiply(10, 32));\nconsole.log(multiply(10, 33));\nconsole.log(multiply(10, 34));\nconsole.log(multiply(10, 35));\nconsole.log(multiply(10, 36));\nconsole.log(multiply(10, 37));\nconsole.log(multiply(10, 38));\nconsole.log(multiply(10, 39));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpjm1abx0h.js:50:12)\n    at Object.<anonymous> (/tmp/tmpjm1abx0h.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333636
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return Number(String(a).slice(-1)) * Number(String(b).slice(-1));\n}\n\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, -20));\nconsole.log(multiply(10, 0));\nconsole.log(multiply(10, 1));\nconsole.log(multiply(10, 2));\nconsole.log(multiply(10, 3));\nconsole.log(multiply(10, 4));\nconsole.log(multiply(10, 5));\nconsole.log(multiply(10, 6));\nconsole.log(multiply(10, 7));\nconsole.log(multiply(10, 8));\nconsole.log(multiply(10, 9));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 11));\nconsole.log(multiply(10, 12));\nconsole.log(multiply(10, 13));\nconsole.log(multiply(10, 14));\nconsole.log(multiply(10, 15));\nconsole.log(multiply(10, 16));\nconsole.log(multiply(10, 17));\nconsole.log(multiply(10, 18));\nconsole.log(multiply(10, 19));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 21));\nconsole.log(multiply(10, 22));\nconsole.log(multiply(10, 23));\nconsole.log(multiply(10, 24));\nconsole.log(multiply(10, 25));\nconsole.log(multiply(10, 26));\nconsole.log(multiply(10, 27));\nconsole.log(multiply(10, 28));\nconsole.log(multiply(10, 29));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 31));\nconsole.log(multiply(10, 32));\nconsole.log(multiply(10, 33));\nconsole.log(multiply(10, 34));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpia_vlecz.ts(46,9): error TS1003: Identifier expected.\n",
      "timestamp": 1660333636
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(12, 12));\nconsole.log(multiply(123, 12));\nconsole.log(multiply(123, 123));\nconsole.log(multiply(123, 1234));\nconsole.log(multiply(123, 12345));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp6irdd8g_.js:19:12)\n    at Object.<anonymous> (/tmp/tmp6irdd8g_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "4\n6\n9\n12\n15\n",
      "timestamp": 1660333637
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(1, 5)); // 5\nconsole.log(multiply(1, 9)); // 9\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(1, 4)); // 4\nconsole.log(multiply(1, 6)); // 6\nconsole.log(multiply(1, 8)); // 8\nconsole.log(multiply(1, 3)); // 3\nconsole.log(multiply(1, 7)); // 7\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(1, 10)); // 0\nconsole.log(multiply(1, 12)); // 2\nconsole.log(multiply(1, 15)); // 5\nconsole.log(multiply(1, 19)); // 9\nconsole.log(multiply(1, 20)); // 0\nconsole.log(multiply(1, 24)); // 4\nconsole.log(multiply(1, 26)); // 6\nconsole.log(multiply(1, 28)); // 8\nconsole.log(multiply(1, 30)); // 0\nconsole.log(multiply(1, 32)); // 2\nconsole.log(multiply(1, 35)); // 5\nconsole.log(multiply(1, 39)); // 9\nconsole.log(multiply(1, 40)); // 0\nconsole.log(multiply(1, 44)); // 4\nconsole.log(multiply(1, 46)); // 6\nconsole.log(multiply(1, 48)); // 8\nconsole.log(multiply(1, 50)); // 0\nconsole.log(multiply(1, 52)); // 2\nconsole.log(multiply(1, 55)); // 5\nconsole.log(multiply(1, 59)); // 9\nconsole.log(multiply(1, 60)); // 0\nconsole.log(multiply(1, 64)); // 4\nconsole.log(multiply(1, 66)); // 6\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp08uaa9ov.js:47:12)\n    at Object.<anonymous> (/tmp/tmp08uaa9ov.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n5\n9\n0\n4\n6\n8\n3\n7\n1\n0\n2\n5\n9\n0\n4\n6\n8\n0\n2\n5\n9\n0\n4\n6\n8\n0\n2\n5\n9\n0\n4\n6\n",
      "timestamp": 1660333637
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    const aStr = a.toString();\n    const bStr = b.toString();\n    const aLast = aStr[aStr.length - 1];\n    const bLast = bStr[bStr.length - 1];\n    return Number(aLast) * Number(bLast);\n}\n\nconsole.log(multiply(123, 456));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "18\n",
      "timestamp": 1660333637
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp4hx2915k.js:14:12)\n    at Object.<anonymous> (/tmp/tmp4hx2915k.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333626
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(12, 2)); // 4\nconsole.log(multiply(1, 12)); // 2\nconsole.log(multiply(123, 45)); // 10\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 456)); // 18\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpkxqvkx_o.ts(40,9): error TS1003: Identifier expected.\n",
      "timestamp": 1660333636
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 45));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpzypqa8l3.js:15:12)\n    at Object.<anonymous> (/tmp/tmpzypqa8l3.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "15\n",
      "timestamp": 1660333637
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 45)); // 6\nconsole.log(multiply(4, 5)); // 0\nconsole.log(multiply(0, 5)); // 0\nconsole.log(multiply(1, 5)); // 5\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(123, 45)); // 6\nconsole.log(multiply(123, 456)); // 6\nconsole.log(multiply(123, 4567)); // 6\nconsole.log(multiply(123, 45678)); // 6\nconsole.log(multiply(123, 456789)); // 6\nconsole.log(multiply(123, 4567890)); // 6\nconsole.log(multiply(123, 45678901)); // 6\nconsole.log(multiply(123, 456789012)); // 6\nconsole.log(multiply(123, 4567890123)); // 6\nconsole.log(multiply(123, 45678901234)); // 6\nconsole.log(multiply(123, 456789012345)); // 6\nconsole.log(multiply(123, 4567890123456)); // 6\nconsole.log(multiply(123, 45678901234567)); // 6\nconsole.log(multiply(123, 456789012345678)); // 6\nconsole.log(multiply(123, 4567890123456789)); // 6\nconsole.log(multiply(123, 45678901234567890)); // 6\nconsole.log(multiply(123, 456789012345678901)); // 6\nconsole.log(multiply(123, 4567890123456789012)); // 6\nconsole.log(multiply(123, 45678901234567890123)); // 6\nconsole.log(multiply(123, 456789012345678901234)); // 6\nconsole.log(multiply(123, 456789\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd90ix9pr.ts(36,1): error TS1005: ',' expected.\n../../../../tmp/tmpd90ix9pr.ts(36,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333638
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10)); // 0\nconsole.log(multiply(10, 1)); // 0\nconsole.log(multiply(10, 2)); // 0\nconsole.log(multiply(10, 3)); // 0\nconsole.log(multiply(10, 4)); // 0\nconsole.log(multiply(10, 5)); // 0\nconsole.log(multiply(10, 6)); // 0\nconsole.log(multiply(10, 7)); // 0\nconsole.log(multiply(10, 8)); // 0\nconsole.log(multiply(10, 9)); // 0\nconsole.log(multiply(10, 10)); // 0\nconsole.log(multiply(10, 11)); // 0\nconsole.log(multiply(10, 12)); // 0\nconsole.log(multiply(10, 13)); // 0\nconsole.log(multiply(10, 14)); // 0\nconsole.log(multiply(10, 15)); // 0\nconsole.log(multiply(10, 16)); // 0\nconsole.log(multiply(10, 17)); // 0\nconsole.log(multiply(10, 18)); // 0\nconsole.log(multiply(10, 19)); // 0\nconsole.log(multiply(10, 20)); // 0\nconsole.log(multiply(10, 21)); // 0\nconsole.log(multiply(10, 22)); // 0\nconsole.log(multiply(10, 23)); // 0\nconsole.log(multiply(10, 24)); // 0\nconsole.log(multiply(10, 25)); // 0\nconsole.log(multiply(10, 26)); // 0\nconsole.log(multiply(10, 27)); // 0\nconsole.log(multiply(10, 28)); // 0\nconsole.log(multiply(10, 29)); // 0\nconsole.log(multiply(10, 30)); // 0\nconsole.log(multiply(10, 31)); // 0\nconsole.log(multiply(10, 32)); // 0\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp8asenmc2.js:47:12)\n    at Object.<anonymous> (/tmp/tmp8asenmc2.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333635
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 45));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpzypqa8l3.js:15:12)\n    at Object.<anonymous> (/tmp/tmpzypqa8l3.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "15\n",
      "timestamp": 1660333637
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpfrd3g8hn.js:15:12)\n    at Object.<anonymous> (/tmp/tmpfrd3g8hn.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n",
      "timestamp": 1660333638
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return Number(a.toString().slice(-1)) * Number(b.toString().slice(-1));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333639
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 40));\nconsole.log(multiply(10, 50));\nconsole.log(multiply(10, 60));\nconsole.log(multiply(10, 70));\nconsole.log(multiply(10, 80));\nconsole.log(multiply(10, 90));\nconsole.log(multiply(10, 100));\nconsole.log(multiply(10, 110));\nconsole.log(multiply(10, 120));\nconsole.log(multiply(10, 130));\nconsole.log(multiply(10, 140));\nconsole.log(multiply(10, 150));\nconsole.log(multiply(10, 160));\nconsole.log(multiply(10, 170));\nconsole.log(multiply(10, 180));\nconsole.log(multiply(10, 190));\nconsole.log(multiply(10, 200));\nconsole.log(multiply(10, 210));\nconsole.log(multiply(10, 220));\nconsole.log(multiply(10, 230));\nconsole.log(multiply(10, 240));\nconsole.log(multiply(10, 250));\nconsole.log(multiply(10, 260));\nconsole.log(multiply(10, 270));\nconsole.log(multiply(10, 280));\nconsole.log(multiply(10, 290));\nconsole.log(multiply(10, 300));\nconsole.log(multiply(10, 310));\nconsole.log(multiply(10, 320));\nconsole.log(multiply(10, 330));\nconsole.log(multiply(10, 340));\nconsole.log(multiply(10, 350));\nconsole.log(multiply(10, 360));\nconsole.log(multiply(10, 370));\nconsole.log(multiply(10, 380));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp6izqod2x.js:52:12)\n    at Object.<anonymous> (/tmp/tmp6izqod2x.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333618
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return Number(String(a).slice(-1)) * Number(String(b).slice(-1));\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1));\nconsole.log(multiply(1, 1000));\nconsole.log(multiply(0, 1000));\nconsole.log(multiply(1000, 0));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(0, 123));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1));\nconsole.log(multiply(1, 1000));\nconsole.log(multiply(0, 1000));\nconsole.log(multiply(1000, 0));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(0, 123));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1));\nconsole.log(multiply(1, 1000));\nconsole.log(multiply(0, 1000));\nconsole.log(multiply(1000, 0));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(0, 123));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1));\nconsole.log(multiply(1, 1000));\nconsole.log(multiply(0, 1000));\nconsole.log(multiply(1000, 0));\nconsole.log(multiply(123, 0));\nconsole.log(multiply(0, 123));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1));\nconsole.log(multiply(1, 1000));\nconsole.log(multiply(0, 1000\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpc_qc88km.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmpc_qc88km.ts(46,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333639
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456)); // Expected: 4\nconsole.log(multiply(555, 555)); // Expected: 25\nconsole.log(multiply(1000, 1000)); // Expected: 0\nconsole.log(multiply(0, 2000)); // Expected: 0\nconsole.log(multiply(2, 213)); // Expected: 6\nconsole.log(multiply(6, 9)); // Expected: 4\nconsole.log(multiply(6, -9)); // Expected: 4\nconsole.log(multiply(-6, 9)); // Expected: 4\nconsole.log(multiply(-6, -9)); // Expected: 4\nconsole.log(multiply(6, 0)); // Expected: 0\nconsole.log(multiply(0, 9)); // Expected: 0\nconsole.log(multiply(0, 0)); // Expected: 0\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpzn604hri.js:26:12)\n    at Object.<anonymous> (/tmp/tmpzn604hri.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n25\n0\n0\n6\n54\n-54\n-54\n54\n0\n0\n0\n",
      "timestamp": 1660333639
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 555)); // 30\nconsole.log(multiply(1000, 1000)); // 0\nconsole.log(multiply(0, 2)); // 0\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(33, 44)); // 12\nconsole.log(multiply(10, 11)); // 0\nconsole.log(multiply(25, 51)); // 5\nconsole.log(multiply(123, 456)); // 4\nconsole.log(multiply(555, 555)); // 30\nconsole.log(multiply(1000, 1000)); // 0\nconsole.log(multiply(0, 2)); // 0\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(33, 44)); // 12\nconsole.log(multiply(10, 11)); // 0\nconsole.log(multiply(25, 51)); // 5\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpyyj_57iy.js:34:12)\n    at Object.<anonymous> (/tmp/tmpyyj_57iy.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n25\n0\n0\n2\n0\n1\n12\n0\n5\n18\n25\n0\n0\n2\n0\n1\n12\n0\n5\n",
      "timestamp": 1660333639
    },
    {
      "exit_code": 2,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(3, 4)); // Expected: 2\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 0)); // Expected: 0\nconsole.log(multiply(0, 0)); // Expected: 0\nconsole.log(multiply(0, 3)); // Expected: 0\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(3, 3)); // Expected: 9\nconsole.log(multiply(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp_dn4s2_f.ts(37,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333639
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 1000));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(100, 100));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(12, 12));\nconsole.log(multiply(25, 25));\nconsole.log(multiply(77, 77));\nconsole.log(multiply(6, 6));\nconsole.log(multiply(88, 88));\nconsole.log(multiply(99, 99));\nconsole.log(multiply(37, 37));\nconsole.log(multiply(57, 57));\nconsole.log(multiply(47, 47));\nconsole.log(multiply(67, 67));\nconsole.log(multiply(87, 87));\nconsole.log(multiply(97, 97));\nconsole.log(multiply(27, 27));\nconsole.log(multiply(17, 17));\nconsole.log(multiply(7, 7));\nconsole.log(multiply(8, 8));\nconsole.log(multiply(9, 9));\nconsole.log(multiply(2, 2));\nconsole.log(multiply(3, 3));\nconsole.log(multiply(4, 4));\nconsole.log(multiply(5, 5));\nconsole.log(multiply(6, 6));\nconsole.log(multiply(7, 7));\nconsole.log(multiply(8, 8));\nconsole.log(multiply(9, 9));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(2, 2));\nconsole.log(multiply(3, 3));\nconsole.log(multiply(4, 4));\nconsole.log(multiply(5, 5));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpavj9txfy.js:52:12)\n    at Object.<anonymous> (/tmp/tmpavj9txfy.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n25\n0\n0\n0\n1\n0\n4\n25\n49\n36\n64\n81\n49\n49\n49\n49\n49\n49\n49\n49\n49\n64\n81\n4\n9\n16\n25\n36\n49\n64\n81\n0\n1\n4\n9\n16\n25\n",
      "timestamp": 1660333639
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return a % 10 * b % 10;\n}\n\nconsole.log(multiply(12, 12)); // 4\nconsole.log(multiply(123, 12)); // 6\nconsole.log(multiply(123, 123)); // 9\nconsole.log(multiply(123, 1234)); // 8\nconsole.log(multiply(123, 12345)); // 0\nconsole.log(multiply(123, 123456)); // 0\nconsole.log(multiply(123, 1234567)); // 0\nconsole.log(multiply(123, 12345678)); // 0\nconsole.log(multiply(123, 123456789)); // 0\nconsole.log(multiply(123, 1234567890)); // 0\nconsole.log(multiply(123, 12345678901)); // 0\nconsole.log(multiply(123, 123456789012)); // 0\nconsole.log(multiply(123, 1234567890123)); // 0\nconsole.log(multiply(123, 12345678901234)); // 0\nconsole.log(multiply(123, 123456789012345)); // 0\nconsole.log(multiply(123, 1234567890123456)); // 0\nconsole.log(multiply(123, 12345678901234567)); // 0\nconsole.log(multiply(123, 123456789012345678)); // 0\nconsole.log(multiply(123, 1234567890123456789)); // 0\nconsole.log(multiply(123, 12345678901234567890)); // 0\nconsole.log(multiply(123, 123456789012345678901)); // 0\nconsole.log(multiply(123, 1234567890123456789012)); // 0\nconsole.log(multiply(123, 12345678901234567890123)); // 0\nconsole.log(multiply(123, 123456789012345678901234)); // 0\nconsole.log(multiply(123, 1234567890123456789012345)); // 0\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmprvop40gm.js:36:12)\n    at Object.<anonymous> (/tmp/tmprvop40gm.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "4\n6\n9\n2\n5\n8\n1\n4\n7\n0\n3\n6\n9\n2\n5\n8\n4\n6\n0\n2\n2\n2\n0\n0\n4\n",
      "timestamp": 1660333639
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 10));\nconsole.log(multiply(10, 5));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(5, 5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpq8a6whk2.js:18:12)\n    at Object.<anonymous> (/tmp/tmpq8a6whk2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n25\n",
      "timestamp": 1660333640
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    let aString = a.toString();\n    let bString = b.toString();\n    let aUnit = aString.slice(-1);\n    let bUnit = bString.slice(-1);\n    let aUnitNumber = parseInt(aUnit);\n    let bUnitNumber = parseInt(bUnit);\n    let product = aUnitNumber * bUnitNumber;\n    return product;\n}\n\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 0));\nconsole.log(multiply(10, 1));\nconsole.log(multiply(10, 2));\nconsole.log(multiply(10, 3));\nconsole.log(multiply(10, 4));\nconsole.log(multiply(10, 5));\nconsole.log(multiply(10, 6));\nconsole.log(multiply(10, 7));\nconsole.log(multiply(10, 8));\nconsole.log(multiply(10, 9));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 11));\nconsole.log(multiply(10, 12));\nconsole.log(multiply(10, 13));\nconsole.log(multiply(10, 14));\nconsole.log(multiply(10, 15));\nconsole.log(multiply(10, 16));\nconsole.log(multiply(10, 17));\nconsole.log(multiply(10, 18));\nconsole.log(multiply(10, 19));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 21));\nconsole.log(multiply(10, 22));\nconsole.log(multiply(10, 23));\nconsole.log(multiply(10, 24));\nconsole.log(multiply(10, 25));\nconsole.log(multiply(10, 26));\nconsole.log(multiply(10, 27));\nconsole.log(multiply(10, 28));\nconsole.log(multiply(10, 29));\nconsole.log(multiply(10, 30));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333640
    },
    {
      "exit_code": 0,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return Number(String(a).slice(-1)) * Number(String(b).slice(-1));\n}\n\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(12, 2)); // 4\nconsole.log(multiply(1, 12)); // 2\nconsole.log(multiply(123, 45)); // 15\nconsole.log(multiply(123, 456)); // 18\nconsole.log(multiply(123, 4567)); // 21\nconsole.log(multiply(123, 45678)); // 24\nconsole.log(multiply(123, 456789)); // 27\nconsole.log(multiply(123, 4567890)); // 30\nconsole.log(multiply(123, 45678901)); // 33\nconsole.log(multiply(123, 456789012)); // 36\nconsole.log(multiply(123, 4567890123)); // 39\nconsole.log(multiply(123, 45678901234)); // 42\nconsole.log(multiply(123, 456789012345)); // 45\nconsole.log(multiply(123, 4567890123456)); // 48\nconsole.log(multiply(123, 45678901234567)); // 51\nconsole.log(multiply(123, 456789012345678)); // 54\nconsole.log(multiply(123, 4567890123456789)); // 57\nconsole.log(multiply(123, 45678901234567890)); // 60\nconsole.log(multiply(123, 456789012345678901)); // 63\nconsole.log(multiply(123, 4567890123456789012)); // 66\nconsole.log(multiply(123, 45678901234567890123)); // 69\nconsole.log(multiply(123, 456789012345678901234)); // 72\nconsole.log(multiply(123, 4567890123456789012345)); // 75\nconsole.log(multiply(123, 45678901234567890123456)); //\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "2\n4\n2\n15\n18\n21\n24\n27\n0\n3\n6\n9\n12\n15\n18\n21\n24\n27\n0\n0\n0\n0\n0\n3\n6\n",
      "timestamp": 1660333640
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 2));\nconsole.log(multiply(10, 3));\nconsole.log(multiply(10, 4));\nconsole.log(multiply(10, 5));\nconsole.log(multiply(10, 6));\nconsole.log(multiply(10, 7));\nconsole.log(multiply(10, 8));\nconsole.log(multiply(10, 9));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 11));\nconsole.log(multiply(10, 12));\nconsole.log(multiply(10, 13));\nconsole.log(multiply(10, 14));\nconsole.log(multiply(10, 15));\nconsole.log(multiply(10, 16));\nconsole.log(multiply(10, 17));\nconsole.log(multiply(10, 18));\nconsole.log(multiply(10, 19));\nconsole.log(multiply(10, 20));\nconsole.log(multiply(10, 21));\nconsole.log(multiply(10, 22));\nconsole.log(multiply(10, 23));\nconsole.log(multiply(10, 24));\nconsole.log(multiply(10, 25));\nconsole.log(multiply(10, 26));\nconsole.log(multiply(10, 27));\nconsole.log(multiply(10, 28));\nconsole.log(multiply(10, 29));\nconsole.log(multiply(10, 30));\nconsole.log(multiply(10, 31));\nconsole.log(multiply(10, 32));\nconsole.log(multiply(10, 33));\nconsole.log(multiply(10, 34));\nconsole.log(multiply(10, 35));\nconsole.log(multiply(10, 36));\nconsole.log(multiply(10, 37));\nconsole.log(multiply(10, 38));\nconsole.log(multiply(10, 39));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpk5a8mals.js:52:12)\n    at Object.<anonymous> (/tmp/tmpk5a8mals.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333640
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 4));\nconsole.log(multiply(10, 4));\nconsole.log(multiply(5, 10));\nconsole.log(multiply(10, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpl1u2ryod.js:18:12)\n    at Object.<anonymous> (/tmp/tmpl1u2ryod.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "20\n0\n0\n0\n",
      "timestamp": 1660333640
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 5)); // 25\nconsole.log(multiply(5, 4)); // 20\nconsole.log(multiply(5, 3)); // 15\nconsole.log(multiply(5, 2)); // 10\nconsole.log(multiply(5, 1)); // 5\nconsole.log(multiply(5, 0)); // 0\nconsole.log(multiply(0, 5)); // 0\nconsole.log(multiply(0, 0)); // 0\nconsole.log(multiply(1, 5)); // 5\nconsole.log(multiply(1, 0)); // 0\nconsole.log(multiply(1, 1)); // 1\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(2, 1)); // 2\nconsole.log(multiply(2, 2)); // 4\nconsole.log(multiply(2, 3)); // 6\nconsole.log(multiply(2, 4)); // 8\nconsole.log(multiply(2, 5)); // 10\nconsole.log(multiply(3, 2)); // 6\nconsole.log(multiply(3, 3)); // 9\nconsole.log(multiply(3, 4)); // 12\nconsole.log(multiply(3, 5)); // 15\nconsole.log(multiply(4, 2)); // 8\nconsole.log(multiply(4, 3)); // 12\nconsole.log(multiply(4, 4)); // 16\nconsole.log(multiply(4, 5)); // 20\nconsole.log(multiply(5, 5)); // 25\nconsole.log(multiply(5, 4)); // 20\nconsole.log(multiply(5, 3)); // 15\nconsole.log(multiply(5, 2)); // 10\nconsole.log(multiply(5, 1)); // 5\nconsole.log(multiply(5, 0)); // 0\nconsole.log(multiply(0, 5)); // 0\nconsole.log(multiply(0, 0)); // 0\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpgoylj4ke.js:47:12)\n    at Object.<anonymous> (/tmp/tmpgoylj4ke.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "25\n20\n15\n10\n5\n0\n0\n0\n5\n0\n1\n2\n2\n4\n6\n8\n10\n6\n9\n12\n15\n8\n12\n16\n20\n25\n20\n15\n10\n5\n0\n0\n0\n",
      "timestamp": 1660333640
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a * b) % 10;\n}\n\nconsole.log(multiply(1, 2));\nconsole.log(multiply(2, 3));\nconsole.log(multiply(5, 2));\nconsole.log(multiply(9, 9));\nconsole.log(multiply(9, 0));\nconsole.log(multiply(0, 9));\nconsole.log(multiply(0, 0));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpp__lzysa.js:18:12)\n    at Object.<anonymous> (/tmp/tmpp__lzysa.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n6\n0\n1\n0\n0\n0\n",
      "timestamp": 1660333640
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 55));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 1));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(2, 1));\nconsole.log(multiply(2, 2));\nconsole.log(multiply(8, 9));\nconsole.log(multiply(9, 8));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 55));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(0, 1));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(2, 1));\nconsole.log(multiply(2, 2));\nconsole.log(multiply(8, 9));\nconsole.log(multiply(9, 8));\nconsole.log(multiply(10, 10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp96t5_q7o.js:40:12)\n    at Object.<anonymous> (/tmp/tmp96t5_q7o.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n25\n0\n0\n0\n0\n1\n2\n2\n4\n72\n72\n0\n18\n25\n0\n0\n0\n0\n1\n2\n2\n4\n72\n72\n0\n",
      "timestamp": 1660333640
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 777));\nconsole.log(multiply(1000, 2000));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpsacgumyt.js:17:12)\n    at Object.<anonymous> (/tmp/tmpsacgumyt.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n35\n0\n",
      "timestamp": 1660333640
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 5));\nconsole.log(multiply(5, 10));\nconsole.log(multiply(5, 15));\nconsole.log(multiply(5, 20));\nconsole.log(multiply(5, 25));\nconsole.log(multiply(5, 30));\nconsole.log(multiply(5, 35));\nconsole.log(multiply(5, 40));\nconsole.log(multiply(5, 45));\nconsole.log(multiply(5, 50));\nconsole.log(multiply(5, 55));\nconsole.log(multiply(5, 60));\nconsole.log(multiply(5, 65));\nconsole.log(multiply(5, 70));\nconsole.log(multiply(5, 75));\nconsole.log(multiply(5, 80));\nconsole.log(multiply(5, 85));\nconsole.log(multiply(5, 90));\nconsole.log(multiply(5, 95));\nconsole.log(multiply(5, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpim3050dr.js:34:12)\n    at Object.<anonymous> (/tmp/tmpim3050dr.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "25\n0\n25\n0\n25\n0\n25\n0\n25\n0\n25\n0\n25\n0\n25\n0\n25\n0\n25\n0\n",
      "timestamp": 1660333640
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 4));\nconsole.log(multiply(5, 5));\nconsole.log(multiply(5, 6));\nconsole.log(multiply(5, 7));\nconsole.log(multiply(5, 8));\nconsole.log(multiply(5, 9));\nconsole.log(multiply(5, 10));\nconsole.log(multiply(5, 11));\nconsole.log(multiply(5, 12));\nconsole.log(multiply(5, 13));\nconsole.log(multiply(5, 14));\nconsole.log(multiply(5, 15));\nconsole.log(multiply(5, 16));\nconsole.log(multiply(5, 17));\nconsole.log(multiply(5, 18));\nconsole.log(multiply(5, 19));\nconsole.log(multiply(5, 20));\nconsole.log(multiply(5, 21));\nconsole.log(multiply(5, 22));\nconsole.log(multiply(5, 23));\nconsole.log(multiply(5, 24));\nconsole.log(multiply(5, 25));\nconsole.log(multiply(5, 26));\nconsole.log(multiply(5, 27));\nconsole.log(multiply(5, 28));\nconsole.log(multiply(5, 29));\nconsole.log(multiply(5, 30));\nconsole.log(multiply(5, 31));\nconsole.log(multiply(5, 32));\nconsole.log(multiply(5, 33));\nconsole.log(multiply(5, 34));\nconsole.log(multiply(5, 35));\nconsole.log(multiply(5, 36));\nconsole.log(multiply(5, 37));\nconsole.log(multiply(5, 38));\nconsole.log(multiply(5, 39));\nconsole.log(multiply(5, 40));\nconsole.log(multiply(5, 41));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpm341p521.js:52:12)\n    at Object.<anonymous> (/tmp/tmpm341p521.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n0\n5\n",
      "timestamp": 1660333640
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(555, 555));\nconsole.log(multiply(1000, 555));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpw81bmmak.js:17:12)\n    at Object.<anonymous> (/tmp/tmpw81bmmak.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "18\n25\n0\n",
      "timestamp": 1660333628
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(5, 4));\nconsole.log(multiply(10, 3));\nconsole.log(multiply(9, 8));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpg92gqsjw.js:17:12)\n    at Object.<anonymous> (/tmp/tmpg92gqsjw.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "20\n0\n72\n",
      "timestamp": 1660333640
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2));\nconsole.log(multiply(10, 2));\nconsole.log(multiply(1, 20));\nconsole.log(multiply(10, 20));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpw_gsb7vi.js:18:12)\n    at Object.<anonymous> (/tmp/tmpw_gsb7vi.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n0\n0\n0\n",
      "timestamp": 1660333640
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(2, 3));\nconsole.log(multiply(5, 3));\nconsole.log(multiply(2, 4));\nconsole.log(multiply(5, 6));\nconsole.log(multiply(9, 9));\nconsole.log(multiply(9, 0));\nconsole.log(multiply(0, 9));\nconsole.log(multiply(0, 0));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp3x3kxa4z.js:22:12)\n    at Object.<anonymous> (/tmp/tmp3x3kxa4z.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "6\n15\n8\n30\n81\n0\n0\n0\n",
      "timestamp": 1660333640
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return a % 10 * b % 10;\n}\n\nconsole.log(multiply(12, 34));\nconsole.log(multiply(123, 45));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123, 4567));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp9m8ezt04.js:15:12)\n    at Object.<anonymous> (/tmp/tmp9m8ezt04.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "8\n5\n8\n1\n",
      "timestamp": 1660333641
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp4hx2915k.js:14:12)\n    at Object.<anonymous> (/tmp/tmp4hx2915k.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333626
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 2));\nconsole.log(multiply(5, 2));\nconsole.log(multiply(0, 0));\nconsole.log(multiply(1, 0));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmpzya9ygz_.js:18:12)\n    at Object.<anonymous> (/tmp/tmpzya9ygz_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n10\n0\n0\n",
      "timestamp": 1660333641
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10));\nconsole.log(multiply(10, 1));\nconsole.log(multiply(10, 0));\nconsole.log(multiply(10, -1));\nconsole.log(multiply(10, -10));\nconsole.log(multiply(10, -100));\nconsole.log(multiply(10, -1000));\nconsole.log(multiply(10, -10000));\nconsole.log(multiply(10, -100000));\nconsole.log(multiply(10, -1000000));\nconsole.log(multiply(10, -10000000));\nconsole.log(multiply(10, -100000000));\nconsole.log(multiply(10, -1000000000));\nconsole.log(multiply(10, -10000000000));\nconsole.log(multiply(10, -100000000000));\nconsole.log(multiply(10, -1000000000000));\nconsole.log(multiply(10, -10000000000000));\nconsole.log(multiply(10, -100000000000000));\nconsole.log(multiply(10, -1000000000000000));\nconsole.log(multiply(10, -10000000000000000));\nconsole.log(multiply(10, -100000000000000000));\nconsole.log(multiply(10, -1000000000000000000));\nconsole.log(multiply(10, -10000000000000000000));\nconsole.log(multiply(10, -100000000000000000000));\nconsole.log(multiply(10, -1000000000000000000000));\nconsole.log(multiply(10, -10000000000000000000000));\nconsole.log(multiply(10, -100000000000000000000000));\nconsole.log(multiply(10, -1000000000000000000000000));\nconsole.log(multiply(10, -10000000000000000000000000));\nconsole.log(multiply(10, -100000000000000000000000000));\nconsole.log(multiply(10, -1000000000000000000000000000));\nconsole.log(multiply(10, -10000000000000000000000000000));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp058x5ho6.js:47:12)\n    at Object.<anonymous> (/tmp/tmp058x5ho6.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n-0\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(10, 10));\nconsole.log(multiply(1, 1));\nconsole.log(multiply(1, 2));\nconsole.log(multiply(1, 3));\nconsole.log(multiply(1, 4));\nconsole.log(multiply(1, 5));\nconsole.log(multiply(1, 6));\nconsole.log(multiply(1, 7));\nconsole.log(multiply(1, 8));\nconsole.log(multiply(1, 9));\nconsole.log(multiply(1, 0));\nconsole.log(multiply(2, 0));\nconsole.log(multiply(2, 1));\nconsole.log(multiply(2, 2));\nconsole.log(multiply(2, 3));\nconsole.log(multiply(2, 4));\nconsole.log(multiply(2, 5));\nconsole.log(multiply(2, 6));\nconsole.log(multiply(2, 7));\nconsole.log(multiply(2, 8));\nconsole.log(multiply(2, 9));\nconsole.log(multiply(3, 0));\nconsole.log(multiply(3, 1));\nconsole.log(multiply(3, 2));\nconsole.log(multiply(3, 3));\nconsole.log(multiply(3, 4));\nconsole.log(multiply(3, 5));\nconsole.log(multiply(3, 6));\nconsole.log(multiply(3, 7));\nconsole.log(multiply(3, 8));\nconsole.log(multiply(3, 9));\nconsole.log(multiply(4, 0));\nconsole.log(multiply(4, 1));\nconsole.log(multiply(4, 2));\nconsole.log(multiply(4, 3));\nconsole.log(multiply(4, 4));\nconsole.log(multiply(4, 5));\nconsole.log(multiply(4, 6));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp46oe4z_5.js:52:12)\n    at Object.<anonymous> (/tmp/tmp46oe4z_5.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n0\n2\n4\n6\n8\n10\n12\n14\n16\n18\n0\n3\n6\n9\n12\n15\n18\n21\n24\n27\n0\n4\n8\n12\n16\n20\n24\n",
      "timestamp": 1660333641
    },
    {
      "exit_code": 1,
      "program": "//Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\nfunction multiply(a: number, b: number): number {\n    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(1, 2)); // 2\nconsole.log(multiply(5, 2)); // 10\nconsole.log(multiply(10, 2)); // 0\nconsole.log(multiply(27, 49)); // 63\nconsole.log(multiply(32, 50)); // 0\nconsole.log(multiply(37, 40)); // 30\nconsole.log(multiply(100, 200)); // 0\nconsole.log(multiply(8, 9)); // 72\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-20\n\nshould loosely deep-equal\n\n20\n    at test (/tmp/tmp8bts_5lo.js:22:12)\n    at Object.<anonymous> (/tmp/tmp8bts_5lo.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -20,\n  expected: 20,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n10\n0\n63\n0\n0\n0\n72\n",
      "timestamp": 1660333641
    }
  ]
}
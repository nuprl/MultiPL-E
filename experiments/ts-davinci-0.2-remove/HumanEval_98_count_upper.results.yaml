language: ts
name: HumanEval_98_count_upper
results:
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\n\
    console.log(count_upper(\"Heeololeo\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpjkjcvsef.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjkjcvsef.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && s[i] == s[i].toUpperCase())\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpzdd8o687.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzdd8o687.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7a2aj5zc.ts(6,27): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i += 2) {\n        if (s[i] === 'A' || s[i]\
    \ === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] === \"A\" || s[i]\
    \ === \"E\" || s[i] === \"I\" || s[i] === \"O\" || s[i] === \"U\") {\n       \
    \     if (i % 2 === 0) {\n                count++;\n            }\n        }\n\
    \    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"\
    World\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"wOrld\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0

    1

    0

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i %\
    \ 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\nconsole.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ'));\nconsole.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ')\
    \ === 5);\nconsole.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ') === count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ'));\n\
    console.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ') === count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ'));\n\
    console.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ') === count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ'));\n\
    console.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ') === count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ'));\n\
    console.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ') === count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ'));\n\
    console.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ') === count_upper('aBcDeFgHiJk\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnq2974ep.ts(22,83): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpnq2974ep.ts(23,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpnq2974ep.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1659977979
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] === \"A\" || s[i]\
    \ === \"E\" || s[i] === \"I\" || s[i] === \"O\" || s[i] === \"U\") {\n       \
    \     if (i % 2 === 0) {\n                count++;\n            }\n        }\n\
    \    }\n    return count;\n}\n\nconsole.log(count_upper(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ));\nconsole.log(count_upper(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(count_upper(\"\
    abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '5

    0

    5

    '
  timestamp: 1659977980
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\n\
    console.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"hELlo\"));\nconsole.log(count_upper(\"\
    HELLO\"));\nconsole.log(count_upper(\"HELLo\"));\nconsole.log(count_upper(\"HELLO\"\
    ));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\n\
    console.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"\
    HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"\
    ));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\n\
    console.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"\
    HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"\
    ));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\n\
    console.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"\
    HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"\
    ));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\n\
    console.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvoa5597x.js:47:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvoa5597x.js:55:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    2

    1

    3

    2

    3

    3

    3

    3

    3

    3

    3

    3

    3

    3

    3

    3

    3

    3

    3

    3

    3

    3

    3

    3

    3

    3

    3

    3

    3

    3

    '
  timestamp: 1659977980
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && isUpper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjsv0rn1e.ts(6,28): error TS2304: Cannot find name
    ''isUpper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello World\"));\nconsole.log(count_upper(\"Hello\
    \ World!\"));\nconsole.log(count_upper(\"Hello World!!\"));\nconsole.log(count_upper(\"\
    Hello World!!!\"));\nconsole.log(count_upper(\"Hello World!!!!\"));\nconsole.log(count_upper(\"\
    Hello World!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!\"));\nconsole.log(count_upper(\"\
    Hello World!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!\"));\n\
    console.log(count_upper(\"Hello World!!!!!!!!!!!\"));\nconsole.log(count_upper(\"\
    Hello World!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!\"\
    ));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"\
    Hello World!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!\"\
    ));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"\
    Hello World!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!\"\
    ));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"\
    Hello World!!!!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!!!\"\
    ));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"\
    Hello World!!!!!!!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!!!!!!\"\
    ));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"\
    Hello World!!!!!!!!!!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!!!!!!!!!\"\
    ));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\"));\n\
    console.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!!!!!\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdhiiixgn.ts(41,61): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpdhiiixgn.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpdhiiixgn.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp5ym2txdy.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5ym2txdy.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7eyf0i81.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7eyf0i81.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    2

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\n\
    console.log(count_upper(\"Heeololeo\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpjkjcvsef.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjkjcvsef.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphgndu41z.ts(6,24): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i %\
    \ 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\nconsole.log(count_upper('ABCDE'));\nconsole.log(count_upper('abcde'));\n\
    console.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\n\
    console.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\n\
    console.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\n\
    console.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\n\
    console.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\n\
    console.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\n\
    console.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\n\
    console.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\n\
    console.log(count_upper('aBcDe'));\nconsole.log(\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi72549ip.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && s[i] == s[i].toUpperCase())\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"\
    Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"HELLO\"\
    ));\nconsole.log(count_upper(\"WORLD\"));\nconsole.log(count_upper(\"hElLo\"));\n\
    console.log(count_upper(\"wOrLd\"));\nconsole.log(count_upper(\"HeLlO\"));\nconsole.log(count_upper(\"\
    WoRlD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpmiqw7xeq.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmiqw7xeq.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    3

    0

    0

    3

    3

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\n\
    console.log(count_upper(\"Heeololeo\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpjkjcvsef.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjkjcvsef.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7a2aj5zc.ts(6,27): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && s[i] == s[i].toUpperCase())\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpzdd8o687.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzdd8o687.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i %\
    \ 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\nconsole.log(count_upper('AEIOU'));\nconsole.log(count_upper('aeiou'));\n\
    console.log(count_upper('AEIOUaeiou'));\nconsole.log(count_upper('AEIOUaeiouAEIOU'));\n\
    console.log(count_upper('AEIOUaeiouAEIOUaeiou'));\nconsole.log(count_upper('AEIOUaeiouAEIOUaeiouAEIOU'));\n\
    console.log(count_upper('AEIOUaeiouAEIOUaeiouAEIOUaeiou'));\nconsole.log(count_upper('AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU'));\n\
    console.log(count_upper('AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou'));\nconsole.log(count_upper('AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU'));\n\
    console.log(count_upper('AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou'));\n\
    console.log(count_upper('AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU'));\n\
    console.log(count_upper('AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou'));\n\
    console.log(count_upper('AEIOUaeiouAEIOUaeiouAEIOUaei\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpquj2yav6.ts(28,54): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpquj2yav6.ts(29,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpquj2yav6.ts(29,9): error TS1005: '','' expected.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\n\
    console.log(count_upper(\"Heeololeo\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpjkjcvsef.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjkjcvsef.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"\"));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp968p0yfo.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp968p0yfo.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    0

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcgz3eqie.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcgz3eqie.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcgz3eqie.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcgz3eqie.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\")); // 5\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toLowerCase())); // 0\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase())); // 13\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toLowerCase().toUpperCase())); // 13\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase().toLowerCase())); // 0\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase().toLowerCase().toUpperCase())); // 13\n\
    console.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toLowerCase().toUpperCase().toLowerCase()));\
    \ // 0\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toLowerCase().toUpperCase().toLowerCase().toUpperCase()));\
    \ // 13\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase().toLowerCase().toUpperCase().toLowerCase()));\
    \ // 0\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase().toLowerCase().toUpperCase().toLowerCase\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgp3rxb0a.ts(23,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpgp3rxb0a.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv_dp35yv.ts(6,28): error TS2304: Cannot find name
    ''is_vowel''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphgndu41z.ts(6,24): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i %\
    \ 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'));\n\
    console.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz')\
    \ === 10);\nconsole.log(count_upper('aAaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz')\
    \ === 11);\nconsole.log(count_upper('aAaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'));\n\
    console.log(count_upper('aAaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz')\
    \ === 11);\nconsole.log(count_upper('aAaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'));\n\
    console.log(count_upper('aAaBbCcDd\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpea60wnxh.ts(21,35): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpea60wnxh.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpea60wnxh.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7eyf0i81.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7eyf0i81.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    2

    '
  timestamp: 1659977979
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (s[i] === \"A\" || s[i] === \"\
    E\" || s[i] === \"I\" || s[i] === \"O\" || s[i] === \"U\") {\n      if (i % 2\
    \ === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconsole.log(count_upper(\"\
    ABCDE\"));\nconsole.log(count_upper(\"abcde\"));\nconsole.log(count_upper(\"ABcde\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '2

    0

    1

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7eyf0i81.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7eyf0i81.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    2

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i %\
    \ 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'));\n\
    console.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz')\
    \ === 10);\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz')\
    \ === 10);\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz')\
    \ === 10);\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz')\
    \ === 10);\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz')\
    \ === 10);\nconsole.log(count_upper('AaBbCcDdE\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzmvtbay7.ts(21,35): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpzmvtbay7.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpzmvtbay7.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1659977981
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv_dp35yv.ts(6,28): error TS2304: Cannot find name
    ''is_vowel''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphgndu41z.ts(6,24): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv_dp35yv.ts(6,28): error TS2304: Cannot find name
    ''is_vowel''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\")); // 1\nconsole.log(count_upper(\"Hi\"\
    )); // 0\nconsole.log(count_upper(\"HELlo\")); // 2\nconsole.log(count_upper(\"\
    HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"\
    HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"\
    HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"\
    HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"\
    HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"\
    HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"\
    HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"\
    HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"\
    HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"\
    HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"\
    HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"\
    HELloO\")); // 3\nconsole.log(count_upper(\"\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4slg6pjs.ts(39,26): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp4slg6pjs.ts(40,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp4slg6pjs.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1659977982
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"aBcDeF\"));\nconsole.log(count_upper(\"aBcDeFg\"\
    ));\nconsole.log(count_upper(\"aBcDeFgH\"));\nconsole.log(count_upper(\"aBcDeFgHiJ\"\
    ));\nconsole.log(count_upper(\"aBcDeFgHiJkL\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoP\"\
    ));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuV\"));\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpsq4qhz4u.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsq4qhz4u.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    0

    0

    0

    0

    0

    0

    0

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"wORLD\"));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpdsavp951.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdsavp951.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    2

    '
  timestamp: 1659977982
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase())\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpbme0e48y.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbme0e48y.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977982
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i %\
    \ 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977982
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i %\
    \ 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977982
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase())\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpbme0e48y.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbme0e48y.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977982
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"wOrld\"));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpellaiq31.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpellaiq31.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    0

    '
  timestamp: 1659977982
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7a2aj5zc.ts(6,27): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv_dp35yv.ts(6,28): error TS2304: Cannot find name
    ''is_vowel''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && s[i] == s[i].toUpperCase())\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp77py7x1x.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp77py7x1x.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase())\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(count_upper(\"\
    abcdefg\"));\nconsole.log(count_upper(\"ABCDEFG\"));\nconsole.log(count_upper(\"\
    AbCdEfG\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp5knmv0x4.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5knmv0x4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    4

    4

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpwx8ymxy8.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwx8ymxy8.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '2

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"\"));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp968p0yfo.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp968p0yfo.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    0

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7eyf0i81.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7eyf0i81.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    2

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"abcdefg\"));\nconsole.log(count_upper(\"ABCDEFG\"\
    ));\nconsole.log(count_upper(\"Abcdefg\"));\nconsole.log(count_upper(\"AbCdEfG\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmptwmmk0vc.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptwmmk0vc.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    4

    1

    4

    '
  timestamp: 1659977982
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7eyf0i81.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7eyf0i81.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    2

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase())\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\nconsole.log(count_upper(\"\
    Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"HELLO\"\
    ));\nconsole.log(count_upper(\"WORLD\"));\nconsole.log(count_upper(\"hElLo\"));\n\
    console.log(count_upper(\"wOrLd\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvl3cg2th.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvl3cg2th.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    3

    0

    0

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7eyf0i81.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7eyf0i81.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    2

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && s[i] == s[i].toUpperCase())\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"\
    Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"Hello\
    \ World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpsxbyvdtg.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsxbyvdtg.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    2

    '
  timestamp: 1659977982
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv_dp35yv.ts(6,28): error TS2304: Cannot find name
    ''is_vowel''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphgndu41z.ts(6,24): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] == \"A\" || s[i] ==\
    \ \"E\" || s[i] == \"I\" || s[i] == \"O\" || s[i] == \"U\") {\n            if\
    \ (i % 2 == 0) {\n                count++;\n            }\n        }\n    }\n\
    \    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977982
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i %\
    \ 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\nconsole.log(count_upper('Apples and Bananas'));\nconsole.log(count_upper('Pears\
    \ and Oranges'));\nconsole.log(count_upper('Cucumbers and Tomatoes'));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    1

    0

    '
  timestamp: 1659977982
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7a2aj5zc.ts(6,27): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv_dp35yv.ts(6,28): error TS2304: Cannot find name
    ''is_vowel''.

    '
  timestamp: 1659977979
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] == 'A' || s[i] ==\
    \ 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n            if (i % 2 ==\
    \ 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\nconsole.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ'));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase())\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(count_upper(\"\
    Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"Heeololeo\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvb1pbs3p.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvb1pbs3p.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpwx8ymxy8.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwx8ymxy8.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '2

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"wOrld\"));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpellaiq31.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpellaiq31.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    0

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"Hello World\"));\nconsole.log(count_upper(\"HELLO WORLD\"\
    ));\nconsole.log(count_upper(\"HELLO world\"));\nconsole.log(count_upper(\"hello\
    \ WORLD\"));\nconsole.log(count_upper(\"hello World\"));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpnr82c2y4.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnr82c2y4.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    2

    6

    3

    3

    1

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv_dp35yv.ts(6,28): error TS2304: Cannot find name
    ''is_vowel''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && s[i] == s[i].toUpperCase())\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpzdd8o687.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzdd8o687.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"wORLD\"));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpdsavp951.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdsavp951.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    2

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] == 'A' || s[i] ==\
    \ 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n            if (i % 2 ==\
    \ 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\nconsole.log(count_upper('AEIOU'));\nconsole.log(count_upper('AaEeIiOoUu'));\n\
    console.log(count_upper('AaEeIiOoUuAaEeIiOoUu'));\nconsole.log(count_upper('AaEeIiOoUuAaEeIiOoUuAaEeIiOoUu'));\n\
    console.log(count_upper('AaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUu'));\nconsole.log(count_upper('AaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUu'));\n\
    console.log(count_upper('AaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUu'));\n\
    console.log(count_upper('AaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUu'));\n\
    console.log(count_upper('AaEeIiOoUuAaEeIiOoUuAaEeIi\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpus29fdn9.ts(23,52): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpus29fdn9.ts(24,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpus29fdn9.ts(24,9): error TS1005: '','' expected.

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\")); // 1\nconsole.log(count_upper(\"Hi\"\
    )); // 0\nconsole.log(count_upper(\"hEllo\")); // 2\nconsole.log(count_upper(\"\
    hEllO\")); // 3\nconsole.log(count_upper(\"wOrLd\")); // 1\nconsole.log(count_upper(\"\
    ThIs Is A VeRy LoNg SenTeNcE\")); // 6\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpb77bguls.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpb77bguls.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    0

    1

    0

    8

    '
  timestamp: 1659977982
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (s[i] === 'A' || s[i] === 'E'\
    \ || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n      if (i % 2 === 0) {\n\
    \        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconsole.log(count_upper('Apples\
    \ and Oranges'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659977982
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && is_vowel(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdu31s5h1.ts(6,27): error TS2304: Cannot find name
    ''is_vowel''.

    '
  timestamp: 1659977982
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i %\
    \ 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '5

    '
  timestamp: 1659977984
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpwx8ymxy8.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwx8ymxy8.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '2

    '
  timestamp: 1659977982
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && is_vowel(s[i]))\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkili_fic.ts(6,24): error TS2304: Cannot find name
    ''is_vowel''.

    '
  timestamp: 1659977984
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && /[AEIOU]/.test(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977984
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello World\")); // 1\nconsole.log(count_upper(\"\
    Hello World!\")); // 2\nconsole.log(count_upper(\"HELLO WORLD\")); // 5\nconsole.log(count_upper(\"\
    HELLO WORLD!\")); // 6\nconsole.log(count_upper(\"hello world\")); // 0\nconsole.log(count_upper(\"\
    hello world!\")); // 0\nconsole.log(count_upper(\"\")); // 0\nconsole.log(count_upper(\"\
    a\")); // 0\nconsole.log(count_upper(\"A\")); // 1\nconsole.log(count_upper(\"\
    b\")); // 0\nconsole.log(count_upper(\"B\")); // 1\nconsole.log(count_upper(\"\
    c\")); // 0\nconsole.log(count_upper(\"C\")); // 1\nconsole.log(count_upper(\"\
    d\")); // 0\nconsole.log(count_upper(\"D\")); // 1\nconsole.log(count_upper(\"\
    e\")); // 0\nconsole.log(count_upper(\"E\")); // 1\nconsole.log(count_upper(\"\
    f\")); // 0\nconsole.log(count_upper(\"F\")); // 1\nconsole.log(count_upper(\"\
    g\")); // 0\nconsole.log(count_upper(\"G\")); // 1\nconsole.log(count_upper(\"\
    h\")); // 0\nconsole.log(count_upper(\"H\")); // 1\nconsole.log(count_upper(\"\
    i\")); // 0\nconsole.log(count_upper(\"I\")); // 1\nconsole.log(count_upper(\"\
    j\")); // 0\nconsole.log(count_upper(\"J\")); // 1\nconsole.log(count_upper(\"\
    k\")); // 0\nconsole.log(count_upper(\"K\")); // 1\nconsole.log(count_upper(\"\
    l\")); // 0\nconsole.log(count_upper(\"L\")); // 1\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpj1pvi2d9.js:46:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpj1pvi2d9.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '2

    2

    6

    6

    0

    0

    0

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    '
  timestamp: 1659977984
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase())\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(count_upper(\"\
    Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"HELlo\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp1r300vtz.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1r300vtz.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    2

    '
  timestamp: 1659977984
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv_dp35yv.ts(6,28): error TS2304: Cannot find name
    ''is_vowel''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"HELLO\"));\n\
    console.log(count_upper(\"hElLo\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvo2oh2ma.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvo2oh2ma.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    3

    0

    '
  timestamp: 1659977984
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv_dp35yv.ts(6,28): error TS2304: Cannot find name
    ''is_vowel''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\n\
    console.log(count_upper(\"Heeololeo\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpjkjcvsef.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjkjcvsef.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    '
  timestamp: 1659977979
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] == 'A' || s[i] ==\
    \ 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n            if (i % 2 ==\
    \ 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977985
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv_dp35yv.ts(6,28): error TS2304: Cannot find name
    ''is_vowel''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase())\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(count_upper(\"\
    Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"HELlo\"\
    ));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\n\
    console.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp9r9n5qfe.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9r9n5qfe.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    2

    2

    2

    2

    2

    '
  timestamp: 1659977985
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"WORLD\"));\nconsole.log(count_upper(\"\
    hello\"));\nconsole.log(count_upper(\"world\"));\nconsole.log(count_upper(\"hEllo\"\
    ));\nconsole.log(count_upper(\"wOrld\"));\nconsole.log(count_upper(\"HeLlO\"));\n\
    console.log(count_upper(\"WoRlD\"));\nconsole.log(count_upper(\"hElLo\"));\nconsole.log(count_upper(\"\
    wOrLd\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpndq32q2c.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpndq32q2c.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    3

    0

    0

    0

    0

    3

    3

    0

    0

    '
  timestamp: 1659977985
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase())\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpbme0e48y.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbme0e48y.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977982
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\")); // 1\nconsole.log(count_upper(\"World\"\
    )); // 0\nconsole.log(count_upper(\"HELLO\")); // 2\nconsole.log(count_upper(\"\
    wOrld\")); // 1\nconsole.log(count_upper(\"\")); // 0\nconsole.log(count_upper(\"\
    a\")); // 0\nconsole.log(count_upper(\"A\")); // 1\nconsole.log(count_upper(\"\
    AbCdEfG\")); // 3\nconsole.log(count_upper(\"aBcDeFg\")); // 2\nconsole.log(count_upper(\"\
    AbCdEfG12345\")); // 3\nconsole.log(count_upper(\"aBcDeFg12345\")); // 2\nconsole.log(count_upper(\"\
    AbCdEfG123456789\")); // 3\nconsole.log(count_upper(\"aBcDeFg123456789\")); //\
    \ 2\nconsole.log(count_upper(\"AbCdEfG123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100\"\
    )); // 3\nconsole.log(count_upper(\"aBcDeFg123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100\"\
    )); // 2\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7olwmlzr.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7olwmlzr.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    0

    0

    0

    1

    4

    0

    6

    2

    8

    4

    100

    96

    '
  timestamp: 1659977984
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"abcdefg\")); // 0\nconsole.log(count_upper(\"ABCDEFG\"\
    )); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"\
    AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"\
    AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"\
    AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"\
    AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"\
    AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"\
    AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"\
    AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"\
    AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"\
    AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"\
    AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"\
    AbCdE\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp053ti4gm.ts(36,31): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp053ti4gm.ts(37,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp053ti4gm.ts(37,9): error TS1005: '','' expected.

    '
  timestamp: 1659977984
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"WORLD\"));\nconsole.log(count_upper(\"\
    hElLo\"));\nconsole.log(count_upper(\"wOrLd\"));\nconsole.log(count_upper(\"HeLlO\"\
    ));\nconsole.log(count_upper(\"WoRlD\"));\nconsole.log(count_upper(\"\"));\nconsole.log(count_upper(\"\
    h\"));\nconsole.log(count_upper(\"H\"));\nconsole.log(count_upper(\"e\"));\nconsole.log(count_upper(\"\
    E\"));\nconsole.log(count_upper(\"l\"));\nconsole.log(count_upper(\"L\"));\nconsole.log(count_upper(\"\
    o\"));\nconsole.log(count_upper(\"O\"));\nconsole.log(count_upper(\"w\"));\nconsole.log(count_upper(\"\
    W\"));\nconsole.log(count_upper(\"r\"));\nconsole.log(count_upper(\"R\"));\nconsole.log(count_upper(\"\
    d\"));\nconsole.log(count_upper(\"D\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpqlnm0o20.js:38:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqlnm0o20.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    3

    0

    0

    3

    3

    0

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    '
  timestamp: 1659977985
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (s[i] === \"A\" || s[i] === \"\
    E\" || s[i] === \"I\" || s[i] === \"O\" || s[i] === \"U\") {\n      if (i % 2\
    \ === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconsole.log(count_upper(\"\
    AEIOU\"));\nconsole.log(count_upper(\"ABCDE\"));\nconsole.log(count_upper(\"aBcDe\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '3

    2

    0

    '
  timestamp: 1659977985
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hello World\"\
    ));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO WORLD\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmppszkukps.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppszkukps.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    2

    3

    6

    '
  timestamp: 1659977984
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"WORLD\"));\nconsole.log(count_upper(\"\
    hEllo\"));\nconsole.log(count_upper(\"wORld\"));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpgzoz6dli.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgzoz6dli.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    3

    0

    1

    '
  timestamp: 1659977985
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"H\"));\nconsole.log(count_upper(\"\"));\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp4s55k9so.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4s55k9so.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    0

    '
  timestamp: 1659977985
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\n\
    console.log(count_upper(\"Heeololeo\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpjkjcvsef.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjkjcvsef.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase())\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(count_upper(\"\
    Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"Heeololeo\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvb1pbs3p.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvb1pbs3p.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    '
  timestamp: 1659977982
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] == 'A' || s[i] ==\
    \ 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n            if (i % 2 ==\
    \ 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\nconsole.log(count_upper('Hello'));\nconsole.log(count_upper('World'));\n\
    console.log(count_upper('HELLO'));\nconsole.log(count_upper('WORLD'));\nconsole.log(count_upper('hElLo'));\n\
    console.log(count_upper('wOrLd'));\nconsole.log(count_upper('HeLlO'));\nconsole.log(count_upper('WoRlD'));\n\
    console.log(count_upper('hElLo'));\nconsole.log(count_upper('wOrLd'));\nconsole.log(count_upper('HeLlO'));\n\
    console.log(count_upper('WoRlD'));\nconsole.log(count_upper('hElLo'));\nconsole.log(count_upper('wOrLd'));\n\
    console.log(count_upper('HeLlO'));\nconsole.log(count_upper('WoRlD'));\nconsole.log(count_upper('hElLo'));\n\
    console.log(count_upper('wOrLd'));\nconsole.log(count_upper('HeLlO'));\nconsole.log(count_upper('WoRlD'));\n\
    console.log(count_upper('hElLo'));\nconsole.log(count_upper('wOrLd'));\nconsole.log(count_upper('HeLlO'));\n\
    console.log(count_upper('WoRlD'));\nconsole.log(count_upper('hElLo'));\nconsole.log(count_upper('wOrLd'));\n\
    console.log(count_upper('HeLlO'));\nconsole.log(count_upper('WoRlD'));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0

    1

    0

    0

    0

    1

    0

    0

    0

    1

    0

    0

    0

    1

    0

    0

    0

    1

    0

    0

    0

    1

    0

    0

    0

    1

    0

    '
  timestamp: 1659977985
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] === \"A\" || s[i]\
    \ === \"E\" || s[i] === \"I\" || s[i] === \"O\" || s[i] === \"U\") {\n       \
    \     if (i % 2 === 0) {\n                count++;\n            }\n        }\n\
    \    }\n    return count;\n}\n\nconsole.log(count_upper(\"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '5

    '
  timestamp: 1659977985
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i %\
    \ 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\nconsole.log(count_upper('AEIOU'));\nconsole.log(count_upper('AaIiOoUu'));\n\
    console.log(count_upper('AaIiOoUuEe'));\nconsole.log(count_upper('AaIiOoUuEeOo'));\n\
    console.log(count_upper('AaIiOoUuEeOoAaIiOoUuEeOo'));\nconsole.log(count_upper('AaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOo'));\n\
    console.log(count_upper('AaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEe\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_4y36jz_.ts(21,252): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp_4y36jz_.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp_4y36jz_.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1659977985
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\n\
    console.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"\
    HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"\
    ));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\n\
    console.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"\
    HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"\
    ));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\n\
    console.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"\
    HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"\
    ));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\n\
    console.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"\
    HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"\
    ));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\n\
    console.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpe94d9qar.js:47:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe94d9qar.js:55:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    '
  timestamp: 1659977985
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\n\
    console.log(count_upper(\"Heeololeo\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpjkjcvsef.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjkjcvsef.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i %\
    \ 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\nconsole.log(count_upper('ABCDE'));\nconsole.log(count_upper('aBcDe'));\n\
    console.log(count_upper('abcdE'));\nconsole.log(count_upper('abcde'));\nconsole.log(count_upper('ABCDEFG'));\n\
    console.log(count_upper('ABCDEFGh'));\nconsole.log(count_upper('ABCDEFGhI'));\n\
    console.log(count_upper('ABCDEFGhIJ'));\nconsole.log(count_upper('ABCDEFGhIJK'));\n\
    console.log(count_upper('ABCDEFGhIJKL'));\nconsole.log(count_upper('ABCDEFGhIJKLM'));\n\
    console.log(count_upper('ABCDEFGhIJKLMN'));\nconsole.log(count_upper('ABCDEFGhIJKLMNO'));\n\
    console.log(count_upper('ABCDEFGhIJKLMNOP'));\nconsole.log(count_upper('ABCDEFGhIJKLMNOPQ'));\n\
    console.log(count_upper('ABCDEFGhIJKLMNOPQR'));\nconsole.log(count_upper('ABCDEFGhIJKLMNOPQRS'));\n\
    console.log(count_upper('ABCDEFGhIJKLMNOPQRST'));\nconsole.log(count_upper('ABCDEFGhIJKLMNOPQRSTU'));\n\
    console.log(count_upper('ABCDEFGhIJKLMNOPQRSTUV'));\nconsole.log(count_upper('ABCDEFGhIJKLMNOPQRSTUVW'));\n\
    console.log(count_upper('ABCDEFGhIJKLMNOP\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvfbojxpb.ts(36,42): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpvfbojxpb.ts(37,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpvfbojxpb.ts(37,9): error TS1005: '','' expected.

    '
  timestamp: 1659977984
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"aBcDeF\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"\
    ));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"\
    ));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"\
    ));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"\
    ));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"\
    ));\nconsole.log(count_upper(\"aBc\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8bo8thdg.ts(27,29): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp8bo8thdg.ts(28,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp8bo8thdg.ts(28,9): error TS1005: '','' expected.

    '
  timestamp: 1659977985
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello World\"));\nconsole.log(count_upper(\"Hello\
    \ World!\"));\nconsole.log(count_upper(\"Hello World!!\"));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpu7k4cn56.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu7k4cn56.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '2

    2

    3

    '
  timestamp: 1659977985
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"Hi\"));\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpmosin7_v.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmosin7_v.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    '
  timestamp: 1659977986
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i %\
    \ 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977982
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i %\
    \ 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'));\n\
    console.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz')\
    \ === 5);\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz')\
    \ === 5);\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz')\
    \ === 5);\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz')\
    \ === 5);\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz')\
    \ === 5);\nconsole.log(count_upper('AaBbCcDdE\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbem4vs76.ts(21,35): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpbem4vs76.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpbem4vs76.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1659977986
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\")); // 1\nconsole.log(count_upper(\"Hi\"\
    )); // 0\nconsole.log(count_upper(\"HELlo\")); // 2\nconsole.log(count_upper(\"\
    HELloO\")); // 3\nconsole.log(count_upper(\"HELloOo\")); // 4\nconsole.log(count_upper(\"\
    HELloOoO\")); // 5\nconsole.log(count_upper(\"HELloOoOo\")); // 6\nconsole.log(count_upper(\"\
    HELloOoOoO\")); // 7\nconsole.log(count_upper(\"HELloOoOoOo\")); // 8\nconsole.log(count_upper(\"\
    HELloOoOoOoO\")); // 9\nconsole.log(count_upper(\"HELloOoOoOoOo\")); // 10\nconsole.log(count_upper(\"\
    HELloOoOoOoOoO\")); // 11\nconsole.log(count_upper(\"HELloOoOoOoOoOo\")); // 12\n\
    console.log(count_upper(\"HELloOoOoOoOoOoO\")); // 13\nconsole.log(count_upper(\"\
    HELloOoOoOoOoOoOo\")); // 14\nconsole.log(count_upper(\"HELloOoOoOoOoOoOoO\"));\
    \ // 15\nconsole.log(count_upper(\"HELloOoOoOoOoOoOoOo\")); // 16\nconsole.log(count_upper(\"\
    HELloOoOoOoOoOoOoOoO\")); // 17\nconsole.log(count_upper(\"HELloOoOoOoOoOoOoOoOo\"\
    )); // 18\nconsole.log(count_upper\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpu640fx7u.ts(33,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpu640fx7u.ts(33,9): error TS1005: '','' expected.

    '
  timestamp: 1659977986
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphgndu41z.ts(6,24): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\n\
    console.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"WORLD\"));\nconsole.log(count_upper(\"\
    hELLO\"));\nconsole.log(count_upper(\"wORLD\"));\nconsole.log(count_upper(\"HeLLo\"\
    ));\nconsole.log(count_upper(\"WoRLD\"));\nconsole.log(count_upper(\"\"));\nconsole.log(count_upper(\"\
    a\"));\nconsole.log(count_upper(\"A\"));\nconsole.log(count_upper(\"b\"));\nconsole.log(count_upper(\"\
    B\"));\nconsole.log(count_upper(\"c\"));\nconsole.log(count_upper(\"C\"));\nconsole.log(count_upper(\"\
    d\"));\nconsole.log(count_upper(\"D\"));\nconsole.log(count_upper(\"e\"));\nconsole.log(count_upper(\"\
    E\"));\nconsole.log(count_upper(\"f\"));\nconsole.log(count_upper(\"F\"));\nconsole.log(count_upper(\"\
    g\"));\nconsole.log(count_upper(\"G\"));\nconsole.log(count_upper(\"h\"));\nconsole.log(count_upper(\"\
    H\"));\nconsole.log(count_upper(\"i\"));\nconsole.log(count_upper(\"I\"));\nconsole.log(count_upper(\"\
    j\"));\nconsole.log(count_upper(\"J\"));\nconsole.log(count_upper(\"k\"));\nconsole.log(count_upper(\"\
    K\"));\nconsole.log(count_upper(\"l\"));\nconsole.log(count_upper(\"L\"));\nconsole.log(count_upper(\"\
    m\"));\nconsole.log(count_upper(\"M\"));\nconsole.log(count_upper(\"n\"));\nconsole\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmppzwm79gf.js:52:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppzwm79gf.js:60:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    3

    2

    2

    2

    3

    0

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    0

    1

    0

    '
  timestamp: 1659977986
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"abcdEfghi\"));\nconsole.log(count_upper(\"abcdEfghiJKL\"\
    ));\nconsole.log(count_upper(\"abcdEfghiJKLmnopqrstuvwxyz\"));\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp3abou8gb.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3abou8gb.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    2

    2

    '
  timestamp: 1659977986
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] == \"A\" || s[i] ==\
    \ \"E\" || s[i] == \"I\" || s[i] == \"O\" || s[i] == \"U\") {\n            if\
    \ (i % 2 == 0) {\n                count++;\n            }\n        }\n    }\n\
    \    return count;\n}\n\nconsole.log(count_upper(\"aBcDeFgHiJ\"));\nconsole.log(count_upper(\"\
    aBcDeFgHiJk\"));\nconsole.log(count_upper(\"aBcDeFgHiJkl\"));\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLm\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoP\"));\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLmNoPqRs\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTu\"));\n\
    console.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVw\"));\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLmNoPqRsTuVwXy\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0

    0

    0

    0

    0

    0

    0

    0

    0

    '
  timestamp: 1659977986
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"Hello World\"));\nconsole.log(count_upper(\"Hello\
    \ World!\"));\nconsole.log(count_upper(\"Hello World!!\"));\nconsole.log(count_upper(\"\
    Hello World!!!\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpxr4ik0pa.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxr4ik0pa.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '2

    2

    3

    3

    '
  timestamp: 1659977986
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcgz3eqie.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcgz3eqie.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"hello\"));\nconsole.log(count_upper(\"HELLO\"));\n\
    console.log(count_upper(\"hElLo\"));\nconsole.log(count_upper(\"hEllo\"));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp27zgkhcv.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp27zgkhcv.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    3

    0

    0

    '
  timestamp: 1659977986
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] == \"A\" || s[i] ==\
    \ \"E\" || s[i] == \"I\" || s[i] == \"O\" || s[i] == \"U\") {\n            if\
    \ (i % 2 == 0) {\n                count++;\n            }\n        }\n    }\n\
    \    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977982
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] == 'A' || s[i] ==\
    \ 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n            if (i % 2 ==\
    \ 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977985
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && (s[i] ===\
    \ 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U')) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper('HELLO'));\n\
    console.log(count_upper('HELLO WORLD'));\nconsole.log(count_upper('HELLO WORLD!'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    1

    1

    '
  timestamp: 1659977986
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"\
    HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"\
    ));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\n\
    console.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"\
    HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"\
    ));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\n\
    console.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"\
    HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"\
    ));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\n\
    console.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"\
    HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"\
    ));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\n\
    console.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"\
    HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpxwly1ys9.js:47:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxwly1ys9.js:55:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    2

    '
  timestamp: 1659977986
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && isUpper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjsv0rn1e.ts(6,28): error TS2304: Cannot find name
    ''isUpper''.

    '
  timestamp: 1659977979
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] == \"A\" || s[i] ==\
    \ \"E\" || s[i] == \"I\" || s[i] == \"O\" || s[i] == \"U\") {\n            if\
    \ (i % 2 == 0) {\n                count++;\n            }\n        }\n    }\n\
    \    return count;\n}\n\nconsole.log(count_upper(\"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '5

    '
  timestamp: 1659977986
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i %\
    \ 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\nconsole.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ'));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    '
  timestamp: 1659977986
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\")); // 5\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toLowerCase())); // 0\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase())); // 13\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toLowerCase().toUpperCase())); // 13\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase().toLowerCase())); // 0\nconsole.log(count_upper(\"\
    aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase().toLowerCase().toUpperCase())); // 13\n\
    console.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toLowerCase().toUpperCase().toLowerCase()));\
    \ // 0\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toLowerCase().toUpperCase().toLowerCase().toUpperCase()));\
    \ // 13\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase().toLowerCase().toUpperCase().toLowerCase()));\
    \ // 0\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase().toLowerCase().toUpperCase().toLowerCase\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgp3rxb0a.ts(23,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpgp3rxb0a.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && s[i] == s[i].toUpperCase())\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpzdd8o687.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzdd8o687.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] ===\
    \ s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvm514f8u.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm514f8u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptf3eckg.ts(6,28): error TS2304: Cannot find name
    ''is_upper''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && s[i] == s[i].toUpperCase())\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"\
    Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"HELlo\"\
    ));\nconsole.log(count_upper(\"wORld\"));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpjnkhw6aj.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjnkhw6aj.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    2

    1

    '
  timestamp: 1659977986

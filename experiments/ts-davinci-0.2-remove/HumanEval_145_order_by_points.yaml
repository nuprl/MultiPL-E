name: HumanEval_145_order_by_points
language: ts
prompt: "//Write a function which sorts the given list of integers\n// in ascending\
  \ order according to the sum of their digits.\n// Note: if there are several items\
  \ with similar sum of their digits,\n// order them based on their index in original\
  \ list.\n// For example:\nfunction order_by_points(nums: number[]): number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
  \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
  \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
  \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
  \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
  \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9,\
  \ 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
  \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
completions: ["  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 4, 2]));", "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4]));", "  let sum = 0;\n  let result: number[] = [];\n  let result2:\
    \ number[] = [];\n  for (let i = 0; i < nums.length; i++) {\n    let num = nums[i];\n\
    \    while (num > 0) {\n      sum += num % 10;\n      num = Math.floor(num / 10);\n\
    \    }\n    result.push(sum);\n    result2.push(sum);\n    sum = 0;\n  }\n  result.sort(function\
    \ (a, b) {\n    return a - b;\n  });\n  let finalResult: number[] = [];\n  for\
    \ (let i = 0; i < result.length; i++) {\n    let index = result2.indexOf(result[i]);\n\
    \    finalResult.push(nums[index]);\n    result2[index] = -1;\n  }\n  return finalResult;\n\
    }\n\nconsole.log(order_by_points([51, 32, 43]));", "  let result: number[] = [];\n\
    \  let sum: number[] = [];\n  for (let i: number = 0; i < nums.length; i++) {\n\
    \    let temp: number = 0;\n    for (let j: number = 0; j < nums[i].toString().length;\
    \ j++) {\n      temp += parseInt(nums[i].toString()[j]);\n    }\n    sum.push(temp);\n\
    \  }\n  for (let i: number = 0; i < sum.length; i++) {\n    let min: number =\
    \ Math.min(...sum);\n    let index: number = sum.indexOf(min);\n    result.push(nums[index]);\n\
    \    sum.splice(index, 1);\n    nums.splice(index, 1);\n  }\n  return result;\n\
    }\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return\
    \ nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc, cur)\
    \ => acc + Number(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "    let sumOfDigits = (num: number): number\
    \ => {\n        let sum = 0;\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num = Math.floor(num / 10);\n        }\n        return sum;\n\
    \    };\n\n    let sorted = nums.sort((a, b) => {\n        let aSum = sumOfDigits(a);\n\
    \        let bSum = sumOfDigits(b);\n        if (aSum === bSum) {\n          \
    \  return nums.indexOf(a) - nums.indexOf(b);\n        }\n        return aSum -\
    \ bSum;\n    });\n    return sorted;\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 7, 0]));\nconsole.log(order_by_points([5, 3, 1, 7, 0, 10, 12]));\nconsole.log(order_by_points([12,\
    \ 30, 34, 5, 9]));\nconsole.log(order_by_points([2, 34, 5, 9, 12]));\nconsole.log(order_by_points([2,\
    \ 34, 5, 9, 12, 0]));\nconsole.log(order_by_points([0, 2, 34, 5, 9, 12]));\nconsole.log(order_by_points([51,\
    \ 32, 43]));\nconsole.log(order_by_points([32, 43, 51]));\nconsole.log(order_by_points([5,\
    \ 3, 1, 7, 0]));\nconsole.log(order_by_points([5, 3, 1, 7, 0, 10, 12]));\nconsole.log(order_by_points([12,\
    \ 30, 34, 5, 9]));\nconsole.log(order_by_points([2, 34, 5, 9, 12]));\nconsole.log(order_by_points([2,\
    \ 34, 5, 9, 12, 0]));\nconsole.log(order_by_points([0, 2, 34, 5, 9, 12]));\nconsole.log(order_by_points([51,\
    \ 32, 43]));\nconsole.log(order_by_points([32, 43, 51]));", "  return nums.sort((a,\
    \ b) => {\n    let sumA = a.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    let sumB = b.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));", "    let result: number[] = [];\n    let sum:\
    \ number = 0;\n    let sumArr: number[] = [];\n    for (let i: number = 0; i <\
    \ nums.length; i++) {\n        sum = 0;\n        for (let j: number = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += parseInt(nums[i].toString().charAt(j));\n       \
    \ }\n        sumArr.push(sum);\n    }\n    for (let i: number = 0; i < sumArr.length;\
    \ i++) {\n        for (let j: number = 0; j < sumArr.length; j++) {\n        \
    \    if (sumArr[i] < sumArr[j]) {\n                let temp: number = sumArr[i];\n\
    \                sumArr[i] = sumArr[j];\n                sumArr[j] = temp;\n \
    \               temp = nums[i];\n                nums[i] = nums[j];\n        \
    \        nums[j] = temp;\n            }\n        }\n    }\n    return nums;\n\
    }\nconsole.log(order_by_points([51, 32, 43]));\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(order_by_points([2, 34, 51, 7, 8,\
    \ 9, 12, 24]));\nconsole.log(order_by_points([2, 34, 51, 7, 8, 9, 12, 24, 11,\
    \ 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32,\
    \ 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]));\nconsole.log(order_by_points([2,\
    \ 34, 51, 7, 8, 9, 12, 24, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25,\
    \ 26, 27, 28, 29, 30, 31", "  return nums.sort((a, b) => {\n    const sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n    const sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4])); // [1, 3, 5, 2, 4]\nconsole.log(order_by_points([5, 3, 1, 2,\
    \ 4, 9, 8, 7, 6])); // [1, 3, 5, 2, 4, 6, 8, 7, 9]\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4, 9, 8, 7, 6, 10])); // [1, 3, 5, 2, 4, 6, 8, 7, 9, 10]\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4, 9, 8, 7, 6, 10, 11])); // [1, 3, 5, 2, 4, 6, 8, 7, 9, 10, 11]\n\
    console.log(order_by_points([5, 3, 1, 2, 4, 9, 8, 7, 6, 10, 11, 12])); // [1,\
    \ 3, 5, 2, 4, 6, 8, 7, 9, 10, 11, 12]\nconsole.log(order_by_points([5, 3, 1, 2,\
    \ 4, 9, 8, 7, 6, 10, 11, 12, 13])); // [1, 3, 5, 2, 4, 6, 8, 7, 9, 10, 11, 12,\
    \ 13]\nconsole.log(order_by_points([5, 3, 1, 2, 4, 9, 8, 7, 6, 10, 11, 12, 13,\
    \ 14])); // [1, 3, 5, 2, 4, 6, 8, 7, 9, 10, 11, 12, 13, 14]\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4, 9,", "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4])); // [1, 3, 5, 2, 4]\nconsole.log(order_by_points([5, 3, 1, 2,\
    \ 4, 8, 9, 7, 6])); // [1, 3, 5, 2, 4, 6, 8, 9, 7]\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4, 8, 9, 7, 6, 10])); // [1, 3, 5, 2, 4, 6, 8, 9, 7, 10]\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4, 8, 9, 7, 6, 10, 11])); // [1, 3, 5, 2, 4, 6, 8, 9, 7, 10, 11]\n\
    console.log(order_by_points([5, 3, 1, 2, 4, 8, 9, 7, 6, 10, 11, 12])); // [1,\
    \ 3, 5, 2, 4, 6, 8, 9, 7, 10, 11, 12]\nconsole.log(order_by_points([5, 3, 1, 2,\
    \ 4, 8, 9, 7, 6, 10, 11, 12, 13])); // [1, 3, 5, 2, 4, 6, 8, 9, 7, 10, 11, 12,\
    \ 13]\nconsole.log(order_by_points([5, 3, 1, 2, 4, 8, 9, 7, 6, 10, 11, 12, 13,\
    \ 14])); // [1, 3, 5, 2, 4, 6, 8, 9, 7, 10, 11, 12, 13, 14]\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4, 8, 9, 7,", "  let result: number[] = [];\n  let sum: number = 0;\n\
    \  let sumArray: number[] = [];\n  for (let i: number = 0; i < nums.length; i++)\
    \ {\n    sum = 0;\n    for (let j: number = 0; j < nums[i].toString().length;\
    \ j++) {\n      sum += parseInt(nums[i].toString()[j]);\n    }\n    sumArray.push(sum);\n\
    \  }\n  for (let i: number = 0; i < sumArray.length; i++) {\n    for (let j: number\
    \ = 0; j < sumArray.length; j++) {\n      if (sumArray[i] < sumArray[j]) {\n \
    \       let temp: number = sumArray[i];\n        sumArray[i] = sumArray[j];\n\
    \        sumArray[j] = temp;\n        let temp2: number = nums[i];\n        nums[i]\
    \ = nums[j];\n        nums[j] = temp2;\n      }\n    }\n  }\n  return nums;\n\
    }\n\nconsole.log(order_by_points([13, 20, 18, 34]));", "  return nums.sort((a,\
    \ b) => {\n    let sumA = a.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    let sumB = b.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 2, 4])); // [1, 3, 2, 5, 4]\nconsole.log(order_by_points([5, 3, 1, 2, 4,\
    \ 8, 9, 7, 6])); // [1, 3, 2, 5, 4, 6, 7, 8, 9]\n", "  let numsMap = new Map();\n\
    \  let result = [];\n  for (let i = 0; i < nums.length; i++) {\n    let sum =\
    \ 0;\n    let num = nums[i];\n    while (num > 0) {\n      sum += num % 10;\n\
    \      num = Math.floor(num / 10);\n    }\n    if (numsMap.has(sum)) {\n     \
    \ numsMap.get(sum).push(nums[i]);\n    } else {\n      numsMap.set(sum, [nums[i]]);\n\
    \    }\n  }\n  numsMap.forEach((value, key) => {\n    value.forEach(val => {\n\
    \      result.push(val);\n    });\n  });\n  return result;\n}\n", "  let numsSorted\
    \ = nums.sort((a, b) => {\n    let sumA = a.toString().split(\"\").reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let sumB = b.toString().split(\"\").reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return sumA - sumB;\n  });\n  return numsSorted;\n\
    }\n\nconsole.log(order_by_points([2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a,\
    \ b) => {\n    let aSum = a.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    let bSum = b.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 2, 4]));", "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 7, 0]));", "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 4, 1, 2]));", "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 4, 2]));", "  let result: number[] = [];\n  let sum: number[] = [];\n\
    \  let sum2: number[] = [];\n  let sum3: number[] = [];\n  let sum4: number[]\
    \ = [];\n  let sum5: number[] = [];\n  let sum6: number[] = [];\n  let sum7: number[]\
    \ = [];\n  let sum8: number[] = [];\n  let sum9: number[] = [];\n  let sum10:\
    \ number[] = [];\n  let sum11: number[] = [];\n  let sum12: number[] = [];\n \
    \ let sum13: number[] = [];\n  let sum14: number[] = [];\n  let sum15: number[]\
    \ = [];\n  let sum16: number[] = [];\n  let sum17: number[] = [];\n  let sum18:\
    \ number[] = [];\n  let sum19: number[] = [];\n  let sum20: number[] = [];\n \
    \ let sum21: number[] = [];\n  let sum22: number[] = [];\n  let sum23: number[]\
    \ = [];\n  let sum24: number[] = [];\n  let sum25: number[] = [];\n  let sum26:\
    \ number[] = [];\n  let sum27: number[] = [];\n  let sum28: number[] = [];\n \
    \ let sum29: number[] = [];\n  let sum30: number[] = [];\n  let sum31: number[]\
    \ = [];\n  let sum32: number[] = [];\n  let sum33: number[] = [];\n  let sum34:\
    \ number[] = [];\n  let sum35: number[] = [];\n  let sum36: number[] = [];\n \
    \ let sum37: number[] = [];\n  let sum38: number[] = [];\n  let sum39: number[]\
    \ = [];\n  let sum40: number[] = [];\n  let sum41: number[] = [];\n  let sum42:\
    \ number[] = [];\n  let sum43: number[] = [];\n  let sum44: number[] = [];\n \
    \ let sum45: number[] = [];\n  let sum46: number[] = [];\n  let sum47: number[]\
    \ = [];\n  let sum48: number[] = [];\n  let sum49: number[] = [];\n  let sum50:\
    \ number[] = [];\n  let sum", "  let result: number[] = [];\n  let temp: number[]\
    \ = [];\n  let temp2: number[] = [];\n  let sum: number = 0;\n  let sum2: number\
    \ = 0;\n  for (let i: number = 0; i < nums.length; i++) {\n    temp = nums[i].toString().split(\"\
    \");\n    for (let j: number = 0; j < temp.length; j++) {\n      sum += Number(temp[j]);\n\
    \    }\n    temp2.push(sum);\n    sum = 0;\n  }\n  console.log(temp2);\n  for\
    \ (let i: number = 0; i < temp2.length; i++) {\n    for (let j: number = 0; j\
    \ < temp2.length; j++) {\n      if (temp2[i] < temp2[j]) {\n        sum = temp2[i];\n\
    \        temp2[i] = temp2[j];\n        temp2[j] = sum;\n        sum2 = nums[i];\n\
    \        nums[i] = nums[j];\n        nums[j] = sum2;\n      }\n    }\n  }\n  result\
    \ = nums;\n  return result;\n}\n\nconsole.log(order_by_points([51, 32, 43]));",
  "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 4, 2]));", "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([3,\
    \ 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0]));", "  return nums.sort((a,\
    \ b) => {\n    let aSum = 0;\n    let bSum = 0;\n    a.toString().split(\"\").forEach(element\
    \ => {\n      aSum += parseInt(element);\n    });\n    b.toString().split(\"\"\
    ).forEach(element => {\n      bSum += parseInt(element);\n    });\n    if (aSum\
    \ > bSum) {\n      return 1;\n    } else if (aSum < bSum) {\n      return -1;\n\
    \    } else {\n      return a - b;\n    }\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let aSum\
    \ = a.toString().split('').reduce((a, b) => a + parseInt(b), 0);\n    let bSum\
    \ = b.toString().split('').reduce((a, b) => a + parseInt(b), 0);\n    return aSum\
    \ - bSum;\n  });\n}\n\nconsole.log(order_by_points([5, 3, 1, 2, 4]));", "    let\
    \ result: number[] = [];\n    let sum: number = 0;\n    let sumArray: number[]\
    \ = [];\n    for (let i: number = 0; i < nums.length; i++) {\n        sum = 0;\n\
    \        for (let j: number = 0; j < nums[i].toString().length; j++) {\n     \
    \       sum += parseInt(nums[i].toString().charAt(j));\n        }\n        sumArray.push(sum);\n\
    \    }\n    let index: number = 0;\n    for (let i: number = 0; i < sumArray.length;\
    \ i++) {\n        index = sumArray.indexOf(Math.min(...sumArray));\n        result.push(nums[index]);\n\
    \        sumArray.splice(index, 1);\n        nums.splice(index, 1);\n    }\n \
    \   return result;\n}\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10]));\nconsole.log(order_by_points([2, 34, 5, 9, 8]));\nconsole.log(order_by_points([5,\
    \ 3, 1, 7, 0]));\nconsole.log(order_by_points([]));\n", "  return nums.sort((a,\
    \ b) => {\n    let aSum = a.toString().split('').reduce((acc, cur) => acc + parseInt(cur),\
    \ 0);\n    let bSum = b.toString().split('').reduce((acc, cur) => acc + parseInt(cur),\
    \ 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 7, 0]));", "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((a,\
    \ b) => a + Number(b), 0);\n    let sumB = b.toString().split('').reduce((a, b)\
    \ => a + Number(b), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let sumA\
    \ = 0;\n    let sumB = 0;\n    a.toString().split(\"\").forEach(num => {\n   \
    \   sumA += parseInt(num);\n    });\n    b.toString().split(\"\").forEach(num\
    \ => {\n      sumB += parseInt(num);\n    });\n    if (sumA === sumB) {\n    \
    \  return nums.indexOf(a) - nums.indexOf(b);\n    } else {\n      return sumA\
    \ - sumB;\n    }\n  });\n}\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([51,\
    \ 32, 43]));", "  let result: number[] = [];\n  let sum: number = 0;\n  let sumArray:\
    \ number[] = [];\n  let indexArray: number[] = [];\n  for (let i: number = 0;\
    \ i < nums.length; i++) {\n    sum = 0;\n    for (let j: number = 0; j < nums[i].toString().length;\
    \ j++) {\n      sum += Number(nums[i].toString()[j]);\n    }\n    sumArray.push(sum);\n\
    \    indexArray.push(i);\n  }\n  for (let i: number = 0; i < sumArray.length;\
    \ i++) {\n    for (let j: number = i + 1; j < sumArray.length; j++) {\n      if\
    \ (sumArray[i] > sumArray[j]) {\n        let temp: number = sumArray[i];\n   \
    \     sumArray[i] = sumArray[j];\n        sumArray[j] = temp;\n        temp =\
    \ indexArray[i];\n        indexArray[i] = indexArray[j];\n        indexArray[j]\
    \ = temp;\n      }\n    }\n  }\n  for (let i: number = 0; i < indexArray.length;\
    \ i++) {\n    result.push(nums[indexArray[i]]);\n  }\n  return result;\n}\n\n\
    console.log(order_by_points([13, 20, 18, 34]));\nconsole.log(order_by_points([5,\
    \ 9, 8, 3, 7, 4, 1, 2]));\nconsole.log(order_by_points([5, 3, 8, 3, 4, 6, 7, 2]));\n",
  "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([2,\
    \ 3, 1, 4, 5]));", "  let nums_with_points = nums.map((num) => {\n    let points\
    \ = 0;\n    let num_str = num.toString();\n    for (let i = 0; i < num_str.length;\
    \ i++) {\n      points += parseInt(num_str[i]);\n    }\n    return { num, points\
    \ };\n  });\n  nums_with_points.sort((a, b) => {\n    if (a.points > b.points)\
    \ {\n      return 1;\n    } else if (a.points < b.points) {\n      return -1;\n\
    \    } else {\n      return 0;\n    }\n  });\n  return nums_with_points.map((num_with_points)\
    \ => num_with_points.num);\n}\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 7, 0]));", "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([3,\
    \ 6, 9, 1, 5, 7, 2, 4, 8]));", "  let result: number[] = [];\n  let sum: number[]\
    \ = [];\n  for (let i: number = 0; i < nums.length; i++) {\n    let temp: number\
    \ = 0;\n    for (let j: number = 0; j < nums[i].toString().length; j++) {\n  \
    \    temp += parseInt(nums[i].toString()[j]);\n    }\n    sum.push(temp);\n  }\n\
    \  for (let i: number = 0; i < sum.length; i++) {\n    let min: number = Math.min(...sum);\n\
    \    let index: number = sum.indexOf(min);\n    result.push(nums[index]);\n  \
    \  sum.splice(index, 1);\n    nums.splice(index, 1);\n  }\n  return result;\n\
    }\n\nconsole.log(order_by_points([51, 32, 43]));", "  return nums.sort((a, b)\
    \ => {\n    let aSum = a.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    let bSum = b.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 2, 4]));", "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    return aSum - bSum;\n  });\n}\n", "  return\
    \ nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc, cur)\
    \ => acc + parseInt(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let sumA\
    \ = a.toString().split('').reduce((acc, cur) => acc + parseInt(cur), 0);\n   \
    \ let sumB = b.toString().split('').reduce((acc, cur) => acc + parseInt(cur),\
    \ 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));", "  let numsWithPoints = nums.map((num, index)\
    \ => {\n    return {\n      num,\n      index,\n      points: num\n        .toString()\n\
    \        .split(\"\")\n        .map(Number)\n        .reduce((a, b) => a + b)\n\
    \    };\n  });\n  numsWithPoints.sort((a, b) => {\n    if (a.points === b.points)\
    \ {\n      return a.index - b.index;\n    } else {\n      return a.points - b.points;\n\
    \    }\n  });\n  return numsWithPoints.map(num => num.num);\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 4, 2]));", "  return nums.sort((a, b) => {\n    let aSum = a\n      .toString()\n\
    \      .split(\"\")\n      .map(Number)\n      .reduce((a, b) => a + b);\n   \
    \ let bSum = b\n      .toString()\n      .split(\"\")\n      .map(Number)\n  \
    \    .reduce((a, b) => a + b);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 4, 2]));", "  let numsWithSum = nums.map(num => {\n    let sum = 0;\n\
    \    let numString = num.toString();\n    for (let i = 0; i < numString.length;\
    \ i++) {\n      sum += parseInt(numString[i]);\n    }\n    return { num, sum };\n\
    \  });\n  numsWithSum.sort((a, b) => {\n    if (a.sum === b.sum) {\n      return\
    \ a.num - b.num;\n    } else {\n      return a.sum - b.sum;\n    }\n  });\n  return\
    \ numsWithSum.map(num => num.num);\n}\n", "    let numsSorted = nums.slice().sort((a,\
    \ b) => {\n        let aSum = a.toString().split('').reduce((a, b) => a + +b,\
    \ 0);\n        let bSum = b.toString().split('').reduce((a, b) => a + +b, 0);\n\
    \        return aSum - bSum;\n    });\n    return numsSorted;\n}\n", "  return\
    \ nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((a, b) =>\
    \ parseInt(a) + parseInt(b));\n    let bSum = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 7, 0]));", "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([150,\
    \ 34, 7, 291, 92, 65]));", "  let numsCopy = nums.slice();\n  let numsSorted =\
    \ numsCopy.sort((a, b) => {\n    let aSum = a.toString().split(\"\").reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n    let bSum = b.toString().split(\"\").reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n    return aSum - bSum;\n  });\n  return\
    \ numsSorted;\n}\n", "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((a,\
    \ b) => a + parseInt(b), 0);\n    let bSum = b.toString().split('').reduce((a,\
    \ b) => a + parseInt(b), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 4, 2]));", "  return nums.sort((a, b) => {\n    let sumA = sumDigits(a);\n\
    \    let sumB = sumDigits(b);\n    if (sumA === sumB) {\n      return a - b;\n\
    \    } else {\n      return sumA - sumB;\n    }\n  });\n}\n", "  return nums.sort((a,\
    \ b) => {\n    let aSum = a.toString().split('').reduce((a, b) => a + Number(b),\
    \ 0);\n    let bSum = b.toString().split('').reduce((a, b) => a + Number(b), 0);\n\
    \    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let result: number[] = [];\n  let sum: number[]\
    \ = [];\n  let num: number = 0;\n  for (let i: number = 0; i < nums.length; i++)\
    \ {\n    num = nums[i];\n    while (num > 0) {\n      sum[i] += num % 10;\n  \
    \    num = Math.floor(num / 10);\n    }\n  }\n  for (let i: number = 0; i < nums.length;\
    \ i++) {\n    for (let j: number = 0; j < nums.length; j++) {\n      if (sum[i]\
    \ < sum[j]) {\n        let temp: number = sum[i];\n        sum[i] = sum[j];\n\
    \        sum[j] = temp;\n        temp = nums[i];\n        nums[i] = nums[j];\n\
    \        nums[j] = temp;\n      }\n    }\n  }\n  return nums;\n}\n\nconsole.log(order_by_points([152,\
    \ 23, 7, 887, 243]));\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10]));\nconsole.log(order_by_points([9, 99, 999]));\n", "  return nums.sort((a,\
    \ b) => {\n    let aSum = a.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    let bSum = b.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 2, 4])); // [1, 3, 5, 2, 4]\nconsole.log(order_by_points([5, 3, 1, 2, 4,\
    \ 0])); // [0, 1, 3, 5, 2, 4]\nconsole.log(order_by_points([5, 3, 1, 2, 4, 0,\
    \ -1])); // [0, -1, 1, 3, 5, 2, 4]\nconsole.log(order_by_points([5, 3, 1, 2, 4,\
    \ 0, -1, -2])); // [0, -1, -2, 1, 3, 5, 2, 4]\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4, 0, -1, -2, -3])); // [0, -1, -2, -3, 1, 3, 5, 2, 4]\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4, 0, -1, -2, -3, -4])); // [0, -1, -2, -3, -4, 1, 3, 5, 2, 4]\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4, 0, -1, -2, -3, -4, -5])); // [0, -1, -2, -3, -4, -5, 1, 3, 5, 2,\
    \ 4]\nconsole.log(order_by_points([5, 3, 1, 2, 4, 0, -1, -2, -3, -4, -5, -6]));\
    \ // [0, -1, -2, -3, -4, -5, -6, 1, 3, 5", "  return nums.sort((a, b) => {\n \
    \   let sumA = a.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    let sumB = b.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let sumA\
    \ = a.toString().split('').reduce((acc, cur) => acc + Number(cur), 0);\n    let\
    \ sumB = b.toString().split('').reduce((acc, cur) => acc + Number(cur), 0);\n\
    \    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([51, 32, 43]));",
  "  return nums.sort((a, b) => {\n    let sumA = 0;\n    let sumB = 0;\n    let aString\
    \ = a.toString();\n    let bString = b.toString();\n    for (let i = 0; i < aString.length;\
    \ i++) {\n      sumA += Number(aString[i]);\n    }\n    for (let i = 0; i < bString.length;\
    \ i++) {\n      sumB += Number(bString[i]);\n    }\n    if (sumA === sumB) {\n\
    \      return nums.indexOf(a) - nums.indexOf(b);\n    } else {\n      return sumA\
    \ - sumB;\n    }\n  });\n}\n\nconsole.log(order_by_points([5, 3, 1, 4, 2]));\n\
    console.log(order_by_points([5, 3, 1, 4, 2, 9, 8, 7, 6]));\n", "  let numsWithPoints\
    \ = nums.map((num, index) => {\n    return {\n      num,\n      index,\n     \
    \ points: num\n        .toString()\n        .split(\"\")\n        .map(Number)\n\
    \        .reduce((a, b) => a + b, 0)\n    };\n  });\n  numsWithPoints.sort((a,\
    \ b) => {\n    if (a.points === b.points) {\n      return a.index - b.index;\n\
    \    } else {\n      return a.points - b.points;\n    }\n  });\n  return numsWithPoints.map(num\
    \ => num.num);\n}\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(order_by_points([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(order_by_points([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]));\nconsole.log(order_by_points([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]));\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16", "  let numsWithPoints =\
    \ nums.map((num, index) => {\n    return {\n      num,\n      index,\n      points:\
    \ num\n        .toString()\n        .split(\"\")\n        .map(Number)\n     \
    \   .reduce((a, b) => a + b, 0)\n    };\n  });\n  numsWithPoints.sort((a, b) =>\
    \ {\n    if (a.points === b.points) {\n      return a.index - b.index;\n    }\
    \ else {\n      return a.points - b.points;\n    }\n  });\n  return numsWithPoints.map(num\
    \ => num.num);\n}\n\nconsole.log(order_by_points([13, 20, 18, 34]));", "  return\
    \ nums.sort((a, b) => {\n    const aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n    const bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([3,\
    \ 2, 1, 4, 5]));", "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return aSum - bSum;\n  });\n}\n", "  return\
    \ nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc, cur)\
    \ => acc + Number(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let sumA\
    \ = 0;\n    let sumB = 0;\n    for (let i = 0; i < a.toString().length; i++) {\n\
    \      sumA += parseInt(a.toString()[i]);\n    }\n    for (let i = 0; i < b.toString().length;\
    \ i++) {\n      sumB += parseInt(b.toString()[i]);\n    }\n    if (sumA > sumB)\
    \ {\n      return 1;\n    } else if (sumA < sumB) {\n      return -1;\n    } else\
    \ {\n      return 0;\n    }\n  });\n}\n\nconsole.log(order_by_points([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10]));", "  let numsWithPoints = nums.map((num, index) =>\
    \ {\n    let sum = 0;\n    num.toString().split(\"\").forEach(digit => {\n   \
    \   sum += parseInt(digit);\n    });\n    return { num, sum, index };\n  });\n\
    \  numsWithPoints.sort((a, b) => {\n    if (a.sum === b.sum) {\n      return a.index\
    \ - b.index;\n    }\n    return a.sum - b.sum;\n  });\n  return numsWithPoints.map(num\
    \ => num.num);\n}\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));",
  "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let sumA\
    \ = a.toString().split('').reduce((acc, cur) => acc + Number(cur), 0);\n    let\
    \ sumB = b.toString().split('').reduce((acc, cur) => acc + Number(cur), 0);\n\
    \    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));", "  let result: number[] = [];\n  let sums: number[]\
    \ = [];\n  let sum: number = 0;\n  for (let i: number = 0; i < nums.length; i++)\
    \ {\n    sum = 0;\n    for (let j: number = 0; j < nums[i].toString().length;\
    \ j++) {\n      sum += parseInt(nums[i].toString().charAt(j));\n    }\n    sums.push(sum);\n\
    \  }\n  for (let i: number = 0; i < sums.length; i++) {\n    for (let j: number\
    \ = 0; j < sums.length; j++) {\n      if (sums[i] < sums[j]) {\n        let temp:\
    \ number = sums[i];\n        sums[i] = sums[j];\n        sums[j] = temp;\n   \
    \     temp = nums[i];\n        nums[i] = nums[j];\n        nums[j] = temp;\n \
    \     }\n    }\n  }\n  return nums;\n}\n\nconsole.log(order_by_points([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 4, 2]));", "  return nums.sort((a, b) => {\n    let aSum = 0;\n    let\
    \ bSum = 0;\n    a.toString().split(\"\").forEach(element => {\n      aSum +=\
    \ parseInt(element);\n    });\n    b.toString().split(\"\").forEach(element =>\
    \ {\n      bSum += parseInt(element);\n    });\n    if (aSum === bSum) {\n   \
    \   return nums.indexOf(a) - nums.indexOf(b);\n    } else {\n      return aSum\
    \ - bSum;\n    }\n  });\n}\n\nconsole.log(order_by_points([15, 3, 7, 8, 9, 10]));",
  "  return nums.sort((a, b) => {\n    let sumA = sumDigits(a);\n    let sumB = sumDigits(b);\n\
    \    if (sumA === sumB) {\n      return nums.indexOf(a) - nums.indexOf(b);\n \
    \   } else {\n      return sumA - sumB;\n    }\n  });\n}\n", "  return nums.sort((a,\
    \ b) => {\n    let sumA = a.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    let sumB = b.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 4, 2]));", "  return nums.sort((a, b) => {\n    let aSum = a\n      .toString()\n\
    \      .split(\"\")\n      .map(Number)\n      .reduce((a, b) => a + b);\n   \
    \ let bSum = b\n      .toString()\n      .split(\"\")\n      .map(Number)\n  \
    \    .reduce((a, b) => a + b);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let sumA\
    \ = a.toString().split('').reduce((acc, cur) => acc + Number(cur), 0);\n    let\
    \ sumB = b.toString().split('').reduce((acc, cur) => acc + Number(cur), 0);\n\
    \    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((a,\
    \ b) => Number(a) + Number(b), 0);\n    let sumB = b.toString().split('').reduce((a,\
    \ b) => Number(a) + Number(b), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 4, 2]));", "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let result: number[] = [];\n  let temp:\
    \ number[] = [];\n  let temp2: number[] = [];\n  let temp3: number[] = [];\n \
    \ let temp4: number[] = [];\n  let temp5: number[] = [];\n  let temp6: number[]\
    \ = [];\n  let temp7: number[] = [];\n  let temp8: number[] = [];\n  let temp9:\
    \ number[] = [];\n  let temp10: number[] = [];\n  let temp11: number[] = [];\n\
    \  let temp12: number[] = [];\n  let temp13: number[] = [];\n  let temp14: number[]\
    \ = [];\n  let temp15: number[] = [];\n  let temp16: number[] = [];\n  let temp17:\
    \ number[] = [];\n  let temp18: number[] = [];\n  let temp19: number[] = [];\n\
    \  let temp20: number[] = [];\n  let temp21: number[] = [];\n  let temp22: number[]\
    \ = [];\n  let temp23: number[] = [];\n  let temp24: number[] = [];\n  let temp25:\
    \ number[] = [];\n  let temp26: number[] = [];\n  let temp27: number[] = [];\n\
    \  let temp28: number[] = [];\n  let temp29: number[] = [];\n  let temp30: number[]\
    \ = [];\n  let temp31: number[] = [];\n  let temp32: number[] = [];\n  let temp33:\
    \ number[] = [];\n  let temp34: number[] = [];\n  let temp35: number[] = [];\n\
    \  let temp36: number[] = [];\n  let temp37: number[] = [];\n  let temp38: number[]\
    \ = [];\n  let temp39: number[] = [];\n  let temp40: number[] = [];\n  let temp41:\
    \ number[] = [];\n  let temp42: number[] = [];\n  let temp43: number[] = [];\n\
    \  let temp44: number[] = [];\n  let temp45: number[] = [];\n  let temp46: number[]\
    \ = [];\n  let temp47: number[] = [];\n  let temp48: number[] = [];\n  let temp49:\
    \ number[] = [];\n  let temp50: number[] = [];\n  let temp", "  return nums.sort((a,\
    \ b) => {\n    let aSum = a.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    let bSum = b.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let aSum\
    \ = a\n      .toString()\n      .split(\"\")\n      .map(Number)\n      .reduce((acc,\
    \ cur) => acc + cur);\n    let bSum = b\n      .toString()\n      .split(\"\"\
    )\n      .map(Number)\n      .reduce((acc, cur) => acc + cur);\n    return aSum\
    \ - bSum;\n  });\n}\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10]));", "  return nums.sort((a, b) => {\n    let sumA = 0;\n    let sumB =\
    \ 0;\n    for (let i = 0; i < a.toString().length; i++) {\n      sumA += Number(a.toString()[i]);\n\
    \    }\n    for (let i = 0; i < b.toString().length; i++) {\n      sumB += Number(b.toString()[i]);\n\
    \    }\n    if (sumA > sumB) {\n      return 1;\n    } else if (sumA < sumB) {\n\
    \      return -1;\n    } else {\n      return 0;\n    }\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "    return nums.sort((a, b) => {\n       \
    \ let sumA = a.toString().split('').reduce((acc, cur) => acc + parseInt(cur),\
    \ 0);\n        let sumB = b.toString().split('').reduce((acc, cur) => acc + parseInt(cur),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    let nums_with_points =\
    \ nums.map(num => {\n        let points = 0;\n        let num_str = num.toString();\n\
    \        for (let i = 0; i < num_str.length; i++) {\n            points += parseInt(num_str[i]);\n\
    \        }\n        return {\n            num: num,\n            points: points\n\
    \        }\n    });\n    nums_with_points.sort((a, b) => {\n        if (a.points\
    \ > b.points) {\n            return 1;\n        } else if (a.points < b.points)\
    \ {\n            return -1;\n        } else {\n            return 0;\n       \
    \ }\n    });\n    return nums_with_points.map(num_with_points => num_with_points.num);\n\
    }\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return\
    \ nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc, cur)\
    \ => acc + Number(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let sumA\
    \ = a.toString().split('').reduce((acc, cur) => acc + parseInt(cur), 0);\n   \
    \ let sumB = b.toString().split('').reduce((acc, cur) => acc + parseInt(cur),\
    \ 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));", "    let result: number[] = [];\n    let sum:\
    \ number = 0;\n    let sumArray: number[] = [];\n    let sumArraySorted: number[]\
    \ = [];\n    for (let i: number = 0; i < nums.length; i++) {\n        sum = 0;\n\
    \        for (let j: number = 0; j < nums[i].toString().length; j++) {\n     \
    \       sum += parseInt(nums[i].toString().charAt(j));\n        }\n        sumArray.push(sum);\n\
    \    }\n    sumArraySorted = sumArray.slice().sort((a, b) => a - b);\n    for\
    \ (let i: number = 0; i < sumArraySorted.length; i++) {\n        for (let j: number\
    \ = 0; j < sumArray.length; j++) {\n            if (sumArraySorted[i] === sumArray[j])\
    \ {\n                result.push(nums[j]);\n                sumArray[j] = -1;\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(order_by_points([51, 32, 43]));\nconsole.log(order_by_points([51,\
    \ 32, 43, 12, 9, 8, 7, 6, 5, 4, 3, 2, 1]));\nconsole.log(order_by_points([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\
    \ 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\
    \ 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\
    \ 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95", "  return nums.sort((a,\
    \ b) => {\n    let sumA = sumDigits(a);\n    let sumB = sumDigits(b);\n    if\
    \ (sumA === sumB) {\n      return nums.indexOf(a) - nums.indexOf(b);\n    } else\
    \ {\n      return sumA - sumB;\n    }\n  });\n}\n", "  let result: number[] =\
    \ [];\n  let sum: number = 0;\n  let sumArray: number[] = [];\n  for (let i: number\
    \ = 0; i < nums.length; i++) {\n    sum = 0;\n    for (let j: number = 0; j <\
    \ nums[i].toString().length; j++) {\n      sum += parseInt(nums[i].toString()[j]);\n\
    \    }\n    sumArray.push(sum);\n  }\n  for (let i: number = 0; i < sumArray.length;\
    \ i++) {\n    let min: number = Math.min(...sumArray);\n    let index: number\
    \ = sumArray.indexOf(min);\n    result.push(nums[index]);\n    sumArray.splice(index,\
    \ 1);\n    nums.splice(index, 1);\n  }\n  return result;\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    const\
    \ sumA = a.toString().split('').reduce((acc, curr) => acc + Number(curr), 0);\n\
    \    const sumB = b.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 7, 0]));", "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 4, 2]));", "  return nums.sort((a, b) => {\n    let aSum = 0;\n    let\
    \ bSum = 0;\n    a.toString().split(\"\").forEach(element => {\n      aSum +=\
    \ Number(element);\n    });\n    b.toString().split(\"\").forEach(element => {\n\
    \      bSum += Number(element);\n    });\n    if (aSum === bSum) {\n      return\
    \ nums.indexOf(a) - nums.indexOf(b);\n    } else {\n      return aSum - bSum;\n\
    \    }\n  });\n}\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));",
  "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let result: number[] = [];\n  let numsCopy:\
    \ number[] = nums.slice();\n  let sumOfDigits: number[] = [];\n  for (let i: number\
    \ = 0; i < nums.length; i++) {\n    let sum: number = 0;\n    let num: number\
    \ = nums[i];\n    while (num > 0) {\n      sum += num % 10;\n      num = Math.floor(num\
    \ / 10);\n    }\n    sumOfDigits.push(sum);\n  }\n  for (let i: number = 0; i\
    \ < nums.length; i++) {\n    let min: number = Math.min(...sumOfDigits);\n   \
    \ let index: number = sumOfDigits.indexOf(min);\n    result.push(numsCopy[index]);\n\
    \    sumOfDigits.splice(index, 1);\n    numsCopy.splice(index, 1);\n  }\n  return\
    \ result;\n}\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));",
  "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let result: number[] = [];\n  let sum: number\
    \ = 0;\n  let sumArray: number[] = [];\n  for (let i: number = 0; i < nums.length;\
    \ i++) {\n    sum = 0;\n    for (let j: number = 0; j < nums[i].toString().length;\
    \ j++) {\n      sum += parseInt(nums[i].toString()[j]);\n    }\n    sumArray.push(sum);\n\
    \  }\n  for (let i: number = 0; i < sumArray.length; i++) {\n    for (let j: number\
    \ = 0; j < sumArray.length; j++) {\n      if (sumArray[i] < sumArray[j]) {\n \
    \       let temp: number = sumArray[i];\n        sumArray[i] = sumArray[j];\n\
    \        sumArray[j] = temp;\n        let temp2: number = nums[i];\n        nums[i]\
    \ = nums[j];\n        nums[j] = temp2;\n      }\n    }\n  }\n  return nums;\n\
    }\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return\
    \ nums.sort((a, b) => {\n    let aSum = a\n      .toString()\n      .split(\"\"\
    )\n      .map(Number)\n      .reduce((a, b) => a + b);\n    let bSum = b\n   \
    \   .toString()\n      .split(\"\")\n      .map(Number)\n      .reduce((a, b)\
    \ => a + b);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let sumA\
    \ = 0;\n    let sumB = 0;\n    let aString = a.toString();\n    let bString =\
    \ b.toString();\n    for (let i = 0; i < aString.length; i++) {\n      sumA +=\
    \ parseInt(aString[i]);\n    }\n    for (let i = 0; i < bString.length; i++) {\n\
    \      sumB += parseInt(bString[i]);\n    }\n    if (sumA === sumB) {\n      return\
    \ nums.indexOf(a) - nums.indexOf(b);\n    } else {\n      return sumA - sumB;\n\
    \    }\n  });\n}\n\nconsole.log(order_by_points([13, 20, 18, 14]));", "  let numsCopy\
    \ = [...nums];\n  let numsCopy2 = [...nums];\n  let numsCopy3 = [...nums];\n \
    \ let numsCopy4 = [...nums];\n  let numsCopy5 = [...nums];\n  let numsCopy6 =\
    \ [...nums];\n  let numsCopy7 = [...nums];\n  let numsCopy8 = [...nums];\n  let\
    \ numsCopy9 = [...nums];\n  let numsCopy10 = [...nums];\n  let numsCopy11 = [...nums];\n\
    \  let numsCopy12 = [...nums];\n  let numsCopy13 = [...nums];\n  let numsCopy14\
    \ = [...nums];\n  let numsCopy15 = [...nums];\n  let numsCopy16 = [...nums];\n\
    \  let numsCopy17 = [...nums];\n  let numsCopy18 = [...nums];\n  let numsCopy19\
    \ = [...nums];\n  let numsCopy20 = [...nums];\n  let numsCopy21 = [...nums];\n\
    \  let numsCopy22 = [...nums];\n  let numsCopy23 = [...nums];\n  let numsCopy24\
    \ = [...nums];\n  let numsCopy25 = [...nums];\n  let numsCopy26 = [...nums];\n\
    \  let numsCopy27 = [...nums];\n  let numsCopy28 = [...nums];\n  let numsCopy29\
    \ = [...nums];\n  let numsCopy30 = [...nums];\n  let numsCopy31 = [...nums];\n\
    \  let numsCopy32 = [...nums];\n  let numsCopy33 = [...nums];\n  let numsCopy34\
    \ = [...nums];\n  let numsCopy35 = [...nums];\n  let numsCopy36 = [...nums];\n\
    \  let numsCopy37 = [...nums];\n  let numsCopy38 = [...nums];\n  let numsCopy39\
    \ = [...nums];\n  let numsCopy", "  let result: number[] = [];\n  let sumOfDigits:\
    \ number[] = [];\n  for (let i: number = 0; i < nums.length; i++) {\n    sumOfDigits.push(nums[i].toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b)));\n  }\n  for (let i: number = 0; i < nums.length;\
    \ i++) {\n    let min: number = Math.min(...sumOfDigits);\n    let index: number\
    \ = sumOfDigits.indexOf(min);\n    result.push(nums[index]);\n    sumOfDigits.splice(index,\
    \ 1);\n    nums.splice(index, 1);\n  }\n  return result;\n}\nconsole.log(order_by_points([5,\
    \ 9, 13, 8, 12, 3, 1, 15]));\n", "  return nums.sort((a, b) => {\n    let sumA\
    \ = a.toString().split('').reduce((acc, cur) => acc + Number(cur), 0);\n    let\
    \ sumB = b.toString().split('').reduce((acc, cur) => acc + Number(cur), 0);\n\
    \    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 7, 0]));", "    let numsWithPoints = nums.map(num => {\n        return\
    \ {\n            num: num,\n            points: num.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0)\n        }\n    });\n    numsWithPoints.sort((a,\
    \ b) => {\n        if (a.points === b.points) {\n            return a.num - b.num;\n\
    \        }\n        return a.points - b.points;\n    });\n    return numsWithPoints.map(numWithPoints\
    \ => numWithPoints.num);\n}\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50]));\n", "  let result: number[] = [];\n \
    \ let temp: number[] = [];\n  for (let i: number = 0; i < nums.length; i++) {\n\
    \    temp.push(nums[i]);\n  }\n  temp.sort(function (a, b) {\n    return a - b;\n\
    \  });\n  for (let i: number = 0; i < temp.length; i++) {\n    let sum: number\
    \ = 0;\n    let temp2: number = temp[i];\n    while (temp2 > 0) {\n      sum +=\
    \ temp2 % 10;\n      temp2 = Math.floor(temp2 / 10);\n    }\n    result.push(sum);\n\
    \  }\n  result.sort(function (a, b) {\n    return a - b;\n  });\n  let result2:\
    \ number[] = [];\n  for (let i: number = 0; i < result.length; i++) {\n    for\
    \ (let j: number = 0; j < nums.length; j++) {\n      let sum: number = 0;\n  \
    \    let temp2: number = nums[j];\n      while (temp2 > 0) {\n        sum += temp2\
    \ % 10;\n        temp2 = Math.floor(temp2 / 10);\n      }\n      if (sum === result[i])\
    \ {\n        result2.push(nums[j]);\n      }\n    }\n  }\n  return result2;\n\
    }\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return\
    \ nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc, cur)\
    \ => acc + Number(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let aSum\
    \ = a.toString().split('').reduce((acc, cur) => acc + parseInt(cur), 0);\n   \
    \ let bSum = b.toString().split('').reduce((acc, cur) => acc + parseInt(cur),\
    \ 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 2, 4]));", "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let result: number[] = [];\n  let numsCopy:\
    \ number[] = [...nums];\n  let sums: number[] = [];\n  numsCopy.forEach(function\
    \ (num) {\n    let sum: number = 0;\n    num.toString().split(\"\").forEach(function\
    \ (digit) {\n      sum += parseInt(digit);\n    });\n    sums.push(sum);\n  });\n\
    \  sums.forEach(function (sum) {\n    let index: number = sums.indexOf(sum);\n\
    \    result.push(nums[index]);\n  });\n  return result;\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 4, 2]));", "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n    let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n    return sumA - sumB;\n  });\n}\n\n\
    console.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a,\
    \ b) => {\n    let sumA = a.toString().split('').reduce((acc, cur) => acc + parseInt(cur),\
    \ 0);\n    let sumB = b.toString().split('').reduce((acc, cur) => acc + parseInt(cur),\
    \ 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 7, 0]));", "  return nums.sort((a, b) => {\n    let aSum = a\n      .toString()\n\
    \      .split(\"\")\n      .map(Number)\n      .reduce((a, b) => a + b);\n   \
    \ let bSum = b\n      .toString()\n      .split(\"\")\n      .map(Number)\n  \
    \    .reduce((a, b) => a + b);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(order_by_points([9, 99, 999]));\n\
    console.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(order_by_points([12,\
    \ 30, 34, 5, 9]));\nconsole.log(order_by_points([12, 121]));\nconsole.log(order_by_points([12,\
    \ 1213]));\nconsole.log(order_by_points([12, 1213, 1212]));\nconsole.log(order_by_points([12,\
    \ 1213, 1212, 1211]));\nconsole.log(order_by_points([12, 1213, 1212, 1211, 1210]));\n\
    console.log(order_by_points([12, 1213, 1212, 1211, 1210, 1214]));\nconsole.log(order_by_points([12,\
    \ 1213, 1212, 1211, 1210, 1214, 1215]));\nconsole.log(order_by_points([12, 1213,\
    \ 1212, 1211, 1210, 1214, 1215, 1216]));\nconsole.log(order_by_points([12, 1213,\
    \ 1212, 1211, 1210, 1214, 1215, 1216, 1217]));\nconsole.log(order_by_points([12,\
    \ 1213, 1212, 1211, 1210, 1214, 1215, 1216, 1217, 1218]));\nconsole.log(order_by_points([12,\
    \ 1213, 1212, 12", "  return nums.sort((a, b) => {\n    let sumA = 0;\n    let\
    \ sumB = 0;\n    let aString = a.toString();\n    let bString = b.toString();\n\
    \    for (let i = 0; i < aString.length; i++) {\n      sumA += parseInt(aString[i]);\n\
    \    }\n    for (let i = 0; i < bString.length; i++) {\n      sumB += parseInt(bString[i]);\n\
    \    }\n    if (sumA === sumB) {\n      return nums.indexOf(a) - nums.indexOf(b);\n\
    \    } else {\n      return sumA - sumB;\n    }\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(order_by_points([99, 77, 55, 33,\
    \ 11, 88, 22, 66, 44]));\n", "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4]));\nconsole.log(order_by_points([5, 3, 1, 2, 4, 6, 8, 7, 9]));\n\
    console.log(order_by_points([5, 3, 1, 2, 4, 6, 8, 7, 9, 10]));\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4, 6, 8, 7, 9, 10, 11]));\nconsole.log(order_by_points([5, 3, 1, 2,\
    \ 4, 6, 8, 7, 9, 10, 11, 12]));\nconsole.log(order_by_points([5, 3, 1, 2, 4, 6,\
    \ 8, 7, 9, 10, 11, 12, 13]));\nconsole.log(order_by_points([5, 3, 1, 2, 4, 6,\
    \ 8, 7, 9, 10, 11, 12, 13, 14]));\nconsole.log(order_by_points([5, 3, 1, 2, 4,\
    \ 6, 8, 7, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(order_by_points([5, 3, 1,\
    \ 2, 4, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17]));\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]));\nconsole.log(order_by_",
  "  let result = [];\n  let numsCopy = nums.slice();\n  let numsCopy2 = nums.slice();\n\
    \  let numsCopy3 = nums.slice();\n  let numsCopy4 = nums.slice();\n  let numsCopy5\
    \ = nums.slice();\n  let numsCopy6 = nums.slice();\n  let numsCopy7 = nums.slice();\n\
    \  let numsCopy8 = nums.slice();\n  let numsCopy9 = nums.slice();\n  let numsCopy10\
    \ = nums.slice();\n  let numsCopy11 = nums.slice();\n  let numsCopy12 = nums.slice();\n\
    \  let numsCopy13 = nums.slice();\n  let numsCopy14 = nums.slice();\n  let numsCopy15\
    \ = nums.slice();\n  let numsCopy16 = nums.slice();\n  let numsCopy17 = nums.slice();\n\
    \  let numsCopy18 = nums.slice();\n  let numsCopy19 = nums.slice();\n  let numsCopy20\
    \ = nums.slice();\n  let numsCopy21 = nums.slice();\n  let numsCopy22 = nums.slice();\n\
    \  let numsCopy23 = nums.slice();\n  let numsCopy24 = nums.slice();\n  let numsCopy25\
    \ = nums.slice();\n  let numsCopy26 = nums.slice();\n  let numsCopy27 = nums.slice();\n\
    \  let numsCopy28 = nums.slice();\n  let numsCopy29 = nums.slice();\n  let numsCopy30\
    \ = nums.slice();\n  let numsCopy31 = nums.slice();\n  let numsCopy32 = nums.slice();\n\
    \  let numsCopy33 = nums.slice();\n  let numsCopy34 = nums.slice();\n  let numsCopy35\
    \ = nums.slice();\n  let numsCopy36 = nums.slice();\n  let numsCopy37 = nums.slice();\n\
    \  let numsCopy38 = nums.slice();\n  let numsCopy39 = nums.slice();", "  return\
    \ nums.sort((a, b) => {\n    const aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n    const bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4]));", "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let result: number[] = [];\n  let sum: number[]\
    \ = [];\n  for (let i: number = 0; i < nums.length; i++) {\n    let temp: number\
    \ = 0;\n    for (let j: number = 0; j < nums[i].toString().length; j++) {\n  \
    \    temp += parseInt(nums[i].toString()[j]);\n    }\n    sum.push(temp);\n  }\n\
    \  for (let i: number = 0; i < sum.length; i++) {\n    let min: number = sum[i];\n\
    \    let index: number = i;\n    for (let j: number = i; j < sum.length; j++)\
    \ {\n      if (sum[j] < min) {\n        min = sum[j];\n        index = j;\n  \
    \    }\n    }\n    sum[index] = sum[i];\n    sum[i] = min;\n    let temp: number\
    \ = nums[index];\n    nums[index] = nums[i];\n    nums[i] = temp;\n  }\n  return\
    \ nums;\n}\n\nconsole.log(order_by_points([51, 32, 43]));", "  return nums.sort((a,\
    \ b) => {\n    return sumDigits(a) - sumDigits(b);\n  });\n}\n", "  let result:\
    \ number[] = [];\n  let sum: number = 0;\n  let sumList: number[] = [];\n  let\
    \ index: number = 0;\n  let indexList: number[] = [];\n  for (let i: number =\
    \ 0; i < nums.length; i++) {\n    sum = 0;\n    for (let j: number = 0; j < nums[i].toString().length;\
    \ j++) {\n      sum += parseInt(nums[i].toString()[j]);\n    }\n    sumList.push(sum);\n\
    \    indexList.push(i);\n  }\n  for (let i: number = 0; i < sumList.length; i++)\
    \ {\n    for (let j: number = 0; j < sumList.length; j++) {\n      if (sumList[i]\
    \ < sumList[j]) {\n        let temp: number = sumList[i];\n        sumList[i]\
    \ = sumList[j];\n        sumList[j] = temp;\n        let temp2: number = indexList[i];\n\
    \        indexList[i] = indexList[j];\n        indexList[j] = temp2;\n      }\n\
    \    }\n  }\n  for (let i: number = 0; i < indexList.length; i++) {\n    result.push(nums[indexList[i]]);\n\
    \  }\n  return result;\n}\nconsole.log(order_by_points([13, 20, 18, 30, 7]));",
  "  return nums.sort((a, b) => {\n    return sumDigits(a) - sumDigits(b);\n  });\n\
    }\n", "  return nums.sort((a, b) => {\n    let sumA = 0;\n    let sumB = 0;\n\
    \    a.toString().split(\"\").forEach(element => {\n      sumA += parseInt(element);\n\
    \    });\n    b.toString().split(\"\").forEach(element => {\n      sumB += parseInt(element);\n\
    \    });\n    if (sumA > sumB) {\n      return 1;\n    } else if (sumA < sumB)\
    \ {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 4, 2]));", "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 4, 2]));", "  let result: number[] = [];\n  let sum: number = 0;\n  let\
    \ sumArray: number[] = [];\n  let indexArray: number[] = [];\n  for (let i: number\
    \ = 0; i < nums.length; i++) {\n    sum = 0;\n    for (let j: number = 0; j <\
    \ nums[i].toString().length; j++) {\n      sum += parseInt(nums[i].toString()[j]);\n\
    \    }\n    sumArray.push(sum);\n    indexArray.push(i);\n  }\n  for (let i: number\
    \ = 0; i < sumArray.length; i++) {\n    for (let j: number = i + 1; j < sumArray.length;\
    \ j++) {\n      if (sumArray[i] > sumArray[j]) {\n        let temp: number = sumArray[i];\n\
    \        sumArray[i] = sumArray[j];\n        sumArray[j] = temp;\n        let\
    \ temp2: number = indexArray[i];\n        indexArray[i] = indexArray[j];\n   \
    \     indexArray[j] = temp2;\n      }\n    }\n  }\n  for (let i: number = 0; i\
    \ < indexArray.length; i++) {\n    result.push(nums[indexArray[i]]);\n  }\n  return\
    \ result;\n}\n\nconsole.log(order_by_points([5, 9, 13, 8, 12, 3, 1, 15]));", " \
    \ return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let aSum\
    \ = a.toString().split('').reduce((acc, cur) => acc + parseInt(cur), 0);\n   \
    \ let bSum = b.toString().split('').reduce((acc, cur) => acc + parseInt(cur),\
    \ 0);\n    return aSum - bSum;\n  });\n}\n", "  return nums.sort((a, b) => {\n\
    \    let sumA = a.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    let sumB = b.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 7, 0]));", "  let numsCopy = [...nums];\n  numsCopy.sort((a, b) => {\n  \
    \  let aSum = a\n      .toString()\n      .split(\"\")\n      .map(Number)\n \
    \     .reduce((a, b) => a + b);\n    let bSum = b\n      .toString()\n      .split(\"\
    \")\n      .map(Number)\n      .reduce((a, b) => a + b);\n    if (aSum === bSum)\
    \ {\n      return nums.indexOf(a) - nums.indexOf(b);\n    } else {\n      return\
    \ aSum - bSum;\n    }\n  });\n  return numsCopy;\n}\n\nconsole.log(order_by_points([2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));", "  let result: number[] = [];\n  let sum: number\
    \ = 0;\n  let sum2: number = 0;\n  for (let i: number = 0; i < nums.length; i++)\
    \ {\n    sum = 0;\n    for (let j: number = 0; j < nums[i].toString().length;\
    \ j++) {\n      sum += parseInt(nums[i].toString().charAt(j));\n    }\n    result.push(sum);\n\
    \  }\n  for (let i: number = 0; i < result.length; i++) {\n    for (let j: number\
    \ = 0; j < result.length; j++) {\n      if (result[i] < result[j]) {\n       \
    \ sum2 = result[i];\n        result[i] = result[j];\n        result[j] = sum2;\n\
    \        sum2 = nums[i];\n        nums[i] = nums[j];\n        nums[j] = sum2;\n\
    \      }\n    }\n  }\n  return nums;\n}\n\nconsole.log(order_by_points([51, 32,\
    \ 43]));\nconsole.log(order_by_points([51, 32, 43, 13, 5]));\nconsole.log(order_by_points([42,\
    \ 13, 5, 32, 51]));\nconsole.log(order_by_points([42, 13, 5, 32, 51, 12]));\n\
    console.log(order_by_points([42, 13, 5, 32, 51, 12, 13]));\nconsole.log(order_by_points([42,\
    \ 13, 5, 32, 51, 12, 13, 5]));\nconsole.log(order_by_points([42, 13, 5, 32, 51,\
    \ 12, 13, 5, 32]));\nconsole.log(order_by_points([42, 13, 5, 32, 51, 12, 13, 5,\
    \ 32, 51]));\nconsole.log(order_by_points([42, 13, 5, 32, 51, 12, 13, 5, 32, 51,\
    \ 42]));\nconsole.log(order_by_points([42, 13, 5, 32, 51, 12, 13,", "    return\
    \ nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        return aSum - bSum;\n    });\n}\n\n\
    console.log(order_by_points([5, 3, 1, 4, 2]));", "  return nums.sort((a, b) =>\
    \ {\n    let sumA = a.toString().split('').reduce((acc, cur) => acc + parseInt(cur),\
    \ 0);\n    let sumB = b.toString().split('').reduce((acc, cur) => acc + parseInt(cur),\
    \ 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 2, 4]));", "  let result: number[] = [];\n  let sum: number[] = [];\n  for\
    \ (let i: number = 0; i < nums.length; i++) {\n    sum.push(nums[i].toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b)));\n  }\n  for (let i: number = 0; i < nums.length;\
    \ i++) {\n    let min: number = Math.min(...sum);\n    let index: number = sum.indexOf(min);\n\
    \    result.push(nums[index]);\n    sum.splice(index, 1);\n    nums.splice(index,\
    \ 1);\n  }\n  return result;\n}\nconsole.log(order_by_points([5, 3, 1, 4, 2]));",
  "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 7, 0])); // [1, 3, 5, 7, 0]\nconsole.log(order_by_points([5, 3, 1, 7,\
    \ 0, 2, 4, 6, 8])); // [1, 3, 5, 7, 0, 2, 4, 6, 8]\nconsole.log(order_by_points([5,\
    \ 3, 1, 7, 0, 2, 4, 6, 8, 9])); // [1, 3, 5, 7, 0, 2, 4, 6, 8, 9]\n", "  let newArr:\
    \ number[] = [];\n  let sum: number = 0;\n  let sumArr: number[] = [];\n  for\
    \ (let i: number = 0; i < nums.length; i++) {\n    sum = 0;\n    for (let j: number\
    \ = 0; j < nums[i].toString().length; j++) {\n      sum += parseInt(nums[i].toString()[j]);\n\
    \    }\n    sumArr.push(sum);\n  }\n  for (let i: number = 0; i < sumArr.length;\
    \ i++) {\n    for (let j: number = 0; j < sumArr.length; j++) {\n      if (sumArr[i]\
    \ < sumArr[j]) {\n        let temp: number = sumArr[i];\n        sumArr[i] = sumArr[j];\n\
    \        sumArr[j] = temp;\n        temp = nums[i];\n        nums[i] = nums[j];\n\
    \        nums[j] = temp;\n      }\n    }\n  }\n  return nums;\n}\n\nconsole.log(order_by_points([5,\
    \ 9, 13, 8, 12, 3, 1, 15]));", "  return nums.sort((a, b) => {\n    let sumA =\
    \ a.toString().split('').reduce((acc, cur) => acc + Number(cur), 0);\n    let\
    \ sumB = b.toString().split('').reduce((acc, cur) => acc + Number(cur), 0);\n\
    \    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5, 3, 1, 2,\
    \ 4]));", "  let result: number[] = [];\n  let sorted: number[] = [];\n  let sum:\
    \ number = 0;\n  for (let i: number = 0; i < nums.length; i++) {\n    sum = 0;\n\
    \    for (let j: number = 0; j < nums[i].toString().length; j++) {\n      sum\
    \ += +nums[i].toString()[j];\n    }\n    result.push(sum);\n  }\n  for (let i:\
    \ number = 0; i < result.length; i++) {\n    for (let j: number = 0; j < result.length;\
    \ j++) {\n      if (result[i] < result[j]) {\n        let temp: number = result[i];\n\
    \        result[i] = result[j];\n        result[j] = temp;\n        let temp2:\
    \ number = nums[i];\n        nums[i] = nums[j];\n        nums[j] = temp2;\n  \
    \    }\n    }\n  }\n  return nums;\n}\n\nconsole.log(order_by_points([13, 20,\
    \ 18, 14, 17]));", "  let result: number[] = [];\n  let sorted: number[] = [];\n\
    \  let sum: number = 0;\n  let index: number = 0;\n  for (let i: number = 0; i\
    \ < nums.length; i++) {\n    sum = 0;\n    for (let j: number = 0; j < nums[i].toString().length;\
    \ j++) {\n      sum += parseInt(nums[i].toString().charAt(j));\n    }\n    sorted.push(sum);\n\
    \  }\n  sorted.sort(function (a, b) {\n    return a - b;\n  });\n  for (let i:\
    \ number = 0; i < sorted.length; i++) {\n    for (let j: number = 0; j < nums.length;\
    \ j++) {\n      sum = 0;\n      for (let k: number = 0; k < nums[j].toString().length;\
    \ k++) {\n        sum += parseInt(nums[j].toString().charAt(k));\n      }\n  \
    \    if (sorted[i] === sum) {\n        result.push(nums[j]);\n        nums.splice(j,\
    \ 1);\n        break;\n      }\n    }\n  }\n  return result;\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(order_by_points([2, 34, 5, 9, 8,\
    \ 90, 100]));\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(order_by_points([2, 34, 5, 9, 8, 90, 100]));\nconsole.log(order_by_points([2,\
    \ 34, 5, 9, 8, 90, 100]));\nconsole.log(order_by_points([2, 34, 5, 9, 8, 90, 100]));\n\
    console.log(order_by_points([2, 34, 5, 9, 8, 90, 100]));\nconsole.log(order_by_points([2,\
    \ 34, 5, 9,", "  let nums_with_points = nums.map((num, index) => {\n    let points\
    \ = num\n      .toString()\n      .split(\"\")\n      .map(Number)\n      .reduce((a,\
    \ b) => a + b);\n    return { num, points, index };\n  });\n  return nums_with_points\n\
    \    .sort((a, b) => {\n      if (a.points === b.points) {\n        return a.index\
    \ - b.index;\n      } else {\n        return a.points - b.points;\n      }\n \
    \   })\n    .map(a => a.num);\n}\n\nconsole.log(order_by_points([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]));", "    return nums.sort((a, b) => {\n        let aSum = sumDigits(a);\n\
    \        let bSum = sumDigits(b);\n        if (aSum === bSum) {\n            return\
    \ a - b;\n        }\n        return aSum - bSum;\n    });\n}\n", "  let sum =\
    \ 0;\n  let sumArray = [];\n  let result = [];\n  for (let i = 0; i < nums.length;\
    \ i++) {\n    let num = nums[i];\n    while (num > 0) {\n      sum += num % 10;\n\
    \      num = Math.floor(num / 10);\n    }\n    sumArray.push(sum);\n    sum =\
    \ 0;\n  }\n  let sortedSumArray = sumArray.slice().sort();\n  for (let i = 0;\
    \ i < sortedSumArray.length; i++) {\n    let index = sumArray.indexOf(sortedSumArray[i]);\n\
    \    result.push(nums[index]);\n    sumArray[index] = -1;\n  }\n  return result;\n\
    }\n\nconsole.log(order_by_points([51, 32, 43]));", "  return nums.sort((a, b)\
    \ => {\n    let sumA = a.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    let sumB = b.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 2, 4]));", "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 4, 1, 2]));", "  let result: number[] = [];\n  let sumOfDigits: number[]\
    \ = [];\n  for (let i: number = 0; i < nums.length; i++) {\n    let sum: number\
    \ = 0;\n    let num: number = nums[i];\n    while (num > 0) {\n      sum += num\
    \ % 10;\n      num = Math.floor(num / 10);\n    }\n    sumOfDigits.push(sum);\n\
    \  }\n  for (let i: number = 0; i < nums.length; i++) {\n    let minIndex: number\
    \ = sumOfDigits.indexOf(Math.min(...sumOfDigits));\n    result.push(nums[minIndex]);\n\
    \    sumOfDigits.splice(minIndex, 1);\n    nums.splice(minIndex, 1);\n  }\n  return\
    \ result;\n}\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));",
  "  return nums.sort((a, b) => {\n    let aSum = a\n      .toString()\n      .split(\"\
    \")\n      .map(Number)\n      .reduce((a, b) => a + b);\n    let bSum = b\n \
    \     .toString()\n      .split(\"\")\n      .map(Number)\n      .reduce((a, b)\
    \ => a + b);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let numsCopy = nums.slice();\n  let numsSorted\
    \ = numsCopy.sort((a, b) => {\n    let aSum = a.toString().split(\"\").reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n    let bSum = b.toString().split(\"\").reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n    if (aSum === bSum) {\n      return nums.indexOf(a)\
    \ - nums.indexOf(b);\n    } else {\n      return aSum - bSum;\n    }\n  });\n\
    \  return numsSorted;\n}\n\nconsole.log(order_by_points([2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]));", "  return nums.sort((a, b) => {\n    let aSum = a\n      .toString()\n\
    \      .split(\"\")\n      .map(Number)\n      .reduce((a, b) => a + b);\n   \
    \ let bSum = b\n      .toString()\n      .split(\"\")\n      .map(Number)\n  \
    \    .reduce((a, b) => a + b);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 4, 2]));\n", "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4])); // [1, 3, 2, 5, 4]\nconsole.log(order_by_points([5, 3, 1, 2,\
    \ 4, 7, 9, 8, 6])); // [1, 3, 2, 5, 4, 6, 7, 9, 8]\n", "  let numsWithPoints =\
    \ nums.map((num, index) => {\n    let points = 0;\n    let numString = num.toString();\n\
    \    for (let i = 0; i < numString.length; i++) {\n      points += parseInt(numString[i]);\n\
    \    }\n    return { num, points, index };\n  });\n  numsWithPoints.sort((a, b)\
    \ => {\n    if (a.points === b.points) {\n      return a.index - b.index;\n  \
    \  } else {\n      return a.points - b.points;\n    }\n  });\n  return numsWithPoints.map(num\
    \ => num.num);\n}\n\nconsole.log(order_by_points([3, 4, 1, 2, 5]));", "  let result:\
    \ number[] = [];\n  let temp: number[] = [];\n  let sum: number = 0;\n  for (let\
    \ i: number = 0; i < nums.length; i++) {\n    for (let j: number = 0; j < nums[i].toString().length;\
    \ j++) {\n      sum += parseInt(nums[i].toString()[j]);\n    }\n    temp.push(sum);\n\
    \    sum = 0;\n  }\n  for (let i: number = 0; i < temp.length; i++) {\n    for\
    \ (let j: number = 0; j < temp.length; j++) {\n      if (temp[i] < temp[j]) {\n\
    \        let tempNum: number = temp[i];\n        temp[i] = temp[j];\n        temp[j]\
    \ = tempNum;\n        let tempNum2: number = nums[i];\n        nums[i] = nums[j];\n\
    \        nums[j] = tempNum2;\n      }\n    }\n  }\n  return nums;\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(order_by_points([99, 100, 101, 102,\
    \ 103, 104, 105, 106, 107, 108]));\nconsole.log(order_by_points([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\
    \ 61, 62, 63, 64, 65", "  return nums.sort((a, b) => {\n    let sumA = 0;\n  \
    \  let sumB = 0;\n    a.toString().split(\"\").forEach(num => {\n      sumA +=\
    \ parseInt(num);\n    });\n    b.toString().split(\"\").forEach(num => {\n   \
    \   sumB += parseInt(num);\n    });\n    if (sumA === sumB) {\n      return nums.indexOf(a)\
    \ - nums.indexOf(b);\n    } else {\n      return sumA - sumB;\n    }\n  });\n\
    }\n\nconsole.log(order_by_points([3, 2, 1])); // [1, 2, 3]\nconsole.log(order_by_points([5,\
    \ 4, 3, 2, 1])); // [1, 2, 3, 4, 5]\nconsole.log(order_by_points([1, 2, 3, 4,\
    \ 5])); // [1, 2, 3, 4, 5]\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6]));\
    \ // [1, 2, 3, 4, 5, 6]\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7]));\
    \ // [1, 2, 3, 4, 5, 6, 7]\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7,\
    \ 8])); // [1, 2, 3, 4, 5, 6, 7, 8]\nconsole.log(order_by_points([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9])); // [1, 2, 3, 4, 5, 6, 7, 8, 9]\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])); // [1, 2, 3, 4, 5,", "  return nums.sort((a,\
    \ b) => {\n    let sumA = a.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    let sumB = b.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 4, 2]));", "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 4, 2]));", "    let numsSorted = nums.sort((a, b) => {\n        let aSum\
    \ = a.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n    \
    \    let bSum = b.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n\
    \        return aSum - bSum;\n    });\n    return numsSorted;\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(order_by_points([99, 100, 101, 102,\
    \ 103, 104, 105, 106, 107, 108, 109, 110]));\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\
    \ 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\
    \ 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,\
    \ 99, 100]));", "  let result: number[] = [];\n  let sum: number[] = [];\n  let\
    \ num: number[] = [];\n  let sum2: number[] = [];\n  let num2: number[] = [];\n\
    \  let sum3: number[] = [];\n  let num3: number[] = [];\n  let sum4: number[]\
    \ = [];\n  let num4: number[] = [];\n  let sum5: number[] = [];\n  let num5: number[]\
    \ = [];\n  let sum6: number[] = [];\n  let num6: number[] = [];\n  let sum7: number[]\
    \ = [];\n  let num7: number[] = [];\n  let sum8: number[] = [];\n  let num8: number[]\
    \ = [];\n  let sum9: number[] = [];\n  let num9: number[] = [];\n  let sum10:\
    \ number[] = [];\n  let num10: number[] = [];\n  let sum11: number[] = [];\n \
    \ let num11: number[] = [];\n  let sum12: number[] = [];\n  let num12: number[]\
    \ = [];\n  let sum13: number[] = [];\n  let num13: number[] = [];\n  let sum14:\
    \ number[] = [];\n  let num14: number[] = [];\n  let sum15: number[] = [];\n \
    \ let num15: number[] = [];\n  let sum16: number[] = [];\n  let num16: number[]\
    \ = [];\n  let sum17: number[] = [];\n  let num17: number[] = [];\n  let sum18:\
    \ number[] = [];\n  let num18: number[] = [];\n  let sum19: number[] = [];\n \
    \ let num19: number[] = [];\n  let sum20: number[] = [];\n  let num20: number[]\
    \ = [];\n  let sum21: number[] = [];\n  let num21: number[] = [];\n  let sum22:\
    \ number[] = [];\n  let num22: number[] = [];\n  let sum23: number[] = [];\n \
    \ let num23: number[] = [];\n  let sum24: number[] = [];\n  let num24: number[]\
    \ = [];\n  let sum25: number[] = [];\n  let num25: number[] = [];\n  let sum26",
  "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([15,\
    \ 3, 7, 1, 6, 9, 4, 2, 8, 5]));", "  return nums.sort((a, b) => {\n    let sumA\
    \ = a.toString().split('').reduce((acc, cur) => acc + parseInt(cur), 0);\n   \
    \ let sumB = b.toString().split('').reduce((acc, cur) => acc + parseInt(cur),\
    \ 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let aSum\
    \ = a.toString().split('').reduce((acc, cur) => acc + Number(cur), 0);\n    let\
    \ bSum = b.toString().split('').reduce((acc, cur) => acc + Number(cur), 0);\n\
    \    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5, 3, 1, 7,\
    \ 0]));", "  let sum = 0;\n  let sumArr = [];\n  let result = [];\n  for (let\
    \ i = 0; i < nums.length; i++) {\n    sum = 0;\n    let num = nums[i];\n    while\
    \ (num > 0) {\n      sum += num % 10;\n      num = Math.floor(num / 10);\n   \
    \ }\n    sumArr.push(sum);\n  }\n  let sortedSumArr = sumArr.slice().sort((a,\
    \ b) => a - b);\n  for (let i = 0; i < sortedSumArr.length; i++) {\n    let index\
    \ = sumArr.indexOf(sortedSumArr[i]);\n    result.push(nums[index]);\n    sumArr[index]\
    \ = -1;\n  }\n  return result;\n}\n\nconsole.log(order_by_points([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));\nconsole.log(order_by_points([99, 100, 101, 102, 103,\
    \ 104, 105, 106, 107, 108]));\nconsole.log(order_by_points([99, 100, 101, 102,\
    \ 103, 104, 105, 106, 107, 108]));\nconsole.log(order_by_points([99, 100, 101,\
    \ 102, 103, 104, 105, 106, 107, 108]));\nconsole.log(order_by_points([99, 100,\
    \ 101, 102, 103, 104, 105, 106, 107, 108]));\nconsole.log(order_by_points([99,\
    \ 100, 101, 102, 103, 104, 105, 106, 107, 108]));\nconsole.log(order_by_points([99,\
    \ 100, 101, 102, 103, 104, 105, 106, 107, 108]));\nconsole.log(order_by_points([99,\
    \ 100, 101, 102, 103, 104, 105, 106, 107, 108]));\nconsole.log(order_by_points([99,\
    \ 100, 101, 102, 103, 104, 105, 106, 107, 108]));\nconsole.log(order_by_points([99,\
    \ 100, 101, 102, 103, 104,", "  return nums.sort((a, b) => {\n    let aSum = a\n\
    \      .toString()\n      .split(\"\")\n      .map(Number)\n      .reduce((a,\
    \ b) => a + b);\n    let bSum = b\n      .toString()\n      .split(\"\")\n   \
    \   .map(Number)\n      .reduce((a, b) => a + b);\n    return aSum - bSum;\n \
    \ });\n}\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", " \
    \ return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    const\
    \ sumA = a.toString().split('').reduce((acc, curr) => acc + Number(curr), 0);\n\
    \    const sumB = b.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 4, 2]));", "  return nums.sort((a, b) => {\n    const aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n    const bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let sumA\
    \ = a.toString().split('').reduce((acc, cur) => acc + Number(cur), 0);\n    let\
    \ sumB = b.toString().split('').reduce((acc, cur) => acc + Number(cur), 0);\n\
    \    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    const sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + +curr, 0);\n    const sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + +curr, 0);\n    return sumA === sumB ? a - b : sumA - sumB;\n\
    \  });\n}\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));",
  "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 4, 2])); // [1, 3, 4, 5, 2]\nconsole.log(order_by_points([99, 77, 55,\
    \ 33, 11, 88, 22])); // [11, 22, 33, 55, 77, 88, 99]\nconsole.log(order_by_points([99,\
    \ 77, 55, 33, 11, 88, 22, 44])); // [11, 22, 33, 44, 55, 77, 88, 99]\nconsole.log(order_by_points([99,\
    \ 77, 55, 33, 11, 88, 22, 44, 66])); // [11, 22, 33, 44, 55, 66, 77, 88, 99]\n\
    console.log(order_by_points([99, 77, 55, 33, 11, 88, 22, 44, 66, 55])); // [11,\
    \ 22, 33, 44, 55, 55, 66, 77, 88, 99]\nconsole.log(order_by_points([99, 77, 55,\
    \ 33, 11, 88, 22, 44, 66, 55, 33])); // [11, 22, 33, 33, 44, 55, 55, 66, 77, 88,\
    \ 99]\nconsole.log(order_by_points([99, 77, 55, 33, 11, 88, 22, 44, 66, 55, 33,\
    \ 11])); // [11, 11, 22, 33, 33, 44, 55, 55, 66, 77, 88, 99]\nconsole.log(order_by_points([99,\
    \ 77, 55, 33, 11, 88, 22, 44, 66, 55, 33, 11, 22])); // [11, 11, 22, 22, 33, 33,\
    \ 44, 55, 55, 66, 77, 88, 99]\nconsole.log(order_by_", "  return nums.sort((a,\
    \ b) => {\n    let sumA = a.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    let sumB = b.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 4, 2]));", "  let result: number[] = [];\n  let sum: number = 0;\n  let sumArray:\
    \ number[] = [];\n  for (let i: number = 0; i < nums.length; i++) {\n    let num:\
    \ number = nums[i];\n    while (num > 0) {\n      sum += num % 10;\n      num\
    \ = Math.floor(num / 10);\n    }\n    sumArray.push(sum);\n    sum = 0;\n  }\n\
    \  for (let i: number = 0; i < sumArray.length; i++) {\n    let min: number =\
    \ Math.min(...sumArray);\n    let index: number = sumArray.indexOf(min);\n   \
    \ result.push(nums[index]);\n    sumArray.splice(index, 1);\n    nums.splice(index,\
    \ 1);\n  }\n  return result;\n}\n\nconsole.log(order_by_points([51, 32, 43]));",
  "  let result: number[] = [];\n  let sum: number = 0;\n  let sumArray: number[]\
    \ = [];\n  let indexArray: number[] = [];\n  for (let i: number = 0; i < nums.length;\
    \ i++) {\n    sum = 0;\n    for (let j: number = 0; j < nums[i].toString().length;\
    \ j++) {\n      sum += parseInt(nums[i].toString().charAt(j));\n    }\n    sumArray.push(sum);\n\
    \    indexArray.push(i);\n  }\n  for (let i: number = 0; i < nums.length; i++)\
    \ {\n    for (let j: number = i + 1; j < nums.length; j++) {\n      if (sumArray[i]\
    \ > sumArray[j]) {\n        let temp: number = sumArray[i];\n        sumArray[i]\
    \ = sumArray[j];\n        sumArray[j] = temp;\n        temp = indexArray[i];\n\
    \        indexArray[i] = indexArray[j];\n        indexArray[j] = temp;\n     \
    \ }\n    }\n  }\n  for (let i: number = 0; i < nums.length; i++) {\n    result.push(nums[indexArray[i]]);\n\
    \  }\n  return result;\n}\n\nconsole.log(order_by_points([152, 23, 7, 887, 243]));\n\
    console.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(order_by_points([9,\
    \ 99, 999]));\n", "  let result: number[] = [];\n  let sum: number = 0;\n  let\
    \ sumArray: number[] = [];\n  let indexArray: number[] = [];\n  for (let i: number\
    \ = 0; i < nums.length; i++) {\n    sum = 0;\n    for (let j: number = 0; j <\
    \ nums[i].toString().length; j++) {\n      sum += parseInt(nums[i].toString().charAt(j));\n\
    \    }\n    sumArray.push(sum);\n    indexArray.push(i);\n  }\n  for (let i: number\
    \ = 0; i < sumArray.length; i++) {\n    for (let j: number = 0; j < sumArray.length;\
    \ j++) {\n      if (sumArray[i] < sumArray[j]) {\n        let temp: number = sumArray[i];\n\
    \        sumArray[i] = sumArray[j];\n        sumArray[j] = temp;\n        let\
    \ temp2: number = indexArray[i];\n        indexArray[i] = indexArray[j];\n   \
    \     indexArray[j] = temp2;\n      }\n    }\n  }\n  for (let i: number = 0; i\
    \ < indexArray.length; i++) {\n    result.push(nums[indexArray[i]]);\n  }\n  return\
    \ result;\n}\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));",
  "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n    let bSum = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n    return aSum - bSum;\n  });\n}\n\n\
    console.log(order_by_points([3, 2, 1, 4, 5]));", "  return nums.sort((a, b) =>\
    \ {\n    const aSum = a.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n    const bSum = b.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 4, 2]));\nconsole.log(order_by_points([99, 77, 33, 66, 55]));\nconsole.log(order_by_points([123,\
    \ 456, 789, 12, 345, 67, 890, 4, 567, 89]));\n", "  return nums.sort((a, b) =>\
    \ {\n    const aSum = a.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n    const bSum = b.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 7, 0]));", "  return nums.sort((a, b) => {\n    let aSum = a\n      .toString()\n\
    \      .split(\"\")\n      .map(Number)\n      .reduce((a, b) => a + b);\n   \
    \ let bSum = b\n      .toString()\n      .split(\"\")\n      .map(Number)\n  \
    \    .reduce((a, b) => a + b);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "    let result: number[] = [];\n    let sumOfDigits:\
    \ number[] = [];\n    for (let i: number = 0; i < nums.length; i++) {\n      \
    \  sumOfDigits.push(nums[i].toString().split('').map(Number).reduce((a, b) =>\
    \ a + b));\n    }\n    for (let i: number = 0; i < nums.length; i++) {\n     \
    \   let min: number = Math.min(...sumOfDigits);\n        let index: number = sumOfDigits.indexOf(min);\n\
    \        result.push(nums[index]);\n        sumOfDigits.splice(index, 1);\n  \
    \      nums.splice(index, 1);\n    }\n    return result;\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 7, 0]));\nconsole.log(order_by_points([5, 3, 1, 7, 0, 5, 3, 1, 7, 0]));\n\
    console.log(order_by_points([5, 3, 1, 7, 0, 5, 3, 1, 7, 0, 5, 3, 1, 7, 0]));\n",
  "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((a,\
    \ b) => Number(a) + Number(b));\n    let bSum = b.toString().split('').reduce((a,\
    \ b) => Number(a) + Number(b));\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4])); // [1, 3, 2, 5, 4]\nconsole.log(order_by_points([5, 3, 1, 2,\
    \ 4, 6])); // [1, 3, 2, 5, 4, 6]\nconsole.log(order_by_points([5, 3, 1, 2, 4,\
    \ 6, 8])); // [1, 3, 2, 5, 4, 6, 8]\nconsole.log(order_by_points([5, 3, 1, 2,\
    \ 4, 6, 8, 9])); // [1, 3, 2, 5, 4, 6, 8, 9]\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4, 6, 8, 9, 10])); // [1, 3, 2, 5, 4, 6, 8, 9, 10]\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4, 6, 8, 9, 10, 11])); // [1, 3, 2, 5, 4, 6, 8, 9, 10, 11]\nconsole.log(order_by_points([5,\
    \ 3, 1, 2, 4, 6, 8, 9, 10, 11, 12])); // [1, 3, 2, 5, 4, 6, 8, 9, 10, 11, 12]\n\
    console.log(order_by_points([5, 3, 1, 2, 4, 6, 8, 9, 10, 11, 12, 13])); // [1,\
    \ 3, 2, 5, 4, 6, 8, 9, 10, 11, 12, 13]\nconsole.log(order_by_points([5, 3, 1,\
    \ 2, 4, 6, 8, 9, 10, 11, 12, 13,", "  return nums.sort((a, b) => {\n    let sumA\
    \ = a.toString().split('').reduce((acc, cur) => acc + Number(cur), 0);\n    let\
    \ sumB = b.toString().split('').reduce((acc, cur) => acc + Number(cur), 0);\n\
    \    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5, 3, 1, 4,\
    \ 2]));", "  let result: number[] = [];\n  let temp: number[] = [];\n  let sum:\
    \ number = 0;\n  for (let i: number = 0; i < nums.length; i++) {\n    sum = 0;\n\
    \    for (let j: number = 0; j < nums[i].toString().length; j++) {\n      sum\
    \ += parseInt(nums[i].toString().charAt(j));\n    }\n    temp.push(sum);\n  }\n\
    \  for (let i: number = 0; i < temp.length; i++) {\n    for (let j: number = 0;\
    \ j < temp.length; j++) {\n      if (temp[i] < temp[j]) {\n        let tempNum:\
    \ number = temp[i];\n        temp[i] = temp[j];\n        temp[j] = tempNum;\n\
    \        let tempNum2: number = nums[i];\n        nums[i] = nums[j];\n       \
    \ nums[j] = tempNum2;\n      }\n    }\n  }\n  return nums;\n}\n\nconsole.log(order_by_points([13,\
    \ 20, 18, 5, 7]));\n", "  let result: number[] = [];\n  let temp: number[] = [];\n\
    \  let sum: number = 0;\n  for (let i: number = 0; i < nums.length; i++) {\n \
    \   sum = 0;\n    for (let j: number = 0; j < nums[i].toString().length; j++)\
    \ {\n      sum += parseInt(nums[i].toString().charAt(j));\n    }\n    temp.push(sum);\n\
    \  }\n  for (let i: number = 0; i < temp.length; i++) {\n    for (let j: number\
    \ = 0; j < temp.length; j++) {\n      if (temp[i] < temp[j]) {\n        let temp2:\
    \ number = temp[i];\n        temp[i] = temp[j];\n        temp[j] = temp2;\n  \
    \      let temp3: number = nums[i];\n        nums[i] = nums[j];\n        nums[j]\
    \ = temp3;\n      }\n    }\n  }\n  return nums;\n}\n\nconsole.log(order_by_points([5,\
    \ 9, 13, 8, 12, 89]));", "    let result: number[] = [];\n    let temp: number[]\
    \ = [];\n    let temp2: number[] = [];\n    let temp3: number[] = [];\n    let\
    \ temp4: number[] = [];\n    let temp5: number[] = [];\n    let temp6: number[]\
    \ = [];\n    let temp7: number[] = [];\n    let temp8: number[] = [];\n    let\
    \ temp9: number[] = [];\n    let temp10: number[] = [];\n    let temp11: number[]\
    \ = [];\n    let temp12: number[] = [];\n    let temp13: number[] = [];\n    let\
    \ temp14: number[] = [];\n    let temp15: number[] = [];\n    let temp16: number[]\
    \ = [];\n    let temp17: number[] = [];\n    let temp18: number[] = [];\n    let\
    \ temp19: number[] = [];\n    let temp20: number[] = [];\n    let temp21: number[]\
    \ = [];\n    let temp22: number[] = [];\n    let temp23: number[] = [];\n    let\
    \ temp24: number[] = [];\n    let temp25: number[] = [];\n    let temp26: number[]\
    \ = [];\n    let temp27: number[] = [];\n    let temp28: number[] = [];\n    let\
    \ temp29: number[] = [];\n    let temp30: number[] = [];\n    let temp31: number[]\
    \ = [];\n    let temp32: number[] = [];\n    let temp33: number[] = [];\n    let\
    \ temp34: number[] = [];\n    let temp35: number[] = [];\n    let temp36: number[]\
    \ = [];\n    let temp37: number[] = [];\n    let temp38: number[] = [];\n    let\
    \ temp39: number[] = [];\n    let temp40: number[] = [];\n    let temp41: number[]\
    \ = [];\n    let temp42: number[] = [];\n    let temp43: number[] = [];\n    let\
    \ temp44: number[] = [];\n    let temp45: number[] = [];\n    let temp46: number[]\
    \ = [];\n    let temp47: number[] = [];\n    let temp48: number[] = [];\n    let\
    \ temp49: number[] = [];\n    let temp50: number[] = [];\n    let temp", "  return\
    \ nums.sort((a, b) => {\n    let sumA = 0;\n    let sumB = 0;\n    a.toString().split(\"\
    \").forEach(element => {\n      sumA += Number(element);\n    });\n    b.toString().split(\"\
    \").forEach(element => {\n      sumB += Number(element);\n    });\n    if (sumA\
    \ === sumB) {\n      return nums.indexOf(a) - nums.indexOf(b);\n    } else {\n\
    \      return sumA - sumB;\n    }\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "    let nums_sorted: number[] = nums.slice();\n\
    \    nums_sorted.sort(function (a, b) {\n        let a_sum: number = 0;\n    \
    \    let b_sum: number = 0;\n        for (let i: number = 0; i < a.toString().length;\
    \ i++) {\n            a_sum += parseInt(a.toString().charAt(i));\n        }\n\
    \        for (let i: number = 0; i < b.toString().length; i++) {\n           \
    \ b_sum += parseInt(b.toString().charAt(i));\n        }\n        if (a_sum ===\
    \ b_sum) {\n            return nums.indexOf(a) - nums.indexOf(b);\n        } else\
    \ {\n            return a_sum - b_sum;\n        }\n    });\n    return nums_sorted;\n\
    }\n\nconsole.log(order_by_points([152, 23, 7, 887, 243]));\nconsole.log(order_by_points([123,\
    \ 9, 223, 372, 6]));\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10]));\n", "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let aSum\
    \ = a\n      .toString()\n      .split(\"\")\n      .map(Number)\n      .reduce((a,\
    \ b) => a + b);\n    let bSum = b\n      .toString()\n      .split(\"\")\n   \
    \   .map(Number)\n      .reduce((a, b) => a + b);\n    return aSum - bSum;\n \
    \ });\n}\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", " \
    \   let result: number[] = [];\n    let numsCopy: number[] = nums.slice();\n \
    \   let sum: number = 0;\n    let index: number = 0;\n    let sumArray: number[]\
    \ = [];\n    for (let i: number = 0; i < nums.length; i++) {\n        let num:\
    \ number = nums[i];\n        while (num > 0) {\n            sum += num % 10;\n\
    \            num = Math.floor(num / 10);\n        }\n        sumArray.push(sum);\n\
    \        sum = 0;\n    }\n    for (let i: number = 0; i < nums.length; i++) {\n\
    \        let min: number = Math.min(...sumArray);\n        index = sumArray.indexOf(min);\n\
    \        result.push(numsCopy[index]);\n        sumArray.splice(index, 1);\n \
    \       numsCopy.splice(index, 1);\n    }\n    return result;\n}\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(order_by_points([2, 34, 5, 9, 8,\
    \ 90, 100]));\n", "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return nums.sort((a, b) => {\n    let aSum\
    \ = a.toString().split('').reduce((acc, cur) => acc + Number(cur), 0);\n    let\
    \ bSum = b.toString().split('').reduce((acc, cur) => acc + Number(cur), 0);\n\
    \    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([3, 2, 1, 4,\
    \ 5]));", "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([3,\
    \ 2, 1, 4, 5])); // [1, 2, 3, 4, 5]\nconsole.log(order_by_points([1, 2, 3, 4,\
    \ 5])); // [1, 2, 3, 4, 5]\nconsole.log(order_by_points([5, 4, 3, 2, 1])); //\
    \ [1, 2, 3, 4, 5]\nconsole.log(order_by_points([23, 342, 13, 43, 5])); // [5,\
    \ 13, 23, 43, 342]\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\
    \ // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nconsole.log(order_by_points([10, 9, 8, 7,\
    \ 6, 5, 4, 3, 2, 1])); // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nconsole.log(order_by_points([5,\
    \ 3, 1, 7, 0, 14, 2])); // [0, 1, 2, 3, 5, 7, 14]\nconsole.log(order_by_points([5,\
    \ 3, 1, 7, 0, 14, 2, 12, 10, 8, 6, 4])); // [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12,\
    \ 14]\nconsole.log(order_by_points([5, 3, 1, 7, 0, 14, 2, 12, 10, 8, 6, 4, 9,\
    \ 11, 13, 15])); // [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12", "  let numsWithPoints\
    \ = nums.map((num, index) => {\n    let points = 0;\n    let numString = num.toString();\n\
    \    for (let i = 0; i < numString.length; i++) {\n      points += parseInt(numString[i]);\n\
    \    }\n    return {\n      num: num,\n      points: points,\n      index: index\n\
    \    };\n  });\n  numsWithPoints.sort((a, b) => {\n    if (a.points === b.points)\
    \ {\n      return a.index - b.index;\n    } else {\n      return a.points - b.points;\n\
    \    }\n  });\n  return numsWithPoints.map(numWithPoints => numWithPoints.num);\n\
    }\n\nconsole.log(order_by_points([13, 20, 18, 5, 7]));", "  let numsSorted = nums.sort((a,\
    \ b) => {\n    let aSum = a.toString().split(\"\").reduce((a, b) => a + parseInt(b),\
    \ 0);\n    let bSum = b.toString().split(\"\").reduce((a, b) => a + parseInt(b),\
    \ 0);\n    return aSum - bSum;\n  });\n  return numsSorted;\n}\n", "  let result:\
    \ number[] = [];\n  let sum: number[] = [];\n  let temp: number[] = [];\n  let\
    \ temp2: number[] = [];\n  let temp3: number[] = [];\n  let temp4: number[] =\
    \ [];\n  for (let i: number = 0; i < nums.length; i++) {\n    temp = nums[i].toString().split(\"\
    \");\n    for (let j: number = 0; j < temp.length; j++) {\n      temp2.push(parseInt(temp[j]));\n\
    \    }\n    sum.push(temp2.reduce((a, b) => a + b, 0));\n    temp2 = [];\n  }\n\
    \  for (let i: number = 0; i < sum.length; i++) {\n    temp3.push(sum[i]);\n \
    \ }\n  temp3.sort(function (a, b) {\n    return a - b;\n  });\n  for (let i: number\
    \ = 0; i < temp3.length; i++) {\n    for (let j: number = 0; j < sum.length; j++)\
    \ {\n      if (temp3[i] === sum[j]) {\n        temp4.push(j);\n      }\n    }\n\
    \  }\n  for (let i: number = 0; i < temp4.length; i++) {\n    result.push(nums[temp4[i]]);\n\
    \  }\n  return result;\n}\n", "    let result: number[] = [];\n    let sumOfDigits:\
    \ number[] = [];\n    for (let i: number = 0; i < nums.length; i++) {\n      \
    \  sumOfDigits.push(sumOfDigitsOfNumber(nums[i]));\n    }\n    for (let i: number\
    \ = 0; i < nums.length; i++) {\n        let min: number = Math.min(...sumOfDigits);\n\
    \        let index: number = sumOfDigits.indexOf(min);\n        result.push(nums[index]);\n\
    \        sumOfDigits.splice(index, 1);\n        nums.splice(index, 1);\n    }\n\
    \    return result;\n}\n", "  return nums.sort((a, b) => {\n    const sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n    const sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([3,\
    \ 6, 8, 1, 5, 7, 2, 4]));", "    let sumOfDigits: number[] = [];\n    let result:\
    \ number[] = [];\n    for (let i: number = 0; i < nums.length; i++) {\n      \
    \  let sum: number = 0;\n        let num: number = nums[i];\n        while (num\
    \ > 0) {\n            sum += num % 10;\n            num = Math.floor(num / 10);\n\
    \        }\n        sumOfDigits.push(sum);\n    }\n    for (let i: number = 0;\
    \ i < nums.length; i++) {\n        let min: number = Math.min(...sumOfDigits);\n\
    \        let index: number = sumOfDigits.indexOf(min);\n        result.push(nums[index]);\n\
    \        sumOfDigits.splice(index, 1);\n        nums.splice(index, 1);\n    }\n\
    \    return result;\n}\n\nconsole.log(order_by_points([151, 732, 312, 72, 9]));",
  "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let result: number[] = [];\n  let sum: number[]\
    \ = [];\n  for (let i: number = 0; i < nums.length; i++) {\n    let temp: number\
    \ = 0;\n    for (let j: number = 0; j < nums[i].toString().length; j++) {\n  \
    \    temp += parseInt(nums[i].toString()[j]);\n    }\n    sum.push(temp);\n  }\n\
    \  for (let i: number = 0; i < sum.length; i++) {\n    let min: number = Math.min(...sum);\n\
    \    let index: number = sum.indexOf(min);\n    result.push(nums[index]);\n  \
    \  sum.splice(index, 1);\n    nums.splice(index, 1);\n  }\n  return result;\n\
    }\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let sum:\
    \ number = 0;\n  let sumArr: number[] = [];\n  let indexArr: number[] = [];\n\
    \  let result: number[] = [];\n  for (let i: number = 0; i < nums.length; i++)\
    \ {\n    for (let j: number = 0; j < nums[i].toString().length; j++) {\n     \
    \ sum += parseInt(nums[i].toString()[j]);\n    }\n    sumArr.push(sum);\n    indexArr.push(i);\n\
    \    sum = 0;\n  }\n  for (let i: number = 0; i < sumArr.length; i++) {\n    for\
    \ (let j: number = 0; j < sumArr.length; j++) {\n      if (sumArr[i] < sumArr[j])\
    \ {\n        let temp: number = sumArr[i];\n        sumArr[i] = sumArr[j];\n \
    \       sumArr[j] = temp;\n        let temp2: number = indexArr[i];\n        indexArr[i]\
    \ = indexArr[j];\n        indexArr[j] = temp2;\n      }\n    }\n  }\n  for (let\
    \ i: number = 0; i < indexArr.length; i++) {\n    result.push(nums[indexArr[i]]);\n\
    \  }\n  return result;\n}\nconsole.log(order_by_points([51, 32, 43]));\nconsole.log(order_by_points([51,\
    \ 32, 43, 12, 6]));\nconsole.log(order_by_points([51, 32, 43, 12, 6, 3]));\nconsole.log(order_by_points([51,\
    \ 32, 43, 12, 6, 3, 1]));\nconsole.log(order_by_points([51, 32, 43, 12, 6, 3,\
    \ 1, 2]));\nconsole.log(order_by_points([51, 32, 43, 12, 6, 3, 1, 2, 5]));\nconsole.log(order_by_points([51,\
    \ 32, 43, 12, 6, 3, 1, 2, 5", "  let result: number[] = [];\n  let sum: number\
    \ = 0;\n  let sumArr: number[] = [];\n  for (let i: number = 0; i < nums.length;\
    \ i++) {\n    sum = 0;\n    for (let j: number = 0; j < nums[i].toString().length;\
    \ j++) {\n      sum += parseInt(nums[i].toString()[j]);\n    }\n    sumArr.push(sum);\n\
    \  }\n  for (let i: number = 0; i < sumArr.length; i++) {\n    let min: number\
    \ = Math.min(...sumArr);\n    let index: number = sumArr.indexOf(min);\n    result.push(nums[index]);\n\
    \    sumArr.splice(index, 1);\n    nums.splice(index, 1);\n  }\n  return result;\n\
    }\n\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let result\
    \ = [];\n  let sum = 0;\n  let sumArray = [];\n  for (let i = 0; i < nums.length;\
    \ i++) {\n    sum = 0;\n    for (let j = 0; j < nums[i].toString().length; j++)\
    \ {\n      sum += parseInt(nums[i].toString()[j]);\n    }\n    sumArray.push(sum);\n\
    \  }\n  for (let i = 0; i < sumArray.length; i++) {\n    let min = Math.min(...sumArray);\n\
    \    let index = sumArray.indexOf(min);\n    result.push(nums[index]);\n    sumArray.splice(index,\
    \ 1);\n    nums.splice(index, 1);\n  }\n  return result;\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let result: number[] = [];\n  let sum: number\
    \ = 0;\n  let sumOfDigits: number[] = [];\n  let sumOfDigitsSorted: number[] =\
    \ [];\n  let sumOfDigitsSortedIndex: number[] = [];\n  let sumOfDigitsSortedIndexSorted:\
    \ number[] = [];\n  let numsSorted: number[] = [];\n  for (let i: number = 0;\
    \ i < nums.length; i++) {\n    sum = 0;\n    for (let j: number = 0; j < nums[i].toString().length;\
    \ j++) {\n      sum += parseInt(nums[i].toString().charAt(j));\n    }\n    sumOfDigits.push(sum);\n\
    \  }\n  sumOfDigitsSorted = sumOfDigits.slice().sort((a, b) => a - b);\n  for\
    \ (let i: number = 0; i < sumOfDigitsSorted.length; i++) {\n    sumOfDigitsSortedIndex.push(sumOfDigits.indexOf(sumOfDigitsSorted[i]));\n\
    \  }\n  sumOfDigitsSortedIndexSorted = sumOfDigitsSortedIndex.slice().sort((a,\
    \ b) => a - b);\n  for (let i: number = 0; i < sumOfDigitsSortedIndexSorted.length;\
    \ i++) {\n    numsSorted.push(nums[sumOfDigitsSortedIndexSorted[i]]);\n  }\n \
    \ return numsSorted;\n}\n\nconsole.log(order_by_points([5, 9, 13, 8, 12, 89]));",
  "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return aSum - bSum;\n  });\n}\n\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "    let sumOfDigits = nums.map(x => x.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b)));\n    let sorted = nums.sort((a, b) => {\n\
    \        if (sumOfDigits[nums.indexOf(a)] > sumOfDigits[nums.indexOf(b)]) {\n\
    \            return 1;\n        } else if (sumOfDigits[nums.indexOf(a)] < sumOfDigits[nums.indexOf(b)])\
    \ {\n            return -1;\n        } else {\n            return 0;\n       \
    \ }\n    });\n    return sorted;\n}\n\nconsole.log(order_by_points([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));\nconsole.log(order_by_points([5, 3, 1, 7, 0]));\nconsole.log(order_by_points([5,\
    \ 3, 4, 1, 2]));\nconsole.log(order_by_points([5, 3, 4, 1, 2, 9, 8, 7, 6]));\n\
    console.log(order_by_points([5, 3, 4, 1, 2, 9, 8, 7, 6, 0]));\nconsole.log(order_by_points([5,\
    \ 3, 4, 1, 2, 9, 8, 7, 6, 0, 10]));\nconsole.log(order_by_points([5, 3, 4, 1,\
    \ 2, 9, 8, 7, 6, 0, 10, 11]));\nconsole.log(order_by_points([5, 3, 4, 1, 2, 9,\
    \ 8, 7, 6, 0, 10, 11, 12]));\nconsole.log(order_by_points([5, 3, 4, 1, 2, 9, 8,\
    \ 7, 6, 0, 10, 11, 12, 13]));\nconsole.log(order_by_points([5, 3, 4, 1, 2, 9,\
    \ 8, 7, 6, 0, 10, 11, 12, 13, 14]));\nconsole.log(order_by_points([5, 3, 4, 1,\
    \ 2,", "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([3,\
    \ 2, 1])); // [1, 2, 3]\nconsole.log(order_by_points([1, 2, 3])); // [1, 2, 3]\n\
    console.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]\nconsole.log(order_by_points([10, 9, 8, 7, 6, 5, 4, 3, 2,\
    \ 1])); // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nconsole.log(order_by_points([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])); // [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\nconsole.log(order_by_points([20,\
    \ 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1])); // [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31,", "  return nums.sort((a, b) => {\n    return\
    \ sumDigits(a) - sumDigits(b);\n  });\n}\n", "  return nums.sort((a, b) => {\n\
    \    let sumA = a.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    let sumB = b.toString().split('').reduce((acc, cur) => acc + Number(cur),\
    \ 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([150,\
    \ 7, 8, 9, 12, 56, 78, 90]));", "  return nums.sort((a, b) => {\n    let sumA\
    \ = a.toString().split('').reduce((acc, cur) => acc + parseInt(cur), 0);\n   \
    \ let sumB = b.toString().split('').reduce((acc, cur) => acc + parseInt(cur),\
    \ 0);\n    return sumA - sumB;\n  });\n}\n\nconsole.log(order_by_points([5, 3,\
    \ 1, 4, 2]));", "    let points: number[] = [];\n    let result: number[] = [];\n\
    \    for (let i: number = 0; i < nums.length; i++) {\n        let sum: number\
    \ = 0;\n        for (let j: number = 0; j < nums[i].toString().length; j++) {\n\
    \            sum += parseInt(nums[i].toString().charAt(j));\n        }\n     \
    \   points.push(sum);\n    }\n    for (let i: number = 0; i < points.length; i++)\
    \ {\n        let min: number = points[i];\n        let minIndex: number = i;\n\
    \        for (let j: number = i + 1; j < points.length; j++) {\n            if\
    \ (points[j] < min) {\n                min = points[j];\n                minIndex\
    \ = j;\n            }\n        }\n        if (minIndex !== i) {\n            let\
    \ temp: number = points[i];\n            points[i] = points[minIndex];\n     \
    \       points[minIndex] = temp;\n            temp = nums[i];\n            nums[i]\
    \ = nums[minIndex];\n            nums[minIndex] = temp;\n        }\n    }\n  \
    \  return nums;\n}\nconsole.log(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(order_by_points([10, 9, 8, 7, 6, 5, 4, 3, 2, 1]));\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(order_by_points([20,\
    \ 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]));\nconsole.log(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

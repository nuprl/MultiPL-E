name: HumanEval_22_filter_integers
language: ts
prompt: "//Filter given list of any python values only for integers\nfunction filter_integers(values:\
  \ any[]): number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
  \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
  \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
completions: ["    return values.filter(v => typeof v === 'number' && Number.isInteger(v));\n\
    }\n", "    return values.filter(value => typeof value === 'number');\n}\n", " \
    \   return values.filter(value => typeof value === 'number');\n}\n", "    var\
    \ result: number[] = [];\n    for (var i = 0; i < values.length; i++) {\n    \
    \    if (typeof values[i] === \"number\") {\n            result.push(values[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    return values.filter(value =>\
    \ typeof value === 'number' && Number.isInteger(value));\n}\n", "    return values.filter(v\
    \ => typeof v === 'number' && Number.isInteger(v));\n}\n", "    return values.filter(function(value:\
    \ any) {\n        return typeof value === 'number';\n    });\n}\n", "    return\
    \ values.filter(value => typeof value === 'number' && Number.isInteger(value));\n\
    }\n", "    return values.filter(function(value) {\n        return typeof value\
    \ === 'number';\n    });\n}\n", "    return values.filter(function(value) {\n\
    \        return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(function(value:\
    \ any) {\n        return typeof value === 'number';\n    });\n}\n", "    return\
    \ values.filter(function(value) {\n        return typeof value === 'number';\n\
    \    });\n}\n", "    return values.filter(value => typeof value === 'number' &&\
    \ Number.isInteger(value));\n}\n", "    return values.filter(value => typeof value\
    \ === 'number');\n}\n", "    return values.filter(value => typeof value === 'number');\n\
    }\n", "    return values.filter(function(value) {\n        return typeof value\
    \ === 'number';\n    });\n}\n", "    return values.filter(value => typeof value\
    \ === 'number' && Number.isInteger(value));\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number' && Number.isInteger(value));\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    var integers:\
    \ number[] = [];\n    for (var i = 0; i < values.length; i++) {\n        if (typeof\
    \ values[i] === 'number') {\n            integers.push(values[i]);\n        }\n\
    \    }\n    return integers;\n}\n", "    return values.filter(value => typeof\
    \ value === 'number' && Number.isInteger(value));\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(function(value:\
    \ any) {\n        return typeof value === 'number';\n    });\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value:\
    \ any) {\n        return typeof value === 'number';\n    });\n}\n", "    return\
    \ values.filter(function(value) {\n        return typeof value === 'number';\n\
    \    });\n}\n", "    return values.filter(function(value) {\n        return typeof\
    \ value === 'number';\n    });\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(v\
    \ => typeof v === 'number' && Number.isInteger(v));\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(value => typeof value\
    \ === 'number');\n}\n", "    return values.filter(value => typeof value === 'number');\n\
    }\n", "    return values.filter(value => typeof value === 'number');\n}\n", " \
    \   return values.filter(function(value) {\n        return typeof value === 'number';\n\
    \    });\n}\n", "    return values.filter(function(value) {\n        return typeof\
    \ value === 'number';\n    });\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(function(value) {\n  \
    \      return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value:\
    \ any) {\n        return typeof value === 'number';\n    });\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(function(value) {\n  \
    \      return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(v\
    \ => typeof v === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(value => typeof value\
    \ === 'number');\n}\n", "    return values.filter(value => typeof value === 'number');\n\
    }\n", "    return values.filter(value => typeof value === 'number');\n}\n", " \
    \   return values.filter(function(value) {\n        return typeof value === 'number';\n\
    \    });\n}\n", "    return values.filter(value => typeof value === 'number');\n\
    }\n", "    return values.filter(function(value) {\n        return typeof value\
    \ === 'number';\n    });\n}\n", "    return values.filter(value => typeof value\
    \ === 'number');\n}\n", "    return values.filter(function(value) {\n        return\
    \ typeof value === 'number';\n    });\n}\n", "    return values.filter(value =>\
    \ typeof value === 'number' && Number.isInteger(value));\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(value => typeof value\
    \ === 'number' && Number.isInteger(value));\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(value => typeof value\
    \ === 'number');\n}\n", "    return values.filter(value => typeof value === 'number'\
    \ && Number.isInteger(value));\n}\n", "    return values.filter(function(value:\
    \ any) {\n        return typeof value === 'number';\n    });\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    var filtered_values: number[] = [];\n\
    \    for (var i = 0; i < values.length; i++) {\n        if (typeof values[i] ===\
    \ 'number') {\n            filtered_values.push(values[i]);\n        }\n    }\n\
    \    return filtered_values;\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number' && Number.isInteger(value));\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number' && Number.isInteger(value));\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number' && Number.isInteger(value));\n}\n", "    return\
    \ values.filter(value => typeof value === 'number' && Number.isInteger(value));\n\
    }\n", "    return values.filter(function(value) {\n        return typeof value\
    \ === 'number';\n    });\n}\n", "    return values.filter(value => typeof value\
    \ === 'number');\n}\n", "    return values.filter(function(value) {\n        return\
    \ typeof value === 'number';\n    });\n}\n", "    return values.filter(value =>\
    \ typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(value => typeof value\
    \ === 'number');\n}\n", "    return values.filter(value => typeof value === 'number');\n\
    }\n", "    return values.filter(function(value) {\n        return typeof value\
    \ === 'number';\n    });\n}\n", "    return values.filter(value => typeof value\
    \ === 'number' && Number.isInteger(value));\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number' && Number.isInteger(value));\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value:\
    \ any) {\n        return typeof value === 'number';\n    });\n}\n", "    return\
    \ values.filter(value => typeof value === 'number' && Number.isInteger(value));\n\
    }\n", "    return values.filter(value => typeof value === 'number');\n}\n", " \
    \   return values.filter(value => typeof value === 'number');\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "  return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(function(value) {\n  \
    \      return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value:\
    \ any) {\n        return typeof value === 'number';\n    });\n}\n", "    return\
    \ values.filter(value => typeof value === 'number' && Number.isInteger(value));\n\
    }\n", "    return values.filter(value => typeof value === 'number' && Number.isInteger(value));\n\
    }\n", "    return values.filter(value => typeof value === 'number' && Number.isInteger(value));\n\
    }\n", "    return values.filter(value => typeof value === 'number');\n}\n", " \
    \   return values.filter(function(value) {\n        return typeof value === 'number';\n\
    \    });\n}\n", "    var result: number[] = [];\n    for (var i = 0; i < values.length;\
    \ i++) {\n        if (typeof values[i] === \"number\") {\n            result.push(values[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    let integers:\
    \ number[] = [];\n    for (let i = 0; i < values.length; i++) {\n        if (typeof\
    \ values[i] === 'number') {\n            integers.push(values[i]);\n        }\n\
    \    }\n    return integers;\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    var result: number[] = [];\n    for (var i\
    \ = 0; i < values.length; i++) {\n        if (typeof values[i] === \"number\"\
    ) {\n            result.push(values[i]);\n        }\n    }\n    return result;\n\
    }\n", "    return values.filter(function(value) {\n        return typeof value\
    \ === 'number';\n    });\n}\n", "    return values.filter(value => typeof value\
    \ === 'number');\n}\n", "    return values.filter(value => typeof value === 'number'\
    \ && Number.isInteger(value));\n}\n", "    var result: number[] = [];\n    for\
    \ (var i = 0; i < values.length; i++) {\n        if (typeof values[i] === \"number\"\
    ) {\n            result.push(values[i]);\n        }\n    }\n    return result;\n\
    }\n", "    return values.filter(value => typeof value === 'number');\n}\n", " \
    \   return values.filter(function(value) {\n        return typeof value === 'number';\n\
    \    });\n}\n", "    return values.filter(value => typeof value === 'number');\n\
    }\n", "    return values.filter(value => typeof value === 'number');\n}\n", " \
    \   return values.filter(function(value) {\n        return typeof value === 'number';\n\
    \    });\n}\n", "    return values.filter(value => typeof value === 'number' &&\
    \ Number.isInteger(value));\n}\n", "    return values.filter(value => typeof value\
    \ === 'number' && Number.isInteger(value));\n}\n", "    var result: number[] =\
    \ [];\n    for (var i = 0; i < values.length; i++) {\n        if (typeof values[i]\
    \ === \"number\") {\n            result.push(values[i]);\n        }\n    }\n \
    \   return result;\n}\n", "    return values.filter(function(value) {\n      \
    \  return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number' && Number.isInteger(value));\n}\n", "    return values.filter(function(value:\
    \ any): boolean {\n        return typeof value === 'number';\n    });\n}\n", " \
    \   return values.filter(value => typeof value === 'number');\n}\n", "    return\
    \ values.filter(function(value) {\n        return typeof value === 'number';\n\
    \    });\n}\n", "    return values.filter(value => typeof value === 'number');\n\
    }\n", "    return values.filter(value => typeof value === 'number' && Number.isInteger(value));\n\
    }\n", "    return values.filter(value => typeof value === 'number');\n}\n", " \
    \   return values.filter(value => typeof value === 'number');\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "    return values.filter(value\
    \ => typeof value === 'number' && Number.isInteger(value));\n}\n", "    return\
    \ values.filter(function(value) {\n        return typeof value === 'number';\n\
    \    });\n}\n", "    return values.filter(function(value: any) {\n        return\
    \ typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number' && Number.isInteger(value));\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(is_integer);\n\
    }\n", "    return values.filter(function(value) {\n        return typeof value\
    \ === 'number';\n    });\n}\n", "    return values.filter(value => typeof value\
    \ === 'number');\n}\n", "    return values.filter(value => typeof value === 'number');\n\
    }\n", "    return values.filter(function(value) {\n        return typeof value\
    \ === 'number';\n    });\n}\n", "    return values.filter(value => typeof value\
    \ === 'number' && Number.isInteger(value));\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value:\
    \ any) {\n        return typeof value === 'number';\n    });\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "    return values.filter(function(value:\
    \ any) {\n        return typeof value === 'number';\n    });\n}\n", "    return\
    \ values.filter(value => typeof value === 'number' && Number.isInteger(value));\n\
    }\n", "    return values.filter(value => typeof value === 'number');\n}\n", " \
    \   return values.filter(value => typeof value === 'number');\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "    return values.filter(value\
    \ => typeof value === 'number' && Number.isInteger(value));\n}\n", "    var result:\
    \ number[] = [];\n    for (var i = 0; i < values.length; i++) {\n        if (typeof\
    \ values[i] === \"number\") {\n            result.push(values[i]);\n        }\n\
    \    }\n    return result;\n}\n", "    return values.filter(value => typeof value\
    \ === 'number');\n}\n", "    return values.filter(value => typeof value === 'number');\n\
    }\n", "    return values.filter(function(value) {\n        return typeof value\
    \ === 'number';\n    });\n}\n", "    return values.filter(function(value) {\n\
    \        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(function(value) {\n  \
    \      return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value:\
    \ any) {\n        return typeof value === 'number';\n    });\n}\n", "    return\
    \ values.filter(value => typeof value === 'number');\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(function(value) {\n  \
    \      return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(function(value: any) {\n\
    \        return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(function(value)\
    \ {\n        return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(value => typeof\
    \ value === 'number');\n}\n", "    return values.filter(function(value) {\n  \
    \      return typeof value === 'number';\n    });\n}\n", "    return values.filter(value\
    \ => typeof value === 'number');\n}\n", "    return values.filter(function(value:\
    \ any) {\n        return typeof value === 'number';\n    });\n}\n", "    return\
    \ values.filter(value => typeof value === 'number' && Number.isInteger(value));\n\
    }\n", "    return values.filter(function(value) {\n        return typeof value\
    \ === 'number';\n    });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

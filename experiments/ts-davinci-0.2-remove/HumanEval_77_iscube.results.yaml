language: ts
name: HumanEval_77_iscube
results:
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube: number = 0;\n    for (let i: number = 0; i <= a; i++) {\n        cube\
    \ = i * i * i;\n        if (cube === a) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpcom32l6i.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpcom32l6i.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i ** 3 < a) {\n        i++;\n    }\n    return i\
    \ ** 3 === a;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(125));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-27));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgsna8kh_.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgsna8kh_.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    false

    false

    false

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(3));\n\
    console.log(iscube(125));\nconsole.log(iscube(8));\nconsole.log(iscube(9));\n\
    console.log(iscube(10));\nconsole.log(iscube(11));\nconsole.log(iscube(12));\n\
    console.log(iscube(13));\nconsole.log(iscube(14));\nconsole.log(iscube(15));\n\
    console.log(iscube(16));\nconsole.log(iscube(17));\nconsole.log(iscube(18));\n\
    console.log(iscube(19));\nconsole.log(iscube(20));\nconsole.log(iscube(21));\n\
    console.log(iscube(22));\nconsole.log(iscube(23));\nconsole.log(iscube(24));\n\
    console.log(iscube(25));\nconsole.log(iscube(26));\nconsole.log(iscube(27));\n\
    console.log(iscube(28));\nconsole.log(iscube(29));\nconsole.log(iscube(30));\n\
    console.log(iscube(31));\nconsole.log(iscube(32));\nconsole.log(iscube(33));\n\
    console.log(iscube(34));\nconsole.log(iscube(35));\nconsole.log(iscube(36));\n\
    console.log(iscube(37));\nconsole.log(iscube(38));\nconsole.log(iscube(39));\n\
    console.log(iscube(40));\nconsole.log(iscube(41));\nconsole.log(iscube(42));\n\
    console.log(iscube(43));\nconsole.log(iscube(44));\nconsole.log(iscube(45));\n\
    console.log(iscube(46));\nconsole.log(iscube(47));\nconsole.log(iscube(48));\n\
    console.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpide92lcl.js:66:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpide92lcl.js:73:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube: number = 0;\n    let i: number = 0;\n    while (cube < a) {\n        i++;\n\
    \        cube = i * i * i;\n    }\n    return cube === a;\n}\n\nconsole.log(iscube(27));\n\
    console.log(iscube(256));\nconsole.log(iscube(125));\nconsole.log(iscube(1));\n\
    console.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-8));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-64));\nconsole.log(iscube(-125));\n\
    console.log(iscube(-216));\nconsole.log(iscube(-1000));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8kkwv9ox.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8kkwv9ox.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659979414
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(3));\nconsole.log(iscube(125));\nconsole.log(iscube(1));\n\
    console.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-8));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-64));\nconsole.log(iscube(-125));\n\
    console.log(iscube(-216));\nconsole.log(iscube(-1000));\nconsole.log(iscube(1.5));\n\
    console.log(iscube(2.5));\nconsole.log(iscube(3.5));\nconsole.log(iscube(4.5));\n\
    console.log(iscube(5.5));\nconsole.log(iscube(6.5));\nconsole.log(iscube(7.5));\n\
    console.log(iscube(8.5));\nconsole.log(iscube(9.5));\nconsole.log(iscube(10.5));\n\
    console.log(iscube(11.5));\nconsole.log(iscube(12.5));\nconsole.log(iscube(13.5));\n\
    console.log(iscube(14.5));\nconsole.log(iscube(15.5));\nconsole.log(iscube(16.5));\n\
    console.log(iscube(17.5));\nconsole.log(iscube(18.5));\nconsole.log(iscube(19.5));\n\
    console.log(iscube(20.5));\nconsole.log(iscube(21.5));\nconsole.log(iscube(22.5));\n\
    console.log(iscube(23.5));\nconsole.log(iscube(24.5));\nconsole.log(iscube(25.5));\n\
    console.log(iscube(26.5));\nconsole.log(iscube(27.5));\nconsole.log(iscube(28.5));\n\
    console.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy7rj1vo2.ts(54,9): error TS1003: Identifier expected.

    '
  timestamp: 1659979414
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\
    console.log(iscube(1));\nconsole.log(iscube(8));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(4913));\n\
    console.log(iscube(5832));\nconsole.log(iscube(6859));\nconsole.log(iscube(8000));\n\
    console.log(iscube(9261));\nconsole.log(iscube(10648));\nconsole.log(iscube(12167));\n\
    console.log(iscube(13824));\nconsole.log(iscube(15129));\nconsole.log(iscube(17576));\n\
    console.log(iscube(19683));\nconsole.log(iscube(21952));\nconsole.log(iscube(24389));\n\
    console.log(iscube(27000));\nconsole.log(iscube(29791));\nconsole.log(iscube(32768));\n\
    console.log(iscube(35937));\nconsole.log(iscube(39304));\nconsole.log(iscube(42875));\n\
    console.log(iscube(46656));\nconsole.log(iscube(50653));\nconsole.log(iscube(54872));\n\
    console.log(iscube(59319));\nconsole.log(iscube(64000));\nconsole.log(iscube(68921));\n\
    console.log(iscube(74088));\nconsole.log(iscube(79507));\nconsole.log(iscube(85184));\n\
    console.log(iscube(91125));\nconsole.log(iscube(97336));\nconsole.log(iscube(103823));\n\
    console.log(iscube(110592));\nconsole.log(iscube(117649));\nconsole.\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprc_niv4e.ts(56,9): error TS1003: Identifier expected.

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i <= a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nconsole.log(iscube(27));\n\
    console.log(iscube(28));\nconsole.log(iscube(64));\nconsole.log(iscube(65));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpk7l8lnuo.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpk7l8lnuo.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i < a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(20));\nconsole.log(iscube(125));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpn0snem98.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpn0snem98.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    true

    '
  timestamp: 1659979414
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console.log(iscube(85184));\nconsole.log(\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpso8kib0k.ts(57,9): error TS1005: '','' expected.

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmptmk6g79y.js:63:12)\n    at\
    \ Object.<anonymous> (/tmp/tmptmk6g79y.js:70:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\
    console.log(iscube(125));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\n\
    console.log(iscube(-1));\nconsole.log(iscube(-8));\nconsole.log(iscube(-27));\n\
    console.log(iscube(-64));\nconsole.log(iscube(-125));\nconsole.log(iscube(-216));\n\
    console.log(iscube(-1000));\nconsole.log(iscube(125));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1728));\nconsole.log(iscube(10000));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(27000));\nconsole.log(iscube(50653));\nconsole.log(iscube(51452));\n\
    console.log(iscube(54872));\nconsole.log(iscube(60007));\nconsole.log(iscube(68719));\n\
    console.log(iscube(79507));\nconsole.log(iscube(91125));\nconsole.log(iscube(100000));\n\
    console.log(iscube(177147));\nconsole.log(iscube(279936));\nconsole.log(iscube(493039));\n\
    console.log(iscube(571787));\nconsole.log(iscube(704969));\nconsole.log(iscube(823543));\n\
    console.log(iscube(976562));\nconsole.log(iscube(1002001));\nconsole.log(iscube(1299721));\n\
    console.log(iscube(1679616));\nconsole.log(iscube(2438901));\nconsole.log(iscube(2985984));\n\
    console.log(iscube(3779136));\nconsole.log(iscube(4826809\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpt_i9_ip_.ts(56,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpt_i9_ip_.ts(56,9): error TS1005: '','' expected.

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(729));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-27));\n\
    console.log(iscube(-28));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmph5iz1y9j.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmph5iz1y9j.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    true

    true

    false

    false

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6jvcppcy.js:62:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6jvcppcy.js:69:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i < a) {\n        if (i * i * i === a) {\n      \
    \      return true;\n        }\n        i++;\n    }\n    return false;\n}\n\n\
    console.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(729));\nconsole.log(iscube(1));\n\
    console.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-27));\n\
    console.log(iscube(-125));\nconsole.log(iscube(-216));\nconsole.log(iscube(-729));\n\
    console.log(iscube(-1000));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpafxy1781.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpafxy1781.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\n\
    console.log(iscube(-1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmps1if4jok.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmps1if4jok.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    false

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(3));\n\
    console.log(iscube(125));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\n\
    console.log(iscube(-1));\nconsole.log(iscube(-8));\nconsole.log(iscube(-27));\n\
    console.log(iscube(-64));\nconsole.log(iscube(-125));\nconsole.log(iscube(-216));\n\
    console.log(iscube(-1000));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\nconsole.log(iscube(1000000));\n\
    console.log(iscube(10000000000));\nconsole.log(iscube(1000000000000000000));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpetop_k0s.js:40:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpetop_k0s.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    true

    false

    false

    false

    false

    false

    false

    false

    false

    true

    true

    true

    true

    true

    false

    true

    '
  timestamp: 1659979414
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube: number = 0;\n    for (let i: number = 0; i < a; i++) {\n        cube =\
    \ i * i * i;\n        if (cube === a) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1331));\nconsole.log(iscube(1728));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(3375));\n\
    console.log(iscube(4096));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    console.log(iscube(10648));\nconsole.log(iscube(12167));\nconsole.log(iscube(13824));\n\
    console.log(iscube(15625));\nconsole.log(iscube(17576));\nconsole.log(iscube(19683));\n\
    console.log(iscube(21952));\nconsole.log(iscube(24389));\nconsole.log(iscube(27000));\n\
    console.log(iscube(29791));\nconsole.log(iscube(32768));\nconsole.log(iscube(35937));\n\
    console.log(iscube(39304));\nconsole.log(iscube(42875));\nconsole.log(iscube(46656));\n\
    console.log(iscube(50653));\nconsole.log(iscube(54872));\nconsole.log(iscube(59319));\n\
    console.log(iscube(64000));\nconsole.log(iscube(68921));\nconsole.log(iscube(74088));\n\
    console.log(isc\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpldkwmlgz.ts(57,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpldkwmlgz.ts(57,9): error TS1005: '','' expected.

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6jvcppcy.js:62:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6jvcppcy.js:69:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(125));\n\
    console.log(iscube(1331));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpm_oacz7x.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm_oacz7x.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i < a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmplp0zna53.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmplp0zna53.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(125));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(12));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9jlg6vcc.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9jlg6vcc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    false

    false

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmq9ln4yx.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpmq9ln4yx.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube = Math.cbrt(a);\n    if (cube % 1 === 0) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(125));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\n\
    console.log(iscube(125));\nconsole.log(iscube(64));\nconsole.log(iscube(216));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_nv6ow0a.ts(6,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(25));\n\
    console.log(iscube(26));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9cif4le8.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9cif4le8.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    false

    '
  timestamp: 1659979414
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console.log(iscube(85184));\nconsole.log(\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpso8kib0k.ts(57,9): error TS1005: '','' expected.

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube: number = 0;\n    for (let i: number = 0; i < a; i++) {\n        cube =\
    \ i * i * i;\n        if (cube === a) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\
    console.log(iscube(29));\nconsole.log(iscube(30));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvdb2zwdf.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvdb2zwdf.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    false

    '
  timestamp: 1659979416
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(125));\n\
    console.log(iscube(1331));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpm_oacz7x.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm_oacz7x.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i < a) {\n        if (i * i * i === a) {\n      \
    \      return true;\n        }\n        i++;\n    }\n    return false;\n}\nconsole.log(iscube(27));\n\
    console.log(iscube(28));\nconsole.log(iscube(64));\nconsole.log(iscube(65));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp_wa0psr5.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp_wa0psr5.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659979416
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube = Math.cbrt(a);\n    return Number.isInteger(cube);\n}\nconsole.log(iscube(27));\n\
    console.log(iscube(256));\nconsole.log(iscube(125));\nconsole.log(iscube(1));\n\
    console.log(iscube(0));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjwfstyfp.ts(6,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    ../../../../../tmp/tmpjwfstyfp.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659979416
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(125));\n\
    console.log(iscube(1));\nconsole.log(iscube(8));\nconsole.log(iscube(64));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(2197));\nconsole.log(iscube(2744));\n\
    console.log(iscube(3375));\nconsole.log(iscube(4096));\nconsole.log(iscube(4913));\n\
    console.log(iscube(5832));\nconsole.log(iscube(6859));\nconsole.log(iscube(8000));\n\
    console.log(iscube(9261));\nconsole.log(iscube(10648));\nconsole.log(iscube(12167));\n\
    console.log(iscube(13824));\nconsole.log(iscube(15625));\nconsole.log(iscube(17576));\n\
    console.log(iscube(19683));\nconsole.log(iscube(21952));\nconsole.log(iscube(24389));\n\
    console.log(iscube(27000));\nconsole.log(iscube(29791));\nconsole.log(iscube(32768));\n\
    console.log(iscube(35937));\nconsole.log(iscube(39304));\nconsole.log(iscube(42875));\n\
    console.log(iscube(46656));\nconsole.log(iscube(50653));\nconsole.log(iscube(54872));\n\
    console.log(iscube(59319));\nconsole.log(iscube(64000));\nconsole.log(iscube(68921));\n\
    console.log(iscube(74088));\nconsole.log(iscube(79507));\nconsole.log\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpaqz4yr9f.js:63:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpaqz4yr9f.js:70:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(1));\n\
    console.log(iscube(8));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    console.log(iscube(10648));\nconsole.log(iscube(12167));\nconsole.log(iscube(13824));\n\
    console.log(iscube(15625));\nconsole.log(iscube(17576));\nconsole.log(iscube(19683));\n\
    console.log(iscube(21952));\nconsole.log(iscube(24389));\nconsole.log(iscube(27000));\n\
    console.log(iscube(29791));\nconsole.log(iscube(32768));\nconsole.log(iscube(35937));\n\
    console.log(iscube(39304));\nconsole.log(iscube(42875));\nconsole.log(iscube(46656));\n\
    console.log(iscube(50653));\nconsole.log(iscube(54872));\nconsole.log(iscube(59319));\n\
    console.log(iscube(64000));\nconsole.log(iscube(68921));\nconsole.log(iscube(74088));\n\
    console.log(iscube(79507));\nconsole.log(iscube(85184));\nconsole.log(iscube(91125));\n\
    console.log(iscube(97336));\nconsole.log(iscube(103823));\nconsole.log(iscube(110592));\n\
    console.log(iscube(117649));\nconsole.log\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpoes1rtfc.js:61:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpoes1rtfc.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrruxmpl.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrruxmpl.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6jvcppcy.js:62:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6jvcppcy.js:69:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(27));\nconsole.log(iscube(64));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(343));\nconsole.log(iscube(512));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console.log(iscube(85184));\nconsole.log(iscube(91125));\nconsole.log(iscube(97336));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpp8s0ghb7.js:62:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpp8s0ghb7.js:69:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp_2rkr9yb.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp_2rkr9yb.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(1));\n\
    console.log(iscube(0));\nconsole.log(iscube(-1));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp1vvpzxyf.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1vvpzxyf.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    false

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmq9ln4yx.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpmq9ln4yx.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube: number = 0;\n    for (let i: number = 0; i < a; i++) {\n        cube =\
    \ i * i * i;\n        if (cube === a) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpm_i7g1ll.js:60:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm_i7g1ll.js:69:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(125));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-27));\n\
    console.log(iscube(-64));\nconsole.log(iscube(-125));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7dn3ocvi.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7dn3ocvi.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    false

    false

    false

    false

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ num = Math.sqrt(a);\n    if (num % 1 === 0) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsx3u2njn.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsx3u2njn.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'false

    false

    true

    false

    false

    false

    false

    true

    false

    '
  timestamp: 1659979417
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console.log(iscube(85184));\nconsole.log(isc\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpniahb5wd.ts(56,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpniahb5wd.ts(56,9): error TS1005: '','' expected.

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjbxh1ohg.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjbxh1ohg.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(29));\n\
    console.log(iscube(30));\nconsole.log(iscube(31));\nconsole.log(iscube(32));\n\
    console.log(iscube(33));\nconsole.log(iscube(34));\nconsole.log(iscube(35));\n\
    console.log(iscube(36));\nconsole.log(iscube(37));\nconsole.log(iscube(38));\n\
    console.log(iscube(39));\nconsole.log(iscube(40));\nconsole.log(iscube(41));\n\
    console.log(iscube(42));\nconsole.log(iscube(43));\nconsole.log(iscube(44));\n\
    console.log(iscube(45));\nconsole.log(iscube(46));\nconsole.log(iscube(47));\n\
    console.log(iscube(48));\nconsole.log(iscube(49));\nconsole.log(iscube(50));\n\
    console.log(iscube(51));\nconsole.log(iscube(52));\nconsole.log(iscube(53));\n\
    console.log(iscube(54));\nconsole.log(iscube(55));\nconsole.log(iscube(56));\n\
    console.log(iscube(57));\nconsole.log(iscube(58));\nconsole.log(iscube(59));\n\
    console.log(iscube(60));\nconsole.log(iscube(61));\nconsole.log(iscube(62));\n\
    console.log(iscube(63));\nconsole.log(iscube(64));\nconsole.log(iscube(65));\n\
    console.log(iscube(66));\nconsole.log(iscube(67));\nconsole.log(iscube(68));\n\
    console.log(iscube(69));\nconsole.log(iscube(70));\nconsole.log(iscube(71));\n\
    console.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp2x63x_0a.js:66:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2x63x_0a.js:73:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    true

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(3));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpiufftw3x.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpiufftw3x.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    '
  timestamp: 1659979417
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(9));\nconsole.log(iscube(1));\nconsole.log(iscube(125));\n\
    console.log(iscube(64));\nconsole.log(iscube(216));\nconsole.log(iscube(1000));\n\
    console.log(iscube(2197));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(10000));\nconsole.log(iscube(343));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1));\nconsole.log(iscube(512));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\nconsole.log(iscube(1));\n\
    console.log(iscube(343));\nconsole.log(iscube(125));\nconsole.log(iscube(64));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\nconsole.log(iscube(1));\n\
    console.log(iscube(343));\nconsole.log(iscube(125));\nconsole.log(iscube(64));\n\
    console.log(iscube(216));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1));\nconsole.log(iscube(343));\n\
    console.log(iscube(125));\nconsole.log(iscube(64));\nconsole.log(iscube(216));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\nconsole.log(iscube(\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqmsbrq40.ts(60,9): error TS1005: '','' expected.

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(125));\n\
    console.log(iscube(9));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-1));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-28));\nconsole.log(iscube(-125));\n\
    console.log(iscube(-9));\nconsole.log(iscube(-1));\nconsole.log(iscube(-0));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp77zm600s.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp77zm600s.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(3));\n\
    console.log(iscube(125));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp3dw8su82.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3dw8su82.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    true

    false

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmptmk6g79y.js:63:12)\n    at\
    \ Object.<anonymous> (/tmp/tmptmk6g79y.js:70:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6jvcppcy.js:62:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6jvcppcy.js:69:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(125));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\n\
    console.log(iscube(-1));\nconsole.log(iscube(-8));\nconsole.log(iscube(-27));\n\
    console.log(iscube(-64));\nconsole.log(iscube(-125));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1000000));\nconsole.log(iscube(10000000000));\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpygjz6vhn.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpygjz6vhn.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    false

    false

    false

    false

    false

    true

    true

    true

    true

    true

    false

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmptmk6g79y.js:63:12)\n    at\
    \ Object.<anonymous> (/tmp/tmptmk6g79y.js:70:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ result: boolean = false;\n    for (let i: number = 0; i < a; i++) {\n      \
    \  if (i * i * i === a) {\n            result = true;\n        }\n    }\n    return\
    \ result;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(64));\n\
    console.log(iscube(65));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp1bpfooq_.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1bpfooq_.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659979417
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n  return\
    \ Math.cbrt(a) % 1 === 0;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(9));\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(3));\n\
    console.log(iscube(4));\nconsole.log(iscube(5));\nconsole.log(iscube(6));\nconsole.log(iscube(7));\n\
    console.log(iscube(8));\nconsole.log(iscube(9));\nconsole.log(iscube(10));\nconsole.log(iscube(11));\n\
    console.log(iscube(12));\nconsole.log(iscube(13));\nconsole.log(iscube(14));\n\
    console.log(iscube(15));\nconsole.log(iscube(16));\nconsole.log(iscube(17));\n\
    console.log(iscube(18));\nconsole.log(iscube(19));\nconsole.log(iscube(20));\n\
    console.log(iscube(21));\nconsole.log(iscube(22));\nconsole.log(iscube(23));\n\
    console.log(iscube(24));\nconsole.log(iscube(25));\nconsole.log(iscube(26));\n\
    console.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(29));\n\
    console.log(iscube(30));\nconsole.log(iscube(31));\nconsole.log(iscube(32));\n\
    console.log(iscube(33));\nconsole.log(iscube(34));\nconsole.log(iscube(35));\n\
    console.log(iscube(36));\nconsole.log(iscube(37));\nconsole.log(iscube(38));\n\
    console.log(iscube(39));\nconsole.log(iscube(40));\nconsole.log(iscube(41));\n\
    console.log(iscube(42));\nconsole.log(iscube(43));\nconsole.log(iscube(44));\n\
    console.log(iscube(45));\nconsole.log(iscube(46));\nconsole.\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphg55xi1e.ts(58,9): error TS1003: Identifier expected.

    '
  timestamp: 1659979417
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube = Math.cbrt(a);\n    if (cube % 1 === 0) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(125));\nconsole.log(iscube(1));\nconsole.log(iscube(3));\n\
    console.log(iscube(8));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4w9k5feo.ts(6,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i < a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1331));\nconsole.log(iscube(1728));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(3375));\n\
    console.log(iscube(4096));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp79k89xwl.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp79k89xwl.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979419
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube: number = 0;\n    for (let i: number = 0; i < a; i++) {\n        cube =\
    \ i * i * i;\n        if (cube === a) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1331));\nconsole.log(iscube(1728));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(3375));\n\
    console.log(iscube(4096));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    console.log(iscube(10648));\nconsole.log(iscube(12167));\nconsole.log(iscube(13824));\n\
    console.log(iscube(15625));\nconsole.log(iscube(17576));\nconsole.log(iscube(19683));\n\
    console.log(iscube(21952));\nconsole.log(iscube(24389));\nconsole.log(iscube(27000));\n\
    console.log(iscube(29791));\nconsole.log(iscube(32768));\nconsole.log(iscube(35937));\n\
    console.log(iscube(39304));\nconsole.log(iscube(42875));\nconsole.log(iscube(46656));\n\
    console.log(iscube(50653));\nconsole.log(iscube(54872));\nconsole.log(iscube(59319));\n\
    console.log(iscube(64000));\nconsole.log(iscube(68921));\nconsole.log(iscube(74088));\n\
    console.log(isc\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpldkwmlgz.ts(57,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpldkwmlgz.ts(57,9): error TS1005: '','' expected.

    '
  timestamp: 1659979414
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(125));\n\
    console.log(iscube(256));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\n\
    console.log(iscube(-1));\nconsole.log(iscube(-27));\nconsole.log(iscube(-64));\n\
    console.log(iscube(-125));\nconsole.log(iscube(-216));\nconsole.log(iscube(-343));\n\
    console.log(iscube(-512));\nconsole.log(iscube(-729));\nconsole.log(iscube(-1000));\n\
    console.log(iscube(-1331));\nconsole.log(iscube(-1728));\nconsole.log(iscube(-2197));\n\
    console.log(iscube(-2744));\nconsole.log(iscube(-3375));\nconsole.log(iscube(-4096));\n\
    console.log(iscube(-4913));\nconsole.log(iscube(-5832));\nconsole.log(iscube(-6859));\n\
    console.log(iscube(-8000));\nconsole.log(iscube(-9261));\nconsole.log(iscube(-10648));\n\
    console.log(iscube(-12167));\nconsole.log(iscube(-13824));\nconsole.log(iscube(-15625));\n\
    console.log(iscube(-17576));\nconsole.log(iscube(-19683));\nconsole.log(iscube(-21952));\n\
    console.log(iscube(-24389));\nconsole.log(iscube(-27000));\nconsole.log(iscube(-29791));\n\
    console.log(iscube(-32768));\nconsole.log(iscube(-35937));\nconsole.log(iscube(-39304));\n\
    console.log(iscube(-42875));\nconsole.log(iscube(-46656));\nconsole.log(iscube(-50653));\n\
    console.log(iscube(-\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpp33v8evq.ts(58,9): error TS1005: '','' expected.

    '
  timestamp: 1659979419
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(3));\n\
    console.log(iscube(125));\nconsole.log(iscube(1));\nconsole.log(iscube(8));\n\
    console.log(iscube(64));\nconsole.log(iscube(216));\nconsole.log(iscube(1000));\n\
    console.log(iscube(0));\nconsole.log(iscube(1000000));\nconsole.log(iscube(531441));\n\
    console.log(iscube(4));\nconsole.log(iscube(125));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(216));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1000000));\nconsole.log(iscube(531441));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpislsbrib.js:40:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpislsbrib.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    true

    true

    true

    true

    true

    false

    true

    true

    false

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979419
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(8));\nconsole.log(iscube(9));\nconsole.log(iscube(27));\n\
    console.log(iscube(28));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwla6scun.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpwla6scun.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659979419
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube = Math.pow(a, 1 / 3);\n    if (cube % 1 == 0) {\n        return true;\n\
    \    }\n    else {\n        return false;\n    }\n}\nconsole.log(iscube(27));\n\
    console.log(iscube(28));\nconsole.log(iscube(29));\nconsole.log(iscube(30));\n\
    console.log(iscube(31));\nconsole.log(iscube(32));\nconsole.log(iscube(33));\n\
    console.log(iscube(34));\nconsole.log(iscube(35));\nconsole.log(iscube(36));\n\
    console.log(iscube(37));\nconsole.log(iscube(38));\nconsole.log(iscube(39));\n\
    console.log(iscube(40));\nconsole.log(iscube(41));\nconsole.log(iscube(42));\n\
    console.log(iscube(43));\nconsole.log(iscube(44));\nconsole.log(iscube(45));\n\
    console.log(iscube(46));\nconsole.log(iscube(47));\nconsole.log(iscube(48));\n\
    console.log(iscube(49));\nconsole.log(iscube(50));\nconsole.log(iscube(51));\n\
    console.log(iscube(52));\nconsole.log(iscube(53));\nconsole.log(iscube(54));\n\
    console.log(iscube(55));\nconsole.log(iscube(56));\nconsole.log(iscube(57));\n\
    console.log(iscube(58));\nconsole.log(iscube(59));\nconsole.log(iscube(60));\n\
    console.log(iscube(61));\nconsole.log(iscube(62));\nconsole.log(iscube(63));\n\
    console.log(iscube(64));\nconsole.log(iscube(65));\nconsole.log(iscube(66));\n\
    console.log(iscube(67));\nconsole.log(iscube(68));\nconsole.log(iscube(69));\n\
    console.log(iscube(70));\nconsole.log(iscube(71));\nconsole.log(iscube(72));\n\
    console.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8598zw4r.ts(60,9): error TS1003: Identifier expected.

    '
  timestamp: 1659979419
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube = Math.cbrt(a);\n    if (cube % 1 === 0) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1331));\nconsole.log(iscube(1728));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(3375));\n\
    console.log(iscube(4096));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    console.log(iscube(10648));\nconsole.log(iscube(12167));\nconsole.log(iscube(13824));\n\
    console.log(iscube(15625));\nconsole.log(iscube(17576));\nconsole.log(iscube(19683));\n\
    console.log(iscube(21952));\nconsole.log(iscube(24389));\nconsole.log(iscube(27000));\n\
    console.log(iscube(29791));\nconsole.log(iscube(32768));\nconsole.log(iscube(35937));\n\
    console.log(iscube(39304));\nconsole.log(iscube(42875));\nconsole.log(iscube(46656));\n\
    console.log(iscube(50653));\nconsole.log(iscube(54872));\nconsole.log(iscube(59319));\n\
    console.log(iscube(64000));\nconsole.log(iscube(68921));\nconsole.log(iscube(74088));\n\
    console.log(iscube(79507));\nconsole.log(iscube(85184));\nconsole.log\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprvrazklg.ts(6,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659979419
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6jvcppcy.js:62:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6jvcppcy.js:69:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i < a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1));\nconsole.log(iscube(2));\n\
    console.log(iscube(3));\nconsole.log(iscube(4));\nconsole.log(iscube(5));\nconsole.log(iscube(6));\n\
    console.log(iscube(7));\nconsole.log(iscube(9));\nconsole.log(iscube(10));\nconsole.log(iscube(11));\n\
    console.log(iscube(12));\nconsole.log(iscube(13));\nconsole.log(iscube(14));\n\
    console.log(iscube(15));\nconsole.log(iscube(16));\nconsole.log(iscube(17));\n\
    console.log(iscube(18));\nconsole.log(iscube(19));\nconsole.log(iscube(20));\n\
    console.log(iscube(21));\nconsole.log(iscube(22));\nconsole.log(iscube(23));\n\
    console.log(iscube(24));\nconsole.log(iscube(25));\nconsole.log(iscube(26));\n\
    console.log(iscube(28));\nconsole.log(iscube(29));\nconsole.log(iscube(30));\n\
    console.log(iscube(31));\nconsole.log(iscube(32));\nconsole.log(iscube(33));\n\
    console.log(iscube(34));\nconsole.log(iscube(35));\nconsole.log(iscube(36));\n\
    console.log(iscube(37));\nconsole.log(iscube(38));\nconsole.log(iscube(39));\n\
    console.log(iscube(40));\nconsole.log(iscube(41));\nconsole.log(iscube(42));\n\
    console.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpa38z_u4y.js:63:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpa38z_u4y.js:72:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659979419
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ b: number = Math.cbrt(a);\n    if (b % 1 == 0) {\n        return true;\n   \
    \ } else {\n        return false;\n    }\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\
    console.log(iscube(29));\nconsole.log(iscube(30));\nconsole.log(iscube(31));\n\
    console.log(iscube(32));\nconsole.log(iscube(33));\nconsole.log(iscube(34));\n\
    console.log(iscube(35));\nconsole.log(iscube(36));\nconsole.log(iscube(37));\n\
    console.log(iscube(38));\nconsole.log(iscube(39));\nconsole.log(iscube(40));\n\
    console.log(iscube(41));\nconsole.log(iscube(42));\nconsole.log(iscube(43));\n\
    console.log(iscube(44));\nconsole.log(iscube(45));\nconsole.log(iscube(46));\n\
    console.log(iscube(47));\nconsole.log(iscube(48));\nconsole.log(iscube(49));\n\
    console.log(iscube(50));\nconsole.log(iscube(51));\nconsole.log(iscube(52));\n\
    console.log(iscube(53));\nconsole.log(iscube(54));\nconsole.log(iscube(55));\n\
    console.log(iscube(56));\nconsole.log(iscube(57));\nconsole.log(iscube(58));\n\
    console.log(iscube(59));\nconsole.log(iscube(60));\nconsole.log(iscube(61));\n\
    console.log(iscube(62));\nconsole.log(iscube(63));\nconsole.log(iscube(64));\n\
    console.log(iscube(65));\nconsole.log(iscube(66));\nconsole.log(iscube(67));\n\
    console.log(iscube(68));\nconsole.log(iscube(69));\nconsole.log(iscube(70));\n\
    console.log(iscube(71));\nconsole.log(iscube(72));\nconsole.log(isc\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgn3a31ua.ts(60,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpgn3a31ua.ts(60,9): error TS1005: '','' expected.

    '
  timestamp: 1659979419
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i < a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp3bycms3s.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3bycms3s.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    '
  timestamp: 1659979419
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    return\
    \ Math.pow(Math.round(Math.cbrt(a)), 3) === a;\n}\n\nconsole.log(iscube(27));\n\
    console.log(iscube(256));\nconsole.log(iscube(9));\nconsole.log(iscube(1));\n\
    console.log(iscube(125));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4_oe3lv5.ts(6,37): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659979419
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(3));\n\
    console.log(iscube(125));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-1));\nconsole.log(iscube(-125));\n\
    console.log(iscube(-256));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmps5swevsp.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmps5swevsp.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    true

    false

    false

    false

    false

    false

    '
  timestamp: 1659979419
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(29));\n\
    console.log(iscube(30));\nconsole.log(iscube(31));\nconsole.log(iscube(32));\n\
    console.log(iscube(33));\nconsole.log(iscube(34));\nconsole.log(iscube(35));\n\
    console.log(iscube(36));\nconsole.log(iscube(37));\nconsole.log(iscube(38));\n\
    console.log(iscube(39));\nconsole.log(iscube(40));\nconsole.log(iscube(41));\n\
    console.log(iscube(42));\nconsole.log(iscube(43));\nconsole.log(iscube(44));\n\
    console.log(iscube(45));\nconsole.log(iscube(46));\nconsole.log(iscube(47));\n\
    console.log(iscube(48));\nconsole.log(iscube(49));\nconsole.log(iscube(50));\n\
    console.log(iscube(51));\nconsole.log(iscube(52));\nconsole.log(iscube(53));\n\
    console.log(iscube(54));\nconsole.log(iscube(55));\nconsole.log(iscube(56));\n\
    console.log(iscube(57));\nconsole.log(iscube(58));\nconsole.log(iscube(59));\n\
    console.log(iscube(60));\nconsole.log(iscube(61));\nconsole.log(iscube(62));\n\
    console.log(iscube(63));\nconsole.log(iscube(64));\nconsole.log(iscube(65));\n\
    console.log(iscube(66));\nconsole.log(iscube(67));\nconsole.log(iscube(68));\n\
    console.log(iscube(69));\nconsole.log(iscube(70));\nconsole.log(iscube(71));\n\
    console.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkgwrurl5.ts(61,9): error TS1005: '','' expected.

    '
  timestamp: 1659979419
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i <= a) {\n        if (i * i * i === a) {\n     \
    \       return true;\n        }\n        i++;\n    }\n    return false;\n}\nconsole.log(iscube(27));\n\
    console.log(iscube(28));\nconsole.log(iscube(125));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8qyh_rmb.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8qyh_rmb.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    '
  timestamp: 1659979419
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i < a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1331));\nconsole.log(iscube(1728));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(3375));\n\
    console.log(iscube(4096));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    console.log(iscube(10648));\nconsole.log(iscube(12167));\nconsole.log(iscube(13824));\n\
    console.log(iscube(15625));\nconsole.log(iscube(17576));\nconsole.log(iscube(19683));\n\
    console.log(iscube(21952));\nconsole.log(iscube(24389));\nconsole.log(iscube(27000));\n\
    console.log(iscube(29791));\nconsole.log(iscube(32768));\nconsole.log(iscube(35937));\n\
    console.log(iscube(39304));\nconsole.log(iscube(42875));\nconsole.log(iscube(46656));\n\
    console.log(iscube(50653));\nconsole.log(iscube(54872));\nconsole.log(iscube(59319));\n\
    console.log(iscube(64000));\nconsole.log(iscube(68921));\nconsole.log(iscube(74088));\n\
    console.log(iscube(79507));\nconsole.log(iscube(85184));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqch697e_.js:59:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpqch697e_.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979419
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube = Math.cbrt(a);\n    return Number.isInteger(cube);\n}\n\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1));\nconsole.log(iscube(3));\n\
    console.log(iscube(8));\nconsole.log(iscube(9));\nconsole.log(iscube(1728));\n\
    console.log(iscube(5832));\nconsole.log(iscube(10000));\nconsole.log(iscube(50653));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2hxfmjj3.ts(6,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    ../../../../../tmp/tmp2hxfmjj3.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659979419
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console.log(iscube(85184));\nconsole.log(\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpso8kib0k.ts(57,9): error TS1005: '','' expected.

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmps2gcg_21.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmps2gcg_21.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    '
  timestamp: 1659979419
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i < a) {\n        if (i * i * i === a) {\n      \
    \      return true;\n        }\n        i++;\n    }\n    return false;\n}\n\n\
    console.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(29));\n\
    console.log(iscube(30));\nconsole.log(iscube(31));\nconsole.log(iscube(32));\n\
    console.log(iscube(33));\nconsole.log(iscube(34));\nconsole.log(iscube(35));\n\
    console.log(iscube(36));\nconsole.log(iscube(37));\nconsole.log(iscube(38));\n\
    console.log(iscube(39));\nconsole.log(iscube(40));\nconsole.log(iscube(41));\n\
    console.log(iscube(42));\nconsole.log(iscube(43));\nconsole.log(iscube(44));\n\
    console.log(iscube(45));\nconsole.log(iscube(46));\nconsole.log(iscube(47));\n\
    console.log(iscube(48));\nconsole.log(iscube(49));\nconsole.log(iscube(50));\n\
    console.log(iscube(51));\nconsole.log(iscube(52));\nconsole.log(iscube(53));\n\
    console.log(iscube(54));\nconsole.log(iscube(55));\nconsole.log(iscube(56));\n\
    console.log(iscube(57));\nconsole.log(iscube(58));\nconsole.log(iscube(59));\n\
    console.log(iscube(60));\nconsole.log(iscube(61));\nconsole.log(iscube(62));\n\
    console.log(iscube(63));\nconsole.log(iscube(64));\nconsole.log(iscube(65));\n\
    console.log(iscube(66));\nconsole.log(iscube(67));\nconsole.log(iscube(68));\n\
    console.log(iscube(69));\nconsole.log(iscube(70));\nconsole.log(iscube(71));\n\
    console.log(iscube(\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5ypgmnm_.ts(62,9): error TS1005: '','' expected.

    '
  timestamp: 1659979419
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    return\
    \ Math.pow(Math.round(Math.pow(a, 1 / 3)), 3) === a;\n}\n\nconsole.log(iscube(27));\n\
    console.log(iscube(256));\nconsole.log(iscube(125));\nconsole.log(iscube(1));\n\
    console.log(iscube(3));\nconsole.log(iscube(8));\nconsole.log(iscube(9));\nconsole.log(iscube(1728));\n\
    console.log(iscube(0));\nconsole.log(iscube(-8));\nconsole.log(iscube(-125));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-1));\nconsole.log(iscube(-125));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-1));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpm26d946y.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm26d946y.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    false

    true

    false

    true

    true

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659979419
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(27));\nconsole.log(iscube(64));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(2));\nconsole.log(iscube(3));\nconsole.log(iscube(4));\nconsole.log(iscube(5));\n\
    console.log(iscube(6));\nconsole.log(iscube(7));\nconsole.log(iscube(8));\nconsole.log(iscube(9));\n\
    console.log(iscube(10));\nconsole.log(iscube(11));\nconsole.log(iscube(12));\n\
    console.log(iscube(13));\nconsole.log(iscube(14));\nconsole.log(iscube(15));\n\
    console.log(iscube(16));\nconsole.log(iscube(17));\nconsole.log(iscube(18));\n\
    console.log(iscube(19));\nconsole.log(iscube(20));\nconsole.log(iscube(21));\n\
    console.log(iscube(22));\nconsole.log(iscube(23));\nconsole.log(iscube(24));\n\
    console.log(iscube(25));\nconsole.log(iscube(26));\nconsole.log(iscube(28));\n\
    console.log(iscube(29));\nconsole.log(iscube(30));\nconsole.log(iscube(31));\n\
    console.log(iscube(32));\nconsole.log(iscube(33));\nconsole.log(iscube(34));\n\
    console.log(iscube(35));\nconsole.log(iscube(36));\nconsole.log(iscube(37));\n\
    console.log(iscube(38));\nconsole.log(iscube(39));\nconsole.log(iscube(40));\n\
    console.log(iscube(41));\nconsole.log\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpzwin7ulx.js:66:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpzwin7ulx.js:73:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    false

    false

    false

    false

    false

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659979419
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ result: boolean = false;\n    for (let i: number = 0; i < a; i++) {\n      \
    \  if (i * i * i === a) {\n            result = true;\n        }\n    }\n    return\
    \ result;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(29));\n\
    console.log(iscube(30));\nconsole.log(iscube(31));\nconsole.log(iscube(32));\n\
    console.log(iscube(33));\nconsole.log(iscube(34));\nconsole.log(iscube(35));\n\
    console.log(iscube(36));\nconsole.log(iscube(37));\nconsole.log(iscube(38));\n\
    console.log(iscube(39));\nconsole.log(iscube(40));\nconsole.log(iscube(41));\n\
    console.log(iscube(42));\nconsole.log(iscube(43));\nconsole.log(iscube(44));\n\
    console.log(iscube(45));\nconsole.log(iscube(46));\nconsole.log(iscube(47));\n\
    console.log(iscube(48));\nconsole.log(iscube(49));\nconsole.log(iscube(50));\n\
    console.log(iscube(51));\nconsole.log(iscube(52));\nconsole.log(iscube(53));\n\
    console.log(iscube(54));\nconsole.log(iscube(55));\nconsole.log(iscube(56));\n\
    console.log(iscube(57));\nconsole.log(iscube(58));\nconsole.log(iscube(59));\n\
    console.log(iscube(60));\nconsole.log(iscube(61));\nconsole.log(iscube(62));\n\
    console.log(iscube(63));\nconsole.log(iscube(64));\nconsole.log(iscube(65));\n\
    console.log(iscube(66));\nconsole.log(iscube(67));\nconsole.log(iscube(68));\n\
    console.log(iscube(69));\nconsole.log(iscube(70));\nconsole.log(iscube(71));\n\
    console.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpluych9a6.ts(59,9): error TS1003: Identifier expected.

    '
  timestamp: 1659979419
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ b: number = Math.cbrt(a);\n    if (b % 1 == 0) {\n        return true;\n   \
    \ } else {\n        return false;\n    }\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi_0m6eou.ts(6,26): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659979419
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(27));\nconsole.log(iscube(64));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(343));\nconsole.log(iscube(512));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjl0lbs14.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjl0lbs14.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979420
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console.log(iscube(85184));\nconsole.log(\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpso8kib0k.ts(57,9): error TS1005: '','' expected.

    '
  timestamp: 1659979414
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i < a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1331));\nconsole.log(iscube(1728));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(3375));\n\
    console.log(iscube(4096));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    console.log(iscube(10648));\nconsole.log(iscube(12167));\nconsole.log(iscube(13824));\n\
    console.log(iscube(15625));\nconsole.log(iscube(17576));\nconsole.log(iscube(19683));\n\
    console.log(iscube(21952));\nconsole.log(iscube(24389));\nconsole.log(iscube(27000));\n\
    console.log(iscube(29791));\nconsole.log(iscube(32768));\nconsole.log(iscube(35937));\n\
    console.log(iscube(39304));\nconsole.log(iscube(42875));\nconsole.log(iscube(46656));\n\
    console.log(iscube(50653));\nconsole.log(iscube(54872));\nconsole.log(iscube(59319));\n\
    console.log(iscube(64000));\nconsole.log(iscube(68921));\nconsole.log(iscube(74088));\n\
    console.log(iscube(79507));\nconsole.log(iscube(85184));\nconsole.log(iscube(91125\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpihp_u0mi.ts(57,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpihp_u0mi.ts(57,9): error TS1005: '','' expected.

    '
  timestamp: 1659979419
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(64));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(1000));\nconsole.log(iscube(1));\n\
    console.log(iscube(0));\nconsole.log(iscube(8));\nconsole.log(iscube(9));\nconsole.log(iscube(10));\n\
    console.log(iscube(11));\nconsole.log(iscube(12));\nconsole.log(iscube(13));\n\
    console.log(iscube(14));\nconsole.log(iscube(15));\nconsole.log(iscube(16));\n\
    console.log(iscube(17));\nconsole.log(iscube(18));\nconsole.log(iscube(19));\n\
    console.log(iscube(20));\nconsole.log(iscube(21));\nconsole.log(iscube(22));\n\
    console.log(iscube(23));\nconsole.log(iscube(24));\nconsole.log(iscube(25));\n\
    console.log(iscube(26));\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\
    console.log(iscube(29));\nconsole.log(iscube(30));\nconsole.log(iscube(31));\n\
    console.log(iscube(32));\nconsole.log(iscube(33));\nconsole.log(iscube(34));\n\
    console.log(iscube(35));\nconsole.log(iscube(36));\nconsole.log(iscube(37));\n\
    console.log(iscube(38));\nconsole.log(iscube(39));\nconsole.log(iscube(40));\n\
    console.log(iscube(41));\nconsole.log(iscube(42));\nconsole.log(iscube(43));\n\
    console.log(iscube(44));\nconsole.log(iscube(45));\nconsole.log(iscube(46));\n\
    console.log(iscube(47));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpuwaix1v4.js:64:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpuwaix1v4.js:71:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659979421
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(125));\n\
    console.log(iscube(1331));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphvx4ije7.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphvx4ije7.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    '
  timestamp: 1659979421
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube = Math.cbrt(a);\n    if (cube % 1 === 0) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(125));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\n\
    console.log(iscube(8));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\nconsole.log(iscube(2147483648));\n\
    console.log(iscube(3147483648));\nconsole.log(iscube(4147483648));\nconsole.log(iscube(5147483648));\n\
    console.log(iscube(6147483648));\nconsole.log(iscube(7147483648));\nconsole.log(iscube(8147483648));\n\
    console.log(iscube(9147483648));\nconsole.log(iscube(10147483648));\nconsole.log(iscube(11147483648));\n\
    console.log(iscube(12147483648));\nconsole.log(iscube(13147483648));\nconsole.log(iscube(14147483648));\n\
    console.log(iscube(15147483648));\nconsole.log(iscube(16147483648));\nconsole.log(iscube(17147483648));\n\
    console.log(iscube(18147483648));\nconsole.log(iscube(19147483648));\nconsole.log(iscube(20147483648));\n\
    console.log(iscube(21147483648));\nconsole.log(iscube(22147483648));\nconsole.log(iscube(23147483648));\n\
    console.log(iscube(24147483648));\nconsole.log(iscube(25147483648));\nconsole.log(iscube(26147483648));\n\
    console.log(iscube(27147483648));\nconsole.log\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpab_op_hs.ts(6,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659979421
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-8));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-64));\nconsole.log(iscube(-125));\n\
    console.log(iscube(-216));\nconsole.log(iscube(-1000));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpnw7luh5y.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpnw7luh5y.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659979421
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(3));\nconsole.log(iscube(125));\nconsole.log(iscube(1));\n\
    console.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-8));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-64));\nconsole.log(iscube(-125));\n\
    console.log(iscube(-216));\nconsole.log(iscube(-1000));\nconsole.log(iscube(1.5));\n\
    console.log(iscube(2.5));\nconsole.log(iscube(3.5));\nconsole.log(iscube(4.5));\n\
    console.log(iscube(5.5));\nconsole.log(iscube(6.5));\nconsole.log(iscube(7.5));\n\
    console.log(iscube(8.5));\nconsole.log(iscube(9.5));\nconsole.log(iscube(10.5));\n\
    console.log(iscube(11.5));\nconsole.log(iscube(12.5));\nconsole.log(iscube(13.5));\n\
    console.log(iscube(14.5));\nconsole.log(iscube(15.5));\nconsole.log(iscube(16.5));\n\
    console.log(iscube(17.5));\nconsole.log(iscube(18.5));\nconsole.log(iscube(19.5));\n\
    console.log(iscube(20.5));\nconsole.log(iscube(21.5));\nconsole.log(iscube(22.5));\n\
    console.log(iscube(23.5));\nconsole.log(iscube(24.5));\nconsole.log(iscube(25.5));\n\
    console.log(iscube(26.5));\nconsole.log(iscube(27.5));\nconsole.log(iscube(28.5));\n\
    console.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy7rj1vo2.ts(54,9): error TS1003: Identifier expected.

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6jvcppcy.js:62:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6jvcppcy.js:69:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i < a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nconsole.log(iscube(27));\n\
    console.log(iscube(125));\nconsole.log(iscube(256));\nconsole.log(iscube(9));\n\
    console.log(iscube(8));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-1));\n\
    console.log(iscube(-8));\nconsole.log(iscube(-27));\nconsole.log(iscube(-125));\n\
    console.log(iscube(-256));\nconsole.log(iscube(-9));\nconsole.log(iscube(-64));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpcj6gnfpl.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpcj6gnfpl.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    false

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659979422
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ b: number = Math.cbrt(a);\n    if (b % 1 == 0) {\n        return true;\n   \
    \ } else {\n        return false;\n    }\n}\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(9));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp564a0xgb.ts(6,26): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659979422
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    return\
    \ Math.cbrt(a) % 1 === 0;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(125));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\n\
    console.log(iscube(-1));\nconsole.log(iscube(-8));\nconsole.log(iscube(-27));\n\
    console.log(iscube(-64));\nconsole.log(iscube(-125));\nconsole.log(iscube(-216));\n\
    console.log(iscube(-1000));\nconsole.log(iscube(1.5));\nconsole.log(iscube(2.5));\n\
    console.log(iscube(3.5));\nconsole.log(iscube(4.5));\nconsole.log(iscube(5.5));\n\
    console.log(iscube(6.5));\nconsole.log(iscube(7.5));\nconsole.log(iscube(8.5));\n\
    console.log(iscube(9.5));\nconsole.log(iscube(10.5));\nconsole.log(iscube(11.5));\n\
    console.log(iscube(12.5));\nconsole.log(iscube(13.5));\nconsole.log(iscube(14.5));\n\
    console.log(iscube(15.5));\nconsole.log(iscube(16.5));\nconsole.log(iscube(17.5));\n\
    console.log(iscube(18.5));\nconsole.log(iscube(19.5));\nconsole.log(iscube(20.5));\n\
    console.log(iscube(21.5));\nconsole.log(iscube(22.5));\nconsole.log(iscube(23.5));\n\
    console.log(iscube(24.5));\nconsole.log(iscube(25.5));\nconsole.log(iscube(26.5));\n\
    console.log(iscube(27.5));\nconsole.log(iscube(28.5));\nconsole.log(iscube(29.5));\n\
    console.log(iscube(30.5));\nconsole.log(iscube(31.5));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbuokbeos.ts(6,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659979422
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ result: boolean = false;\n    for (let i: number = 0; i < a; i++) {\n      \
    \  if (i * i * i === a) {\n            result = true;\n        }\n    }\n    return\
    \ result;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(29));\n\
    console.log(iscube(30));\nconsole.log(iscube(31));\nconsole.log(iscube(32));\n\
    console.log(iscube(33));\nconsole.log(iscube(34));\nconsole.log(iscube(35));\n\
    console.log(iscube(36));\nconsole.log(iscube(37));\nconsole.log(iscube(38));\n\
    console.log(iscube(39));\nconsole.log(iscube(40));\nconsole.log(iscube(41));\n\
    console.log(iscube(42));\nconsole.log(iscube(43));\nconsole.log(iscube(44));\n\
    console.log(iscube(45));\nconsole.log(iscube(46));\nconsole.log(iscube(47));\n\
    console.log(iscube(48));\nconsole.log(iscube(49));\nconsole.log(iscube(50));\n\
    console.log(iscube(51));\nconsole.log(iscube(52));\nconsole.log(iscube(53));\n\
    console.log(iscube(54));\nconsole.log(iscube(55));\nconsole.log(iscube(56));\n\
    console.log(iscube(57));\nconsole.log(iscube(58));\nconsole.log(iscube(59));\n\
    console.log(iscube(60));\nconsole.log(iscube(61));\nconsole.log(iscube(62));\n\
    console.log(iscube(63));\nconsole.log(iscube(64));\nconsole.log(iscube(65));\n\
    console.log(iscube(66));\nconsole.log(iscube(67));\nconsole.log(iscube(68));\n\
    console.log(iscube(69));\nconsole.log(iscube(70));\nconsole.log(iscube(71));\n\
    console.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpluych9a6.ts(59,9): error TS1003: Identifier expected.

    '
  timestamp: 1659979419
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(3));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(64));\nconsole.log(iscube(1000));\n\
    console.log(iscube(729));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpo94rvpz0.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpo94rvpz0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979422
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube = Math.cbrt(a);\n    return Number.isInteger(cube);\n}\n\nconsole.log(iscube(27));\n\
    console.log(iscube(256));\nconsole.log(iscube(125));\nconsole.log(iscube(1));\n\
    console.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-27));\n\
    console.log(iscube(-125));\nconsole.log(iscube(-64));\nconsole.log(iscube(64));\n\
    console.log(iscube(216));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1000000000000000000));\nconsole.log(iscube(1000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000));\nconsole.log(iscube(1000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000));\nconsole.log(iscube(1000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000));\nconsole.log(iscube(1000000000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000000000));\nconsole.log(iscube(1000000000000000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000000000000000));\nconsole.log(iscube(1000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(10000000000000000000000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(10000000000000000000000000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(10000000000000000000000000000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(10000000000000000000000000000000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpld407y1y.ts(48,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpld407y1y.ts(48,9): error TS1005: '','' expected.

    '
  timestamp: 1659979421
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube = Math.cbrt(a);\n    if (cube % 1 === 0) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1331));\nconsole.log(iscube(1728));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(3375));\n\
    console.log(iscube(4096));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    console.log(iscube(10648));\nconsole.log(iscube(12167));\nconsole.log(iscube(13824));\n\
    console.log(iscube(15625));\nconsole.log(iscube(17576));\nconsole.log(iscube(19683));\n\
    console.log(iscube(21952));\nconsole.log(iscube(24389));\nconsole.log(iscube(27000));\n\
    console.log(iscube(29791));\nconsole.log(iscube(32768));\nconsole.log(iscube(35937));\n\
    console.log(iscube(39304));\nconsole.log(iscube(42875));\nconsole.log(iscube(46656));\n\
    console.log(iscube(50653));\nconsole.log(iscube(54872));\nconsole.log(iscube(59319));\n\
    console.log(iscube(64000));\nconsole.log(iscube(68921));\nconsole.log(iscube(74088));\n\
    console.log(iscube(79507));\nconsole.log(iscube(85184));\nconsole.log\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprvrazklg.ts(6,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659979419
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube: number = 0;\n    for (let i: number = 0; i < a; i++) {\n        cube =\
    \ i * i * i;\n        if (cube === a) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpur20x7d5.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpur20x7d5.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979422
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console.log(iscube(85184));\nconsole.log(isc\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpniahb5wd.ts(56,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpniahb5wd.ts(56,9): error TS1005: '','' expected.

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(125));\n\
    console.log(iscube(1331));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdv49_955.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdv49_955.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    '
  timestamp: 1659979422
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console.log(iscube(85184));\nconsole.log(isc\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpniahb5wd.ts(56,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpniahb5wd.ts(56,9): error TS1005: '','' expected.

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i <= a) {\n        if (i * i * i === a) {\n     \
    \       return true;\n        }\n        i++;\n    }\n    return false;\n}\n\n\
    console.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsmyrh172.js:40:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsmyrh172.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979422
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n  let\
    \ i: number = 1;\n  while (i * i * i <= a) {\n    if (i * i * i === a) {\n   \
    \   return true;\n    }\n    i++;\n  }\n  return false;\n}\n\nconsole.log(iscube(27));\n\
    console.log(iscube(256));\nconsole.log(iscube(3));\nconsole.log(iscube(125));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-8));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-64));\nconsole.log(iscube(-125));\n\
    console.log(iscube(-216));\nconsole.log(iscube(-1000));\nconsole.log(iscube(-2197));\n\
    console.log(iscube(-2744));\nconsole.log(iscube(-3375));\nconsole.log(iscube(-4096));\n\
    console.log(iscube(-4913));\nconsole.log(iscube(-5832));\nconsole.log(iscube(-6859));\n\
    console.log(iscube(-8000));\nconsole.log(iscube(-9261));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8_qfi964.js:42:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8_qfi964.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659979422
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube = Math.cbrt(a);\n    if (cube % 1 === 0) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(1000));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgqley8sl.ts(6,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659979422
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube = a ** (1 / 3);\n    if (Number.isInteger(cube)) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1331));\nconsole.log(iscube(1728));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(3375));\n\
    console.log(iscube(4096));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    console.log(iscube(10648));\nconsole.log(iscube(12167));\nconsole.log(iscube(13824));\n\
    console.log(iscube(15625));\nconsole.log(iscube(17576));\nconsole.log(iscube(19683));\n\
    console.log(iscube(21952));\nconsole.log(iscube(24389));\nconsole.log(iscube(27000));\n\
    console.log(iscube(29791));\nconsole.log(iscube(32768));\nconsole.log(iscube(35937));\n\
    console.log(iscube(39304));\nconsole.log(iscube(42875));\nconsole.log(iscube(46656));\n\
    console.log(iscube(50653));\nconsole.log(iscube(54872));\nconsole.log(iscube(59319));\n\
    console.log(iscube(64000));\nconsole.log(iscube(68921));\nconsole.log(iscube(74088));\n\
    console.log(iscube(79507));\nconsole.log(iscube(85184));\nconsole.log\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2poxzixr.ts(7,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659979422
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(3));\nconsole.log(iscube(125));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpzhxhqgzb.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpzhxhqgzb.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    '
  timestamp: 1659979422
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp81vq5aax.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp81vq5aax.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    true

    true

    false

    '
  timestamp: 1659979422
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i < a; i++) {\n        if (i ** 3 === a) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(722));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpoqtbyxbn.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpoqtbyxbn.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    false

    false

    false

    '
  timestamp: 1659979422
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(3));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-27));\n\
    console.log(iscube(-64));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpammb6co9.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpammb6co9.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    false

    false

    false

    false

    '
  timestamp: 1659979422
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(3));\n\
    console.log(iscube(125));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\n\
    console.log(iscube(-1));\nconsole.log(iscube(-27));\nconsole.log(iscube(-125));\n\
    console.log(iscube(-64));\nconsole.log(iscube(-8));\nconsole.log(iscube(-1000));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmprriuhxny.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprriuhxny.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    true

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659979422
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube: number = 0;\n    for (let i: number = 0; i < a; i++) {\n        cube =\
    \ i * i * i;\n        if (cube === a) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvhz5vwdx.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvhz5vwdx.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979422
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(64));\n\
    console.log(iscube(65));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp17a3qc69.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp17a3qc69.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659979422
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    return\
    \ Math.cbrt(a) % 1 === 0;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(0));\nconsole.log(iscube(1));\nconsole.log(iscube(8));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdmut9d10.ts(6,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659979422
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1));\nconsole.log(iscube(3));\n\
    console.log(iscube(9));\nconsole.log(iscube(15));\nconsole.log(iscube(17));\n\
    console.log(iscube(18));\nconsole.log(iscube(19));\nconsole.log(iscube(22));\n\
    console.log(iscube(23));\nconsole.log(iscube(24));\nconsole.log(iscube(25));\n\
    console.log(iscube(26));\nconsole.log(iscube(28));\nconsole.log(iscube(29));\n\
    console.log(iscube(30));\nconsole.log(iscube(31));\nconsole.log(iscube(32));\n\
    console.log(iscube(33));\nconsole.log(iscube(34));\nconsole.log(iscube(35));\n\
    console.log(iscube(36));\nconsole.log(iscube(37));\nconsole.log(iscube(38));\n\
    console.log(iscube(39));\nconsole.log(iscube(40));\nconsole.log(iscube(41));\n\
    console.log(iscube(42));\nconsole.log(iscube(43));\nconsole.log(iscube(44));\n\
    console.log(iscube(45));\nconsole.log(iscube(46));\nconsole.log(iscube(47));\n\
    console.log(iscube(48));\nconsole.log(iscube(49));\nconsole.log(iscube(50));\n\
    console.log(iscube(51));\nconsole.log(iscube(52));\nconsole.log(iscube(53));\n\
    console.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9idio6kb.js:66:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9idio6kb.js:73:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659979424
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube: number = 0;\n    let i: number = 0;\n    while (cube < a) {\n        i++;\n\
    \        cube = i * i * i;\n    }\n    return cube === a;\n}\n\nconsole.log(iscube(27));\n\
    console.log(iscube(256));\nconsole.log(iscube(125));\nconsole.log(iscube(1));\n\
    console.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-8));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-64));\nconsole.log(iscube(-125));\n\
    console.log(iscube(-216));\nconsole.log(iscube(-1000));\nconsole.log(iscube(1000000));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmps4n7k5oz.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmps4n7k5oz.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    true

    '
  timestamp: 1659979424
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i <= a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpj9vlywwq.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpj9vlywwq.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    '
  timestamp: 1659979424
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console.log(iscube(85184));\nconsole.log(isc\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpniahb5wd.ts(56,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpniahb5wd.ts(56,9): error TS1005: '','' expected.

    '
  timestamp: 1659979417
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    if\
    \ (a < 0) {\n        return false;\n    }\n    let cube = Math.cbrt(a);\n    if\
    \ (cube % 1 === 0) {\n        return true;\n    }\n    return false;\n}\nconsole.log(iscube(27));\n\
    console.log(iscube(256));\nconsole.log(iscube(0));\nconsole.log(iscube(-8));\n\
    console.log(iscube(1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxteysfu7.ts(9,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659979424
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(1));\n\
    console.log(iscube(8));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    console.log(iscube(10648));\nconsole.log(iscube(12167));\nconsole.log(iscube(13824));\n\
    console.log(iscube(15625));\nconsole.log(iscube(17576));\nconsole.log(iscube(19683));\n\
    console.log(iscube(21952));\nconsole.log(iscube(24389));\nconsole.log(iscube(27000));\n\
    console.log(iscube(29791));\nconsole.log(iscube(32768));\nconsole.log(iscube(35937));\n\
    console.log(iscube(39304));\nconsole.log(iscube(42875));\nconsole.log(iscube(46656));\n\
    console.log(iscube(50653));\nconsole.log(iscube(54872));\nconsole.log(iscube(59319));\n\
    console.log(iscube(64000));\nconsole.log(iscube(68921));\nconsole.log(iscube(74088));\n\
    console.log(iscube(79507));\nconsole.log(iscube(85184));\nconsole.log(iscube(91125));\n\
    console.log(iscube(97336));\nconsole.log(iscube(103823));\nconsole.log(iscube(110592));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgyroggo6.js:62:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgyroggo6.js:69:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979424
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(3));\nconsole.log(iscube(125));\nconsole.log(iscube(1));\n\
    console.log(iscube(0));\nconsole.log(iscube(-27));\nconsole.log(iscube(-64));\n\
    console.log(iscube(-125));\nconsole.log(iscube(-1));\nconsole.log(iscube(-0));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmplor5byaw.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmplor5byaw.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    true

    true

    false

    false

    false

    false

    true

    '
  timestamp: 1659979424
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i < a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1331));\nconsole.log(iscube(1728));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(3375));\n\
    console.log(iscube(4096));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp79k89xwl.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp79k89xwl.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979419
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n  let\
    \ i: number = 1;\n  while (i * i * i <= a) {\n    if (i * i * i === a) {\n   \
    \   return true;\n    }\n    i++;\n  }\n  return false;\n}\n\nconsole.log(iscube(27));\n\
    console.log(iscube(256));\nconsole.log(iscube(3));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu8b1zlha.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu8b1zlha.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    '
  timestamp: 1659979424
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i < a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nconsole.log(iscube(27));\n\
    console.log(iscube(28));\nconsole.log(iscube(29));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmplyn8m8xr.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmplyn8m8xr.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    '
  timestamp: 1659979424
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmq9ln4yx.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpmq9ln4yx.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console.log(iscube(85184));\nconsole.log(isc\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpniahb5wd.ts(56,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpniahb5wd.ts(56,9): error TS1005: '','' expected.

    '
  timestamp: 1659979417
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console.log(iscube(85184));\nconsole.log(\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpso8kib0k.ts(57,9): error TS1005: '','' expected.

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i <= a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxnhdetzh.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxnhdetzh.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979424
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-8));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-64));\nconsole.log(iscube(-125));\n\
    console.log(iscube(-216));\nconsole.log(iscube(-1000));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpka0qg60x.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpka0qg60x.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659979424
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(729));\nconsole.log(iscube(1));\n\
    console.log(iscube(0));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxjcm8bvk.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxjcm8bvk.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    true

    true

    '
  timestamp: 1659979424
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i < a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1331));\nconsole.log(iscube(1728));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(3375));\n\
    console.log(iscube(4096));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    console.log(iscube(10648));\nconsole.log(iscube(12167));\nconsole.log(iscube(13824));\n\
    console.log(iscube(15625));\nconsole.log(iscube(17576));\nconsole.log(iscube(19683));\n\
    console.log(iscube(21952));\nconsole.log(iscube(24389));\nconsole.log(iscube(27000));\n\
    console.log(iscube(29791));\nconsole.log(iscube(32768));\nconsole.log(iscube(35937));\n\
    console.log(iscube(39304));\nconsole.log(iscube(42875));\nconsole.log(iscube(46656));\n\
    console.log(iscube(50653));\nconsole.log(iscube(54872));\nconsole.log(iscube(59319));\n\
    console.log(iscube(64000));\nconsole.log(iscube(68921));\nconsole.log(iscube(74088));\n\
    console.log(iscube(79507));\nconsole.log(iscube(85184));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqch697e_.js:59:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpqch697e_.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979419
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\
    console.log(iscube(125));\nconsole.log(iscube(256));\nconsole.log(iscube(1));\n\
    console.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-27));\n\
    console.log(iscube(-28));\nconsole.log(iscube(-125));\nconsole.log(iscube(-256));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpuqdq_9ny.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpuqdq_9ny.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    true

    true

    false

    false

    false

    false

    false

    '
  timestamp: 1659979424
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(8));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-8));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-28));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkkfpl8pl.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpkkfpl8pl.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    false

    false

    false

    false

    false

    '
  timestamp: 1659979424
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjbxh1ohg.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjbxh1ohg.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjbxh1ohg.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjbxh1ohg.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(27));\nconsole.log(iscube(64));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(343));\nconsole.log(iscube(512));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\nconsole.log(iscube(1331));\n\
    console.log(iscube(1728));\nconsole.log(iscube(2197));\nconsole.log(iscube(2744));\n\
    console.log(iscube(3375));\nconsole.log(iscube(4096));\nconsole.log(iscube(4913));\n\
    console.log(iscube(5832));\nconsole.log(iscube(6859));\nconsole.log(iscube(8000));\n\
    console.log(iscube(9261));\nconsole.log(iscube(10648));\nconsole.log(iscube(12167));\n\
    console.log(iscube(13824));\nconsole.log(iscube(15625));\nconsole.log(iscube(17576));\n\
    console.log(iscube(19683));\nconsole.log(iscube(21952));\nconsole.log(iscube(24389));\n\
    console.log(iscube(27000));\nconsole.log(iscube(29791));\nconsole.log(iscube(32768));\n\
    console.log(iscube(35937));\nconsole.log(iscube(39304));\nconsole.log(iscube(42875));\n\
    console.log(iscube(46656));\nconsole.log(iscube(50653));\nconsole.log(iscube(54872));\n\
    console.log(iscube(59319));\nconsole.log(iscube(64000));\nconsole.log(iscube(68921));\n\
    console.log(iscube(74088));\nconsole.log(iscube(79507));\nconsole.log(iscube(85184));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp424b525r.js:62:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp424b525r.js:69:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979424
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(3));\n\
    console.log(iscube(4));\nconsole.log(iscube(5));\nconsole.log(iscube(6));\nconsole.log(iscube(7));\n\
    console.log(iscube(8));\nconsole.log(iscube(9));\nconsole.log(iscube(10));\nconsole.log(iscube(11));\n\
    console.log(iscube(12));\nconsole.log(iscube(13));\nconsole.log(iscube(14));\n\
    console.log(iscube(15));\nconsole.log(iscube(16));\nconsole.log(iscube(17));\n\
    console.log(iscube(18));\nconsole.log(iscube(19));\nconsole.log(iscube(20));\n\
    console.log(iscube(21));\nconsole.log(iscube(22));\nconsole.log(iscube(23));\n\
    console.log(iscube(24));\nconsole.log(iscube(25));\nconsole.log(iscube(26));\n\
    console.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(29));\n\
    console.log(iscube(30));\nconsole.log(iscube(31));\nconsole.log(iscube(32));\n\
    console.log(iscube(33));\nconsole.log(iscube(34));\nconsole.log(iscube(35));\n\
    console.log(iscube(36));\nconsole.log(iscube(37));\nconsole.log(iscube(38));\n\
    console.log(iscube(39));\nconsole.log(iscube(40));\nconsole.log(iscube(41));\n\
    console.log(iscube(42));\nconsole.log(iscube(43));\nconsole.log(iscube(44));\n\
    console.log(iscube(45));\nconsole.log(\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxx74x4n3.ts(61,9): error TS1005: '','' expected.

    '
  timestamp: 1659979424
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i < a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nconsole.log(iscube(27));\n\
    console.log(iscube(256));\nconsole.log(iscube(125));\nconsole.log(iscube(1));\n\
    console.log(iscube(3));\nconsole.log(iscube(8));\nconsole.log(iscube(26));\nconsole.log(iscube(1728));\n\
    console.log(iscube(0));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1));\nconsole.log(iscube(125));\n\
    console.log(iscube(64));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(4913));\n\
    console.log(iscube(5832));\nconsole.log(iscube(6859));\nconsole.log(iscube(8000));\n\
    console.log(iscube(9261));\nconsole.log(iscube(10648));\nconsole.log(iscube(12167));\n\
    console.log(iscube(13824));\nconsole.log(iscube(15504));\nconsole.log(iscube(17281));\n\
    console.log(iscube(19600));\nconsole.log(iscube(21952));\nconsole.log(iscube(24389));\n\
    console.log(iscube(27000));\nconsole.log(iscube(29791));\nconsole.log(iscube(32768));\n\
    console.log(iscube(35937));\nconsole.log(iscube(39304));\nconsole.log(iscube(42875));\n\
    console.log(iscube(46656));\nconsole.log(iscube(50653));\nconsole.log(iscube(54872));\n\
    console.log(iscube(59319));\nconsole.log(iscube(64000));\nconsole.log(iscube\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkcdj9_k8.ts(58,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpkcdj9_k8.ts(58,9): error TS1005: '','' expected.

    '
  timestamp: 1659979424
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(8));\n\
    console.log(iscube(9));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8wdp2rzm.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8wdp2rzm.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    true

    false

    '
  timestamp: 1659979424
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i <= a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(1000));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpr0mgcevb.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpr0mgcevb.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979425
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(125));\n\
    console.log(iscube(1331));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphvx4ije7.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphvx4ije7.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    '
  timestamp: 1659979421
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console.log(iscube(85184));\nconsole.log(isc\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpniahb5wd.ts(56,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpniahb5wd.ts(56,9): error TS1005: '','' expected.

    '
  timestamp: 1659979417
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube = Math.cbrt(a);\n    if (cube % 1 === 0) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(125));\nconsole.log(iscube(1));\nconsole.log(iscube(12));\n\
    console.log(iscube(9));\nconsole.log(iscube(8));\nconsole.log(iscube(7));\nconsole.log(iscube(6));\n\
    console.log(iscube(5));\nconsole.log(iscube(4));\nconsole.log(iscube(3));\nconsole.log(iscube(2));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-2));\n\
    console.log(iscube(-3));\nconsole.log(iscube(-4));\nconsole.log(iscube(-5));\n\
    console.log(iscube(-6));\nconsole.log(iscube(-7));\nconsole.log(iscube(-8));\n\
    console.log(iscube(-9));\nconsole.log(iscube(-10));\nconsole.log(iscube(-11));\n\
    console.log(iscube(-12));\nconsole.log(iscube(-13));\nconsole.log(iscube(-14));\n\
    console.log(iscube(-15));\nconsole.log(iscube(-16));\nconsole.log(iscube(-17));\n\
    console.log(iscube(-18));\nconsole.log(iscube(-19));\nconsole.log(iscube(-20));\n\
    console.log(iscube(-21));\nconsole.log(iscube(-22));\nconsole.log(iscube(-23));\n\
    console.log(iscube(-24));\nconsole.log(iscube(-25));\nconsole.log(iscube(-26));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-28));\nconsole.log(iscube(-29));\n\
    console.log(iscube(-30));\nconsole.log(iscube(-31));\nconsole.log(iscube(-\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3ttkyjef.ts(60,9): error TS1005: '','' expected.

    '
  timestamp: 1659979425
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube: number = 0;\n    for (let i: number = 0; i < a; i++) {\n        cube =\
    \ i * i * i;\n        if (cube === a) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\
    console.log(iscube(1));\nconsole.log(iscube(8));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(4913));\n\
    console.log(iscube(5832));\nconsole.log(iscube(6859));\nconsole.log(iscube(8000));\n\
    console.log(iscube(9261));\nconsole.log(iscube(10648));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmph6dmjy1n.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmph6dmjy1n.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979425
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(125));\n\
    console.log(iscube(1331));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7cike9r6.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7cike9r6.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    '
  timestamp: 1659979425
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmppmn9la0j.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppmn9la0j.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    '
  timestamp: 1659979425
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ x: number = Math.cbrt(a);\n    if (x % 1 == 0) {\n        return true;\n   \
    \ } else {\n        return false;\n    }\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1331));\nconsole.log(iscube(1728));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(3375));\n\
    console.log(iscube(4096));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    console.log(iscube(10648));\nconsole.log(iscube(12167));\nconsole.log(iscube(13824));\n\
    console.log(iscube(15625));\nconsole.log(iscube(17576));\nconsole.log(iscube(19683));\n\
    console.log(iscube(21952));\nconsole.log(iscube(24389));\nconsole.log(iscube(27000));\n\
    console.log(iscube(29791));\nconsole.log(iscube(32768));\nconsole.log(iscube(35937));\n\
    console.log(iscube(39304));\nconsole.log(iscube(42875));\nconsole.log(iscube(46656));\n\
    console.log(iscube(50653));\nconsole.log(iscube(54872));\nconsole.log(iscube(59319));\n\
    console.log(iscube(64000));\nconsole.log(iscube(68921));\nconsole.log(iscube(74088));\n\
    console.log(iscube(79507));\nconsole.log(iscube(85184));\nconsole\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpicld5fnh.ts(6,26): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659979425
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(125));\n\
    console.log(iscube(1331));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpm_oacz7x.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm_oacz7x.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ b: number = Math.pow(a, 1 / 3);\n    if (b % 1 == 0) {\n        return true;\n\
    \    }\n    else {\n        return false;\n    }\n}\nconsole.log(iscube(8));\n\
    console.log(iscube(27));\nconsole.log(iscube(64));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(343));\nconsole.log(iscube(512));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\nconsole.log(iscube(1331));\n\
    console.log(iscube(1728));\nconsole.log(iscube(2197));\nconsole.log(iscube(2744));\n\
    console.log(iscube(3375));\nconsole.log(iscube(4096));\nconsole.log(iscube(4913));\n\
    console.log(iscube(5832));\nconsole.log(iscube(6859));\nconsole.log(iscube(8000));\n\
    console.log(iscube(9261));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyxlcloc2.js:39:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpyxlcloc2.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    false

    false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659979426
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\
    console.log(iscube(125));\nconsole.log(iscube(256));\nconsole.log(iscube(512));\n\
    console.log(iscube(1000));\nconsole.log(iscube(10000));\nconsole.log(iscube(100000));\n\
    console.log(iscube(1000000));\nconsole.log(iscube(10000000));\nconsole.log(iscube(100000000));\n\
    console.log(iscube(1000000000));\nconsole.log(iscube(10000000000));\nconsole.log(iscube(100000000000));\n\
    console.log(iscube(1000000000000));\nconsole.log(iscube(10000000000000));\nconsole.log(iscube(100000000000000));\n\
    console.log(iscube(1000000000000000));\nconsole.log(iscube(10000000000000000));\n\
    console.log(iscube(100000000000000000));\nconsole.log(iscube(1000000000000000000));\n\
    console.log(iscube(10000000000000000000));\nconsole.log(iscube(100000000000000000000));\n\
    console.log(iscube(1000000000000000000000));\nconsole.log(iscube(10000000000000000000000));\n\
    console.log(iscube(100000000000000000000000));\nconsole.log(iscube(1000000000000000000000000));\n\
    console.log(iscube(10000000000000000000000000));\nconsole.log(iscube(100000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000));\nconsole.log(iscube(10000000000000000000000000000));\n\
    console.log(iscube(100000000000000000000000000000));\nconsole.log(iscube(1000000000000000000000000000000));\n\
    console.log(iscube(10000000000000000000000000000000));\nconsole.log(iscube(100000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000));\nconsole.log(iscube(10000000000000000000000000000000000));\n\
    console.log(iscube(100000000000000000000000000000000000));\nconsole.log(iscube(1000000000000000000000000000000000000));\n\
    console.log(iscube\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3wd5kz3c.ts(53,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp3wd5kz3c.ts(53,9): error TS1005: '','' expected.

    '
  timestamp: 1659979426
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6jvcppcy.js:62:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6jvcppcy.js:69:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmq9ln4yx.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpmq9ln4yx.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console.log(iscube(85184));\nconsole.log(isc\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpniahb5wd.ts(56,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpniahb5wd.ts(56,9): error TS1005: '','' expected.

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmq9ln4yx.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpmq9ln4yx.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(29));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpfcvn3ztc.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpfcvn3ztc.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    '
  timestamp: 1659979426
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ x: number = Math.sqrt(a);\n    return Number.isInteger(x);\n}\nconsole.log(iscube(27));\n\
    console.log(iscube(256));\nconsole.log(iscube(125));\nconsole.log(iscube(1));\n\
    console.log(iscube(0));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6mrihn95.ts(7,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659979426
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console.log(iscube(85184));\nconsole.log(isc\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpniahb5wd.ts(56,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpniahb5wd.ts(56,9): error TS1005: '','' expected.

    '
  timestamp: 1659979417
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(8));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-8));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-64));\nconsole.log(iscube(-125));\n\
    console.log(iscube(-216));\nconsole.log(iscube(-1000));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(2187));\nconsole.log(iscube(3375));\nconsole.log(iscube(4913));\n\
    console.log(iscube(6859));\nconsole.log(iscube(9261));\nconsole.log(iscube(13832));\n\
    console.log(iscube(19683));\nconsole.log(iscube(234256));\nconsole.log(iscube(2097152));\n\
    console.log(iscube(4782969));\nconsole.log(iscube(16777216));\nconsole.log(iscube(282475249));\n\
    console.log(iscube(1073741824));\nconsole.log(iscube(1610612736));\nconsole.log(iscube(134217728));\n\
    console.log(iscube(34359738368));\nconsole.log(iscube(35184372088832));\nconsole.log(iscube(387420489));\n\
    console.log(iscube(1099511627776));\nconsole.log(iscube(285311670611));\nconsole.log(iscube(576650390625));\n\
    console.log(iscube(1152921504606846976));\nconsole.log(iscube(13407807929942597099574024998));\n\
    console.log(iscube(900\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpf9zpfztc.ts(52,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpf9zpfztc.ts(52,9): error TS1005: '','' expected.

    '
  timestamp: 1659979426
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmptmk6g79y.js:63:12)\n    at\
    \ Object.<anonymous> (/tmp/tmptmk6g79y.js:70:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ result: boolean = false;\n    for (let i: number = 0; i < a; i++) {\n      \
    \  if (i * i * i === a) {\n            result = true;\n        }\n    }\n    return\
    \ result;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(29));\n\
    console.log(iscube(30));\nconsole.log(iscube(31));\nconsole.log(iscube(32));\n\
    console.log(iscube(33));\nconsole.log(iscube(34));\nconsole.log(iscube(35));\n\
    console.log(iscube(36));\nconsole.log(iscube(37));\nconsole.log(iscube(38));\n\
    console.log(iscube(39));\nconsole.log(iscube(40));\nconsole.log(iscube(41));\n\
    console.log(iscube(42));\nconsole.log(iscube(43));\nconsole.log(iscube(44));\n\
    console.log(iscube(45));\nconsole.log(iscube(46));\nconsole.log(iscube(47));\n\
    console.log(iscube(48));\nconsole.log(iscube(49));\nconsole.log(iscube(50));\n\
    console.log(iscube(51));\nconsole.log(iscube(52));\nconsole.log(iscube(53));\n\
    console.log(iscube(54));\nconsole.log(iscube(55));\nconsole.log(iscube(56));\n\
    console.log(iscube(57));\nconsole.log(iscube(58));\nconsole.log(iscube(59));\n\
    console.log(iscube(60));\nconsole.log(iscube(61));\nconsole.log(iscube(62));\n\
    console.log(iscube(63));\nconsole.log(iscube(64));\nconsole.log(iscube(65));\n\
    console.log(iscube(66));\nconsole.log(iscube(67));\nconsole.log(iscube(68));\n\
    console.log(iscube(69));\nconsole.log(iscube(70));\nconsole.log(iscube(71));\n\
    console.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpluych9a6.ts(59,9): error TS1003: Identifier expected.

    '
  timestamp: 1659979419
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i < a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjn4uwhe5.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjn4uwhe5.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979427
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(3));\nconsole.log(iscube(125));\nconsole.log(iscube(1));\n\
    console.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-8));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-64));\nconsole.log(iscube(-125));\n\
    console.log(iscube(-216));\nconsole.log(iscube(-1000));\nconsole.log(iscube(16777216));\n\
    console.log(iscube(16777217));\nconsole.log(iscube(4096));\nconsole.log(iscube(4097));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpm29ou4kv.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm29ou4kv.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    true

    false

    true

    false

    '
  timestamp: 1659979427
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube = Math.cbrt(a);\n    if (cube % 1 === 0) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\
    console.log(iscube(29));\nconsole.log(iscube(30));\nconsole.log(iscube(31));\n\
    console.log(iscube(32));\nconsole.log(iscube(33));\nconsole.log(iscube(34));\n\
    console.log(iscube(35));\nconsole.log(iscube(36));\nconsole.log(iscube(37));\n\
    console.log(iscube(38));\nconsole.log(iscube(39));\nconsole.log(iscube(40));\n\
    console.log(iscube(41));\nconsole.log(iscube(42));\nconsole.log(iscube(43));\n\
    console.log(iscube(44));\nconsole.log(iscube(45));\nconsole.log(iscube(46));\n\
    console.log(iscube(47));\nconsole.log(iscube(48));\nconsole.log(iscube(49));\n\
    console.log(iscube(50));\nconsole.log(iscube(51));\nconsole.log(iscube(52));\n\
    console.log(iscube(53));\nconsole.log(iscube(54));\nconsole.log(iscube(55));\n\
    console.log(iscube(56));\nconsole.log(iscube(57));\nconsole.log(iscube(58));\n\
    console.log(iscube(59));\nconsole.log(iscube(60));\nconsole.log(iscube(61));\n\
    console.log(iscube(62));\nconsole.log(iscube(63));\nconsole.log(iscube(64));\n\
    console.log(iscube(65));\nconsole.log(iscube(66));\nconsole.log(iscube(67));\n\
    console.log(iscube(68));\nconsole.log(iscube(69));\nconsole.log(iscube(70));\n\
    console.log(iscube(71));\nconsole.log(iscube(72));\nconsole.log(iscube\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpn6pgj1ay.ts(61,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpn6pgj1ay.ts(61,9): error TS1005: '','' expected.

    '
  timestamp: 1659979427
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube: number = 0;\n    for (let i: number = 0; i <= a; i++) {\n        cube\
    \ = i * i * i;\n        if (cube === a) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1331));\nconsole.log(iscube(1728));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(3375));\n\
    console.log(iscube(4096));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    console.log(iscube(10648));\nconsole.log(iscube(12167));\nconsole.log(iscube(13824));\n\
    console.log(iscube(15625));\nconsole.log(iscube(17576));\nconsole.log(iscube(19683));\n\
    console.log(iscube(21952));\nconsole.log(iscube(24389));\nconsole.log(iscube(27000));\n\
    console.log(iscube(29791));\nconsole.log(iscube(32768));\nconsole.log(iscube(35937));\n\
    console.log(iscube(39304));\nconsole.log(iscube(42875));\nconsole.log(iscube(46656));\n\
    console.log(iscube(50653));\nconsole.log(iscube(54872));\nconsole.log(iscube(59319));\n\
    console.log(iscube(64000));\nconsole.log(iscube(68921));\nconsole.log(iscube(74088));\n\
    console.log(isc\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqldxbdzf.ts(57,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpqldxbdzf.ts(57,9): error TS1005: '','' expected.

    '
  timestamp: 1659979427
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(3));\n\
    console.log(iscube(125));\nconsole.log(iscube(1));\nconsole.log(iscube(8));\n\
    console.log(iscube(64));\nconsole.log(iscube(216));\nconsole.log(iscube(1000));\n\
    console.log(iscube(729));\nconsole.log(iscube(343));\nconsole.log(iscube(512));\n\
    console.log(iscube(1000000));\nconsole.log(iscube(10000000000));\nconsole.log(iscube(10000000000000));\n\
    console.log(iscube(1000000000000000000));\nconsole.log(iscube(1000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000));\nconsole.log(iscube(1000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000));\nconsole.log(iscube(1000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000));\nconsole.log(iscube(1000000000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000000000));\nconsole.log(iscube(1000000000000000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000000000000000));\nconsole.log(iscube(1000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(1000000000000000000000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(10000000000000000000000000000000000000000000000000000000000000000000000000));\n\
    console.log(iscube(10000000000000000000000000000000000000000000000000000000000000000000000000000));\n\
    console.log(isc\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp98nlrohp.ts(53,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp98nlrohp.ts(53,9): error TS1005: '','' expected.

    '
  timestamp: 1659979427
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console.log(iscube(85184));\nconsole.log(isc\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpniahb5wd.ts(56,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpniahb5wd.ts(56,9): error TS1005: '','' expected.

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(3));\n\
    console.log(iscube(125));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\n\
    console.log(iscube(-1));\nconsole.log(iscube(-27));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpf_zjytlp.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpf_zjytlp.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    true

    false

    false

    false

    '
  timestamp: 1659979427
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i < a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nconsole.log(iscube(27));\n\
    console.log(iscube(28));\nconsole.log(iscube(8));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\n\
    console.log(iscube(-1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpom179_1h.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpom179_1h.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    false

    false

    '
  timestamp: 1659979427
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube: number = 0;\n    for (let i: number = 0; i < a; i++) {\n        cube =\
    \ i * i * i;\n        if (cube === a) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1331));\nconsole.log(iscube(1728));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(3375));\n\
    console.log(iscube(4096));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    console.log(iscube(10648));\nconsole.log(iscube(12167));\nconsole.log(iscube(13824));\n\
    console.log(iscube(15625));\nconsole.log(iscube(17576));\nconsole.log(iscube(19683));\n\
    console.log(iscube(21952));\nconsole.log(iscube(24389));\nconsole.log(iscube(27000));\n\
    console.log(iscube(29791));\nconsole.log(iscube(32768));\nconsole.log(iscube(35937));\n\
    console.log(iscube(39304));\nconsole.log(iscube(42875));\nconsole.log(iscube(46656));\n\
    console.log(iscube(50653));\nconsole.log(iscube(54872));\nconsole.log(iscube(59319));\n\
    console.log(iscube(64000));\nconsole.log(iscube(68921));\nconsole.log(iscube(74088));\n\
    console.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjw858dwa.ts(58,9): error TS1005: '','' expected.

    '
  timestamp: 1659979427
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(125));\n\
    console.log(iscube(256));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpah82efu_.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpah82efu_.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659979427
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ result: boolean = false;\n    for (let i: number = 0; i < a; i++) {\n      \
    \  if (i * i * i === a) {\n            result = true;\n        }\n    }\n    return\
    \ result;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(8));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-8));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-28));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpijwxu9gh.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpijwxu9gh.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659979427
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube = Math.cbrt(a);\n    if (cube % 1 === 0) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\
    console.log(iscube(29));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwo7j01kv.ts(6,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659979427
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\
    console.log(iscube(1));\nconsole.log(iscube(8));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(4913));\n\
    console.log(iscube(5832));\nconsole.log(iscube(6859));\nconsole.log(iscube(8000));\n\
    console.log(iscube(9261));\nconsole.log(iscube(10648));\nconsole.log(iscube(12167));\n\
    console.log(iscube(13824));\nconsole.log(iscube(15129));\nconsole.log(iscube(17576));\n\
    console.log(iscube(19683));\nconsole.log(iscube(21952));\nconsole.log(iscube(24389));\n\
    console.log(iscube(27000));\nconsole.log(iscube(29791));\nconsole.log(iscube(32768));\n\
    console.log(iscube(35937));\nconsole.log(iscube(39304));\nconsole.log(iscube(42875));\n\
    console.log(iscube(46656));\nconsole.log(iscube(50653));\nconsole.log(iscube(54872));\n\
    console.log(iscube(59319));\nconsole.log(iscube(64000));\nconsole.log(iscube(68921));\n\
    console.log(iscube(74088));\nconsole.log(iscube(79507));\nconsole.log(iscube(85184));\n\
    console.log(iscube(91125));\nconsole.log(iscube(97336));\nconsole.log(iscube(103823));\n\
    console.log(iscube(110592));\nconsole.log(iscube(117649));\nconsole.\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprc_niv4e.ts(56,9): error TS1003: Identifier expected.

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i <= a; i++) {\n        if (i ** 3 === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(7));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdj2ub9bb.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdj2ub9bb.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    false

    '
  timestamp: 1659979427
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6jvcppcy.js:62:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6jvcppcy.js:69:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube = Math.cbrt(a);\n    if (cube % 1 === 0) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(125));\nconsole.log(iscube(1));\nconsole.log(iscube(3));\n\
    console.log(iscube(8));\nconsole.log(iscube(26));\nconsole.log(iscube(1728));\n\
    console.log(iscube(0));\nconsole.log(iscube(125));\nconsole.log(iscube(64));\n\
    console.log(iscube(216));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1));\nconsole.log(iscube(12));\nconsole.log(iscube(1728));\n\
    console.log(iscube(5832));\nconsole.log(iscube(7000));\nconsole.log(iscube(531441));\n\
    console.log(iscube(4104));\nconsole.log(iscube(13824));\nconsole.log(iscube(20736));\n\
    console.log(iscube(24389));\nconsole.log(iscube(32805));\nconsole.log(iscube(4096));\n\
    console.log(iscube(6561));\nconsole.log(iscube(13832));\nconsole.log(iscube(20736));\n\
    console.log(iscube(28561));\nconsole.log(iscube(38416));\nconsole.log(iscube(50653));\n\
    console.log(iscube(65536));\nconsole.log(iscube(83521));\nconsole.log(iscube(103823));\n\
    console.log(iscube(130321));\nconsole.log(iscube(166375));\nconsole.log(iscube(208544));\n\
    console.log(iscube(262144));\nconsole.log(iscube(331777));\nconsole.log(iscube(419904));\n\
    console.log(iscube(524169));\nconsole.log(iscube(658503));\nconsole\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv1ziyb4n.ts(6,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659979427
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console.log(iscube(85184));\nconsole.log(isc\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpniahb5wd.ts(56,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpniahb5wd.ts(56,9): error TS1005: '','' expected.

    '
  timestamp: 1659979417
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i < a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nconsole.log(iscube(27));\n\
    console.log(iscube(256));\nconsole.log(iscube(125));\nconsole.log(iscube(1));\n\
    console.log(iscube(0));\nconsole.log(iscube(8));\nconsole.log(iscube(64));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(1000));\nconsole.log(iscube(125));\n\
    console.log(iscube(1000));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7hwgnzs5.js:63:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7hwgnzs5.js:72:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979427
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-8));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-64));\nconsole.log(iscube(-125));\n\
    console.log(iscube(-216));\nconsole.log(iscube(-1000));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpnw7luh5y.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpnw7luh5y.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659979421
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube = Math.cbrt(a);\n    if (cube % 1 === 0) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1331));\nconsole.log(iscube(1728));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(3375));\n\
    console.log(iscube(4096));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpn6g7y6eb.ts(6,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659979427
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i <= a; i++) {\n        if (i ** 3 === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nconsole.log(iscube(27));\n\
    console.log(iscube(28));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(512));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\n\
    console.log(iscube(125));\nconsole.log(iscube(3));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpe0w22pjg.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe0w22pjg.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    true

    true

    true

    false

    '
  timestamp: 1659979427
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(3));\n\
    console.log(iscube(125));\nconsole.log(iscube(1));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9zk9cg3r.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9zk9cg3r.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    true

    '
  timestamp: 1659979428
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(125));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-8));\n\
    console.log(iscube(-27));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbjkg7eix.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbjkg7eix.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    false

    false

    false

    '
  timestamp: 1659979427
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(8));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-8));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-64));\nconsole.log(iscube(-125));\n\
    console.log(iscube(-216));\nconsole.log(iscube(-1000));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(1000));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6lism2b6.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6lism2b6.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    false

    false

    false

    false

    false

    false

    false

    true

    true

    true

    '
  timestamp: 1659979428
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ x: number = 1;\n    while (x * x * x < a) {\n        x++;\n    }\n    if (x\
    \ * x * x == a) {\n        return true;\n    }\n    else {\n        return false;\n\
    \    }\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp40rfrtcs.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp40rfrtcs.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    '
  timestamp: 1659979428
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    for\
    \ (let i = 0; i <= a; i++) {\n        if (i * i * i === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nconsole.log(iscube(27));\n\
    console.log(iscube(28));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(729));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpq8t5f589.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpq8t5f589.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    true

    true

    '
  timestamp: 1659979428
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmq9ln4yx.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpmq9ln4yx.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube: number = 0;\n    for (let i: number = 0; i < a; i++) {\n        cube =\
    \ i * i * i;\n        if (cube === a) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1331));\nconsole.log(iscube(1728));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(3375));\n\
    console.log(iscube(4096));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    console.log(iscube(10648));\nconsole.log(iscube(12167));\nconsole.log(iscube(13824));\n\
    console.log(iscube(15625));\nconsole.log(iscube(17576));\nconsole.log(iscube(19683));\n\
    console.log(iscube(21952));\nconsole.log(iscube(24389));\nconsole.log(iscube(27000));\n\
    console.log(iscube(29791));\nconsole.log(iscube(32768));\nconsole.log(iscube(35937));\n\
    console.log(iscube(39304));\nconsole.log(iscube(42875));\nconsole.log(iscube(46656));\n\
    console.log(iscube(50653));\nconsole.log(iscube(54872));\nconsole.log(iscube(59319));\n\
    console.log(iscube(64000));\nconsole.log(iscube(68921));\nconsole.log(iscube(74088));\n\
    console.log(isc\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpldkwmlgz.ts(57,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpldkwmlgz.ts(57,9): error TS1005: '','' expected.

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp27velock.js:40:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp27velock.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979428
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ result: boolean = false;\n    for (let i: number = 0; i < a; i++) {\n      \
    \  if (i * i * i === a) {\n            result = true;\n        }\n    }\n    return\
    \ result;\n}\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsj85zoar.ts(57,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpsj85zoar.ts(57,9): error TS1005: '','' expected.

    '
  timestamp: 1659979428
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    return\
    \ Math.cbrt(a) % 1 === 0;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(64));\nconsole.log(iscube(1));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(1000));\nconsole.log(iscube(2197));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(10000));\nconsole.log(iscube(343));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(343));\nconsole.log(iscube(125));\n\
    console.log(iscube(343));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\nconsole.log(iscube(1));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(343));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\nconsole.log(iscube(1));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(343));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\nconsole.log(iscube(1));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7psgqvd7.ts(57,9): error TS1003: Identifier expected.

    '
  timestamp: 1659979428
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube = Math.cbrt(a);\n    if (cube % 1 === 0) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(343));\nconsole.log(iscube(512));\nconsole.log(iscube(729));\n\
    console.log(iscube(1000));\nconsole.log(iscube(1331));\nconsole.log(iscube(1728));\n\
    console.log(iscube(2197));\nconsole.log(iscube(2744));\nconsole.log(iscube(3375));\n\
    console.log(iscube(4096));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    console.log(iscube(10648));\nconsole.log(iscube(12167));\nconsole.log(iscube(13824));\n\
    console.log(iscube(15625));\nconsole.log(iscube(17576));\nconsole.log(iscube(19683));\n\
    console.log(iscube(21952));\nconsole.log(iscube(24389));\nconsole.log(iscube(27000));\n\
    console.log(iscube(29791));\nconsole.log(iscube(32768));\nconsole.log(iscube(35937));\n\
    console.log(iscube(39304));\nconsole.log(iscube(42875));\nconsole.log(iscube(46656));\n\
    console.log(iscube(50653));\nconsole.log(iscube(54872));\nconsole.log(iscube(59319));\n\
    console.log(iscube(64000));\nconsole.log(iscube(68921));\nconsole.log(iscube(74088));\n\
    console.log(iscube(79507));\nconsole.log(iscube(85184));\nconsole.log\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprvrazklg.ts(6,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659979419
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(8));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-8));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-28));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdsf_3r_g.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdsf_3r_g.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    false

    false

    false

    false

    '
  timestamp: 1659979429
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\nconsole.log(iscube(3));\n\
    console.log(iscube(125));\nconsole.log(iscube(1));\nconsole.log(iscube(0));\n\
    console.log(iscube(-1));\nconsole.log(iscube(-8));\nconsole.log(iscube(-27));\n\
    console.log(iscube(-64));\nconsole.log(iscube(-125));\nconsole.log(iscube(-216));\n\
    console.log(iscube(-1000));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\nconsole.log(iscube(3375));\n\
    console.log(iscube(15625));\nconsole.log(iscube(17576));\nconsole.log(iscube(19683));\n\
    console.log(iscube(234256));\nconsole.log(iscube(248832));\nconsole.log(iscube(279936));\n\
    console.log(iscube(331776));\nconsole.log(iscube(357911));\nconsole.log(iscube(373248));\n\
    console.log(iscube(421875));\nconsole.log(iscube(493039));\nconsole.log(iscube(507936));\n\
    console.log(iscube(581562));\nconsole.log(iscube(688125));\nconsole.log(iscube(704969));\n\
    console.log(iscube(759375));\nconsole.log(iscube(846464));\nconsole.log(iscube(941192));\n\
    console.log(iscube(1030301));\nconsole.log(iscube(1048576));\nconsole.log(iscube(1188640));\n\
    console.log(iscube(1225043));\nconsole.log(iscube(1295029));\nconsole.\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzwd20s_o.ts(57,9): error TS1003: Identifier expected.

    '
  timestamp: 1659979428
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(125));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-1));\nconsole.log(iscube(-8));\n\
    console.log(iscube(-27));\nconsole.log(iscube(-64));\nconsole.log(iscube(-125));\n\
    console.log(iscube(-343));\nconsole.log(iscube(-1000));\nconsole.log(iscube(1.0));\n\
    console.log(iscube(1.5));\nconsole.log(iscube(2.5));\nconsole.log(iscube(3.5));\n\
    console.log(iscube(4.5));\nconsole.log(iscube(5.5));\nconsole.log(iscube(6.5));\n\
    console.log(iscube(7.5));\nconsole.log(iscube(8.5));\nconsole.log(iscube(9.5));\n\
    console.log(iscube(10.5));\nconsole.log(iscube(11.5));\nconsole.log(iscube(12.5));\n\
    console.log(iscube(13.5));\nconsole.log(iscube(14.5));\nconsole.log(iscube(15.5));\n\
    console.log(iscube(16.5));\nconsole.log(iscube(17.5));\nconsole.log(iscube(18.5));\n\
    console.log(iscube(19.5));\nconsole.log(iscube(20.5));\nconsole.log(iscube(21.5));\n\
    console.log(iscube(22.5));\nconsole.log(iscube(23.5));\nconsole.log(iscube(24.5));\n\
    console.log(iscube(25.5));\nconsole.log(iscube(26.5));\nconsole.log(iscube(27.5\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjv_yyl8r.ts(55,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpjv_yyl8r.ts(55,9): error TS1005: '','' expected.

    '
  timestamp: 1659979429
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmptmk6g79y.js:63:12)\n    at\
    \ Object.<anonymous> (/tmp/tmptmk6g79y.js:70:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmq9ln4yx.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpmq9ln4yx.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979414
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\n\nconsole.log(iscube(8));\nconsole.log(iscube(27));\nconsole.log(iscube(64));\n\
    console.log(iscube(125));\nconsole.log(iscube(216));\nconsole.log(iscube(343));\n\
    console.log(iscube(512));\nconsole.log(iscube(729));\nconsole.log(iscube(1000));\n\
    console.log(iscube(1331));\nconsole.log(iscube(1728));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(3375));\nconsole.log(iscube(4096));\n\
    console.log(iscube(4913));\nconsole.log(iscube(5832));\nconsole.log(iscube(6859));\n\
    console.log(iscube(8000));\nconsole.log(iscube(9261));\nconsole.log(iscube(10648));\n\
    console.log(iscube(12167));\nconsole.log(iscube(13824));\nconsole.log(iscube(15625));\n\
    console.log(iscube(17576));\nconsole.log(iscube(19683));\nconsole.log(iscube(21952));\n\
    console.log(iscube(24389));\nconsole.log(iscube(27000));\nconsole.log(iscube(29791));\n\
    console.log(iscube(32768));\nconsole.log(iscube(35937));\nconsole.log(iscube(39304));\n\
    console.log(iscube(42875));\nconsole.log(iscube(46656));\nconsole.log(iscube(50653));\n\
    console.log(iscube(54872));\nconsole.log(iscube(59319));\nconsole.log(iscube(64000));\n\
    console.log(iscube(68921));\nconsole.log(iscube(74088));\nconsole.log(iscube(79507));\n\
    console.log(iscube(85184));\nconsole.log(\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpso8kib0k.ts(57,9): error TS1005: '','' expected.

    '
  timestamp: 1659979414
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(29));\n\
    console.log(iscube(30));\nconsole.log(iscube(31));\nconsole.log(iscube(32));\n\
    console.log(iscube(33));\nconsole.log(iscube(34));\nconsole.log(iscube(35));\n\
    console.log(iscube(36));\nconsole.log(iscube(37));\nconsole.log(iscube(38));\n\
    console.log(iscube(39));\nconsole.log(iscube(40));\nconsole.log(iscube(41));\n\
    console.log(iscube(42));\nconsole.log(iscube(43));\nconsole.log(iscube(44));\n\
    console.log(iscube(45));\nconsole.log(iscube(46));\nconsole.log(iscube(47));\n\
    console.log(iscube(48));\nconsole.log(iscube(49));\nconsole.log(iscube(50));\n\
    console.log(iscube(51));\nconsole.log(iscube(52));\nconsole.log(iscube(53));\n\
    console.log(iscube(54));\nconsole.log(iscube(55));\nconsole.log(iscube(56));\n\
    console.log(iscube(57));\nconsole.log(iscube(58));\nconsole.log(iscube(59));\n\
    console.log(iscube(60));\nconsole.log(iscube(61));\nconsole.log(iscube(62));\n\
    console.log(iscube(63));\nconsole.log(iscube(64));\nconsole.log(iscube(65));\n\
    console.log(iscube(66));\nconsole.log(iscube(67));\nconsole.log(iscube(68));\n\
    console.log(iscube(69));\nconsole.log(iscube(70));\nconsole.log(iscube(71));\n\
    console.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkgwrurl5.ts(61,9): error TS1005: '','' expected.

    '
  timestamp: 1659979419
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ cube = Math.cbrt(a);\n    if (cube % 1 == 0) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\nconsole.log(iscube(27));\nconsole.log(iscube(28));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9g4leodo.ts(6,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659979428
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(125));\n\
    console.log(iscube(1));\nconsole.log(iscube(8));\nconsole.log(iscube(1000));\n\
    console.log(iscube(0));\nconsole.log(iscube(1));\nconsole.log(iscube(64));\nconsole.log(iscube(216));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\nconsole.log(iscube(1000000));\n\
    console.log(iscube(10000000000));\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmph8whlhya.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmph8whlhya.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    true

    false

    true

    true

    true

    true

    true

    true

    false

    '
  timestamp: 1659979429
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return\
    \ i * i * i === a;\n}\nconsole.log(iscube(27));\nconsole.log(iscube(64));\nconsole.log(iscube(125));\n\
    console.log(iscube(216));\nconsole.log(iscube(343));\nconsole.log(iscube(512));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpzigq4025.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpzigq4025.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979429
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(1));\n\
    console.log(iscube(8));\nconsole.log(iscube(125));\nconsole.log(iscube(216));\n\
    console.log(iscube(729));\nconsole.log(iscube(1000));\nconsole.log(iscube(2197));\n\
    console.log(iscube(2744));\nconsole.log(iscube(4913));\nconsole.log(iscube(5832));\n\
    console.log(iscube(6859));\nconsole.log(iscube(8000));\nconsole.log(iscube(9261));\n\
    console.log(iscube(10648));\nconsole.log(iscube(12167));\nconsole.log(iscube(13824));\n\
    console.log(iscube(15625));\nconsole.log(iscube(17576));\nconsole.log(iscube(19683));\n\
    console.log(iscube(21952));\nconsole.log(iscube(24389));\nconsole.log(iscube(27000));\n\
    console.log(iscube(29791));\nconsole.log(iscube(32768));\nconsole.log(iscube(35937));\n\
    console.log(iscube(39304));\nconsole.log(iscube(42875));\nconsole.log(iscube(46656));\n\
    console.log(iscube(50653));\nconsole.log(iscube(54872));\nconsole.log(iscube(59319));\n\
    console.log(iscube(64000));\nconsole.log(iscube(68921));\nconsole.log(iscube(74088));\n\
    console.log(iscube(79507));\nconsole.log(iscube(85184));\nconsole.log(iscube(91125));\n\
    console.log(iscube(97336));\nconsole.log(iscube(103823));\nconsole.log(iscube(110592));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgyroggo6.js:62:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgyroggo6.js:69:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    true

    '
  timestamp: 1659979424
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\nfunction iscube(a: number): boolean {\n    let\
    \ i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\nconsole.log(iscube(27));\nconsole.log(iscube(28));\nconsole.log(iscube(8));\n\
    console.log(iscube(1));\nconsole.log(iscube(0));\nconsole.log(iscube(-1));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjwt0kc5k.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjwt0kc5k.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    false

    false

    '
  timestamp: 1659979429

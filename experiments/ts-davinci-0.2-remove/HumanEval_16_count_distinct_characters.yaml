name: HumanEval_16_count_distinct_characters
language: ts
prompt: "//Given a string, find out how many distinct characters (regardless of case)\
  \ does it consist of\nfunction count_distinct_characters(string: string): number\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
  \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
  abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
  Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
completions: ["    return string.toLowerCase().split('').filter((v, i, a) => a.indexOf(v)\
    \ === i).length;\n}\n", "    let distinct_characters = new Set();\n    for (let\
    \ i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    return new Set(string.toLowerCase().split('')).size;\n\
    }\n", "    let chars = new Set();\n    for (let i = 0; i < string.length; i++)\
    \ {\n        chars.add(string[i].toLowerCase());\n    }\n    return chars.size;\n\
    }\n", "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) ===\
    \ -1) {\n            distinct_characters.push(string[i].toLowerCase());\n    \
    \    }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ == -1) {\n            distinct_characters.push(string[i].toLowerCase());\n \
    \       }\n    }\n    return distinct_characters.length;\n}\n", "    let chars\
    \ = string.toLowerCase().split('');\n    let unique = chars.filter(function(item,\
    \ i, ar){ return ar.indexOf(item) === i; });\n    return unique.length;\n}\n",
  "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n \
    \   return distinct_characters.size;\n}\n", "    let distinct_characters = 0;\n\
    \    let characters = string.toLowerCase().split('');\n    let unique_characters\
    \ = new Set(characters);\n    distinct_characters = unique_characters.size;\n\
    \    return distinct_characters;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "  const unique = new Set(string.toLowerCase());\n\
    \  return unique.size;\n}\n", "    let distinct_characters: string[] = [];\n \
    \   for (let i: number = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ == -1) {\n            distinct_characters.push(string[i].toLowerCase());\n \
    \       }\n    }\n    return distinct_characters.length;\n}\n", "    let chars\
    \ = new Set<string>();\n    for (let i = 0; i < string.length; i++) {\n      \
    \  chars.add(string[i].toLowerCase());\n    }\n    return chars.size;\n}\n", " \
    \   let distinct_characters = 0;\n    let characters = string.toLowerCase().split('');\n\
    \    let unique_characters = characters.filter(function (item, pos) {\n      \
    \  return characters.indexOf(item) == pos;\n    });\n    distinct_characters =\
    \ unique_characters.length;\n    return distinct_characters;\n}\n", "    return\
    \ new Set(string.toLowerCase().split('')).size;\n}\n", "    return string.toLowerCase().split('').filter((value,\
    \ index, self) => self.indexOf(value) === index).length;\n}\n", "    let uniqueChars\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        uniqueChars.add(string[i].toLowerCase());\n\
    \    }\n    return uniqueChars.size;\n}\n", "    return new Set(string.toLowerCase().split('')).size;\n\
    }\n", "    let distinct_chars = new Set();\n    for (let char of string) {\n \
    \       distinct_chars.add(char.toLowerCase());\n    }\n    return distinct_chars.size;\n\
    }\n", "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) ===\
    \ -1) {\n            distinct_characters.push(string[i].toLowerCase());\n    \
    \    }\n    }\n    return distinct_characters.length;\n}\n", "    let result =\
    \ 0;\n    let charMap = {};\n    for (let i = 0; i < string.length; i++) {\n \
    \       let char = string[i].toLowerCase();\n        if (!charMap[char]) {\n \
    \           charMap[char] = true;\n            result++;\n        }\n    }\n \
    \   return result;\n}\n", "    let distinct_characters: string[] = [];\n    for\
    \ (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return string.toLowerCase().split('').filter((value,\
    \ index, self) => self.indexOf(value) === index).length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    return string.toLowerCase().split('').filter((value,\
    \ index, self) => self.indexOf(value) === index).length;\n}\n", "    let distinct_characters\
    \ = 0;\n    let characters = string.toLowerCase().split('');\n    let unique_characters\
    \ = new Set(characters);\n    return unique_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "  let count = 0;\n  let seen\
    \ = {};\n  for (let i = 0; i < string.length; i++) {\n    let char = string[i].toLowerCase();\n\
    \    if (!seen[char]) {\n      seen[char] = true;\n      count++;\n    }\n  }\n\
    \  return count;\n}\n", "    let distinct_characters = [];\n    for (let i = 0;\
    \ i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ == -1) {\n            distinct_characters.push(string[i].toLowerCase());\n \
    \       }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        let character\
    \ = string[i].toLowerCase();\n        if (distinct_characters.indexOf(character)\
    \ === -1) {\n            distinct_characters.push(character);\n        }\n   \
    \ }\n    return distinct_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_chars\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_chars.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_chars.size;\n}\n", "  const charMap = new Map();\n\
    \  for (let char of string) {\n    charMap.set(char.toLowerCase(), true);\n  }\n\
    \  return charMap.size;\n}\n", "    let distinct_characters = 0;\n    let characters\
    \ = string.toLowerCase().split('');\n    let unique_characters = Array.from(new\
    \ Set(characters));\n    return unique_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_chars =\
    \ 0;\n    let chars = string.toLowerCase().split('');\n    let unique_chars =\
    \ chars.filter(function (item, i, ar) {\n        return ar.indexOf(item) === i;\n\
    \    });\n    return unique_chars.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ == -1) {\n            distinct_characters.push(string[i].toLowerCase());\n \
    \       }\n    }\n    return distinct_characters.length;\n}\n", "    let result\
    \ = 0;\n    let chars = new Set();\n    for (let i = 0; i < string.length; i++)\
    \ {\n        let char = string[i].toLowerCase();\n        if (!chars.has(char))\
    \ {\n            chars.add(char);\n            result++;\n        }\n    }\n \
    \   return result;\n}\n", "    let distinct_characters = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return new\
    \ Set(string.toLowerCase().split('')).size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    let distinct_characters_count: number = 0;\n    for (let\
    \ i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ == -1) {\n            distinct_characters.push(string[i].toLowerCase());\n \
    \           distinct_characters_count++;\n        }\n    }\n    return distinct_characters_count;\n\
    }\n", "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n \
    \   return distinct_characters.size;\n}\n", "    let distinct_characters = 0;\n\
    \    let characters = string.toLowerCase().split('');\n    let character_set =\
    \ new Set(characters);\n    distinct_characters = character_set.size;\n    return\
    \ distinct_characters;\n}\n", "    let distinct_characters = new Set(string.toLowerCase());\n\
    \    return distinct_characters.size;\n}\n", "    let distinct_characters = new\
    \ Set();\n    string.split('').forEach(char => distinct_characters.add(char.toLowerCase()));\n\
    \    return distinct_characters.size;\n}\n", "    let distinct_characters = 0;\n\
    \    let characters = new Set();\n    for (let i = 0; i < string.length; i++)\
    \ {\n        if (!characters.has(string[i].toLowerCase())) {\n            characters.add(string[i].toLowerCase());\n\
    \            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n\
    }\n", "    let unique = new Set();\n    for (let i = 0; i < string.length; i++)\
    \ {\n        unique.add(string[i].toLowerCase());\n    }\n    return unique.size;\n\
    }\n", "    return string.toLowerCase().split('').filter((value, index, self) =>\
    \ self.indexOf(value) === index).length;\n}\n", "    let distinct_characters =\
    \ new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let chars\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        chars.add(string[i].toLowerCase());\n\
    \    }\n    return chars.size;\n}\n", "    let distinct_characters: string[] =\
    \ [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return string.toLowerCase().split('').filter((value,\
    \ index, self) => self.indexOf(value) === index).length;\n}\n", "    return string.toLowerCase().split('').filter((value,\
    \ index, self) => self.indexOf(value) === index).length;\n}\n", "    let unique\
    \ = new Set(string.toLowerCase());\n    return unique.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    return new Set(string.toLowerCase().split('')).size;\n\
    }\n", "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n \
    \   return distinct_characters.size;\n}\n", "  let chars: string[] = string.split('');\n\
    \  let distinctChars: string[] = [];\n  chars.forEach(char => {\n    if (!distinctChars.includes(char.toLowerCase()))\
    \ {\n      distinctChars.push(char.toLowerCase());\n    }\n  });\n  return distinctChars.length;\n\
    }\n", "    let result = 0;\n    let char_set = new Set();\n    for (let i = 0;\
    \ i < string.length; i++) {\n        let char = string.charAt(i);\n        if\
    \ (!char_set.has(char.toLowerCase())) {\n            char_set.add(char.toLowerCase());\n\
    \            result++;\n        }\n    }\n    return result;\n}\n", "    let chars\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        chars.add(string[i].toLowerCase());\n\
    \    }\n    return chars.size;\n}\n", "    let distinct_characters: string[] =\
    \ [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let result\
    \ = 0;\n    let char_map = {};\n    for (let i = 0; i < string.length; i++) {\n\
    \        if (!char_map[string[i].toLowerCase()]) {\n            char_map[string[i].toLowerCase()]\
    \ = true;\n            result++;\n        }\n    }\n    return result;\n}\n",
  "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n \
    \   return distinct_characters.size;\n}\n", "    return string.toLowerCase().split('').filter((x,\
    \ i, a) => a.indexOf(x) == i).length;\n}\n", "    let distinct_characters = 0;\n\
    \    let characters = string.toLowerCase().split('');\n    let characters_set\
    \ = new Set(characters);\n    distinct_characters = characters_set.size;\n   \
    \ return distinct_characters;\n}\n", "    const characters = string.toLowerCase().split('');\n\
    \    const distinctCharacters = characters.filter((character, index) => characters.indexOf(character)\
    \ === index);\n    return distinctCharacters.length;\n}\n", "    let distinct_characters\
    \ = 0;\n    let characters = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (!characters.has(string[i].toLowerCase())) {\n          \
    \  characters.add(string[i].toLowerCase());\n            distinct_characters++;\n\
    \        }\n    }\n    return distinct_characters;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = 0;\n    let characters = string.toLowerCase().split('');\n    let characters_set\
    \ = new Set(characters);\n    distinct_characters = characters_set.size;\n   \
    \ return distinct_characters;\n}\n", "    let distinct_characters = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let unique = new Set(string.toLowerCase());\n\
    \    return unique.size;\n}\n", "    let distinct_characters: string[] = [];\n\
    \    for (let character of string) {\n        if (!distinct_characters.includes(character.toLowerCase()))\
    \ {\n            distinct_characters.push(character.toLowerCase());\n        }\n\
    \    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = 0;\n    let characters_found = {};\n    for (let i = 0; i < string.length;\
    \ i++) {\n        let character = string[i].toLowerCase();\n        if (!characters_found[character])\
    \ {\n            characters_found[character] = true;\n            distinct_characters++;\n\
    \        }\n    }\n    return distinct_characters;\n}\n", "    return string.toLowerCase().split('').filter((value,\
    \ index, self) => self.indexOf(value) === index).length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let character of string) {\n        distinct_characters.add(character.toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = 0;\n    let characters = string.toLowerCase().split('');\n    let unique_characters\
    \ = new Set(characters);\n    distinct_characters = unique_characters.size;\n\
    \    return distinct_characters;\n}\n", "    let distinct_characters = 0;\n  \
    \  let characters = string.toLowerCase().split('');\n    let unique_characters\
    \ = characters.filter(function (item, pos) {\n        return characters.indexOf(item)\
    \ == pos;\n    });\n    distinct_characters = unique_characters.length;\n    return\
    \ distinct_characters;\n}\n", "    let distinct_characters = 0;\n    let characters\
    \ = string.toLowerCase().split('');\n    let unique_characters = new Set(characters);\n\
    \    distinct_characters = unique_characters.size;\n    return distinct_characters;\n\
    }\n", "    let distinct_characters = 0;\n    let characters_seen = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        let character = string[i].toLowerCase();\n\
    \        if (!characters_seen.has(character)) {\n            distinct_characters++;\n\
    \            characters_seen.add(character);\n        }\n    }\n    return distinct_characters;\n\
    }\n", "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) ===\
    \ -1) {\n            distinct_characters.push(string[i].toLowerCase());\n    \
    \    }\n    }\n    return distinct_characters.length;\n}\n", "    let result =\
    \ 0;\n    let charMap = new Map();\n    for (let i = 0; i < string.length; i++)\
    \ {\n        let char = string.charAt(i).toLowerCase();\n        if (!charMap.has(char))\
    \ {\n            charMap.set(char, 1);\n            result++;\n        }\n   \
    \ }\n    return result;\n}\n", "    let distinct_characters = 0;\n    let characters\
    \ = string.toLowerCase().split('');\n    let unique_characters = new Set(characters);\n\
    \    distinct_characters = unique_characters.size;\n    return distinct_characters;\n\
    }\n", "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n \
    \   return distinct_characters.size;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let set\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        set.add(string[i].toLowerCase());\n\
    \    }\n    return set.size;\n}\n", "    let distinct_characters = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = 0;\n    let characters = string.toLowerCase().split('');\n    let unique_characters\
    \ = new Set(characters);\n    distinct_characters = unique_characters.size;\n\
    \    return distinct_characters;\n}\n", "    return string.toLowerCase().split('').filter((value,\
    \ index, self) => self.indexOf(value) === index).length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let unique = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        unique.add(string[i].toLowerCase());\n\
    \    }\n    return unique.size;\n}\n", "    return string.toLowerCase().split('').filter((value,\
    \ index, self) => self.indexOf(value) === index).length;\n}\n", "  let unique\
    \ = new Set(string.toLowerCase());\n  return unique.size;\n}\n", "    let result\
    \ = 0;\n    let chars = new Set();\n    for (let i = 0; i < string.length; i++)\
    \ {\n        if (!chars.has(string[i].toLowerCase())) {\n            chars.add(string[i].toLowerCase());\n\
    \            result++;\n        }\n    }\n    return result;\n}\n", "    let distinct_chars\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_chars.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_chars.size;\n}\n", "    let chars = string.toLowerCase().split('');\n\
    \    let distinct = chars.filter((char, index) => chars.indexOf(char) === index);\n\
    \    return distinct.length;\n}\n", "    return new Set(string.toLowerCase().split('')).size;\n\
    }\n", "    let chars = string.toLowerCase().split('');\n    let unique = chars.filter(function(item,\
    \ i, ar){ return ar.indexOf(item) === i; });\n    return unique.length;\n}\n",
  "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n \
    \   return distinct_characters.size;\n}\n", "    let distinct_characters = [];\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinctCharacters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinctCharacters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinctCharacters.push(string[i].toLowerCase());\n \
    \       }\n    }\n    return distinctCharacters.length;\n}\n", "    return new\
    \ Set(string.toLowerCase().split('')).size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = 0;\n    let characters = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (!characters.has(string[i].toLowerCase())) {\n          \
    \  characters.add(string[i].toLowerCase());\n            distinct_characters++;\n\
    \        }\n    }\n    return distinct_characters;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i: number = 0; i < string.length; i++) {\n    \
    \    if (distinct_characters.indexOf(string[i].toLowerCase()) === -1) {\n    \
    \        distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n", "    let distinct_characters =\
    \ new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return string.toLowerCase().split('').filter((item,\
    \ pos, self) => {\n        return self.indexOf(item) == pos;\n    }).length;\n\
    }\n", "    let distinct_characters = 0;\n    let characters = string.toLowerCase().split('');\n\
    \    let unique_characters = [];\n    for (let i = 0; i < characters.length; i++)\
    \ {\n        if (unique_characters.indexOf(characters[i]) === -1) {\n        \
    \    unique_characters.push(characters[i]);\n            distinct_characters++;\n\
    \        }\n    }\n    return distinct_characters;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let result = 0;\n   \
    \ let characters = string.toLowerCase().split('');\n    let uniqueCharacters =\
    \ characters.filter(function (item, i, ar) {\n        return ar.indexOf(item)\
    \ === i;\n    });\n    result = uniqueCharacters.length;\n    return result;\n\
    }\n", "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) ===\
    \ -1) {\n            distinct_characters.push(string[i].toLowerCase());\n    \
    \    }\n    }\n    return distinct_characters.length;\n}\n", "    return string.toLowerCase().split('').filter((v,\
    \ i, a) => a.indexOf(v) === i).length;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return [...new\
    \ Set(string.toLowerCase())].length;\n}\n", "    let result = 0;\n    let charSet\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        charSet.add(string[i].toLowerCase());\n\
    \    }\n    result = charSet.size;\n    return result;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "  let distinct_characters\
    \ = 0;\n  let characters = string.toLowerCase().split(\"\");\n  let unique_characters\
    \ = new Set(characters);\n  distinct_characters = unique_characters.size;\n  return\
    \ distinct_characters;\n}\n", "    let distinct_chars: string[] = [];\n    for\
    \ (let i = 0; i < string.length; i++) {\n        if (distinct_chars.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_chars.push(string[i].toLowerCase());\n     \
    \   }\n    }\n    return distinct_chars.length;\n}\n", "    let chars = string.toLowerCase().split('');\n\
    \    let unique = chars.filter(function(item, i, ar){ return ar.indexOf(item)\
    \ === i; });\n    return unique.length;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return [...new\
    \ Set(string.toLowerCase())].length;\n}\n", "    let distinct_characters = new\
    \ Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ == -1) {\n            distinct_characters.push(string[i].toLowerCase());\n \
    \       }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = 0;\n    let characters = string.toLowerCase().split('');\n    let unique_characters\
    \ = new Set(characters);\n    distinct_characters = unique_characters.size;\n\
    \    return distinct_characters;\n}\n", "    let unique = new Set(string.toLowerCase());\n\
    \    return unique.size;\n}\n", "    let distinct_characters: string[] = [];\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ == -1) {\n            distinct_characters.push(string[i].toLowerCase());\n \
    \       }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return string.toLowerCase().split('').filter((v,\
    \ i, a) => a.indexOf(v) === i).length;\n}\n", "    return new Set(string.toLowerCase().split('')).size;\n\
    }\n", "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n \
    \   return distinct_characters.size;\n}\n", "    let distinctCharacters = string.toLowerCase().split('').filter((v,\
    \ i, a) => a.indexOf(v) === i).length;\n    return distinctCharacters;\n}\n",
  "    let set = new Set();\n    for (let i = 0; i < string.length; i++) {\n     \
    \   set.add(string[i].toLowerCase());\n    }\n    return set.size;\n}\n", "  \
    \  let chars: string[] = string.toLowerCase().split('');\n    let distinct_chars:\
    \ string[] = [];\n    for (let i = 0; i < chars.length; i++) {\n        if (distinct_chars.indexOf(chars[i])\
    \ === -1) {\n            distinct_chars.push(chars[i]);\n        }\n    }\n  \
    \  return distinct_chars.length;\n}\n", "    let result = 0;\n    let char_set\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        char_set.add(string[i].toLowerCase());\n\
    \    }\n    result = char_set.size;\n    return result;\n}\n", "    let distinct_characters\
    \ = 0;\n    let characters = string.toLowerCase().split('');\n    let unique_characters\
    \ = characters.filter(function (item, i, ar) {\n        return ar.indexOf(item)\
    \ === i;\n    });\n    return unique_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = 0;\n    let characters = string.toLowerCase().split('');\n    let unique_characters\
    \ = new Set(characters);\n    distinct_characters = unique_characters.size;\n\
    \    return distinct_characters;\n}\n", "    const unique = new Set(string.toLowerCase());\n\
    \    return unique.size;\n}\n", "    return new Set(string.toLowerCase().split('')).size;\n\
    }\n", "    let result: number = 0;\n    let char_set: Set<string> = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (!char_set.has(string[i].toLowerCase()))\
    \ {\n            char_set.add(string[i].toLowerCase());\n            result++;\n\
    \        }\n    }\n    return result;\n}\n", "    return string.toLowerCase().split('').filter((value,\
    \ index, self) => self.indexOf(value) === index).length;\n}\n", "  let distinct_characters\
    \ = 0;\n  let characters = string.toLowerCase().split(\"\");\n  let unique_characters\
    \ = new Set(characters);\n  distinct_characters = unique_characters.size;\n  return\
    \ distinct_characters;\n}\n", "    let result: number = 0;\n    let char_map:\
    \ { [key: string]: boolean } = {};\n    for (let i = 0; i < string.length; i++)\
    \ {\n        if (!char_map[string[i].toLowerCase()]) {\n            char_map[string[i].toLowerCase()]\
    \ = true;\n            result++;\n        }\n    }\n    return result;\n}\n",
  "    return string.toLowerCase().split('').filter((value, index, self) => self.indexOf(value)\
    \ === index).length;\n}\n", "    let distinct_characters: string[] = [];\n   \
    \ for (let i = 0; i < string.length; i++) {\n        let character = string[i].toLowerCase();\n\
    \        if (distinct_characters.indexOf(character) == -1) {\n            distinct_characters.push(character);\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return new\
    \ Set(string.toLowerCase().split('')).size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let count\
    \ = 0;\n    let arr = string.split('');\n    let set = new Set(arr);\n    count\
    \ = set.size;\n    return count;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ == -1) {\n            distinct_characters.push(string[i].toLowerCase());\n \
    \       }\n    }\n    return distinct_characters.length;\n}\n", "    return new\
    \ Set(string.toLowerCase().split('')).size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    let string_array: string[] = string.split(\"\");\n    string_array.forEach(character\
    \ => {\n        if (!distinct_characters.includes(character.toLowerCase())) {\n\
    \            distinct_characters.push(character.toLowerCase());\n        }\n \
    \   });\n    return distinct_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let character of string) {\n        if (!distinct_characters.includes(character.toLowerCase()))\
    \ {\n            distinct_characters.push(character.toLowerCase());\n        }\n\
    \    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = 0;\n    let characters = string.toLowerCase().split('');\n    let unique_characters\
    \ = new Set(characters);\n    distinct_characters = unique_characters.size;\n\
    \    return distinct_characters;\n}\n", "  let chars: string[] = string.split('');\n\
    \  let distinctChars: string[] = [];\n  for (let i = 0; i < chars.length; i++)\
    \ {\n    if (distinctChars.indexOf(chars[i].toLowerCase()) === -1) {\n      distinctChars.push(chars[i].toLowerCase());\n\
    \    }\n  }\n  return distinctChars.length;\n}\n", "    return string.toLowerCase().split('').filter((v,\
    \ i, a) => a.indexOf(v) === i).length;\n}\n", "    let result = 0;\n    let chars\
    \ = string.toLowerCase().split('');\n    let unique = chars.filter(function(item,\
    \ i, ar){ return ar.indexOf(item) === i; });\n    result = unique.length;\n  \
    \  return result;\n}\n", "    let distinct_characters = new Set();\n    for (let\
    \ i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    return string.toLowerCase().split('').filter((value,\
    \ index, self) => self.indexOf(value) === index).length;\n}\n", "    return string.toLowerCase().split('').filter((elem,\
    \ index, array) => array.indexOf(elem) === index).length;\n}\n", "    let distinct_chars\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_chars.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_chars.size;\n}\n", "    let result = 0;\n    let charMap\
    \ = new Map();\n    for (let i = 0; i < string.length; i++) {\n        let char\
    \ = string.charAt(i).toLowerCase();\n        if (!charMap.has(char)) {\n     \
    \       charMap.set(char, 1);\n            result++;\n        }\n    }\n    return\
    \ result;\n}\n", "    let result: number = 0;\n    let chars: string[] = string.split('');\n\
    \    let char_set: Set<string> = new Set();\n    for (let i = 0; i < chars.length;\
    \ i++) {\n        char_set.add(chars[i].toLowerCase());\n    }\n    result = char_set.size;\n\
    \    return result;\n}\n", "    let result = 0;\n    let unique = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        unique.add(string[i].toLowerCase());\n\
    \    }\n    result = unique.size;\n    return result;\n}\n", "  let distinct_characters\
    \ = 0;\n  let characters_seen = {};\n  for (let i = 0; i < string.length; i++)\
    \ {\n    if (!characters_seen[string[i].toLowerCase()]) {\n      distinct_characters++;\n\
    \      characters_seen[string[i].toLowerCase()] = true;\n    }\n  }\n  return\
    \ distinct_characters;\n}\n", "    let distinct_characters = 0;\n    let characters\
    \ = string.toLowerCase().split('');\n    let unique_characters = new Set(characters);\n\
    \    distinct_characters = unique_characters.size;\n    return distinct_characters;\n\
    }\n", "    let result = 0;\n    let chars = {};\n    for (let i = 0; i < string.length;\
    \ i++) {\n        let char = string[i].toLowerCase();\n        if (!chars[char])\
    \ {\n            chars[char] = true;\n            result++;\n        }\n    }\n\
    \    return result;\n}\n", "    let characters: string[] = [];\n    for (let i\
    \ = 0; i < string.length; i++) {\n        if (characters.indexOf(string[i].toLowerCase())\
    \ == -1) {\n            characters.push(string[i].toLowerCase());\n        }\n\
    \    }\n    return characters.length;\n}\n", "  let result = 0;\n  let charMap\
    \ = {};\n  for (let i = 0; i < string.length; i++) {\n    if (!charMap[string[i].toLowerCase()])\
    \ {\n      charMap[string[i].toLowerCase()] = true;\n      result++;\n    }\n\
    \  }\n  return result;\n}\n", "    let distinct_characters = 0;\n    let characters\
    \ = string.toLowerCase().split('');\n    let unique_characters = new Set(characters);\n\
    \    distinct_characters = unique_characters.size;\n    return distinct_characters;\n\
    }\n", "    return Array.from(new Set(string.toLowerCase().split(''))).length;\n\
    }\n", "    let distinct_characters = 0;\n    let characters = string.toLowerCase().split('');\n\
    \    let unique_characters = new Set(characters);\n    distinct_characters = unique_characters.size;\n\
    \    return distinct_characters;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_133_sum_squares
language: ts
prompt: "//You are given a list of numbers.\n// You need to return the sum of squared\
  \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
  \ first.\n// Examples:\nfunction sum_squares(lst: number[]): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = sum_squares;\n  assert.deepEqual(candidate([1.0, 2.0,\
  \ 3.0]),14);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
  \ 3.0, 5.0, 7.0]),84);\n  assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
  \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
  \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
  \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
  \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
  \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
completions: ["    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x, y)\
    \ => x + y, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([6,\
    \ 8, -6, -8, 1]));\nconsole.log(sum_squares([]));\nconsole.log(sum_squares([0,\
    \ 0, 0, 0, 0]));\nconsole.log(sum_squares([-1.2, -2.3, -3.4]));", "    return\
    \ lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0.9,\
    \ 1.1, 2.2]));\n", "  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b\
    \ * b, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([]));\n", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3,\
    \ 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0.9,\
    \ 1.1, 2.2]));\nconsole.log(sum_squares([0, 0, 0]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.5,\
    \ 2.5, 3.5]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));\nconsole.log(sum_squares([-1.5, -2.5, -3.5]));\nconsole.log(sum_squares([0.5,\
    \ 1.5, 2.5]));\nconsole.log(sum_squares([0, 1, 2]));\nconsole.log(sum_squares([-0.5,\
    \ -1.5, -2.5]));\nconsole.log(sum_squares([-0.5, -1.5, -2.5]));\nconsole.log(sum_squares([-0.5,\
    \ -1.5, -2.5]));\nconsole.log(sum_squares([-0.5, -1.5, -2.5]));\nconsole.log(sum_squares([-0.5,\
    \ -1.5, -2.5]));\nconsole.log(sum_squares([-0.5, -1.5, -2.5]));\nconsole.log(sum_squares([-0.5,\
    \ -1.5, -2.5]));\nconsole.log(sum_squares([-0.5, -1.5, -2.5]));\nconsole.log(sum_squares([-0.5,\
    \ -1.5, -2.5]));\nconsole.log(sum_squares([-0.5, -1.5, -2.5]));\nconsole.log(sum_squares([-0.5,\
    \ -1.5, -2.5]));\nconsole.log(sum_squares([-0.5, -1.5, -2.5]));\nconsole.log(sum_squares([-0.5,\
    \ -1.5,", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a, b)\
    \ => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([0.1,\
    \ 0.2, 0.3]));\nconsole.log(sum_squares([-1.1, -2.2, -3.3]));\n", "  return lst.map(x\
    \ => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n\nconsole.log(sum_squares([1.1,\
    \ 2.2, 3.3]));\nconsole.log(sum_squares([1, 2, 3]));\n", "  return lst.map(x =>\
    \ Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n", "    return lst.map(x =>\
    \ Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([6, 8, -6, -8, 1]));\nconsole.log(sum_squares([]));\n\
    console.log(sum_squares([0, 0, 0, 0, 0]));\nconsole.log(sum_squares([-1.2, -2.3,\
    \ -3.4]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b, 0);\n}\n\nconsole.log(sum_squares([1.5, 2.5, 3.5]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([]));\nconsole.log(sum_squares([-1, -2, -3]));\n",
  "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n\
    }\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1, 2,\
    \ 3]));\nconsole.log(sum_squares([0.9, 1.1, 1.8]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n", "    let result\
    \ = 0;\n    for (let i = 0; i < lst.length; i++) {\n        result += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return result;\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\n\
    console.log(sum_squares([1, 2, 3]));\n", "  return lst.reduce((acc, curr) => acc\
    \ + curr ** 2, 0);\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
    \ 2, 3, 4]));\nconsole.log(sum_squares([1, 2, 3, 4, 5]));\nconsole.log(sum_squares([1,\
    \ 2, 3, 4, 5, 6]));\nconsole.log(sum_squares([1, 2, 3, 4, 5, 6, 7]));\nconsole.log(sum_squares([1,\
    \ 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(sum_squares([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\
    console.log(sum_squares([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0.9,\
    \ 1.1, 1.8]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([]));\nconsole.log(sum_squares([-1, -2, -3]));\n",
  "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n\
    }\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([5, 4,\
    \ 3]));\nconsole.log(sum_squares([-1, -2, -3]));", "  return lst.map(x => Math.ceil(x)).reduce((a,\
    \ b) => a + b * b, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\n", "  return lst.map(x => Math.ceil(x)).reduce((acc, x) => acc + x\
    \ * x, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([5,\
    \ 4, 3]));\nconsole.log(sum_squares([-1, -2, -3]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([5, 4, 3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([0.1,\
    \ 0.2, 0.3]));\nconsole.log(sum_squares([-1.1, -2.2, -3.3]));\n", "  return lst.reduce((acc,\
    \ curr) => acc + Math.pow(Math.ceil(curr), 2), 0);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));\nconsole.log(sum_squares([-1.2, -2.3, -3.4]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0.1,\
    \ 0.2, 0.3]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([]));\n", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3,\
    \ 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));\n", "  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b *\
    \ b, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4])); // 30\nconsole.log(sum_squares([1,\
    \ 2, 3])); // 14\nconsole.log(sum_squares([-1, -2, -3])); // 14\n", "    return\
    \ lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n", " \
    \   return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n\
    }\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1, 2,\
    \ 3]));\nconsole.log(sum_squares([0.9, 1.1, 1.5]));", "    return lst.map(x =>\
    \ Math.ceil(x) ** 2).reduce((a, b) => a + b, 0);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([-1, -2, -3]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([6, 8, -6, -8, 1]));\nconsole.log(sum_squares([]));\n",
  "  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0.1,\
    \ 0.2, 0.3]));\n", "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n\
    \    sum += Math.ceil(lst[i]) ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0,\
    \ -1, -2]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([6,\
    \ 8, -6, -8, 1]));\nconsole.log(sum_squares([]));\n", "    return lst.map(x =>\
    \ Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([]));\n",
  "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b, 0);\n\
    }\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1, 2,\
    \ 3]));\nconsole.log(sum_squares([0.9, 1.1, 1.5]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([]));\n",
  "    return lst.map(x => Math.ceil(x)).map(x => x ** 2).reduce((a, b) => a + b);\n\
    }\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1, 2,\
    \ 3]));\nconsole.log(sum_squares([0.9, 1.1, 1.8]));\n", "    let sum = 0;\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) **\
    \ 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\n\
    console.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([]));\n", "  return\
    \ lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n\nconsole.log(sum_squares([1.5,\
    \ 2.5, 3.5]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b, 0);\n}\n\nconsole.log(sum_squares([1.5, 2.5, 3.5, 4.5]));\nconsole.log(sum_squares([1,\
    \ 2, 3, 4]));\nconsole.log(sum_squares([1, 2, 3, 4, 5]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([5, 4, 3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([0.9, 1.1, 1.8]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0.1,\
    \ 0.2, 0.3]));\nconsole.log(sum_squares([-1, -2, -3]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([]));\n",
  "  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n", "  \
    \  return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n\
    }\n\nconsole.log(sum_squares([1.5, 2.5, 3.5]));\n", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.5, 2.5,\
    \ 3.5, 4.5]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([]));\n", "    let sum = 0;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n\
    \    return sum;\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([0.1, 0.2, 0.3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b);\n}\n\nconsole.log(sum_squares([1.1, 2.2, 3.3]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([]));\n", "  return lst.map(x => Math.ceil(x)).reduce((a,\
    \ b) => a + b * b, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([-1, -2, -3]));\n", "  return lst.map(x =>\
    \ Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n\nconsole.log(sum_squares([1.5,\
    \ 2.5, 3.5]));\n", "    return lst.map(x => Math.ceil(x) ** 2).reduce((a, b) =>\
    \ a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([2,\
    \ 3, 4]));\nconsole.log(sum_squares([-1.2, -2.3, -3.4]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([]));\n",
  "  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([6, 8, -6, -8, 1]));\nconsole.log(sum_squares([]));\n",
  "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n\
    }\n\nconsole.log(sum_squares([1.1, 2.2, 3.3]));\nconsole.log(sum_squares([1, 2,\
    \ 3]));\nconsole.log(sum_squares([0, -1, -2]));\n", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((x, y) => x + y);\n}\n\nconsole.log(sum_squares([1.2, 2.3,\
    \ 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0.9,\
    \ 1.1, 1.5]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([4.5,\
    \ 5.6, 6.7]));\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([]));\n",
  "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n\
    }\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([5, 4,\
    \ 3]));\nconsole.log(sum_squares([-1, -2, -3]));", "  return lst.map(x => Math.ceil(x)).reduce((a,\
    \ b) => a + b ** 2, 0);\n}\n", "    return lst.map(x => Math.ceil(x)).map(x =>\
    \ x * x).reduce((x, y) => x + y);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\n\
    console.log(sum_squares([5, 4, 3]));\nconsole.log(sum_squares([-1, -2, -3]));",
  "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n\
    }\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([6, 8,\
    \ -6, -8, 1]));\nconsole.log(sum_squares([]));\n", "    return lst.map(e => Math.ceil(e)\
    \ ** 2).reduce((a, b) => a + b, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\n\
    console.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0.1, 0.2, 0.3]));\n",
  "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n\
    }\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([5, 4,\
    \ 3]));\nconsole.log(sum_squares([-1, -2, -3]));\n", "    return lst.map(x =>\
    \ Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([5, 4, 3]));\nconsole.log(sum_squares([-5,\
    \ -4, -3]));", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y);\n}\n\nconsole.log(sum_squares([1.1, 2.2, 3.3]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([-1, -2, -3]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0,\
    \ -1, -2]));", "  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b **\
    \ 2, 0);\n}\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([]));\n", "  return lst.map(x => Math.ceil(x)).reduce((a,\
    \ b) => a + b ** 2, 0);\n}\n", "  return lst.map(x => Math.ceil(x)).reduce((a,\
    \ b) => a + b * b, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([6,\
    \ 8, -6, -8, 1]));\nconsole.log(sum_squares([]));\n", "    return lst.map(x =>\
    \ Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b, 0);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([0.1, 0.2, 0.3]));\nconsole.log(sum_squares([-1.1,\
    \ -2.2, -3.3]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([0, -1, -2]));", "  return lst.map(x => Math.ceil(x)\
    \ ** 2).reduce((a, b) => a + b, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\n\
    console.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([-1, -2, -3]));\n",
  "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b, 0);\n\
    }\n\nconsole.log(sum_squares([1.5, 2.5, 3.5]));\nconsole.log(sum_squares([1, 2,\
    \ 3]));\nconsole.log(sum_squares([]));\nconsole.log(sum_squares([-1, -2, -3]));\n\
    console.log(sum_squares([-1.5, -2.5, -3.5]));\n", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((x, y) => x + y);\n}\n\nconsole.log(sum_squares([1.2, 2.3,\
    \ 3.4]));\nconsole.log(sum_squares([5, 4, 3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([-1, -2, -3]));\nconsole.log(sum_squares([-1.2,\
    \ -2.3, -3.4]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([5,\
    \ 4, 3, 2, 1]));\nconsole.log(sum_squares([]));", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3,\
    \ 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([]));\n",
  "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y, 0);\n\
    }\n\nconsole.log(sum_squares([1.5, 2.5, 3.5]));\nconsole.log(sum_squares([1, 2,\
    \ 3]));\nconsole.log(sum_squares([0.5, 1.5, 2.5]));\n", "  return lst.map(x =>\
    \ Math.ceil(x)).reduce((a, b) => a + b ** 2, 0);\n}\n", "    let sum = 0;\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) *\
    \ Math.ceil(lst[i]);\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([]));\n\
    console.log(sum_squares([-1, -2, -3]));\n", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((x, y) => x + y);\n}\n\nconsole.log(sum_squares([1.2, 2.3,\
    \ 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0.9,\
    \ 1.1, 2.2]));\nconsole.log(sum_squares([]));\nconsole.log(sum_squares([-1, -2,\
    \ -3]));\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n \
    \       sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([]));\n",
  "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b, 0);\n\
    }\n\nconsole.log(sum_squares([1.5, 2.5, 3.5]));\nconsole.log(sum_squares([1, 2,\
    \ 3]));\nconsole.log(sum_squares([]));\nconsole.log(sum_squares([-1, -2, -3]));\n\
    console.log(sum_squares([-1.5, -2.5, -3.5]));\n", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.5, 2.5,\
    \ 3.5]));\n", "  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b,\
    \ 0);\n}\n\nconsole.log(sum_squares([1.1, 2.2, 3.3, 4.4, 5.5]));\nconsole.log(sum_squares([1,\
    \ 2, 3, 4, 5]));\nconsole.log(sum_squares([-1, -2, -3, -4, -5]));\n", "    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ * Math.ceil(lst[i]);\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0.9,\
    \ 1.1, 2.2]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([-1, -2, -3]));\n", "    let result = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        result += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return result;\n}\n\nconsole.log(sum_squares([1.5, 2.5, 3.5]));\n",
  "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n\
    }\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x, y) =>\
    \ x + y, 0);\n}\n\nconsole.log(sum_squares([1.1, 2.2, 3.3]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([]));\nconsole.log(sum_squares([-1, -2, -3]));\n",
  "  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([]));\n", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((x, y) => x + y, 0);\n}\n\nconsole.log(sum_squares([1.1, 2.2,\
    \ 3.3, 4.4, 5.5]));\nconsole.log(sum_squares([1, 2, 3, 4, 5]));\nconsole.log(sum_squares([-1,\
    \ -2, -3, -4, -5]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([-1, -2, -3]));\nconsole.log(sum_squares([]));",
  "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.1, 2.2, 3.3,\
    \ 4.4, 5.5]));\nconsole.log(sum_squares([1, 2, 3, 4, 5]));\nconsole.log(sum_squares([-1.1,\
    \ -2.2, -3.3, -4.4, -5.5]));\nconsole.log(sum_squares([-1, -2, -3, -4, -5]));\n",
  "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n\
    }\n\nconsole.log(sum_squares([1.1, 2.2, 3.3]));\nconsole.log(sum_squares([1, 2,\
    \ 3]));\nconsole.log(sum_squares([-1, -2, -3]));\nconsole.log(sum_squares([]));\n",
  "  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([]));\n",
  "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n\
    }\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1, 2,\
    \ 3]));\nconsole.log(sum_squares([-1, -2, -3]));\nconsole.log(sum_squares([-1.2,\
    \ -2.3, -3.4]));\n", "  return lst.map(x => Math.ceil(x)).reduce((a, b) => a +\
    \ b * b, 0);\n}\n\nconsole.log(sum_squares([1.5, 2.5, 3.5]));\n", "    return\
    \ lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b, 0);\n}\n\n\
    console.log(sum_squares([1.5, 2.5, 3.5, 4.5]));\nconsole.log(sum_squares([1, 2,\
    \ 3, 4]));\nconsole.log(sum_squares([1, 2, 3, 4, 5]));\nconsole.log(sum_squares([1,\
    \ 2, 3, 4, 5, 6]));\nconsole.log(sum_squares([1, 2, 3, 4, 5, 6, 7]));\nconsole.log(sum_squares([1,\
    \ 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(sum_squares([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\
    console.log(sum_squares([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sum_squares([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(sum_squares([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(sum_squares([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13]));\nconsole.log(sum_squares([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14]));\nconsole.log(sum_squares([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15]));\nconsole.log(sum_squares([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(sum_squares([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15,", "  return lst.map(x => Math.ceil(x)).reduce((a,\
    \ b) => a + b * b, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([0, -1, -2]));\nconsole.log(sum_squares([-1.2,\
    \ -2.3, -3.4]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b);\n}\n\nconsole.log(sum_squares([1.5, 2.5, 3.5, 4.5]));\nconsole.log(sum_squares([1,\
    \ 2, 3, 4]));\nconsole.log(sum_squares([-1, -2, -3, -4]));\n", "  return lst.map(x\
    \ => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n\nconsole.log(sum_squares([1.5,\
    \ 2.5, 3.5]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([]));\n", "    return lst.map(Math.ceil).map(x\
    \ => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3,\
    \ 3.4]));\nconsole.log(sum_squares([5, 4, 3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([5,\
    \ 4, 3]));\nconsole.log(sum_squares([-1, -2, -3]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n", "    return\
    \ lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([-1.2, -2.3, -3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([-1, -2, -3]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n}\n", "    return\
    \ lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.5,\
    \ 2.5, 3.5, 4.5, 5.5]));\nconsole.log(sum_squares([1, 2, 3, 4, 5]));\nconsole.log(sum_squares([-1,\
    \ -2, -3, -4, -5]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([0.1, 0.2, 0.3]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([5, 4, 3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([]));\n", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((x, y) => x + y);\n}\n\nconsole.log(sum_squares([1.5, 2.5,\
    \ 3.5]));", "  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b ** 2,\
    \ 0);\n}\n\nconsole.log(sum_squares([1.1, 2.2, 3.3]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([1, 2, 3, 4]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([2, 3, 4]));\nconsole.log(sum_squares([-2,\
    \ -3, -4]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y);\n}\n\nconsole.log(sum_squares([1.5, 2.5, 3.5, 4.5]));\nconsole.log(sum_squares([1,\
    \ 2, 3, 4]));\nconsole.log(sum_squares([1, 2, 3, 4, 5]));\nconsole.log(sum_squares([1,\
    \ 2, 3, 4, 5, 6]));\nconsole.log(sum_squares([1, 2, 3, 4, 5, 6, 7]));\nconsole.log(sum_squares([1,\
    \ 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(sum_squares([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\
    console.log(sum_squares([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sum_squares([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(sum_squares([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(sum_squares([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13]));\nconsole.log(sum_squares([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14]));\nconsole.log(sum_squares([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15]));\nconsole.log(sum_squares([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(sum_squares([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16,", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3,\
    \ 3.4]));\nconsole.log(sum_squares([5, 4, 3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b);\n}\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([5,\
    \ 4, 3]));\nconsole.log(sum_squares([-1, -2, -3]));", "    return lst.map(x =>\
    \ Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([5, 4, 3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([0.1,\
    \ 0.2, 0.3]));\nconsole.log(sum_squares([-1.1, -2.2, -3.3]));\n", "    return\
    \ lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n}\n\nconsole.log(sum_squares([1.1,\
    \ 2.2, 3.3, 4.4, 5.5]));\nconsole.log(sum_squares([1, 2, 3, 4, 5]));\nconsole.log(sum_squares([-1,\
    \ -2, -3, -4, -5]));\n", "  return lst.map(x => Math.ceil(x)).reduce((a, b) =>\
    \ a + b * b, 0);\n}\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([-1, -2, -3]));\nconsole.log(sum_squares([-1.2,\
    \ -2.3, -3.4]));\n", "  return lst.map(x => Math.ceil(x)).reduce((a, b) => a +\
    \ b * b, 0);\n}\n\nconsole.log(sum_squares([1.1, 2.2, 3.3, 4.4, 5.5]));\nconsole.log(sum_squares([-1.1,\
    \ -2.2, -3.3, -4.4, -5.5]));\nconsole.log(sum_squares([]));", "  return lst.map(x\
    \ => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0.1,\
    \ 0.2, 0.3]));\n", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([0, -1, -2]));\n", "  return lst.map(x =>\
    \ Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([6, 8, -6, -8, 1]));\nconsole.log(sum_squares([]));\n",
  "  return lst.reduce((a, b) => a + Math.ceil(b) ** 2, 0);\n}\n\nconsole.log(sum_squares([1.5,\
    \ 2.5, 3.5, 4.5])); // 50\nconsole.log(sum_squares([1, 2, 3, 4])); // 30\nconsole.log(sum_squares([1,\
    \ 2, 3, 4, 5])); // 55\nconsole.log(sum_squares([-1, -2, -3, -4, -5])); // 55\n\
    console.log(sum_squares([-1.5, -2.5, -3.5, -4.5])); // 50\nconsole.log(sum_squares([]));\
    \ // 0\nconsole.log(sum_squares([-1.5, 2.5, -3.5, 4.5])); // 50\nconsole.log(sum_squares([-1.5,\
    \ -2.5, 3.5, 4.5])); // 50\nconsole.log(sum_squares([-1.5, -2.5, -3.5, 4.5]));\
    \ // 50\nconsole.log(sum_squares([-1.5, -2.5, -3.5, -4.5])); // 50\nconsole.log(sum_squares([1.5,\
    \ -2.5, -3.5, -4.5])); // 50\nconsole.log(sum_squares([1.5, 2.5, -3.5, -4.5]));\
    \ // 50\nconsole.log(sum_squares([1.5, 2.5, 3.5, -4.5])); // 50\nconsole.log(sum_squares([1.5,\
    \ 2.5, 3.5, 4.5])); // 50\nconsole.log(sum_squares([-1.5, 2.5, 3.5, 4.5])); //\
    \ 50\nconsole.log(sum_squares([-1.5, -2.5, 3.5, 4.5])); // 50\nconsole.log(sum_squares([-1.5,\
    \ -2.5, -3.", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y);\n}\n\nconsole.log(sum_squares([1.1, 2.2, 3.3]));\nconsole.log(sum_squares([3,\
    \ 4, 5]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([0.1, 0.2, 0.3]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([4.5, 5.6, 6.7]));\nconsole.log(sum_squares([7.8,\
    \ 8.9, 9.0]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y, 0);\n}\n\nconsole.log(sum_squares([1.5, 2.5, 3.5, 4.5, 5.5, 6.5,\
    \ 7.5, 8.5, 9.5]));\nconsole.log(sum_squares([1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5,\
    \ 8.5, 9.5]) == 285);\nconsole.log(sum_squares([1.1, 2.2, 3.3, 4.4, 5.5, 6.6,\
    \ 7.7, 8.8, 9.9]));\nconsole.log(sum_squares([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7,\
    \ 8.8, 9.9]) == 285);\nconsole.log(sum_squares([-1.1, -2.2, -3.3, -4.4, -5.5,\
    \ -6.6, -7.7, -8.8, -9.9]));\nconsole.log(sum_squares([-1.1, -2.2, -3.3, -4.4,\
    \ -5.5, -6.6, -7.7, -8.8, -9.9]) == 285);\n", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.5, 2.5,\
    \ 3.5]));", "  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n\
    }\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1, 2,\
    \ 3]));\nconsole.log(sum_squares([]));\n", "    let sum = 0;\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) * Math.ceil(lst[i]);\n\
    \    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.5, 2.5, 3.5]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([]));\nconsole.log(sum_squares([-1, -2, -3]));\n\
    console.log(sum_squares([-1.5, -2.5, -3.5]));\n", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((a, b) => a + b, 0);\n}\n", "    let sum = 0;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n\
    \    return sum;\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([-1, -2, -3]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([]));\n",
  "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.1, 2.2, 3.3]));\n\
    console.log(sum_squares([1, 2, 3]));\n", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((x, y) => x + y);\n}\n\nconsole.log(sum_squares([1.1, 2.2,\
    \ 3.3, 4.4, 5.5]));\nconsole.log(sum_squares([1, 2, 3, 4, 5]));\nconsole.log(sum_squares([-1,\
    \ -2, -3, -4, -5]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b);\n}\n\nconsole.log(sum_squares([1.1, 2.2, 3.3]));\nconsole.log(sum_squares([4,\
    \ 5, 6]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b);\n}\n\nconsole.log(sum_squares([1.5, 2.5, 3.5]));\n", "    return\
    \ lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n", " \
    \   return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n\
    }\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([-1.2,\
    \ -2.3, -3.4]));\nconsole.log(sum_squares([]));\nconsole.log(sum_squares([1, 2,\
    \ 3]));\nconsole.log(sum_squares([-1, -2, -3]));", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.5, 2.5,\
    \ 3.5]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1, 2,\
    \ 3, 4]));\nconsole.log(sum_squares([1, 2, 3, 4, 5]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b, 0);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([-1.2, -2.3, -3.4]));\nconsole.log(sum_squares([-1.2,\
    \ -2.3, 3.4]));\nconsole.log(sum_squares([]));\n", "    let sum: number = 0;\n\
    \    for (let i: number = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\n\
    console.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0, -1, -2]));\n",
  "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n\
    }\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([6, 8,\
    \ -6, -8, 1]));\nconsole.log(sum_squares([]));\nconsole.log(sum_squares([0, 0,\
    \ 0, 0, 0]));\nconsole.log(sum_squares([-1.2, -2.3, -3.4]));", "  return lst.map(x\
    \ => Math.ceil(x)).reduce((acc, x) => acc + x * x, 0);\n}\n\nconsole.log(sum_squares([1.1,\
    \ 2.2, 3.3, 4.4, 5.5]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x\
    \ * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\n\
    console.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([]));\n", "    return\
    \ lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y, 0);\n}\n\n\
    console.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\n\
    console.log(sum_squares([0.9, 1.1, 2.2]));\n", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.1, 2.2,\
    \ 3.3]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([]));\n",
  "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n\
    }\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([6, 8,\
    \ -6, -8, 1]));\nconsole.log(sum_squares([]));\nconsole.log(sum_squares([0, 0,\
    \ 0, 0, 0]));\nconsole.log(sum_squares([-1.2, -2.3, -3.4]));", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3,\
    \ 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0.9,\
    \ 1.1, 1.8]));\nconsole.log(sum_squares([-1, -2, -3]));\nconsole.log(sum_squares([-1.2,\
    \ -2.3, -3.4]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b);\n}\n\nconsole.log(sum_squares([1.5, 2.5, 3.5]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([1, 2, 3, 4]));\nconsole.log(sum_squares([1,\
    \ 2, 3, 4, 5]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([0.1, 0.2, 0.3]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.5,\
    \ 2.5, 3.5, 4.5, 5.5]));\nconsole.log(sum_squares([1, 2, 3, 4, 5]));\nconsole.log(sum_squares([-1,\
    \ -2, -3, -4, -5]));\n", "  return lst.map(x => Math.ceil(x)).reduce((a, b) =>\
    \ a + b * b, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([0, -1, -2]));\n", "  return lst.map(x =>\
    \ Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n\nconsole.log(sum_squares([1.1,\
    \ 2.2, 3.3]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([]));\n",
  "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n\
    }\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([6, 8,\
    \ -6, -8, 1]));\nconsole.log(sum_squares([]));\n", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((a, b) => a + b, 0);\n}\n\nconsole.log(sum_squares([1.1, 2.2,\
    \ 3.3]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1, 2,\
    \ 3, 4]));\nconsole.log(sum_squares([]));\nconsole.log(sum_squares([-1, -2, -3,\
    \ -4]));\nconsole.log(sum_squares([-1.1, -2.2, -3.3]));", "    let sum = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
    \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\n\
    console.log(sum_squares([-1.2, -2.3, -3.4]));\nconsole.log(sum_squares([-1.2,\
    \ 2.3, -3.4]));\nconsole.log(sum_squares([1.2, -2.3, 3.4]));\nconsole.log(sum_squares([]));\n\
    console.log(sum_squares([1.2]));\nconsole.log(sum_squares([1.2, 2.3]));\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4, 4.5]));\nconsole.log(sum_squares([-1.2, -2.3, -3.4, -4.5]));\nconsole.log(sum_squares([-1.2,\
    \ 2.3, -3.4, 4.5]));\nconsole.log(sum_squares([1.2, -2.3, 3.4, -4.5]));\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4, 4.5, 5.6]));\nconsole.log(sum_squares([-1.2, -2.3, -3.4, -4.5, -5.6]));\n\
    console.log(sum_squares([-1.2, 2.3, -3.4, 4.5, -5.6]));\nconsole.log(sum_squares([1.2,\
    \ -2.3, 3.4, -4.5, 5.6]));\nconsole.log(sum_squares([1.2, 2.3, 3.4, 4.5, 5.6,\
    \ 6.7]));\nconsole.log(sum_squares([-1.2, -2.3, -3.4, -4.5", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n}\n", "    return\
    \ lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n}\n\nconsole.log(sum_squares([1.5,\
    \ 2.5, 3.5]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y, 0);\n}\n\nconsole.log(sum_squares([1.5, 2.5, 3.5, 4.5]));\nconsole.log(sum_squares([1,\
    \ 2, 3, 4]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a,\
    \ b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([0.1, 0.2, 0.3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));\n", "  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b *\
    \ b, 0);\n}\n\nconsole.log(sum_squares([1.1, 2.2, 3.3]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([0, -1, -2]));\n", "    return lst.map(x =>\
    \ Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.5,\
    \ 2.5, 3.5]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y);\n}\n\nconsole.log(sum_squares([1.5, 2.5, 3.5]));\n", "    return\
    \ lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0,\
    \ -1, -2]));\n", "  return lst.map(Math.ceil).reduce((a, b) => a + b ** 2, 0);\n\
    }\nconsole.log(sum_squares([1.5, 2.5, 3.5])); // 30\nconsole.log(sum_squares([1,\
    \ 2, 3])); // 14\nconsole.log(sum_squares([-1, -2, -3])); // 14\nconsole.log(sum_squares([-1.5,\
    \ -2.5, -3.5])); // 30\n", "    return lst.map(x => Math.ceil(x)).map(x => x *\
    \ x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\n\
    console.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([-1, -2, -3]));\n",
  "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((a, b) => a + b, 0);\n\
    }\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1, 2,\
    \ 3]));\nconsole.log(sum_squares([]));\nconsole.log(sum_squares([-1, -2, -3]));\n\
    console.log(sum_squares([-1.2, -2.3, -3.4]));\n", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3,\
    \ 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0.9,\
    \ 1.1, 1.2]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([-1, -2, -3]));\nconsole.log(sum_squares([]));\n\
    console.log(sum_squares([-1.2, -2.3, -3.4]));\nconsole.log(sum_squares([1.2, 2.3,\
    \ 3.4, -1.2, -2.3, -3.4]));\nconsole.log(sum_squares([1.2, 2.3, 3.4, -1.2, -2.3,\
    \ -3.4, 1.2, 2.3, 3.4, -1.2, -2.3, -3.4]));\nconsole.log(sum_squares([1.2, 2.3,\
    \ 3.4, -1.2, -2.3, -3.4, 1.2, 2.3, 3.4, -1.2, -2.3, -3.4, 1.2, 2.3, 3.4, -1.2,\
    \ -2.3, -3.4]));\nconsole.log(sum_squares([1.2, 2.3, 3.4, -1.2, -2.3, -3.4, 1.2,\
    \ 2.3, 3.4, -1.2, -2.3, -3.4, 1.2, 2.3, 3.4, -1.2, -2.3, -3.4, 1.2, 2.3, 3.4,\
    \ -1.2, -2.3, -3.4]));\nconsole.log(sum_squares([1.2, 2.3, 3.4, -1.2, -2.3, -3.4,\
    \ 1.2, 2.3, 3.4, -1.2, -2.3, -", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.5, 2.5,\
    \ 3.5, 4.5]));\nconsole.log(sum_squares([1, 2, 3, 4]));\nconsole.log(sum_squares([1,\
    \ -2, 3, -4]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([2,\
    \ 3, 4]));\nconsole.log(sum_squares([-1.2, -2.3, -3.4]));\nconsole.log(sum_squares([-2,\
    \ -3, -4]));", "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0.9,\
    \ 1.1, 2.2]));", "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length;\
    \ i++) {\n        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\n\
    console.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\n\
    console.log(sum_squares([0.1, 0.2, 0.3]));\nconsole.log(sum_squares([-1, -2, -3]));\n\
    console.log(sum_squares([-1.1, -2.2, -3.3]));\n", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((a, b) => a + b);\n}\n\nconsole.log(sum_squares([1.2, 2.3,\
    \ 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0.9,\
    \ 1.1, 1.8]));\n", "  return lst.map(x => Math.ceil(x)).reduce((acc, curr) =>\
    \ acc + curr ** 2, 0);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([]));\nconsole.log(sum_squares([-1, -2, -3]));\n",
  "  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);\n}\n", "  \
    \  return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n\
    }\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1, 2,\
    \ 3]));\nconsole.log(sum_squares([]));\n", "    return lst.map(x => Math.ceil(x)).map(x\
    \ => x * x).reduce((x, y) => x + y);\n}\n\nconsole.log(sum_squares([1.2, 2.3,\
    \ 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([0.1,\
    \ 0.2, 0.3]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y);\n}\n\nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1,\
    \ 2, 3]));\nconsole.log(sum_squares([0.9, 1.1, 1.5]));\n", "    return lst.map(x\
    \ => Math.ceil(x)).map(x => x * x).reduce((x, y) => x + y);\n}\n\nconsole.log(sum_squares([1.2,\
    \ 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([-1,\
    \ -2, -3]));", "    let result = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        result += Math.ceil(lst[i]) ** 2;\n    }\n    return result;\n}\n\
    \nconsole.log(sum_squares([1.2, 2.3, 3.4]));\nconsole.log(sum_squares([1, 2, 3]));\n\
    console.log(sum_squares([-1, -2, -3]));\nconsole.log(sum_squares([-1.2, -2.3,\
    \ -3.4]));\n", "    return lst.map(x => Math.ceil(x)).map(x => x * x).reduce((x,\
    \ y) => x + y, 0);\n}\n\nconsole.log(sum_squares([1.1, 2.2, 3.3, 4.4, 5.5]));\n\
    console.log(sum_squares([1, 2, 3, 4, 5]));\nconsole.log(sum_squares([-1, -2, -3,\
    \ -4, -5]));\n", "  return lst.map(x => Math.ceil(x)).reduce((acc, x) => acc +\
    \ x ** 2, 0);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

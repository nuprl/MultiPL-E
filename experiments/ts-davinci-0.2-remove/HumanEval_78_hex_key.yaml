name: HumanEval_78_hex_key
language: ts
prompt: "//You have been tasked to write a function that receives \n// a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n// digits that are primes\
  \ (prime number, or a prime, is a natural number \n// greater than 1 that is not\
  \ a product of two smaller natural numbers).\n// Hexadecimal digits are 0, 1, 2,\
  \ 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers are 2, 3, 5, 7, 11, 13,\
  \ 17,...\n// So you have to determine a number of the following digits: 2, 3, 5,\
  \ 7, \n// B (=decimal 11), D (=decimal 13).\n// Note: you may assume the input is\
  \ always correct or empty string, \n// and symbols A,B,C,D,E,F are always uppercase.\n\
  // Examples:\nfunction hex_key(num: string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = hex_key;\n  assert.deepEqual(candidate(\"AB\"),1);\n\
  \  assert.deepEqual(candidate(\"1077E\"),2);\n  assert.deepEqual(candidate(\"ABED1A33\"\
  ),4);\n  assert.deepEqual(candidate(\"2020\"),2);\n  assert.deepEqual(candidate(\"\
  123456789ABCDEF0\"),6);\n  assert.deepEqual(candidate(\"112233445566778899AABBCCDDEEFF00\"\
  ),12);\n}\n\ntest();"
completions: ["    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\"\
    ;\n    let hex_arr: string[] = hex.split(\"\");\n    let hex_num: string[] = num.split(\"\
    \");\n    for (let i: number = 0; i < hex_num.length; i++) {\n        if (hex_arr.indexOf(hex_num[i])\
    \ % 2 !== 0 && hex_arr.indexOf(hex_num[i]) !== 0) {\n            count++;\n  \
    \      }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"\
    4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"\
    7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"\
    A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    AA\"));\nconsole.log(hex_key(\"B1\"));\nconsole.log(hex_key(\"C2\"));\nconsole.log(hex_key(\"\
    D3\"));\nconsole.log(hex_key(\"E4\"));\nconsole.log(hex_key(\"F5\"));\nconsole.log(hex_key(\"\
    ABA\"));\nconsole.log(hex_key(\"B1B\"));\nconsole.log(hex_key(\"C2C\"));\nconsole.log(hex_key(\"\
    D3D\"));\nconsole.log(hex_key(\"E4E\"));\nconsole.log(hex_key(\"F5F\"));\nconsole.log(hex_key(\"\
    AAAB\"));\nconsole.log(hex_key(\"B1B1", "    let hex_key = {\n        '0': 0,\n\
    \        '1': 1,\n        '2': 2,\n        '3': 3,\n        '4': 4,\n        '5':\
    \ 5,\n        '6': 6,\n        '7': 7,\n        '8': 8,\n        '9': 9,\n   \
    \     'A': 10,\n        'B': 11,\n        'C': 12,\n        'D': 13,\n       \
    \ 'E': 14,\n        'F': 15\n    }\n    return hex_key[num];\n}\n", "    let hex_key:\
    \ number = 0;\n    let hex_key_arr: string[] = ['0', '1', '2', '3', '4', '5',\
    \ '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let hex_key_prime: string[]\
    \ = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i = 0; i < num.length; i++)\
    \ {\n        for (let j = 0; j < hex_key_arr.length; j++) {\n            if (num[i]\
    \ === hex_key_arr[j]) {\n                hex_key++;\n            }\n        }\n\
    \    }\n    return hex_key;\n}", "    let count: number = 0;\n    let hex: string\
    \ = \"0123456789ABCDEF\";\n    let primes: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (primes.indexOf(num[i]) !==\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"21\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    1A\"));\nconsole.log(hex_key(\"2A3B\"));\nconsole.log(hex_key(\"FFF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEFabcdef\"));\nconsole.log(hex_key(\"0123456789ABCDEF\"\
    ));\nconsole.log(hex_key(\"0123456789ABCDEFabcdef\"));\nconsole.log(hex_key(\"\
    0123456789ABCDEFabcdef\"));\nconsole.log(hex_key(\"0123456789ABCDEFabcdef\"));\n\
    console.log(hex_key(\"0123456789ABCDEFabcdef\"));\nconsole.log(hex_key(\"0123456789ABCDEFabcdef\"\
    ));\nconsole.log(hex_key(\"0123456789ABCDEFabcdef\"));\nconsole.log(hex_key(\"\
    0123456789ABCDEFabcdef\"));\nconsole.log(hex_key(\"0123456789ABCDEFabcdef\"));\n\
    console.log(hex_key(\"0123456789ABCDEFabcdef\"));\nconsole.log(hex_key(\"0123456789ABCDEFabcdef\"\
    ));\nconsole.log(hex_key(\"0123456789ABCDEFabcdef\"));\nconsole.log(hex_key(\"\
    0123456789ABCDEFabcdef\"));\nconsole.log(hex_key(\"0123456789ABCDEFabc", "   \
    \ let hex_key: number = 0;\n    let hex_key_arr: string[] = ['0', '1', '2', '3',\
    \ '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let hex_key_prime:\
    \ string[] = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i = 0; i < num.length;\
    \ i++) {\n        for (let j = 0; j < hex_key_arr.length; j++) {\n           \
    \ if (num[i] === hex_key_arr[j]) {\n                for (let k = 0; k < hex_key_prime.length;\
    \ k++) {\n                    if (num[i] === hex_key_prime[k]) {\n           \
    \             hex_key++;\n                    }\n                }\n         \
    \   }\n        }\n    }\n    return hex_key;\n}\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\n\
    console.log(hex_key('1234567890ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex", "    let hex_primes: string\
    \ = \"2357BD\";\n    let count: number = 0;\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_primes.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    2\"));\nconsole.log(hex_key(\"2357\"));\nconsole.log(hex_key(\"2468ACE\"));\n\
    console.log(hex_key(\"CD5B3AE\"));\n", "    let result: number = 0;\n    let hex:\
    \ string = \"0123456789ABCDEF\";\n    let hex_prime: string = \"2357BD\";\n  \
    \  for (let i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ !== -1) {\n            result++;\n        }\n    }\n    return result;\n}\n\n\
    console.log(hex_key(\"\"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"\
    2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"\
    5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"7\"));\nconsole.log(hex_key(\"\
    8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"\
    B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"\
    E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"10\"));\nconsole.log(hex_key(\"\
    11\"));\nconsole.log(hex_key(\"12\"));\nconsole.log(hex_key(\"13\"));\nconsole.log(hex_key(\"\
    14\"));\nconsole.log(hex_key(\"15\"));\nconsole.log(hex_key(\"16\"));\nconsole.log(hex_key(\"\
    17\"));\nconsole.log(hex_key(\"18\"));\nconsole.log(hex_key(\"19\"));\nconsole.log(hex_key(\"\
    1A\"));\nconsole.log(hex_key(\"1B\"));\nconsole.log(hex_key(\"1C\"));\nconsole.log(hex_key(\"\
    1D\"));\nconsole.log(hex_key(\"1E\"));\nconsole.log(hex_key(\"1F\"));\nconsole.log(hex_key(\"\
    20\"));\nconsole.log(hex_key(\"21\"));\n", "    let count: number = 0;\n    let\
    \ hex: string = \"0123456789ABCDEF\";\n    let prime: string = \"2357BDF\";\n\
    \    for (let i: number = 0; i < num.length; i++) {\n        if (prime.indexOf(num[i])\
    \ > -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    1A\"));\nconsole.log(hex_key(\"7F9A2B\"));\nconsole.log(hex_key(\"39A\"));\nconsole.log(hex_key(\"\
    C5D\"));\nconsole.log(hex_key(\"\"));\n", "    let hex_key = {\n        '0': 0,\n\
    \        '1': 1,\n        '2': 2,\n        '3': 3,\n        '4': 4,\n        '5':\
    \ 5,\n        '6': 6,\n        '7': 7,\n        '8': 8,\n        '9': 9,\n   \
    \     'A': 10,\n        'B': 11,\n        'C': 12,\n        'D': 13,\n       \
    \ 'E': 14,\n        'F': 15\n    }\n    let count = 0;\n    for (let i = 0; i\
    \ < num.length; i++) {\n        if (hex_key[num[i]] === 2 || hex_key[num[i]] ===\
    \ 3 || hex_key[num[i]] === 5 || hex_key[num[i]] === 7 || hex_key[num[i]] === 11\
    \ || hex_key[num[i]] === 13) {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\nconsole.log(hex_key('2A3F'));\nconsole.log(hex_key('F886'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDABCD'));\nconsole.log(hex_key('B13579B13579'));\nconsole.log(hex_key('FF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFFF'));\nconsole.log(hex_key('ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    console.log(hex_key('ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    console.log(hex_key('ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    console.log(hex_key('ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJK",
  "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let\
    \ hex_prime: string = \"2357BD\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_prime.includes(num[i])) {\n            count++;\n  \
    \      }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"\
    4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"\
    7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"\
    A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    A2357BD\"));\nconsole.log(hex_key(\"A2357BD\"));\nconsole.log(hex_key(\"A2357BD\"\
    ));\nconsole.log(hex_key(\"A2357BD\"));\nconsole.log(hex_key(\"A2357BD\"));\n\
    console.log(hex_key(\"A2357BD\"));\nconsole.log(hex_key(\"A2357BD\"));\nconsole.log(hex_key(\"\
    A2357BD\"));\nconsole.log(hex_key(\"A2357BD\"));\nconsole.log(hex_key(\"A2357BD\"\
    ));\nconsole.log(hex_key(\"A2357BD\"));\nconsole.log(hex_key(\"A2357BD\"));\n\
    console.log(hex_key(\"A2357BD\"));\nconsole.log(hex_key(\"A2357BD\"));\nconsole.log(hex_key(\"\
    A2357BD\"));\nconsole.log", "  let hex_primes = 0;\n  let hex_digits = {\n   \
    \ 0: 0,\n    1: 0,\n    2: 2,\n    3: 3,\n    4: 0,\n    5: 5,\n    6: 0,\n  \
    \  7: 7,\n    8: 0,\n    9: 0,\n    A: 11,\n    B: 11,\n    C: 0,\n    D: 13,\n\
    \    E: 0,\n    F: 0\n  };\n  for (let i = 0; i < num.length; i++) {\n    if (hex_digits[num[i]]\
    \ !== 0) {\n      hex_primes++;\n    }\n  }\n  return hex_primes;\n}\nconsole.log(hex_key(\"\
    2A3AE\")); // 3\nconsole.log(hex_key(\"A78BED\")); // 4\nconsole.log(hex_key(\"\
    \")); // 0\nconsole.log(hex_key(\"ABCDEF\")); // 0\nconsole.log(hex_key(\"1A2B3C4D5E6F\"\
    )); // 0\nconsole.log(hex_key(\"1234567890ABCDEF\")); // 4\nconsole.log(hex_key(\"\
    2A3AEF\")); // 4\nconsole.log(hex_key(\"2A3AEF\")); // 4\nconsole.log(hex_key(\"\
    2A3AEF\")); // 4\nconsole.log(hex_key(\"2A3AEF\")); // 4\nconsole.log(hex_key(\"\
    2A3AEF\")); // 4\nconsole.log(hex_key(\"2A3AEF\")); // 4\nconsole.log(hex_key(\"\
    2A3AEF\")); // 4\nconsole.log(hex_key(\"2A3AEF\")); // 4\nconsole.log(hex_key(\"\
    2A3AEF\")); // 4\nconsole.log(hex_key(\"2A3AEF\")); // 4\nconsole.log(hex_key(\"\
    2A3AEF\")); // 4\nconsole.log(hex_key(\"2A3AEF\")); // 4\nconsole.log(hex_key(\"\
    2A3AEF", "    let result: number = 0;\n    let hex: string = '0123456789ABCDEF';\n\
    \    let primes: number[] = [2, 3, 5, 7, 11, 13, 17];\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        if (primes.indexOf(hex.indexOf(num[i]))\
    \ > -1) {\n            result++;\n        }\n    }\n    return result;\n}\n\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('1'));\nconsole.log(hex_key('2'));\n\
    console.log(hex_key('3'));\nconsole.log(hex_key('4'));\nconsole.log(hex_key('5'));\n\
    console.log(hex_key('6'));\nconsole.log(hex_key('7'));\nconsole.log(hex_key('8'));\n\
    console.log(hex_key('9'));\nconsole.log(hex_key('A'));\nconsole.log(hex_key('B'));\n\
    console.log(hex_key('C'));\nconsole.log(hex_key('D'));\nconsole.log(hex_key('E'));\n\
    console.log(hex_key('F'));\nconsole.log(hex_key('10'));\nconsole.log(hex_key('11'));\n\
    console.log(hex_key('12'));\nconsole.log(hex_key('13'));\nconsole.log(hex_key('14'));\n\
    console.log(hex_key('15'));\nconsole.log(hex_key('16'));\nconsole.log(hex_key('17'));\n\
    console.log(hex_key('18'));\nconsole.log(hex_key('19'));\nconsole.log(hex_key('1A'));\n\
    console.log(hex_key('1B'));\nconsole.log(hex_key('1C'));\nconsole.log(hex_key('1D'));\n\
    console.log(hex_key('1E'));\nconsole.log(hex_key('1F'));\nconsole.log(hex_key('",
  "    let hex: string = \"0123456789ABCDEF\";\n    let hex_primes: string = \"2357BDF\"\
    ;\n    let count: number = 0;\n    for (let i: number = 0; i < num.length; i++)\
    \ {\n        if (hex_primes.indexOf(num[i]) > -1) {\n            count++;\n  \
    \      }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"\
    7F\"));\nconsole.log(hex_key(\"AC\"));\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    39A\"));\nconsole.log(hex_key(\"FFF\"));\nconsole.log(hex_key(\"ABCDEF\"));\n\
    console.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    )", "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n\
    \    let hex_prime: string = \"2357BD\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_prime.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"\
    4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"\
    7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"\
    A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    AA\"));\nconsole.log(hex_key(\"B8\"));\nconsole.log(hex_key(\"CC\"));\nconsole.log(hex_key(\"\
    DD\"));\nconsole.log(hex_key(\"EE\"));\nconsole.log(hex_key(\"FF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"BADFACE\"));\nconsole.log(hex_key(\"C0FFEE\"\
    ));\nconsole.log(hex_key(\"DEADBEEF\"));\nconsole.log(hex_key(\"BABABABABABABABABABABABABABABABABABABABABABABABAB\"\
    ));\nconsole.log(hex_key(\"CAFEBABE\"));\nconsole.log(hex_key(\"DEADBEEF\"));\n\
    console.log(hex_key(\"BABABABABABABABABABABABABABABABABABA", "    let count: number\
    \ = 0;\n    let hex: string = '0123456789ABCDEF';\n    let primes: string = '2357BD';\n\
    \    for (let i: number = 0; i < num.length; i++) {\n        if (primes.indexOf(num[i])\
    \ > -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('B3F7A'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEFA'));\nconsole.log(hex_key('ABCDEFAB'));\n\
    console.log(hex_key('ABCDEFABB'));\nconsole.log(hex_key('ABCDEFABBB'));\nconsole.log(hex_key('ABCDEFABBBB'));\n\
    console.log(hex_key('ABCDEFABBBBB'));\nconsole.log(hex_key('ABCDEFABBBBBB'));\n\
    console.log(hex_key('ABCDEFABBBBBBB'));\nconsole.log(hex_key('ABCDEFABBBBBBBB'));\n\
    console.log(hex_key('ABCDEFABBBBBBBBB'));\nconsole.log(hex_key('ABCDEFABBBBBBBBBB'));\n\
    console.log(hex_key('ABCDEFABBBBBBBBBBB'));\nconsole.log(hex_key('ABCDEFABBBBBBBBBBBB'));\n\
    console.log(hex_key('ABCDEFABBBBBBBBBBBBB'));\nconsole.log(hex_key('ABCDEFABBBBBBBBBBBBBB'));\n\
    console.log(hex_key('ABCDEFABBBBBBBBBBBBBBB'));\nconsole.log(hex_key('ABCDEFABBBBBBBBBBBBBBBB'));\n\
    console.log(hex_key('ABCDEFABBBBBBBBBBBBBBBBB'));\nconsole.log(hex_key('ABCDEFABBBBBBBBBBBBBBBBBB'));\n\
    console", "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\"\
    ;\n    let primes: string = \"2357BDF\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (primes.indexOf(num[i]) > -1) {\n            count++;\n \
    \       }\n    }\n    return count;\n}\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"\
    7F9A2B\"));\nconsole.log(hex_key(\"39A\"));\nconsole.log(hex_key(\"FFF\"));\n\
    console.log(hex_key(\"\"));", "    let hex_key: number = 0;\n    let hex_arr:\
    \ string[] = num.split('');\n    let hex_num: number[] = [];\n    for (let i =\
    \ 0; i < hex_arr.length; i++) {\n        switch (hex_arr[i]) {\n            case\
    \ 'A':\n                hex_num.push(10);\n                break;\n          \
    \  case 'B':\n                hex_num.push(11);\n                break;\n    \
    \        case 'C':\n                hex_num.push(12);\n                break;\n\
    \            case 'D':\n                hex_num.push(13);\n                break;\n\
    \            case 'E':\n                hex_num.push(14);\n                break;\n\
    \            case 'F':\n                hex_num.push(15);\n                break;\n\
    \            default:\n                hex_num.push(Number(hex_arr[i]));\n   \
    \             break;\n        }\n    }\n    for (let i = 0; i < hex_num.length;\
    \ i++) {\n        if (hex_num[i] === 2 || hex_num[i] === 3 || hex_num[i] === 5\
    \ || hex_num[i] === 7 || hex_num[i] === 11 || hex_num[i] === 13) {\n         \
    \   hex_key++;\n        }\n    }\n    return hex_key;\n}\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('FF'));\nconsole.log(hex_key('F00D'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key", "    let count: number\
    \ = 0;\n    let hex: string = '0123456789ABCDEF';\n    let hex_arr: string[] =\
    \ hex.split('');\n    let hex_num: string[] = num.split('');\n    let hex_num_int:\
    \ number[] = [];\n    for (let i: number = 0; i < hex_num.length; i++) {\n   \
    \     hex_num_int.push(hex_arr.indexOf(hex_num[i]));\n    }\n    for (let i: number\
    \ = 0; i < hex_num_int.length; i++) {\n        if (hex_num_int[i] === 2 || hex_num_int[i]\
    \ === 3 || hex_num_int[i] === 5 || hex_num_int[i] === 7 || hex_num_int[i] ===\
    \ 11 || hex_num_int[i] === 13) {\n            count++;\n        }\n    }\n   \
    \ return count;\n}\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('1F'));\n\
    console.log(hex_key('2F'));\nconsole.log(hex_key('3F'));\nconsole.log(hex_key('4F'));\n\
    console.log(hex_key('5F'));\nconsole.log(hex_key('6F'));\nconsole.log(hex_key('7F'));\n\
    console.log(hex_key('8F'));\nconsole.log(hex_key('9F'));\nconsole.log(hex_key('AF'));\n\
    console.log(hex_key('BF'));\nconsole.log(hex_key('CF'));\nconsole.log(hex_key('DF'));\n\
    console.log(hex_key('EF'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFFF'));\nconsole.log(hex_key('FFFFF'));\nconsole.log(hex_key('FFFFFF'));\n\
    console.log(hex_key('FFFFFFF'));\nconsole.log(hex_key('FFFFFFFF'));\nconsole",
  "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let\
    \ hex_prime: string = \"2357BD\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_prime.includes(num[i])) {\n            count++;\n  \
    \      }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"\
    4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"\
    7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"\
    A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    AA\"));\nconsole.log(hex_key(\"B8\"));\nconsole.log(hex_key(\"CC\"));\nconsole.log(hex_key(\"\
    DD\"));\nconsole.log(hex_key(\"EE\"));\nconsole.log(hex_key(\"FF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"BADFAC\"));\nconsole.log(hex_key(\"CABDFE\"\
    ));\nconsole.log(hex_key(\"DACBEF\"));\nconsole.log(hex_key(\"EBCDAF\"));\nconsole.log(hex_key(\"\
    FEDCBA\"));\nconsole.log(hex_key(\"0123456789ABCDEF\"));\nconsole.log(hex_key(\"\
    BAD5BAD5BAD5BAD5\"));\nconsole.log(hex_key(\"0123456789ABCDEF\"));\nconsole.log(hex_key(\"",
  "    let count: number = 0;\n    let hex_key: string = '2357BD';\n    for (let i:\
    \ number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) !==\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('2A3F'));\n\
    console.log(hex_key('F5F5F5'));\nconsole.log(hex_key('FFFFFF'));\n", "    let\
    \ hex_key: string = \"2357BDF\";\n    let count: number = 0;\n    for (let i:\
    \ number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) !==\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"2357\"));\nconsole.log(hex_key(\"\
    0123456789ABCDEF\"));\nconsole.log(hex_key(\"FEDCBA9876543210\"));\nconsole.log(hex_key(\"\
    FEDCBA9876543210FEDCBA9876543210\"));\nconsole.log(hex_key(\"FEDCBA9876543210FEDCBA9876543210FEDCBA9876543210\"\
    ));\n", "    let primes = [2, 3, 5, 7, 11, 13];\n    let hex = ['0', '1', '2',\
    \ '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let count\
    \ = 0;\n    for (let i = 0; i < num.length; i++) {\n        for (let j = 0; j\
    \ < hex.length; j++) {\n            if (num[i] == hex[j]) {\n                for\
    \ (let k = 0; k < primes.length; k++) {\n                    if (j == primes[k])\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFFF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));",
  "    const hex_primes = {\n        '2': true,\n        '3': true,\n        '5':\
    \ true,\n        '7': true,\n        'B': true,\n        'D': true,\n        'F':\
    \ true\n    }\n    let count = 0;\n    for (let i = 0; i < num.length; i++) {\n\
    \        if (hex_primes[num[i]]) {\n            count++;\n        }\n    }\n \
    \   return count;\n}\n\nconsole.log(hex_key('F'));\nconsole.log(hex_key('2A'));\n\
    console.log(hex_key('FFFF'));\nconsole.log(hex_key('FFFFFF'));\nconsole.log(hex_key('FFFFFFFF'));\n",
  "  let count = 0;\n  let hex = {\n    '0': 0,\n    '1': 1,\n    '2': 2,\n    '3':\
    \ 3,\n    '4': 4,\n    '5': 5,\n    '6': 6,\n    '7': 7,\n    '8': 8,\n    '9':\
    \ 9,\n    'A': 10,\n    'B': 11,\n    'C': 12,\n    'D': 13,\n    'E': 14,\n \
    \   'F': 15\n  }\n  for (let i = 0; i < num.length; i++) {\n    if (hex[num[i]]\
    \ === 2 || hex[num[i]] === 3 || hex[num[i]] === 5 || hex[num[i]] === 7 || hex[num[i]]\
    \ === 11 || hex[num[i]] === 13) {\n      count++;\n    }\n  }\n  return count;\n\
    }\nconsole.log(hex_key('0F'));\nconsole.log(hex_key('2A'));\nconsole.log(hex_key('3F'));\n\
    console.log(hex_key('FE'));\nconsole.log(hex_key('A2F'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(", "    let hex_key = {\n       \
    \ '0': 0,\n        '1': 1,\n        '2': 2,\n        '3': 3,\n        '4': 4,\n\
    \        '5': 5,\n        '6': 6,\n        '7': 7,\n        '8': 8,\n        '9':\
    \ 9,\n        'A': 10,\n        'B': 11,\n        'C': 12,\n        'D': 13,\n\
    \        'E': 14,\n        'F': 15\n    }\n    let count = 0;\n    for (let i\
    \ = 0; i < num.length; i++) {\n        if (hex_key[num[i]] === 2 || hex_key[num[i]]\
    \ === 3 || hex_key[num[i]] === 5 || hex_key[num[i]] === 7 || hex_key[num[i]] ===\
    \ 11 || hex_key[num[i]] === 13) {\n            count++;\n        }\n    }\n  \
    \  return count;\n}\nconsole.log(hex_key('2A3B'));\nconsole.log(hex_key('FF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.", "    let result: number = 0;\n    let\
    \ hex: string = \"0123456789ABCDEF\";\n    let hex_primes: string = \"2357BD\"\
    ;\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex_primes.indexOf(num[i])\
    \ !== -1) {\n            result++;\n        }\n    }\n    return result;\n}\n\n\
    console.log(hex_key(\"\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"\
    2101\"));\nconsole.log(hex_key(\"FE\"));\nconsole.log(hex_key(\"1F\"));\nconsole.log(hex_key(\"\
    A\"));\nconsole.log(hex_key(\"AA\"));\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    ABA\"));\nconsole.log(hex_key(\"ABB\"));\nconsole.log(hex_key(\"ABC\"));\nconsole.log(hex_key(\"\
    ABCD\"));\nconsole.log(hex_key(\"ABCDE\"));\nconsole.log(hex_key(\"ABCDEF\"));\n\
    console.log(hex_key(\"ABCDEFF\"));\nconsole.log(hex_key(\"ABCDEFFF\"));\nconsole.log(hex_key(\"\
    ABCDEFFFF\"));\nconsole.log(hex_key(\"ABCDEFFFFF\"));\nconsole.log(hex_key(\"\
    ABCDEFFFFFF\"));\nconsole.log(hex_key(\"ABCDEFFFFFFF\"));\nconsole.log(hex_key(\"\
    ABCDEFFFFFFFF\"));\nconsole.log(hex_key(\"ABCDEFFFFFFFFF\"));\nconsole.log(hex_key(\"\
    ABCDEFFFFFFFFFF\"));\nconsole.log(hex_key(\"ABCDEFFFFFFFFFFF\"));\nconsole.log(hex_key(\"\
    ABCDEFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"ABCDEFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"\
    ABCDEFFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"ABCDEFFFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"\
    ABCDEFFFFFFFFFFFFFFFF\"));", "    let count = 0;\n    let hexArr = ['0', '1',\
    \ '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n   \
    \ let primeArr = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997];\n    let hexArr2 = [];\n    for (let i =\
    \ 0; i < hexArr.length;", "    let count: number = 0;\n    let hex: string = '0123456789ABCDEF';\n\
    \    let primes: string = '2357BD';\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (primes.indexOf(num[i]) !== -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key('0'));\nconsole.log(hex_key('1'));\n\
    console.log(hex_key('2'));\nconsole.log(hex_key('3'));\nconsole.log(hex_key('4'));\n\
    console.log(hex_key('5'));\nconsole.log(hex_key('6'));\nconsole.log(hex_key('7'));\n\
    console.log(hex_key('8'));\nconsole.log(hex_key('9'));\nconsole.log(hex_key('A'));\n\
    console.log(hex_key('B'));\nconsole.log(hex_key('C'));\nconsole.log(hex_key('D'));\n\
    console.log(hex_key('E'));\nconsole.log(hex_key('F'));\nconsole.log(hex_key('2A'));\n\
    console.log(hex_key('2B'));\nconsole.log(hex_key('2C'));\nconsole.log(hex_key('2D'));\n\
    console.log(hex_key('2E'));\nconsole.log(hex_key('2F'));\nconsole.log(hex_key('3A'));\n\
    console.log(hex_key('3B'));\nconsole.log(hex_key('3C'));\nconsole.log(hex_key('3D'));\n\
    console.log(hex_key('3E'));\nconsole.log(hex_key('3F'));\nconsole.log(hex_key('4A'));\n\
    console.log(hex_key('4B'));\nconsole.log(hex_key('4C'));\nconsole.log(hex_key('4D'));\n\
    console.log(hex_key('4E'));\nconsole.log", "    let count: number = 0;\n    let\
    \ hex: string = \"0123456789ABCDEF\";\n    let prime: string = \"2357BDF\";\n\
    \    for (let i: number = 0; i < num.length; i++) {\n        if (prime.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    console.log(hex_key(\"\"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"\
    2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"\
    5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"7\"));\nconsole.log(hex_key(\"\
    8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"\
    B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"\
    E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"AA\"));\nconsole.log(hex_key(\"\
    B8\"));\nconsole.log(hex_key(\"CC\"));\nconsole.log(hex_key(\"DD\"));\nconsole.log(hex_key(\"\
    EE\"));\nconsole.log(hex_key(\"FF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    BADFAC\"));\nconsole.log(hex_key(\"DEADBEEF\"));\nconsole.log(hex_key(\"FFEEDDCCBBAA\"\
    ));\nconsole.log(hex_key(\"ABCDEFEDCBA\"));\nconsole.log(hex_key(\"BAADF00DBAADF00D\"\
    ));\nconsole.log(hex_key(\"D15EA5E\"));", "    let count = 0;\n    let hex = ['0',\
    \ '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n\
    \    let hex_prime = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i = 0; i <\
    \ num.length; i++) {\n        for (let j = 0; j < hex_prime.length; j++) {\n \
    \           if (num[i] === hex_prime[j]) {\n                count++;\n       \
    \     }\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('1A2B3C4D'));\nconsole.log(hex_key('1234567890ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('12345", "    let\
    \ count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let primes:\
    \ string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (primes.indexOf(num[i]) !== -1) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    1A\"));\nconsole.log(hex_key(\"AA\"));\nconsole.log(hex_key(\"7F\"));\nconsole.log(hex_key(\"\
    C\"));\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log",
  "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let\
    \ hex_prime: string = \"2357BD\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_prime.indexOf(num[i]) !== -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"\
    4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"\
    7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"\
    A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    10\"));\nconsole.log(hex_key(\"11\"));\nconsole.log(hex_key(\"12\"));\nconsole.log(hex_key(\"\
    13\"));\nconsole.log(hex_key(\"14\"));\nconsole.log(hex_key(\"15\"));\nconsole.log(hex_key(\"\
    16\"));\nconsole.log(hex_key(\"17\"));\nconsole.log(hex_key(\"18\"));\nconsole.log(hex_key(\"\
    19\"));\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"1B\"));\nconsole.log(hex_key(\"\
    1C\"));\nconsole.log(hex_key(\"1D\"));\nconsole.log(hex_key(\"1E\"));\nconsole.log(hex_key(\"\
    1F\"));\nconsole.log(hex_key(\"20\"));\nconsole.log(hex_key(\"21\"));\nconsole",
  "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let\
    \ hex_arr: string[] = num.split(\"\");\n    for (let i: number = 0; i < hex_arr.length;\
    \ i++) {\n        if (hex.indexOf(hex_arr[i]) % 2 != 0 && hex.indexOf(hex_arr[i])\
    \ > 1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"\
    21\"));\nconsole.log(hex_key(\"CD\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"\
    1AE3\"));\nconsole.log(hex_key(\"B1A87\"));\n", "    let count: number = 0;\n\
    \    let hex: string = '0123456789ABCDEF';\n    let hex_prime: string = '2357BD';\n\
    \    for (let i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ > -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('FF'));\n\
    console.log(hex_key('1F'));\nconsole.log(hex_key('2F'));\nconsole.log(hex_key('3F'));\n\
    console.log(hex_key('4F'));\nconsole.log(hex_key('5F'));\nconsole.log(hex_key('6F'));\n\
    console.log(hex_key('7F'));\nconsole.log(hex_key('8F'));\nconsole.log(hex_key('9F'));\n\
    console.log(hex_key('AF'));\nconsole.log(hex_key('BF'));\nconsole.log(hex_key('CF'));\n\
    console.log(hex_key('DF'));\nconsole.log(hex_key('EF'));\nconsole.log(hex_key('FF'));\n\
    console.log(hex_key('0F'));\nconsole.log(hex_key('00'));\nconsole.log(hex_key('01'));\n\
    console.log(hex_key('02'));\nconsole.log(hex_key('03'));\nconsole.log(hex_key('04'));\n\
    console.log(hex_key('05'));\nconsole.log(hex_key('06'));\nconsole.log(hex_key('07'));\n\
    console.log(hex_key('08'));\nconsole.log(hex_key('09'));\nconsole.log(hex_key('0A'));\n\
    console.log(hex_key('0B'));\nconsole.log(hex_key('0C'));\nconsole.log(hex_key('0D'));\n\
    console.log(hex_key('0E'));\nconsole.log(hex_key('0F'));\nconsole.log", "    let\
    \ count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let hex_prime:\
    \ string = \"2357BD\";\n    for (let i: number = 0; i < num.length; i++) {\n \
    \       if (hex_prime.includes(num[i])) {\n            count++;\n        }\n \
    \   }\n    return count;\n}\n\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"\
    4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"\
    7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"\
    A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    10\"));\nconsole.log(hex_key(\"11\"));\nconsole.log(hex_key(\"12\"));\nconsole.log(hex_key(\"\
    13\"));\nconsole.log(hex_key(\"14\"));\nconsole.log(hex_key(\"15\"));\nconsole.log(hex_key(\"\
    16\"));\nconsole.log(hex_key(\"17\"));\nconsole.log(hex_key(\"18\"));\nconsole.log(hex_key(\"\
    19\"));\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"1B\"));\nconsole.log(hex_key(\"\
    1C\"));\nconsole.log(hex_key(\"1D\"));\nconsole.log(hex_key(\"1E\"));\nconsole.log(hex_key(\"\
    1F\"));\nconsole.log(hex_key(\"20\"));\nconsole.log(hex_key(\"21\"));\nconsole.log(hex",
  "    let hex_key: number = 0;\n    let hex_key_arr: string[] = [\"2\", \"3\", \"\
    5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_key_arr.indexOf(num[i]) !== -1) {\n            hex_key++;\n \
    \       }\n    }\n    return hex_key;\n}\nconsole.log(hex_key(\"2A7\"));\nconsole.log(hex_key(\"\
    C\"));\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"\
    B\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"\
    E\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"\
    1A7\"));\nconsole.log(hex_key(\"7F\"));\nconsole.log(hex_key(\"5A7\"));\nconsole.log(hex_key(\"\
    7D\"));\nconsole.log(hex_key(\"277\"));\nconsole.log(hex_key(\"7B\"));\nconsole.log(hex_key(\"\
    27B\"));\nconsole.log(hex_key(\"237\"));\nconsole.log(hex_key(\"23B\"));\nconsole.log(hex_key(\"\
    235\"));\nconsole.log(hex_key(\"23D\"));\nconsole.log(hex_key(\"25B\"));\nconsole.log(hex_key(\"\
    25D\"));\nconsole.log(hex_key(\"27D\"));\nconsole.log(hex_key(\"2B7\"));\nconsole.log(hex_key(\"\
    2BD\"));\nconsole.log(hex_key(\"2D7\"));\nconsole.log(hex_key(\"2DB\"));\nconsole.log(hex_key(\"\
    357\"));\nconsole.log(hex_key(\"35B\"));\nconsole.log(hex_key(\"35D\"));\nconsole.log(hex_key(\"\
    37B\")", "    let count = 0;\n    let hex: string[] = ['0', '1', '2', '3', '4',\
    \ '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let prime: string[]\
    \ = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i = 0; i < num.length; i++)\
    \ {\n        if (prime.includes(num[i])) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(hex_key('C0FFEE'));\nconsole.log(hex_key('F'));\n\
    console.log(hex_key('CD5BBA'));\nconsole.log(hex_key('BADA55'));\nconsole.log(hex_key('FF9933'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFFA'));\nconsole.log(hex_key('FFFFFF'));\n\
    console.log(hex_key('FFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFF", "    let result: number = 0;\n    let hex:\
    \ string = \"0123456789ABCDEF\";\n    let hex_prime: string = \"2357BD\";\n  \
    \  for (let i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ > -1) {\n            result++;\n        }\n    }\n    return result;\n}\n\n\
    console.log(hex_key(\"F\"));\nconsole.log(hex_key(\"FF\"));\nconsole.log(hex_key(\"\
    FFF\"));\nconsole.log(hex_key(\"FFFF\"));\nconsole.log(hex_key(\"FFFFF\"));\n\
    console.log(hex_key(\"FFFFFF\"));\nconsole.log(hex_key(\"FFFFFFF\"));\nconsole.log(hex_key(\"\
    FFFFFFFF\"));\nconsole.log(hex_key(\"FFFFFFFFF\"));\nconsole.log(hex_key(\"FFFFFFFFFF\"\
    ));\nconsole.log(hex_key(\"FFFFFFFFFFF\"));\nconsole.log(hex_key(\"FFFFFFFFFFFF\"\
    ));\nconsole.log(hex_key(\"FFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"FFFFFFFFFFFFFF\"\
    ));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFFF\"\
    ));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFFFFF\"\
    ));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFFFFFFF\"\
    ));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"\
    FFFFFFFFFFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFFFFFFFFFF\"));\n\
    console.log(hex_key(\"FFFFFFFFFFFFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFFFFFFFFFFFF\"\
    ));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"\
    FFFFFFFFFFFFFFFFFFFFFFFFFFF\"));\nconsole.log(hex", "    let count: number = 0;\n\
    \    let hex: string = \"0123456789ABCDEF\";\n    let prime: string = \"2357BDF\"\
    ;\n    for (let i: number = 0; i < num.length; i++) {\n        if (prime.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    console.log(hex_key(\"\"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"\
    2\"));\nconsole.log(hex_key(\"21\"));\nconsole.log(hex_key(\"CD\"));\nconsole.log(hex_key(\"\
    E\"));\nconsole.log(hex_key(\"1AE3\"));\nconsole.log(hex_key(\"B1A8743D\"));\n\
    console.log(hex_key(\"1234567890ABCDEF\"));\n", "    let count: number = 0;\n\
    \    let hex: string = \"0123456789ABCDEF\";\n    let hex_num: number = hex.indexOf(num);\n\
    \    if (hex_num === 2 || hex_num === 3 || hex_num === 5 || hex_num === 7 || hex_num\
    \ === 11 || hex_num === 13) {\n        count++;\n    }\n    return count;\n}\n",
  "    let count: number = 0;\n    let hex: string = '0123456789ABCDEF';\n    let\
    \ primes: string = '2357BD';\n    for (let i: number = 0; i < num.length; i++)\
    \ {\n        if (primes.indexOf(num[i]) > -1) {\n            count++;\n      \
    \  }\n    }\n    return count;\n}\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('7F'));\n\
    console.log(hex_key('AC'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFFF'));\nconsole.log(hex_key('FFFFF'));\nconsole.log(hex_key('FFFFFF'));\n\
    console.log(hex_key('FFFFFFF'));\nconsole.log(hex_key('FFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFF'));\n\
    console", "    let hex_key: string = '2357BDF';\n    let count: number = 0;\n\
    \    for (let i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('1A2F3'));\n\
    console.log(hex_key('1A2F3C'));\nconsole.log(hex_key('1A2F3C4D'));\nconsole.log(hex_key('1A2F3C4D5E'));\n\
    console.log(hex_key('1A2F3C4D5E6F'));\nconsole.log(hex_key('1A2F3C4D5E6F7'));\n\
    console.log(hex_key('1A2F3C4D5E6F7A'));\nconsole.log(hex_key('1A2F3C4D5E6F7A8'));\n\
    console.log(hex_key('1A2F3C4D5E6F7A8B'));\nconsole.log(hex_key('1A2F3C4D5E6F7A8B9'));\n\
    console.log(hex_key('1A2F3C4D5E6F7A8B9C'));\nconsole.log(hex_key('1A2F3C4D5E6F7A8B9CAD'));\n\
    console.log(hex_key('1A2F3C4D5E6F7A8B9CADE'));\nconsole.log(hex_key('1A2F3C4D5E6F7A8B9CADEF'));\n\
    console.log(hex_key('1A2F3C4D5E6F7A8B9CADEFF'));\nconsole.log(hex_key('1A2F3C4D5E6F7A8B9CADEFF0'));\n\
    console.log(hex_key('1A2F3C4D5E6F", "    let key: string = \"2357BD\";\n    let\
    \ count: number = 0;\n    for (let i: number = 0; i < num.length; i++) {\n   \
    \     if (key.indexOf(num[i]) != -1) {\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"2\"\
    ));\nconsole.log(hex_key(\"2357\"));\nconsole.log(hex_key(\"DB07\"));\nconsole.log(hex_key(\"\
    B1A107\"));\nconsole.log(hex_key(\"AF8C0A\"));\nconsole.log(hex_key(\"B1A107\"\
    ));\nconsole.log(hex_key(\"B1A107\"));\nconsole.log(hex_key(\"B1A107\"));\nconsole.log(hex_key(\"\
    B1A107\"));\nconsole.log(hex_key(\"B1A107\"));\nconsole.log(hex_key(\"B1A107\"\
    ));\nconsole.log(hex_key(\"B1A107\"));\nconsole.log(hex_key(\"B1A107\"));\nconsole.log(hex_key(\"\
    B1A107\"));\nconsole.log(hex_key(\"B1A107\"));\nconsole.log(hex_key(\"B1A107\"\
    ));\nconsole.log(hex_key(\"B1A107\"));\nconsole.log(hex_key(\"B1A107\"));\nconsole.log(hex_key(\"\
    B1A107\"));\nconsole.log(hex_key(\"B1A107\"));\nconsole.log(hex_key(\"B1A107\"\
    ));\nconsole.log(hex_key(\"B1A107\"));\nconsole.log(hex_key(\"B1A107\"));\nconsole.log(hex_key(\"\
    B1A107\"));\nconsole.log(hex_key(\"B1A107\"));\nconsole.log(hex_key(\"B1A107\"\
    ));\nconsole.log(hex_key(\"B1A107\"));\nconsole.log(hex_key(\"B1A107\"));\nconsole.log(hex_key(\"\
    B", "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n\
    \    let hex_arr: string[] = hex.split(\"\");\n    let num_arr: string[] = num.split(\"\
    \");\n    for (let i: number = 0; i < num_arr.length; i++) {\n        if (hex_arr.indexOf(num_arr[i])\
    \ % 2 === 1) {\n            count++;\n        }\n    }\n    return count;\n}\n\
    console.log(hex_key(\"\"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"\
    2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"\
    5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"7\"));\nconsole.log(hex_key(\"\
    8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"\
    B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"\
    E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"\
    2A\"));\nconsole.log(hex_key(\"3A\"));\nconsole.log(hex_key(\"4A\"));\nconsole.log(hex_key(\"\
    5A\"));\nconsole.log(hex_key(\"6A\"));\nconsole.log(hex_key(\"7A\"));\nconsole.log(hex_key(\"\
    8A\"));\nconsole.log(hex_key(\"9A\"));\nconsole.log(hex_key(\"AA\"));\nconsole.log(hex_key(\"\
    BA\"));\nconsole.log(hex_key(\"CA\"));\nconsole.log(hex_key(\"DA\"));\nconsole.log(hex_key(\"\
    EA\"));\nconsole.log(hex_key(\"FA\"));\nconsole.log(hex_key(\"1B\"));\nconsole",
  "    let count: number = 0;\n    let hex: string = '0123456789ABCDEF';\n    let\
    \ hex_primes: string = '2357BD';\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_primes.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('7F'));\n\
    console.log(hex_key('AC'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\n\
    console.log(hex_key('1A2B3C4D5E6F'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\n\
    console.log(hex_key('1A2B3C4D5E6F'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\n\
    console.log(hex_key('1A2B3C4D5E6F'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\n\
    console.log(hex_key('1A2B3C4D5E6F'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\n\
    console.log(hex_key('1A2B3C4D5E6F'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\n\
    console.log(hex_key('1A2B3C4D5E6F'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\n\
    console.log(hex_key('1A2B3C4D5E6F'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\n\
    console.log(hex_key('1A2B3C4D5", "    let count: number = 0;\n    let hex: string\
    \ = \"0123456789ABCDEF\";\n    let hex_prime: string = \"2357BD\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ > -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    1A\"));\nconsole.log(hex_key(\"7F\"));\nconsole.log(hex_key(\"AC\"));\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"39A\"));\nconsole.log(hex_key(\"FFF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole", "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\"\
    ;\n    let primes: string = \"2357BDF\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (primes.indexOf(num[i]) > -1) {\n            count++;\n \
    \       }\n    }\n    return count;\n}\nconsole.log(hex_key(\"2A3B\"));\nconsole.log(hex_key(\"\
    B5F7\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\"));\n",
  "    let count = 0;\n    let hex = ['2', '3', '5', '7', 'B', 'D'];\n    for (let\
    \ i = 0; i < num.length; i++) {\n        if (hex.includes(num[i])) {\n       \
    \     count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('2A3F'));\n\
    console.log(hex_key('F'));\nconsole.log(hex_key('2A3B5F'));\nconsole.log(hex_key('2A3B5F7'));\n\
    console.log(hex_key('2A3B5F7D'));\nconsole.log(hex_key('2A3B5F7D11'));\nconsole.log(hex_key('2A3B5F7D1113'));\n\
    console.log(hex_key('2A3B5F7D111317'));\nconsole.log(hex_key('2A3B5F7D11131719'));\n\
    console.log(hex_key('2A3B5F7D1113171923'));\nconsole.log(hex_key('2A3B5F7D111317192329'));\n\
    console.log(hex_key('2A3B5F7D11131719232931'));\nconsole.log(hex_key('2A3B5F7D1113171923293137'));\n\
    console.log(hex_key('2A3B5F7D111317192329313741'));\nconsole.log(hex_key('2A3B5F7D111317192329313741'));\n\
    console.log(hex_key('2A3B5F7D111317192329313741'));\nconsole.log(hex_key('2A3B5F7D111317192329313741'));\n\
    console.log(hex_key('2A3B5F7D111317192329313741'));\nconsole.log(hex_key('2A3B5F7D111317192329313741'));\n\
    console", "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\"\
    ;\n    let prime: string = \"2357BDF\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (prime.indexOf(num[i]) > -1) {\n            count++;\n  \
    \      }\n    }\n    return count;\n}\nconsole.log(hex_key(\"2A3E\"));\nconsole.log(hex_key(\"\
    233B\"));\nconsole.log(hex_key(\"FFFF\"));\nconsole.log(hex_key(\"\"));", "  \
    \  let count = 0;\n    let hex_key = {\n        '2': true,\n        '3': true,\n\
    \        '5': true,\n        '7': true,\n        'B': true,\n        'D': true\n\
    \    }\n    for (let i = 0; i < num.length; i++) {\n        if (hex_key[num[i]])\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('C5D6E7'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\nconsole.log(hex_key('1234567890ABCDEF'));\n\
    console.log(hex_key(''));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key", "    let hex_primes = [2,\
    \ 3, 5, 7, 11, 13];\n    let hex_digits = ['0', '1', '2', '3', '4', '5', '6',\
    \ '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let hex_dict = {};\n    for\
    \ (let i = 0; i < hex_digits.length; i++) {\n        hex_dict[hex_digits[i]] =\
    \ hex_primes[i];\n    }\n    let count = 0;\n    for (let i = 0; i < num.length;\
    \ i++) {\n        if (hex_dict[num[i]]) {\n            count++;\n        }\n \
    \   }\n    return count;\n}\n\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('C'));\n\
    console.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFFF'));\n\
    console.log(hex_key('FFFFF'));\nconsole.log(hex_key('FFFFFF'));\nconsole.log(hex_key('FFFFFFF'));\n\
    console.log(hex_key('FFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key", "    let\
    \ count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let primes:\
    \ string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (primes.indexOf(num[i]) > -1) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"\
    4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"\
    7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"\
    A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    10\"));\nconsole.log(hex_key(\"11\"));\nconsole.log(hex_key(\"12\"));\nconsole.log(hex_key(\"\
    13\"));\nconsole.log(hex_key(\"14\"));\nconsole.log(hex_key(\"15\"));\nconsole.log(hex_key(\"\
    16\"));\nconsole.log(hex_key(\"17\"));\nconsole.log(hex_key(\"18\"));\nconsole.log(hex_key(\"\
    19\"));\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"1B\"));\nconsole.log(hex_key(\"\
    1C\"));\nconsole.log(hex_key(\"1D\"));\nconsole.log(hex_key(\"1E\"));\nconsole.log(hex_key(\"\
    1F\"));\nconsole.log(hex_key(\"20\"));\nconsole.log(hex_key(\"21\"));\nconsole.",
  "    let hex_key: number = 0;\n    let hex_key_arr: string[] = ['2', '3', '5', '7',\
    \ 'B', 'D'];\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex_key_arr.indexOf(num[i])\
    \ !== -1) {\n            hex_key++;\n        }\n    }\n    return hex_key;\n}\n\
    console.log(hex_key('2A3F'));\nconsole.log(hex_key('F89D'));\nconsole.log(hex_key('ABCDEF'));\n",
  "    let sum: number = 0;\n    let hex: string = '0123456789ABCDEF';\n    let hex_prime:\
    \ string = '2357BD';\n    for (let i: number = 0; i < num.length; i++) {\n   \
    \     if (hex_prime.indexOf(num[i]) > -1) {\n            sum++;\n        }\n \
    \   }\n    return sum;\n}\nconsole.log(hex_key('2A3B'));\nconsole.log(hex_key('FF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF')",
  "    let hex_primes = ['2', '3', '5', '7', 'B', 'D'];\n    let count = 0;\n    for\
    \ (let i = 0; i < num.length; i++) {\n        if (hex_primes.includes(num[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('1A'));\n\
    console.log(hex_key('21'));\nconsole.log(hex_key('EF'));\nconsole.log(hex_key('CD'));\n\
    console.log(hex_key('FF'));\nconsole.log(hex_key('F0'));\nconsole.log(hex_key('0F'));\n\
    console.log(hex_key('F'));\nconsole.log(hex_key('0'));\nconsole.log(hex_key(''));",
  "    let hex_key: number = 0;\n    let hex_arr: string[] = num.split('');\n    for\
    \ (let i: number = 0; i < hex_arr.length; i++) {\n        if (hex_arr[i] === '2'\
    \ || hex_arr[i] === '3' || hex_arr[i] === '5' || hex_arr[i] === '7' || hex_arr[i]\
    \ === 'B' || hex_arr[i] === 'D') {\n            hex_key += 1;\n        }\n   \
    \ }\n    return hex_key;\n}\nconsole.log(hex_key('2A3F'));\nconsole.log(hex_key('F89D5'));\n\
    console.log(hex_key('ABCDEFabcdef'));\nconsole.log(hex_key('25'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\n\
    console.log(hex_key('1234567890ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\n", "    let count: number = 0;\n   \
    \ let hex: string = '2357BDF';\n    for (let i: number = 0; i < num.length; i++)\
    \ {\n        if (hex.indexOf(num[i]) > -1) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(hex_key('C0FFEE'));\nconsole.log(hex_key('FFEE'));\n\
    console.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\n\
    console.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\n\
    console.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\n\
    console.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\n\
    console.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\n\
    console.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\n\
    console.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\n\
    console.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\n\
    console.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\n\
    console.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\nconsole.log(hex_key('FFEE'));\n\
    console.log(hex_key('FFEE'));\nconsole.log", "    let hex = {\n        '0': 0,\n\
    \        '1': 1,\n        '2': 2,\n        '3': 3,\n        '4': 4,\n        '5':\
    \ 5,\n        '6': 6,\n        '7': 7,\n        '8': 8,\n        '9': 9,\n   \
    \     'A': 10,\n        'B': 11,\n        'C': 12,\n        'D': 13,\n       \
    \ 'E': 14,\n        'F': 15\n    }\n    let count = 0;\n    let arr = num.split('');\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (hex[arr[i]] === 2 ||\
    \ hex[arr[i]] === 3 || hex[arr[i]] === 5 || hex[arr[i]] === 7 || hex[arr[i]] ===\
    \ 11 || hex[arr[i]] === 13) {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\nconsole.log(hex_key('2A3B'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\n",
  "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let\
    \ hex_prime: string = \"2357BD\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_prime.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    2\"));\nconsole.log(hex_key(\"2357\"));\nconsole.log(hex_key(\"0123456789ABCDEF\"\
    ));\nconsole.log(hex_key(\"0123456789ABCDEF2357\"));\nconsole.log(hex_key(\"0123456789ABCDEF2357BD\"\
    ));\nconsole.log(hex_key(\"0123456789ABCDEF2357BD13579BDF\"));\nconsole.log(hex_key(\"\
    0123456789ABCDEF2357BD13579BDF02468ACE\"));\nconsole.log(hex_key(\"0123456789ABCDEF2357BD13579BDF02468ACE13579BDF02468ACE\"\
    ));\nconsole.log(hex_key(\"0123456789ABCDEF2357BD13579BDF02468ACE13579BDF02468ACE02468ACE13579BDF\"\
    ));\nconsole.log(hex_key(\"0123456789ABCDEF2357BD13579BDF02468ACE13579BDF02468ACE02468ACE13579BDF02468ACE13579BDF\"\
    ));\nconsole.log(hex_key(\"0123456789ABCDEF2357BD13579BDF02468ACE13579BDF02468ACE02468ACE13579BDF02468ACE13579BDF02468ACE13579BDF\"\
    ));\nconsole.log(hex_key(\"0123456789ABCDEF2357BD13579BDF02468ACE13579BDF02468ACE02468ACE13579BDF02468ACE13579BDF02468ACE13579BDF02468ACE13579BDF\"\
    ));\nconsole.log(hex_key(\"0123456789ABCDEF2357BD13579B", "    let hex_primes\
    \ = [2, 3, 5, 7, 11, 13];\n    let hex_digits = ['0', '1', '2', '3', '4', '5',\
    \ '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let count = 0;\n   \
    \ for (let i = 0; i < num.length; i++) {\n        if (hex_primes.includes(hex_digits.indexOf(num[i])))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('1A'));\n\
    console.log(hex_key('C'));\nconsole.log(hex_key('B1'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('FEDCBA'));\nconsole.log(hex_key('AA'));\nconsole.log(hex_key('FF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFFF'));\nconsole.log(hex_key('FFFFF'));\n\
    console.log(hex_key('FFFFFF'));\nconsole.log(hex_key('FFFFFFF'));\nconsole.log(hex_key('FFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFF')",
  "    let hex = {\n        '0': 0,\n        '1': 1,\n        '2': 2,\n        '3':\
    \ 3,\n        '4': 4,\n        '5': 5,\n        '6': 6,\n        '7': 7,\n   \
    \     '8': 8,\n        '9': 9,\n        'A': 10,\n        'B': 11,\n        'C':\
    \ 12,\n        'D': 13,\n        'E': 14,\n        'F': 15\n    }\n    let count\
    \ = 0;\n    for (let i = 0; i < num.length; i++) {\n        if (hex[num[i]] ===\
    \ 2 || hex[num[i]] === 3 || hex[num[i]] === 5 || hex[num[i]] === 7 || hex[num[i]]\
    \ === 11 || hex[num[i]] === 13) {\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('21'));\n\
    console.log(hex_key('EF'));\nconsole.log(hex_key('CD'));\nconsole.log(hex_key('FF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFFF'));\nconsole.log(hex_key('FFFFF'));\n\
    console.log(hex_key('FFFFFF'));\nconsole.log(hex_key('FFFFFFF'));\nconsole.log(hex_key('FFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFF'));\n", "    let hex_primes = 0;\n   \
    \ let hex_digits = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B',\
    \ 'C', 'D', 'E', 'F'];\n    let prime_digits = ['2', '3', '5', '7', 'B', 'D'];\n\
    \    for (let i = 0; i < num.length; i++) {\n        if (prime_digits.includes(num[i]))\
    \ {\n            hex_primes++;\n        }\n    }\n    return hex_primes;\n}\n\
    console.log(hex_key('CD'));\nconsole.log(hex_key
  "    let count: number = 0;\n    let hex: string = '0123456789ABCDEF';\n    let\
    \ hex_primes: string = '2357BD';\n    for (let i = 0; i < num.length; i++) {\n\
    \        if (hex_primes.indexOf(num[i]) !== -1) {\n            count++;\n    \
    \    }\n    }\n    return count;\n}\n\nconsole.log(hex_key('2A3B'));\nconsole.log(hex_key('BAD'));\n\
    console.log(hex_key('BAC'));", "    let hex_key: number = 0;\n    let hex_key_string:\
    \ string = \"\";\n    let hex_key_array: string[] = [];\n    let hex_key_array_num:\
    \ number[] = [];\n    let hex_key_array_num_prime: number[] = [];\n    let hex_key_array_num_prime_string:\
    \ string[] = [];\n    let hex_key_array_num_prime_string_num: number[] = [];\n\
    \    let hex_key_array_num_prime_string_num_sum: number = 0;\n    let hex_key_array_num_prime_string_num_sum_string:\
    \ string = \"\";\n    let hex_key_array_num_prime_string_num_sum_string_array:\
    \ string[] = [];\n    let hex_key_array_num_prime_string_num_sum_string_array_num:\
    \ number[] = [];\n    let hex_key_array_num_prime_string_num_sum_string_array_num_sum:\
    \ number = 0;\n    let hex_key_array_num_prime_string_num_sum_string_array_num_sum_string:\
    \ string = \"\";\n    let hex_key_array_num_prime_string_num_sum_string_array_num_sum_string_array:\
    \ string[] = [];\n    let hex_key_array_num_prime_string_num_sum_string_array_num_sum_string_array_num:\
    \ number[] = [];\n    let hex_key_array_num_prime_string_num_sum_string_array_num_sum_string_array_num_sum:\
    \ number = 0;\n    let hex_key_array_num_prime_string_num_sum_string_array_num_sum_string_array_num_sum_string:\
    \ string = \"\";\n    let hex_key_array_num_prime_string_num_sum_string_array_num_sum_string_array_num_sum_string_array:\
    \ string[] = [];\n    let hex_key_array_num_prime_string_num_sum_string_array_num_sum_string_array_num_sum_string_array_num",
  "    let hex_prime_count = 0;\n    let hex_prime_list = [2, 3, 5, 7, 11, 13];\n\
    \    let hex_list = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B',\
    \ 'C', 'D', 'E', 'F'];\n    let hex_prime_dict = {};\n    for (let i = 0; i <\
    \ hex_prime_list.length; i++) {\n        hex_prime_dict[hex_prime_list[i]] = hex_list[hex_prime_list[i]];\n\
    \    }\n    for (let i = 0; i < num.length; i++) {\n        if (hex_prime_dict[num[i]])\
    \ {\n            hex_prime_count++;\n        }\n    }\n    return hex_prime_count;\n\
    }\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('7F'));\nconsole.log(hex_key('AC'));\n\
    console.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFFF'));\n\
    console.log(hex_key('FFFFF'));\nconsole.log(hex_key('FFFFFF'));\nconsole.log(hex_key('FFFFFFF'));\n\
    console.log(hex_key('FFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFF'));\nconsole.", "    let count: number\
    \ = 0;\n    let hex: string = '0123456789ABCDEF';\n    let primes: string = '2357BD';\n\
    \    for (let i: number = 0; i < num.length; i++) {\n        if (primes.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('1A'));\n\
    console.log(hex_key('7F'));\nconsole.log(hex_key('AC'));\nconsole.log(hex_key('FF'));\n\
    console.log(hex_key('2357BD'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole", "  const hex_primes = ['2', '3', '5',\
    \ '7', 'B', 'D'];\n  let count = 0;\n  for (let i = 0; i < num.length; i++) {\n\
    \    if (hex_primes.includes(num[i])) {\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconsole.log(hex_key('2A3BE'));\nconsole.log(hex_key('BADF00D'));\n\
    console.log(hex_key('B0B'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('123456'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('BADF00D'));\nconsole.log(hex_key('2A3BE'));\n\
    console.log(hex_key('B0B'));\nconsole.log(hex_key('123456'));", "    let count:\
    \ number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let prime: string\
    \ = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n       \
    \ if (prime.indexOf(num[i]) !== -1) {\n            count++;\n        }\n    }\n\
    \    return count;\n}\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"7F9A2B\"\
    ));\nconsole.log(hex_key(\"AA11\"));\nconsole.log(hex_key(\"\"));\n", "    let\
    \ count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let primes:\
    \ string = \"2357BD\";\n    let hex_arr: string[] = num.split(\"\");\n    for\
    \ (let i: number = 0; i < hex_arr.length; i++) {\n        if (primes.indexOf(hex_arr[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"\
    2101\"));\nconsole.log(hex_key(\"FE\"));\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"\
    B1A\"));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"\
    FFFFFFFFFFFFFFFE\"));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFFD\"));\nconsole.log(hex_key(\"\
    FFFFFFFFFFFFFFFC\"));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFFB\"));\nconsole.log(hex_key(\"\
    FFFFFFFFFFFFFFFA\"));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFF9\"));\nconsole.log(hex_key(\"\
    FFFFFFFFFFFFFFF8\"));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFF7\"));\nconsole.log(hex_key(\"\
    FFFFFFFFFFFFFFF6\"));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFF5\"));\nconsole.log(hex_key(\"\
    FFFFFFFFFFFFFFF4\"));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFF3\"));\nconsole.log(hex_key(\"\
    FFFFFFFFFFFFFFF2\"));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFF1\"));\nconsole.log(hex_key(\"\
    FFFFFFFFFFFFFFF0\"));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFEF\"));\nconsole.log(hex_key(\"\
    FFFFFFFFFFFFFFEE\"));\nconsole.log(hex_key(\"FFFFFFFFFFFFFFED", "    let hex_key:\
    \ number = 0;\n    let hex_num: string = \"0123456789ABCDEF\";\n    let hex_prime:\
    \ string = \"2357BD\";\n    for (let i: number = 0; i < num.length; i++) {\n \
    \       for (let j: number = 0; j < hex_prime.length; j++) {\n            if (num[i]\
    \ == hex_prime[j]) {\n                hex_key++;\n            }\n        }\n \
    \   }\n    return hex_key;\n}\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    2\"));\nconsole.log(hex_key(\"2357\"));\nconsole.log(hex_key(\"0123456789ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"FEDCBA\"));\nconsole.log(hex_key(\"\
    FEDCBA\"));\nconsole.log(hex_key(\"FEDCBA\"));\nconsole.log(hex_key(\"FEDCBA\"\
    ));\nconsole.log(hex_key(\"FEDCBA\"));\nconsole.log(hex_key(\"FEDCBA\"));\nconsole.log(hex_key(\"\
    FEDCBA\"));\nconsole.log(hex_key(\"FEDCBA\"));\nconsole.log(hex_key(\"FEDCBA\"\
    ));\nconsole.log(hex_key(\"FEDCBA\"));\nconsole.log(hex_key(\"FEDCBA\"));\nconsole.log(hex_key(\"\
    FEDCBA\"));\nconsole.log(hex_key(\"FEDCBA\"));\nconsole.log(hex_key(\"FEDCBA\"\
    ));\nconsole.log(hex_key(\"FEDCBA\"));\nconsole.log(hex_key(\"FEDCBA\"));\nconsole.log(hex_key(\"\
    FEDCBA\"));\nconsole.log(hex_key(\"FEDCBA\"));\nconsole.log(hex_key(\"FEDCBA\"\
    ));\nconsole.log(hex_key(\"FEDCBA\"));\nconsole.log(hex_key(\"FEDCBA\"));\nconsole.log(",
  "    let count: number = 0;\n    let arr: string[] = num.split('');\n    for (let\
    \ i: number = 0; i < arr.length; i++) {\n        if (arr[i] === '2' || arr[i]\
    \ === '3' || arr[i] === '5' || arr[i] === '7' || arr[i] === 'B' || arr[i] ===\
    \ 'D') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('BABA'));\n",
  "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let\
    \ hex_prime: string = \"2357BD\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_prime.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"1F\"));\nconsole.log(hex_key(\"\
    2B\"));\nconsole.log(hex_key(\"3D\"));\nconsole.log(hex_key(\"4F\"));\nconsole.log(hex_key(\"\
    5F\"));\nconsole.log(hex_key(\"6F\"));\nconsole.log(hex_key(\"7F\"));\nconsole.log(hex_key(\"\
    8F\"));\nconsole.log(hex_key(\"9F\"));\nconsole.log(hex_key(\"AF\"));\nconsole.log(hex_key(\"\
    BF\"));\nconsole.log(hex_key(\"CF\"));\nconsole.log(hex_key(\"DF\"));\nconsole.log(hex_key(\"\
    EF\"));\nconsole.log(hex_key(\"FF\"));\nconsole.log(hex_key(\"\"));\n", "    let\
    \ count: number = 0;\n    let hex: string = '0123456789ABCDEF';\n    let hex_arr:\
    \ string[] = hex.split('');\n    let primes: number[] = [2, 3, 5, 7, 11, 13];\n\
    \    let num_arr: string[] = num.split('');\n    for (let i: number = 0; i < num_arr.length;\
    \ i++) {\n        for (let j: number = 0; j < hex_arr.length; j++) {\n       \
    \     if (num_arr[i] === hex_arr[j]) {\n                for (let k: number = 0;\
    \ k < primes.length; k++) {\n                    if (j === primes[k]) {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFFF'));\n\
    console.log(hex_key('FFFFF'));\nconsole.log(hex_key('FFFFFF'));\nconsole.log(hex_key('FFFFFFF'));\n\
    console.log(hex_key('FFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_", "    let hex_key\
    \ = {\n        '0': 0,\n        '1': 1,\n        '2': 2,\n        '3': 3,\n  \
    \      '4': 4,\n        '5': 5,\n        '6': 6,\n        '7': 7,\n        '8':\
    \ 8,\n        '9': 9,\n        'A': 10,\n        'B': 11,\n        'C': 12,\n\
    \        'D': 13,\n        'E': 14,\n        'F': 15\n    }\n    let hex_prime\
    \ = {\n        '2': true,\n        '3': true,\n        '5': true,\n        '7':\
    \ true,\n        'B': true,\n        'D': true\n    }\n    let count = 0;\n  \
    \  for (let i = 0; i < num.length; i++) {\n        if (hex_prime[num[i]]) {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('1A'));\n\
    console.log(hex_key('21'));\nconsole.log(hex_key('2A'));\nconsole.log(hex_key('3A'));\n\
    console.log(hex_key('4A'));\nconsole.log(hex_key('5A'));\nconsole.log(hex_key('6A'));\n\
    console.log(hex_key('7A'));\nconsole.log(hex_key('8A'));\nconsole.log(hex_key('9A'));\n\
    console.log(hex_key('AA'));\nconsole.log(hex_key('BA'));\nconsole.log(hex_key('CA'));\n\
    console.log(hex_key('DA'));\nconsole.log(hex_key('EA'));\nconsole.log(hex_key('FA'));\n\
    console.log(hex_key('1B'));\nconsole.log(hex_key('2B'));\nconsole.log(hex_key('3B'));\n\
    console.log(hex_key('4B'));\nconsole.log(hex_key('5B'));\nconsole.log(hex_key('6B'));\n\
    console", "    let count: number = 0;\n    let hex: string = '0123456789ABCDEF';\n\
    \    let hex_prime: string = '2357BD';\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_prime.indexOf(num[i]) !== -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('2A'));\nconsole.log(hex_key('E'));\n\
    console.log(hex_key('F'));\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('2A3B5D'));\n\
    console.log(hex_key('2A3B5D7'));\nconsole.log(hex_key('2A3B5D7E'));\nconsole.log(hex_key('2A3B5D7E9'));\n\
    console.log(hex_key('2A3B5D7E9F'));\nconsole.log(hex_key('2A3B5D7E9F1'));\nconsole.log(hex_key('2A3B5D7E9F1A'));\n\
    console.log(hex_key('2A3B5D7E9F1A3'));\nconsole.log(hex_key('2A3B5D7E9F1A3C'));\n\
    console.log(hex_key('2A3B5D7E9F1A3C5'));\nconsole.log(hex_key('2A3B5D7E9F1A3C5E'));\n\
    console.log(hex_key('2A3B5D7E9F1A3C5E7'));\nconsole.log(hex_key('2A3B5D7E9F1A3C5E7F'));\n\
    console.log(hex_key('2A3B5D7E9F1A3C5E7F8'));\nconsole.log(hex_key('2A3B5D7E9F1A3C5E7F8A'));\n\
    console.log", "    let hex_key = {\n        \"0\": 0,\n        \"1\": 1,\n   \
    \     \"2\": 2,\n        \"3\": 3,\n        \"4\": 4,\n        \"5\": 5,\n   \
    \     \"6\": 6,\n        \"7\": 7,\n        \"8\": 8,\n        \"9\": 9,\n   \
    \     \"A\": 10,\n        \"B\": 11,\n        \"C\": 12,\n        \"D\": 13,\n\
    \        \"E\": 14,\n        \"F\": 15\n    }\n    let count = 0;\n    for (let\
    \ i = 0; i < num.length; i++) {\n        if (hex_key[num[i]] === 2 || hex_key[num[i]]\
    \ === 3 || hex_key[num[i]] === 5 || hex_key[num[i]] === 7 || hex_key[num[i]] ===\
    \ 11 || hex_key[num[i]] === 13) {\n            count++;\n        }\n    }\n  \
    \  return count;\n}\nconsole.log(hex_key(\"2B1A\"));\nconsole.log(hex_key(\"FF\"\
    ));\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(", "    let hex_key:\
    \ { [key: string]: number } = {\n        '0': 0,\n        '1': 1,\n        '2':\
    \ 2,\n        '3': 3,\n        '4': 4,\n        '5': 5,\n        '6': 6,\n   \
    \     '7': 7,\n        '8': 8,\n        '9': 9,\n        'A': 10,\n        'B':\
    \ 11,\n        'C': 12,\n        'D': 13,\n        'E': 14,\n        'F': 15\n\
    \    }\n    return hex_key[num];\n}\n", "    let count: number = 0;\n    let hex:\
    \ string = \"0123456789ABCDEF\";\n    let hex_prime: string = \"2357BD\";\n  \
    \  for (let i = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    console.log(hex_key(\"\"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"\
    2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"\
    5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"7\"));\nconsole.log(hex_key(\"\
    8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"\
    B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"\
    E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"10\"));\nconsole.log(hex_key(\"\
    11\"));\nconsole.log(hex_key(\"12\"));\nconsole.log(hex_key(\"13\"));\nconsole.log(hex_key(\"\
    14\"));\nconsole.log(hex_key(\"15\"));\nconsole.log(hex_key(\"16\"));\nconsole.log(hex_key(\"\
    17\"));\nconsole.log(hex_key(\"18\"));\nconsole.log(hex_key(\"19\"));\nconsole.log(hex_key(\"\
    1A\"));\nconsole.log(hex_key(\"1B\"));\nconsole.log(hex_key(\"1C\"));\nconsole.log(hex_key(\"\
    1D\"));\nconsole.log(hex_key(\"1E\"));\nconsole.log(hex_key(\"1F\"));\nconsole.log(hex_key(\"\
    20\"));\nconsole.log(hex_key(\"21\"));\nconsole.", "    let count: number = 0;\n\
    \    let prime: string[] = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        if (prime.indexOf(num[i]) !== -1) {\n \
    \           count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('2A3F'));\n\
    console.log(hex_key('F'));\nconsole.log(hex_key('AA'));\nconsole.log(hex_key('A'));\n\
    console.log(hex_key('2'));\nconsole.log(hex_key('3'));\nconsole.log(hex_key('5'));\n\
    console.log(hex_key('7'));\nconsole.log(hex_key('B'));\nconsole.log(hex_key('D'));\n\
    console.log(hex_key('F'));\nconsole.log(hex_key('2A3F'));\nconsole.log(hex_key('F'));\n\
    console.log(hex_key('AA'));\nconsole.log(hex_key('A'));\nconsole.log(hex_key('2'));\n\
    console.log(hex_key('3'));\nconsole.log(hex_key('5'));\nconsole.log(hex_key('7'));\n\
    console.log(hex_key('B'));\nconsole.log(hex_key('D'));\nconsole.log(hex_key('F'));\n\
    console.log(hex_key('2A3F'));\nconsole.log(hex_key('F'));\nconsole.log(hex_key('AA'));\n\
    console.log(hex_key('A'));\nconsole.log(hex_key('2'));\nconsole.log(hex_key('3'));\n\
    console.log(hex_key('5'));\nconsole.log(hex_key('7'));\nconsole.log(hex_key('B'));\n\
    console.log(hex_key('D'));\nconsole.log(hex_key('F'));\nconsole.log(hex_key('2A3F'));",
  "    let prime_hex = [2, 3, 5, 7, 11, 13];\n    let hex_num = num.split('');\n \
    \   let count = 0;\n    for (let i = 0; i < hex_num.length; i++) {\n        for\
    \ (let j = 0; j < prime_hex.length; j++) {\n            if (hex_num[i] == prime_hex[j])\
    \ {\n                count++;\n            }\n        }\n    }\n    return count;\n\
    }\n\nconsole.log(hex_key('B3'));\nconsole.log(hex_key('F5'));\nconsole.log(hex_key('F'));\n\
    console.log(hex_key('1'));\nconsole.log(hex_key('2'));\nconsole.log(hex_key('3'));\n\
    console.log(hex_key('4'));\nconsole.log(hex_key('5'));\nconsole.log(hex_key('6'));\n\
    console.log(hex_key('7'));\nconsole.log(hex_key('8'));\nconsole.log(hex_key('9'));\n\
    console.log(hex_key('A'));\nconsole.log(hex_key('B'));\nconsole.log(hex_key('C'));\n\
    console.log(hex_key('D'));\nconsole.log(hex_key('E'));\nconsole.log(hex_key('F'));\n\
    console.log(hex_key('10'));\nconsole.log(hex_key('11'));\nconsole.log(hex_key('12'));\n\
    console.log(hex_key('13'));\nconsole.log(hex_key('14'));\nconsole.log(hex_key('15'));\n\
    console.log(hex_key('16'));\nconsole.log(hex_key('17'));\nconsole.log(hex_key('18'));\n\
    console.log(hex_key('19'));\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('1B'));\n\
    console.log(hex_key('1C'));\nconsole.log(hex_key('1D'));\nconsole.", "    const\
    \ hex_primes = [2, 3, 5, 7, 11, 13];\n    let count = 0;\n    for (let i = 0;\
    \ i < num.length; i++) {\n        if (hex_primes.includes(parseInt(num[i], 16)))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"\
    3\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"\
    6\"));\nconsole.log(hex_key(\"7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"\
    9\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"\
    C\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"\
    F\"));\nconsole.log(hex_key(\"10\"));\nconsole.log(hex_key(\"11\"));\nconsole.log(hex_key(\"\
    12\"));\nconsole.log(hex_key(\"13\"));\nconsole.log(hex_key(\"14\"));\nconsole.log(hex_key(\"\
    15\"));\nconsole.log(hex_key(\"16\"));\nconsole.log(hex_key(\"17\"));\nconsole.log(hex_key(\"\
    18\"));\nconsole.log(hex_key(\"19\"));\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"\
    1B\"));\nconsole.log(hex_key(\"1C\"));\nconsole.log(hex_key(\"1D\"));\nconsole.log(hex_key(\"\
    1E\"));\nconsole.log(hex_key(\"1F\"));\nconsole.log(hex_key(\"20\"));\nconsole.log(hex_key(\"\
    21\"));\nconsole.log(hex_key(\"22\"));\nconsole.", "    let count: number = 0;\n\
    \    let hex: string = \"0123456789ABCDEF\";\n    let hex_primes: string = \"\
    2357BD\";\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex_primes.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    console.log(hex_key(\"\"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"\
    2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"\
    5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"7\"));\nconsole.log(hex_key(\"\
    8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"\
    B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"\
    E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"10\"));\nconsole.log(hex_key(\"\
    11\"));\nconsole.log(hex_key(\"12\"));\nconsole.log(hex_key(\"13\"));\nconsole.log(hex_key(\"\
    14\"));\nconsole.log(hex_key(\"15\"));\nconsole.log(hex_key(\"16\"));\nconsole.log(hex_key(\"\
    17\"));\nconsole.log(hex_key(\"18\"));\nconsole.log(hex_key(\"19\"));\nconsole.log(hex_key(\"\
    1A\"));\nconsole.log(hex_key(\"1B\"));\nconsole.log(hex_key(\"1C\"));\nconsole.log(hex_key(\"\
    1D\"));\nconsole.log(hex_key(\"1E\"));\nconsole.log(hex_key(\"1F\"));\nconsole.log(hex_key(\"\
    20\"));\nconsole.log(hex_key(\"21\")", "    let count: number = 0;\n    let hex:\
    \ string = \"0123456789ABCDEF\";\n    let primes: string = \"2357BDF\";\n    for\
    \ (let i: number = 0; i < num.length; i++) {\n        if (primes.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    1A\"));\nconsole.log(hex_key(\"7F9A2B\"));\nconsole.log(hex_key(\"39A\"));\nconsole.log(hex_key(\"\
    FFF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\"));", " \
    \   let count: number = 0;\n    let hex: string = '0123456789ABCDEF';\n    let\
    \ prime: string = '2357BD';\n    for (let i: number = 0; i < num.length; i++)\
    \ {\n        if (prime.indexOf(num[i]) !== -1) {\n            count++;\n     \
    \   }\n    }\n    return count;\n}\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('7F'));\n\
    console.log(hex_key('AC'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(", "    let count = 0;\n    let hex = ['2', '3', '5', '7', 'B', 'D'];\n\
    \    for (let i = 0; i < num.length; i++) {\n        if (hex.includes(num[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('2A3F'));\n\
    console.log(hex_key('F5F5F5'));\nconsole.log(hex_key('FFFFFF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('", "    let count: number\
    \ = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let hex_primes: string\
    \ = \"2357BD\";\n    for (let i: number = 0; i < num.length; i++) {\n        if\
    \ (hex_primes.indexOf(num[i]) > -1) {\n            count++;\n        }\n    }\n\
    \    return count;\n}\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"2\"\
    ));\nconsole.log(hex_key(\"21\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"\
    E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"10\"));\nconsole.log(hex_key(\"\
    EF\"));\nconsole.log(hex_key(\"CD\"));\nconsole.log(hex_key(\"89\"));\nconsole.log(hex_key(\"\
    EF10CD\"));\n", "    let hex_primes = ['2', '3', '5', '7', 'B', 'D'];\n    let\
    \ count = 0;\n    for (let i = 0; i < num.length; i++) {\n        if (hex_primes.includes(num[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('2A3F'));\n\
    console.log(hex_key('F'));\nconsole.log(hex_key('AA'));\nconsole.log(hex_key('FF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FF", "    let count: number\
    \ = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let primes: number[]\
    \ = [2, 3, 5, 7, 11, 13, 17];\n    for (let i: number = 0; i < num.length; i++)\
    \ {\n        if (primes.indexOf(hex.indexOf(num[i])) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    2\"));\nconsole.log(hex_key(\"2101\"));\nconsole.log(hex_key(\"FE\"));\nconsole.log(hex_key(\"\
    1AE3\"));\nconsole.log(hex_key(\"E2F1\"));\n", "    let count = 0;\n    let hex\
    \ = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',\
    \ 'F'];\n    let prime = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53];\n    for (let i = 0; i < num.length; i++) {\n        for (let j = 0;\
    \ j < hex.length; j++) {\n            if (num[i] === hex[j]) {\n             \
    \   count += prime[j];\n            }\n        }\n    }\n    return count;\n}\n\
    console.log(hex_key('1F'));\nconsole.log(hex_key('2A'));\nconsole.log(hex_key('3E'));\n\
    console.log(hex_key('4A'));\nconsole.log(hex_key('5B'));\nconsole.log(hex_key('6F'));\n\
    console.log(hex_key('7D'));\nconsole.log(hex_key('8E'));\nconsole.log(hex_key('9A'));\n\
    console.log(hex_key('AA'));\nconsole.log(hex_key('BA'));\nconsole.log(hex_key('CA'));\n\
    console.log(hex_key('DA'));\nconsole.log(hex_key('EA'));\nconsole.log(hex_key('FA'));\n\
    console.log(hex_key('FF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key",
  "    let result: number = 0;\n    let hex: string = '0123456789ABCDEF';\n    let\
    \ hex_prime: string = '2357BD';\n    for (let i: number = 0; i < num.length; i++)\
    \ {\n        if (hex_prime.indexOf(num[i]) !== -1) {\n            result++;\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('7F'));\n\
    console.log(hex_key('AC'));\nconsole.log(hex_key('B1'));\nconsole.log(hex_key('B2'));\n\
    console.log(hex_key('B3'));\nconsole.log(hex_key('B4'));\nconsole.log(hex_key('B5'));\n\
    console.log(hex_key('B6'));\nconsole.log(hex_key('B7'));\nconsole.log(hex_key('B8'));\n\
    console.log(hex_key('B9'));\nconsole.log(hex_key('BA'));\nconsole.log(hex_key('BB'));\n\
    console.log(hex_key('BC'));\nconsole.log(hex_key('BD'));\nconsole.log(hex_key('BE'));\n\
    console.log(hex_key('BF'));\nconsole.log(hex_key('C0'));\nconsole.log(hex_key('C1'));\n\
    console.log(hex_key('C2'));\nconsole.log(hex_key('C3'));\nconsole.log(hex_key('C4'));\n\
    console.log(hex_key('C5'));\nconsole.log(hex_key('C6'));\nconsole.log(hex_key('C7'));\n\
    console.log(hex_key('C8'));\nconsole.log(hex_key('C9'));\nconsole.log(hex_key('CA'));\n\
    console.log(hex_key('CB'));\nconsole.log(hex_key('CC'));\nconsole.log(hex_key('CD'));\n\
    console.log(hex_key('", "    let hex_primes = ['2', '3', '5', '7', 'B', 'D'];\n\
    \    let count = 0;\n    for (let i = 0; i < num.length; i++) {\n        if (hex_primes.includes(num[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('BAD'));\nconsole.log(hex_key('BAC'));\n", "    let primes\
    \ = [2, 3, 5, 7, 11, 13];\n    let hex = ['0', '1', '2', '3', '4', '5', '6', '7',\
    \ '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let count = 0;\n    for (let i\
    \ = 0; i < num.length; i++) {\n        if (primes.includes(hex.indexOf(num[i])))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"\
    21\"));\nconsole.log(hex_key(\"CD\"));\nconsole.log(hex_key(\"EFEFEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"AAABBB\"));\nconsole.log(hex_key(\"AAABBB\"\
    ));\nconsole.log(hex_key(\"AAABBB\"));\nconsole.log(hex_key(\"AAABBB\"));\nconsole.log(hex_key(\"\
    AAABBB\"));\nconsole.log(hex_key(\"AAABBB\"));\nconsole.log(hex_key(\"AAABBB\"\
    ));\nconsole.log(hex_key(\"AAABBB\"));\nconsole.log(hex_key(\"AAABBB\"));\nconsole.log(hex_key(\"\
    AAABBB\"));\nconsole.log(hex_key(\"AAABBB\"));\nconsole.log(hex_key(\"AAABBB\"\
    ));\nconsole.log(hex_key(\"AAABBB\"));\nconsole.log(hex_key(\"AAABBB\"));\nconsole.log(hex_key(\"\
    AAABBB\"));\nconsole.log(hex_key(\"AAABBB\"));\nconsole.log(hex_key(\"AAABBB\"\
    ));\nconsole.log(hex_key(\"AAABBB\"));\nconsole.log(hex_key(\"AAABBB\"));\nconsole.log(hex_key(\"\
    AAABBB\"));\nconsole.log(hex_key(\"", "    let count: number = 0;\n    const hex_primes:\
    \ string[] = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i: number = 0; i <\
    \ num.length; i++) {\n        if (hex_primes.includes(num[i])) {\n           \
    \ count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('BAD'));\nconsole.log(hex_key('BAC'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));", "    let count: number = 0;\n    let hex: string\
    \ = '0123456789ABCDEF';\n    let hex_prime: string = '2357BD';\n    for (let i:\
    \ number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i]) !==\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('1A'));\n\
    console.log(hex_key('7F'));\nconsole.log(hex_key('AC'));\nconsole.log(hex_key('B9'));\n\
    console.log(hex_key('C0'));\nconsole.log(hex_key('D1'));\nconsole.log(hex_key('E2'));\n\
    console.log(hex_key('F3'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFFF'));\nconsole.log(hex_key('FFFFF'));\nconsole.log(hex_key('FFFFFF'));\n\
    console.log(hex_key('FFFFFFF'));\nconsole.log(hex_key('FFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(", "    let hex_key: string = \"0123456789ABCDEF\";\n    let prime_numbers:\
    \ number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139,\
    \ 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229,\
    \ 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317,\
    \ 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421,\
    \ 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521,\
    \ 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619,\
    \ 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733,\
    \ 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839,\
    \ 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953,\
    \ 967, 971, 977, 983, 991, 997];\n    let count: number = 0;\n    for (let i:\
    \ number = 0; i < num.length; i++) {\n        if (prime_numbers.indexOf(hex_key.indexOf(num[i]))\
    \ !== -1) {\n            count++;\n        }\n", "    let count: number = 0;\n\
    \    let hex: string = \"0123456789ABCDEF\";\n    let hex_arr: string[] = hex.split(\"\
    \");\n    let hex_num: string[] = num.split(\"\");\n    for (let i: number = 0;\
    \ i < hex_num.length; i++) {\n        for (let j: number = 0; j < hex_arr.length;\
    \ j++) {\n            if (hex_num[i] === hex_arr[j]) {\n                if (j\
    \ === 2 || j === 3 || j === 5 || j === 7 || j === 11 || j === 13) {\n        \
    \            count++;\n                }\n            }\n        }\n    }\n  \
    \  return count;\n}\nconsole.log(hex_key(\"2A3CF\"));\nconsole.log(hex_key(\"\
    233CF\"));\nconsole.log(hex_key(\"2339F\"));\nconsole.log(hex_key(\"\"));\n",
  "    let count = 0;\n    let hex = {\n        '0': 0,\n        '1': 1,\n       \
    \ '2': 2,\n        '3': 3,\n        '4': 4,\n        '5': 5,\n        '6': 6,\n\
    \        '7': 7,\n        '8': 8,\n        '9': 9,\n        'A': 10,\n       \
    \ 'B': 11,\n        'C': 12,\n        'D': 13,\n        'E': 14,\n        'F':\
    \ 15\n    }\n    for (let i = 0; i < num.length; i++) {\n        if (hex[num[i]]\
    \ === 2 || hex[num[i]] === 3 || hex[num[i]] === 5 || hex[num[i]] === 7 || hex[num[i]]\
    \ === 11 || hex[num[i]] === 13) {\n            count++;\n        }\n    }\n  \
    \  return count;\n}\nconsole.log(hex_key('2A3B'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDFFF'));\nconsole.log(hex_key('ABCDFFF'));\n\
    console.log(hex_key('ABCDFFF'));\nconsole.log(hex_key('ABCDFFF'));\nconsole.log(hex_key('ABCDFFF'));\n\
    console.log(hex_key('ABCDFFF'));\nconsole.log(hex_key('ABCDFFF'));\nconsole.log(hex_key('ABCDFFF'));\n\
    console.log(hex_key('ABCDFFF'));\nconsole.log(hex_key('ABCDFFF'));\nconsole.log(hex_key('ABCDFFF'));\n\
    console.log(hex_key('ABCDFFF'));\nconsole.log(hex_key('ABCDFFF'));\nconsole.log(hex_key('ABCDFFF'));\n\
    console.log(hex_key('ABCDFFF'));\nconsole.log(hex_key('ABCDFFF'));\nconsole.log(hex_key('ABC",
  "    let hex_prime_count = 0;\n    let hex_primes = [2, 3, 5, 7, 11, 13];\n    let\
    \ hex_digits = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C',\
    \ 'D', 'E', 'F'];\n    for (let i = 0; i < num.length; i++) {\n        if (hex_primes.includes(hex_digits.indexOf(num[i])))\
    \ {\n            hex_prime_count++;\n        }\n    }\n    return hex_prime_count;\n\
    }\n\nconsole.log(hex_key('1F'));\nconsole.log(hex_key('B1'));\nconsole.log(hex_key('39'));\n\
    console.log(hex_key('AB'));\n", "    let count: number = 0;\n    let hex: string\
    \ = \"0123456789ABCDEF\";\n    let primes: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (primes.indexOf(num[i]) >\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"2357\"));\nconsole.log(hex_key(\"\
    247D\"));\nconsole.log(hex_key(\"247DD\"));\nconsole.log(hex_key(\"BADF00D\"));\n",
  "    let hex_key: string = '2357BDF';\n    let count: number = 0;\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) !=\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('3A4F'));\n\
    console.log(hex_key('F8D'));\nconsole.log(hex_key('B1'));\nconsole.log(hex_key('BAC'));\n\
    console.log(hex_key('C0FFEE'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('1'));\n\
    console.log(hex_key('0'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));", "    let hex_digits\
    \ = {\n        '0': 0,\n        '1': 1,\n        '2': 2,\n        '3': 3,\n  \
    \      '4': 4,\n        '5': 5,\n        '6': 6,\n        '7': 7,\n        '8':\
    \ 8,\n        '9': 9,\n        'A': 10,\n        'B': 11,\n        'C': 12,\n\
    \        'D': 13,\n        'E': 14,\n        'F': 15\n    }\n    let count = 0;\n\
    \    for (let i = 0; i < num.length; i++) {\n        if (hex_digits[num[i]] ===\
    \ 2 || hex_digits[num[i]] === 3 || hex_digits[num[i]] === 5 || hex_digits[num[i]]\
    \ === 7 || hex_digits[num[i]] === 11 || hex_digits[num[i]] === 13) {\n       \
    \     count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('FF'));\n\
    console.log(hex_key('C'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF')", "  let count\
    \ = 0;\n  let hex = {\n    '0': 0,\n    '1': 1,\n    '2': 2,\n    '3': 3,\n  \
    \  '4': 4,\n    '5': 5,\n    '6': 6,\n    '7': 7,\n    '8': 8,\n    '9': 9,\n\
    \    'A': 10,\n    'B': 11,\n    'C': 12,\n    'D': 13,\n    'E': 14,\n    'F':\
    \ 15\n  }\n  for (let i = 0; i < num.length; i++) {\n    if (hex[num[i]] === 2\
    \ || hex[num[i]] === 3 || hex[num[i]] === 5 || hex[num[i]] === 7 || hex[num[i]]\
    \ === 11 || hex[num[i]] === 13) {\n      count++;\n    }\n  }\n  return count;\n\
    }\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('C'));\nconsole.log(hex_key('B1'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('FEDCBA'));\n", "    let\
    \ count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let hex_arr:\
    \ string[] = hex.split(\"\");\n    let hex_num: string[] = num.split(\"\");\n\
    \    let hex_num_dec: number[] = [];\n    for (let i: number = 0; i < hex_num.length;\
    \ i++) {\n        hex_num_dec.push(hex_arr.indexOf(hex_num[i]));\n    }\n    for\
    \ (let i: number = 0; i < hex_num_dec.length; i++) {\n        if (hex_num_dec[i]\
    \ === 2 || hex_num_dec[i] === 3 || hex_num_dec[i] === 5 || hex_num_dec[i] ===\
    \ 7 || hex_num_dec[i] === 11 || hex_num_dec[i] === 13) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"\
    4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"\
    7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"\
    A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    10\"));\nconsole.log(hex_key(\"11\"));\nconsole.log(hex_key(\"12\"));\nconsole.log(hex_key(\"\
    13\"));\nconsole.log(hex_key(\"14\"));\nconsole.log(hex_key(\"15\"));\nconsole.log(hex_key(\"\
    16\"));\nconsole.log(hex_", "    let count = 0;\n    let hex = [\"2\", \"3\",\
    \ \"5\", \"7\", \"B\", \"D\"];\n    for (let i = 0; i < num.length; i++) {\n \
    \       if (hex.includes(num[i])) {\n            count++;\n        }\n    }\n\
    \    return count;\n}\nconsole.log(hex_key(\"2A3BE\"));\nconsole.log(hex_key(\"\
    103F9E\"));\nconsole.log(hex_key(\"21ABC\"));\nconsole.log(hex_key(\"AB\"));\n",
  "    let count: number = 0;\n    let hex: string = '0123456789ABCDEF';\n    let\
    \ hex_primes: string = '2357BD';\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_primes.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('7F'));\n\
    console.log(hex_key('AC'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF')",
  "    let count: number = 0;\n    let hex_num: string = \"0123456789ABCDEF\";\n \
    \   let hex_prime: string = \"2357BD\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_prime.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"\
    4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"\
    7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"\
    A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    10\"));\nconsole.log(hex_key(\"11\"));\nconsole.log(hex_key(\"12\"));\nconsole.log(hex_key(\"\
    13\"));\nconsole.log(hex_key(\"14\"));\nconsole.log(hex_key(\"15\"));\nconsole.log(hex_key(\"\
    16\"));\nconsole.log(hex_key(\"17\"));\nconsole.log(hex_key(\"18\"));\nconsole.log(hex_key(\"\
    19\"));\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"1B\"));\nconsole.log(hex_key(\"\
    1C\"));\nconsole.log(hex_key(\"1D\"));\nconsole.log(hex_key(\"1E\"));\nconsole.log(hex_key(\"\
    1F\"));\nconsole.log(hex_key(\"20\"));\nconsole.log(hex_key(\"21\"));", "    let\
    \ count = 0;\n    let hex = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i =\
    \ 0; i < num.length; i++) {\n        if (hex.includes(num[i])) {\n           \
    \ count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFFF'));\nconsole.log(hex_key('FFFFFF'));\n\
    console.log(hex_key('FFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
  "    let hex_primes = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    let count\
    \ = 0;\n    for (let i = 0; i < num.length; i++) {\n        if (hex_primes.includes(num[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    2A3BE\"));\nconsole.log(hex_key(\"B1A122\"));\nconsole.log(hex_key(\"BAC\"));\n",
  "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let\
    \ hex_primes: string = \"2357BD\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_primes.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"\
    4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"\
    7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"\
    A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    10\"));\nconsole.log(hex_key(\"11\"));\nconsole.log(hex_key(\"12\"));\nconsole.log(hex_key(\"\
    13\"));\nconsole.log(hex_key(\"14\"));\nconsole.log(hex_key(\"15\"));\nconsole.log(hex_key(\"\
    16\"));\nconsole.log(hex_key(\"17\"));\nconsole.log(hex_key(\"18\"));\nconsole.log(hex_key(\"\
    19\"));\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"1B\"));\nconsole.log(hex_key(\"\
    1C\"));\nconsole.log(hex_key(\"1D\"));\nconsole.log(hex_key(\"1E\"));\nconsole.log(hex_key(\"\
    1F\"));\nconsole.log(hex_key(\"20\"));\nconsole.log(hex_key(\"21\"));", "    let\
    \ sum: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let hex_prime:\
    \ string = \"2357BD\";\n    for (let i: number = 0; i < num.length; i++) {\n \
    \       if (hex_prime.indexOf(num[i]) != -1) {\n            sum++;\n        }\n\
    \    }\n    return sum;\n}\nconsole.log(hex_key(\"2A3B\"));\nconsole.log(hex_key(\"\
    B7\"));\nconsole.log(hex_key(\"FF\"));\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\n", "    let result: number = 0;\n    let hex: string = \"0123456789ABCDEF\"\
    ;\n    let hex_prime: string = \"2357BD\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_prime.indexOf(num[i]) !== -1) {\n            result++;\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    2\"));\nconsole.log(hex_key(\"2357BD\"));\nconsole.log(hex_key(\"0123456789ABCDEF\"\
    ));\nconsole.log(hex_key(\"0123456789ABCDEFFEDCBA9876543210\"));\nconsole.log(hex_key(\"\
    FEDCBA9876543210\"));\nconsole.log(hex_key(\"FEDCBA9876543210FEDCBA9876543210\"\
    ));\nconsole.log(hex_key(\"FEDCBA9876543210FEDCBA9876543210FEDCBA9876543210\"\
    ));\nconsole.log(hex_key(\"FEDCBA9876543210FEDCBA9876543210FEDCBA9876543210FEDCBA9876543210\"\
    ));\nconsole.log(hex_key(\"FEDCBA9876543210FEDCBA9876543210FEDCBA9876543210FEDCBA9876543210FEDCBA9876543210\"\
    ));\nconsole.log(hex_key(\"FEDCBA9876543210FEDCBA9876543210FEDCBA9876543210FEDCBA9876543210FEDCBA9876543210FEDCBA9876543210\"\
    ));\nconsole.log(hex_key(\"FEDCBA9876543210FEDCBA9876543210FEDCBA9876543210FEDCBA9876543210FEDCBA9876543210FEDCBA9876543210FEDCBA9876543210\"\
    ));\nconsole.log(hex_key(\"FEDCBA9876543210FEDCBA9876543210FEDCBA98765432", " \
    \   let hex_key = {\n        '0': 0,\n        '1': 1,\n        '2': 2,\n     \
    \   '3': 3,\n        '4': 4,\n        '5': 5,\n        '6': 6,\n        '7': 7,\n\
    \        '8': 8,\n        '9': 9,\n        'A': 10,\n        'B': 11,\n      \
    \  'C': 12,\n        'D': 13,\n        'E': 14,\n        'F': 15\n    }\n    let\
    \ count = 0;\n    for (let i = 0; i < num.length; i++) {\n        if (hex_key[num[i]]\
    \ === 2 || hex_key[num[i]] === 3 || hex_key[num[i]] === 5 || hex_key[num[i]] ===\
    \ 7 || hex_key[num[i]] === 11 || hex_key[num[i]] === 13) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('C'));\n\
    console.log(hex_key('B1'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('FEDCBA'));\n\
    console.log(hex_key('AA'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFFF'));\nconsole.log(hex_key('FFFFF'));\nconsole.log(hex_key('FFFFFF'));\n\
    console.log(hex_key('FFFFFFF'));\nconsole.log(hex_key('FFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFF'));\nconsole.log(hex", "    let count: number\
    \ = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let hex_arr: string[]\
    \ = hex.split(\"\");\n    let hex_num: string[] = num.split(\"\");\n    for (let\
    \ i: number = 0; i < hex_num.length; i++) {\n        for (let j: number = 0; j\
    \ < hex_arr.length; j++) {\n            if (hex_num[i] === hex_arr[j]) {\n   \
    \             if (j === 2 || j === 3 || j === 5 || j === 7 || j === 11 || j ===\
    \ 13) {\n                    count++;\n                }\n            }\n    \
    \    }\n    }\n    return count;\n}\nconsole.log(hex_key(\"2B3A\"));\nconsole.log(hex_key(\"\
    FF\"));\nconsole.log(hex_key(\"\"));", "    let count: number = 0;\n    let hex:\
    \ string = \"0123456789ABCDEF\";\n    let primes: string = \"2357BDF\";\n    for\
    \ (let i: number = 0; i < num.length; i++) {\n        if (primes.indexOf(num[i])\
    \ > -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    1A\"));\nconsole.log(hex_key(\"7F9A2B\"));\nconsole.log(hex_key(\"39A\"));\nconsole.log(hex_key(\"\
    FFF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\"));\n", " \
    \   let count = 0;\n    let hex = ['2', '3', '5', '7', 'B', 'D'];\n    for (let\
    \ i = 0; i < num.length; i++) {\n        if (hex.includes(num[i])) {\n       \
    \     count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('BAD'));\nconsole.log(hex_key('BADFAD'));\nconsole.log(hex_key('123ABCD'));\n\
    console.log(hex_key('123ABCD'));\nconsole.log(hex_key('123ABCD'));\nconsole.log(hex_key('123ABCD'));\n\
    console.log(hex_key('123ABCD'));\nconsole.log(hex_key('123ABCD'));\nconsole.log(hex_key('123ABCD'));\n\
    console.log(hex_key('123ABCD'));\nconsole.log(hex_key('123ABCD'));\nconsole.log(hex_key('123ABCD'));\n\
    console.log(hex_key('123ABCD'));\nconsole.log(hex_key('123ABCD'));\nconsole.log(hex_key('123ABCD'));\n\
    console.log(hex_key('123ABCD'));\nconsole.log(hex_key('123ABCD'));\nconsole.log(hex_key('123ABCD'));\n\
    console.log(hex_key('123ABCD'));\nconsole.log(hex_key('123ABCD'));\nconsole.log(hex_key('123ABCD'));\n\
    console.log(hex_key('123ABCD'));\nconsole.log(hex_key('123ABCD'));\nconsole.log(hex_key('123ABCD'));\n\
    console.log(hex_key('123ABCD'));\nconsole.log(hex_key('123ABCD'));\nconsole.log(hex_key('123ABCD'));\n\
    console.log(hex_key('123ABCD'));\nconsole.log(hex_key('123ABCD'));\nconsole.log(hex_key('123",
  "    let hex_key: string = \"0123456789ABCDEF\";\n    let hex_primes: string = \"\
    2357BD\";\n    let count: number = 0;\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_primes.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    1F\"));\nconsole.log(hex_key(\"2F\"));\nconsole.log(hex_key(\"3F\"));\nconsole.log(hex_key(\"\
    4F\"));\nconsole.log(hex_key(\"5F\"));\nconsole.log(hex_key(\"6F\"));\nconsole.log(hex_key(\"\
    7F\"));\nconsole.log(hex_key(\"8F\"));\nconsole.log(hex_key(\"9F\"));\nconsole.log(hex_key(\"\
    AF\"));\nconsole.log(hex_key(\"BF\"));\nconsole.log(hex_key(\"CF\"));\nconsole.log(hex_key(\"\
    DF\"));\nconsole.log(hex_key(\"EF\"));\nconsole.log(hex_key(\"FF\"));\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF123456789\"\
    ));\nconsole.log(hex_key(\"ABCDEF123456789ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF123456789ABCDEF123456789\"));\nconsole.log(hex_key(\"ABCDEF123456789ABCDEF123456789ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF123456789ABCDEF123456789ABCDEF123456789\"));\n\
    console.log(hex_key(\"ABCDEF123456789ABCDEF123456789ABCDEF123456789ABCDEF\"));\n\
    console.log(hex_key(\"ABCDEF123456789ABCDEF123456789ABCDEF123456789ABCDEF123456789\"\
    ));\nconsole.log(hex_", "    let hex_key: number = 0;\n    let hex_arr: string[]\
    \ = num.split('');\n    for (let i: number = 0; i < hex_arr.length; i++) {\n \
    \       if (hex_arr[i] === '2' || hex_arr[i] === '3' || hex_arr[i] === '5' ||\
    \ hex_arr[i] === '7' || hex_arr[i] === 'B' || hex_arr[i] === 'D') {\n        \
    \    hex_key++;\n        }\n    }\n    return hex_key;\n}\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('FF'));\nconsole.log(hex_key('1A2B3C4D'));\n", "    let hex_key\
    \ = {\n        '0': 0,\n        '1': 1,\n        '2': 2,\n        '3': 3,\n  \
    \      '4': 4,\n        '5': 5,\n        '6': 6,\n        '7': 7,\n        '8':\
    \ 8,\n        '9': 9,\n        'A': 10,\n        'B': 11,\n        'C': 12,\n\
    \        'D': 13,\n        'E': 14,\n        'F': 15\n    }\n    let count = 0;\n\
    \    for (let i = 0; i < num.length; i++) {\n        if (hex_key[num[i]] === 2\
    \ || hex_key[num[i]] === 3 || hex_key[num[i]] === 5 || hex_key[num[i]] === 7 ||\
    \ hex_key[num[i]] === 11 || hex_key[num[i]] === 13) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key('2A3B'));\nconsole.log(hex_key('1A2B3C4D'));\n\
    console.log(hex_key('1A2B3C4D5E6F'));\nconsole.log(hex_key('1234567890ABCDEF'));\n\
    console.log(hex_key('1234567890ABCDEF'));\nconsole.log(hex_key('1234567890ABCDEF'));\n\
    console.log(hex_key('1234567890ABCDEF'));\nconsole.log(hex_key('1234567890ABCDEF'));\n\
    console.log(hex_key('1234567890ABCDEF'));\nconsole.log(hex_key('1234567890ABCDEF'));\n\
    console.log(hex_key('1234567890ABCDEF'));\nconsole.log(hex_key('1234567890ABCDEF'));\n\
    console.log(hex_key('1234567890ABCDEF'));\nconsole.log(hex_key('1234567890ABCDEF'));\n\
    console.log(hex_key('1234567890ABCDEF'));\nconsole.log(hex_key('1234567890ABCDEF')",
  "    let hex_key: string = \"0123456789ABCDEF\";\n    let hex_value: number = 0;\n\
    \    for (let i: number = 0; i < hex_key.length; i++) {\n        if (num == hex_key[i])\
    \ {\n            hex_value = i;\n        }\n    }\n    return hex_value;\n}\n",
  "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let\
    \ primes: string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++)\
    \ {\n        if (primes.indexOf(num[i]) !== -1) {\n            count++;\n    \
    \    }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"21\"));\nconsole.log(hex_key(\"\
    CD\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"1AE3\"));\nconsole.log(hex_key(\"\
    B1A\"));\nconsole.log(hex_key(\"B1C\"));\nconsole.log(hex_key(\"B1E\"));\nconsole.log(hex_key(\"\
    B1F\"));\nconsole.log(hex_key(\"AB1F\"));\nconsole.log(hex_key(\"AB1E\"));\nconsole.log(hex_key(\"\
    AB1C\"));\nconsole.log(hex_key(\"AB1A\"));\nconsole.log(hex_key(\"AB1\"));\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"\
    C\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"\
    F\"));\nconsole.log(hex_key(\"1F\"));\nconsole.log(hex_key(\"2F\"));\nconsole.log(hex_key(\"\
    3F\"));\nconsole.log(hex_key(\"4F\"));\nconsole.log(hex_key(\"5F\"));\nconsole.log(hex_key(\"\
    6F\"));\nconsole.log(hex_key(\"7F\"));\nconsole.log(hex_key(\"8F\"));\nconsole.log(hex_key(\"\
    9F\"));\nconsole.log", "    let hex_key = {\n        '0': 0,\n        '1': 1,\n\
    \        '2': 2,\n        '3': 3,\n        '4': 4,\n        '5': 5,\n        '6':\
    \ 6,\n        '7': 7,\n        '8': 8,\n        '9': 9,\n        'A': 10,\n  \
    \      'B': 11,\n        'C': 12,\n        'D': 13,\n        'E': 14,\n      \
    \  'F': 15\n    }\n    let count = 0;\n    for (let i = 0; i < num.length; i++)\
    \ {\n        if (hex_key[num[i]] === 2 || hex_key[num[i]] === 3 || hex_key[num[i]]\
    \ === 5 || hex_key[num[i]] === 7 || hex_key[num[i]] === 11 || hex_key[num[i]]\
    \ === 13) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('2A3F'));\n\
    console.log(hex_key('F885'));\nconsole.log(hex_key('A78B'));\n", "    let result:\
    \ number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let hex_primes:\
    \ string = \"2357BD\";\n    for (let i: number = 0; i < num.length; i++) {\n \
    \       if (hex_primes.indexOf(num[i]) !== -1) {\n            result++;\n    \
    \    }\n    }\n    return result;\n}\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    2\"));\nconsole.log(hex_key(\"2101\"));\nconsole.log(hex_key(\"FE\"));\nconsole.log(hex_key(\"\
    1F\"));\nconsole.log(hex_key(\"1F3\"));\nconsole.log(hex_key(\"1F3A\"));\nconsole.log(hex_key(\"\
    1F3A5\"));\nconsole.log(hex_key(\"1F3A5C\"));\nconsole.log(hex_key(\"1F3A5C7\"\
    ));\nconsole.log(hex_key(\"1F3A5C7B\"));\nconsole.log(hex_key(\"1F3A5C7B9\"));\n\
    console.log(hex_key(\"1F3A5C7B9D\"));\nconsole.log(hex_key(\"1F3A5C7B9D3\"));\n\
    console.log(hex_key(\"1F3A5C7B9D3E\"));\nconsole.log(hex_key(\"1F3A5C7B9D3E5\"\
    ));\nconsole.log(hex_key(\"1F3A5C7B9D3E5F\"));\nconsole.log(hex_key(\"1F3A5C7B9D3E5F7\"\
    ));\nconsole.log(hex_key(\"1F3A5C7B9D3E5F7A\"));\nconsole.log(hex_key(\"1F3A5C7B9D3E5F7A1\"\
    ));\nconsole.log(hex_key(\"1F3A5C7B9D3E5F7A11\"));\nconsole.log(hex_key(\"", " \
    \   let count = 0;\n    let hex = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n\
    \    for (let i = 0; i < num.length; i++) {\n        if (hex.includes(num[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    2B\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"AA\"));\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"2B3D57\"));\nconsole.log(hex_key(\"FFF\"));\nconsole.log(hex_key(\"\
    FFFA\"));\nconsole.log(hex_key(\"FFFFB\"));\nconsole.log(hex_key(\"FFFFBD\"));\n\
    console.log(hex_key(\"FFFFBDF\"));\nconsole.log(hex_key(\"FFFFBDFE\"));\nconsole.log(hex_key(\"\
    FFFFBDFEA\"));\nconsole.log(hex_key(\"FFFFBDFEAC\"));\nconsole.log(hex_key(\"\
    FFFFBDFEACD\"));\nconsole.log(hex_key(\"FFFFBDFEACDE\"));\nconsole.log(hex_key(\"\
    FFFFBDFEACDEA\"));\nconsole.log(hex_key(\"FFFFBDFEACDEAB\"));\nconsole.log(hex_key(\"\
    FFFFBDFEACDEABD\"));\nconsole.log(hex_key(\"FFFFBDFEACDEABDF\"));\nconsole.log(hex_key(\"\
    FFFFBDFEACDEABDFE\"));\nconsole.log(hex_key(\"FFFFBDFEACDEABDFEA\"));\nconsole.log(hex_key(\"\
    FFFFBDFEACDEABDFEAC\"));\nconsole.log(hex_key(\"FFFFBDFEACDEABDFEACD\"));\nconsole.log(hex_key(\"\
    FFFFBDFEACDEABDFEACDE\"));\nconsole.log(hex_key(\"FFFFBDFEACDEABDFEACDEA\"));\n\
    console.log(hex_key(\"FFFFBDFEACDEABDFEACDE", "    let hex_key: string = \"0123456789ABCDEF\"\
    ;\n    let hex_prime: string = \"2357BDF\";\n    let count: number = 0;\n    for\
    \ (let i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ != -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"\
    3\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"\
    6\"));\nconsole.log(hex_key(\"7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"\
    9\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"\
    C\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"\
    F\"));\nconsole.log(hex_key(\"AA\"));\nconsole.log(hex_key(\"B8\"));\nconsole.log(hex_key(\"\
    CC\"));\nconsole.log(hex_key(\"DD\"));\nconsole.log(hex_key(\"EE\"));\nconsole.log(hex_key(\"\
    FF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"BACDEF\"));\n\
    console.log(hex_key(\"CABDEF\"));\nconsole.log(hex_key(\"DACDEF\"));\nconsole.log(hex_key(\"\
    EABDEF\"));\nconsole.log(hex_key(\"FABDEF\"));\nconsole.log(hex_key(\"ABCDEFABCDEF\"\
    ));\nconsole.log(hex_key(\"BACDEFBACDEF\"));\nconsole.log(hex_key(\"CABDEFCABDEF\"\
    ));\nconsole.log(hex_key(\"DACDEFDACDEF\")", "    let count: number = 0;\n   \
    \ let hex: string = \"0123456789ABCDEF\";\n    let prime: string = \"2357BDF\"\
    ;\n    for (let i: number = 0; i < num.length; i++) {\n        if (prime.indexOf(num[i])\
    \ != -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"\
    3\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"\
    6\"));\nconsole.log(hex_key(\"7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"\
    9\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"\
    C\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"\
    F\"));\nconsole.log(hex_key(\"A286B1\"));\nconsole.log(hex_key(\"B286B1\"));\n\
    console.log(hex_key(\"B286B1\"));\nconsole.log(hex_key(\"B286B1\"));\nconsole.log(hex_key(\"\
    B286B1\"));\nconsole.log(hex_key(\"B286B1\"));\nconsole.log(hex_key(\"B286B1\"\
    ));\nconsole.log(hex_key(\"B286B1\"));\nconsole.log(hex_key(\"B286B1\"));\nconsole.log(hex_key(\"\
    B286B1\"));\nconsole.log(hex_key(\"B286B1\"));\nconsole.log(hex_key(\"B286B1\"\
    ));\nconsole.log(hex_key(\"B286B1\"));\nconsole.log(hex_key(\"B286B1\"));\nconsole.log(hex_key(\"\
    B286B1\"));\nconsole.", "    let count = 0;\n    let hex = ['2', '3', '5', '7',\
    \ 'B', 'D'];\n    for (let i = 0; i < num.length; i++) {\n        if (hex.includes(num[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('BAD'));\nconsole.log(hex_key('BACD'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('123'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log", "    let count: number = 0;\n \
    \   const hex: string[] = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A',\
    \ 'B', 'C', 'D', 'E', 'F'];\n    const prime: string[] = ['2', '3', '5', '7',\
    \ 'B', 'D'];\n    for (let i: number = 0; i < num.length; i++) {\n        if (prime.includes(num[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('BAD'));\nconsole.log(hex_key('BAC'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console", "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\"\
    ;\n    let hex_primes: string = \"2357BD\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_primes.indexOf(num[i]) !== -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"2A3E\"));\nconsole.log(hex_key(\"\
    233B\"));\nconsole.log(hex_key(\"FFFFFFFF\"));\nconsole.log(hex_key(\"\"));\n\
    console.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"",
  "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let\
    \ hex_primes: string = \"2357BD\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_primes.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    2\"));\nconsole.log(hex_key(\"21\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"\
    E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"10\"));\nconsole.log(hex_key(\"\
    EF\"));\nconsole.log(hex_key(\"CD\"));\nconsole.log(hex_key(\"89\"));\nconsole.log(hex_key(\"\
    EF10CD\"));\nconsole.log(hex_key(\"89EF10CD\"));\nconsole.log(hex_key(\"89EF10CD12\"\
    ));\nconsole.log(hex_key(\"89EF10CD12EF\"));\nconsole.log(hex_key(\"89EF10CD12EF89\"\
    ));\nconsole.log(hex_key(\"89EF10CD12EF89EF\"));\nconsole.log(hex_key(\"89EF10CD12EF89EF10\"\
    ));\nconsole.log(hex_key(\"89EF10CD12EF89EF10CD\"));\nconsole.log(hex_key(\"89EF10CD12EF89EF10CD12\"\
    ));\nconsole.log(hex_key(\"89EF10CD12EF89EF10CD12EF\"));\nconsole.log(hex_key(\"\
    89EF10CD12EF89EF10CD12EF89\"));\nconsole.log(hex_key(\"89EF10CD12EF89EF10CD12EF89EF\"\
    ));\nconsole.log(hex_key(\"89EF10CD12EF89EF10CD12EF89EF10\"));\nconsole.log(hex_key(\"\
    89EF10CD12EF89EF10CD12EF89EF10CD\"));\nconsole.log(hex_", "  let count = 0;\n\
    \  for (let i = 0; i < num.length; i++) {\n    if (num[i] === '2' || num[i] ===\
    \ '3' || num[i] === '5' || num[i] === '7' || num[i] === 'B' || num[i] === 'D')\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDABCD'));\n\
    console.log(hex_key('BADA55'));\nconsole.log(hex_key(''));", "    let hex_key\
    \ = {\n        '0': 0,\n        '1': 1,\n        '2': 2,\n        '3': 3,\n  \
    \      '4': 4,\n        '5': 5,\n        '6': 6,\n        '7': 7,\n        '8':\
    \ 8,\n        '9': 9,\n        'A': 10,\n        'B': 11,\n        'C': 12,\n\
    \        'D': 13,\n        'E': 14,\n        'F': 15\n    }\n    let count = 0;\n\
    \    for (let i = 0; i < num.length; i++) {\n        if (hex_key[num[i]] === 2\
    \ || hex_key[num[i]] === 3 || hex_key[num[i]] === 5 || hex_key[num[i]] === 7 ||\
    \ hex_key[num[i]] === 11 || hex_key[num[i]] === 13) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('C'));\n\
    console.log(hex_key('B1'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('FEDCBA'));\n\
    console.log(hex_key('AA'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFFF'));\nconsole.log(hex_key('FFFFF'));\nconsole.log(hex_key('FFFFFF'));\n\
    console.log(hex_key('FFFFFFF'));\nconsole.log(hex_key('FFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFF'));\nconsole.log(", "    let result: number\
    \ = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let prime: string = \"\
    2357BD\";\n    for (let i: number = 0; i < num.length; i++) {\n        if (prime.indexOf(num[i])\
    \ !== -1) {\n            result++;\n        }\n    }\n    return result;\n}\n\n\
    console.log(hex_key(\"\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"\
    2101\"));\nconsole.log(hex_key(\"FE\"));\nconsole.log(hex_key(\"1F\"));\nconsole.log(hex_key(\"\
    1F3F\"));\nconsole.log(hex_key(\"1F3F7E\"));\nconsole.log(hex_key(\"1F3F7E2\"\
    ));\nconsole.log(hex_key(\"1F3F7E23\"));\nconsole.log(hex_key(\"1F3F7E23D\"));\n\
    console.log(hex_key(\"1F3F7E23DB8\"));\nconsole.log(hex_key(\"1F3F7E23DB85ED\"\
    ));\nconsole.log(hex_key(\"1F3F7E23DB85EDC1\"));\nconsole.log(hex_key(\"1F3F7E23DB85EDC147A\"\
    ));\nconsole.log(hex_key(\"1F3F7E23DB85EDC147ACF\"));\nconsole.log(hex_key(\"\
    1F3F7E23DB85EDC147ACFB\"));\nconsole.log(hex_key(\"1F3F7E23DB85EDC147ACFB9\"));\n\
    console.log(hex_key(\"1F3F7E23DB85EDC147ACFB98\"));\nconsole.log(hex_key(\"1F3F7E23DB85EDC147ACFB983\"\
    ));\nconsole.log(hex_key(\"1F3F7E23DB85EDC147ACFB9837\"));\nconsole.log(hex_key(\"\
    1F3F7E23DB85EDC147ACFB9837D", "    let hex_key: string = \"2357BDF\";\n    let\
    \ count: number = 0;\n    for (let i: number = 0; i < num.length; i++) {\n   \
    \     if (hex_key.indexOf(num[i]) > -1) {\n            count++;\n        }\n \
    \   }\n    return count;\n}\n\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"\
    4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"\
    7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"\
    A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    AA\"));\nconsole.log(hex_key(\"B8\"));\nconsole.log(hex_key(\"CC\"));\nconsole.log(hex_key(\"\
    DD\"));\nconsole.log(hex_key(\"EE\"));\nconsole.log(hex_key(\"FF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"123456789ABCDEF\"));\nconsole.log(hex_key(\"\
    AA22BB33CC44DD55EE66FF77\"));\nconsole.log(hex_key(\"AABBCCDDEEFF\"));\nconsole.log(hex_key(\"\
    AABBCCDDEEFF\"));\nconsole.log(hex_key(\"AABBCCDDEEFF\"));\nconsole.log(hex_key(\"\
    AABBCCDDEEFF\"));\nconsole.log(hex_key(\"AABBCCDDEEFF\"));\nconsole.log(hex_key(\"\
    AABBCCDDEEFF\"));\nconsole.log(hex_key(\"AABBC", "    let hex_primes = 0;\n  \
    \  let hex_nums = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"\
    8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n    let hex_primes_arr\
    \ = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i = 0; i < num.length;\
    \ i++) {\n        if (hex_primes_arr.includes(num[i])) {\n            hex_primes++;\n\
    \        }\n    }\n    return hex_primes;\n}\nconsole.log(hex_key(\"2A3AE\"));\n\
    console.log(hex_key(\"21FD\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    \"));\n", "    let hex_key = {\n        '0': 0,\n        '1': 1,\n        '2':\
    \ 2,\n        '3': 3,\n        '4': 4,\n        '5': 5,\n        '6': 6,\n   \
    \     '7': 7,\n        '8': 8,\n        '9': 9,\n        'A': 10,\n        'B':\
    \ 11,\n        'C': 12,\n        'D': 13,\n        'E': 14,\n        'F': 15\n\
    \    }\n    let count = 0;\n    for (let i = 0; i < num.length; i++) {\n     \
    \   if (hex_key[num[i]] === 2 || hex_key[num[i]] === 3 || hex_key[num[i]] ===\
    \ 5 || hex_key[num[i]] === 7 || hex_key[num[i]] === 11 || hex_key[num[i]] ===\
    \ 13) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('1A'));\n\
    console.log(hex_key('C'));\nconsole.log(hex_key('F'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\n\
    console.log(hex_key('1A2B3C4D5E6F'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\n\
    console.log(hex_key('1A2B3C4D5E6F'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\n\
    console.log(hex_key('1A2B3C4D5E6F'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\n\
    console.log(hex_key('1A2B3C4D5E6F'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\n\
    console.log(hex_key('1A2B3C4D5E6F'));\nconsole.log(hex_key('1", "    let key:\
    \ number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        if (hex.indexOf(num[i]) % 2 === 1) {\n\
    \            key++;\n        }\n    }\n    return key;\n}\n\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"\
    3\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"\
    6\"));\nconsole.log(hex_key(\"7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"\
    9\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"\
    C\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"\
    F\"));\nconsole.log(hex_key(\"AA\"));\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    AC\"));\nconsole.log(hex_key(\"AD\"));\nconsole.log(hex_key(\"AE\"));\nconsole.log(hex_key(\"\
    AF\"));\nconsole.log(hex_key(\"B1\"));\nconsole.log(hex_key(\"B2\"));\nconsole.log(hex_key(\"\
    B3\"));\nconsole.log(hex_key(\"B4\"));\nconsole.log(hex_key(\"B5\"));\nconsole.log(hex_key(\"\
    B6\"));\nconsole.log(hex_key(\"B7\"));\nconsole.log(hex_key(\"B8\"));\nconsole.log(hex_key(\"\
    B9\"));\nconsole.log(hex_key(\"BA\"));\nconsole.log(hex_key(\"BB\"));\nconsole.log(hex_key(\"\
    BC\"));\nconsole.log(hex_key(\"BD\"));\nconsole", "    let count: number = 0;\n\
    \    let hex: string = '0123456789ABCDEF';\n    let hex_prime: string = '2357BD';\n\
    \    for (let i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('1A'));\n\
    console.log(hex_key('7F'));\nconsole.log(hex_key('AC'));\nconsole.log(hex_key('FF'));\n\
    console.log(hex_key('1A7FACFF'));\nconsole.log(hex_key('1A7FACFF1A7FACFF'));\n\
    console.log(hex_key('1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7FACFF1A7F",
  "    let result: number = 0;\n    const hex: string[] = ['0', '1', '2', '3', '4',\
    \ '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    const primes: string[]\
    \ = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (primes.includes(num[i])) {\n            result++;\n    \
    \    }\n    }\n    return result;\n}\n\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('21F'));\n\
    console.log(hex_key('FFFF'));\n", "    let count: number = 0;\n    let hex: string\
    \ = \"0123456789ABCDEF\";\n    let hex_prime: string = \"2357BD\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    console.log(hex_key(\"\"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"\
    2\"));\nconsole.log(hex_key(\"21\"));\nconsole.log(hex_key(\"CD\"));\nconsole.log(hex_key(\"\
    E\"));\nconsole.log(hex_key(\"1AE3\"));\nconsole.log(hex_key(\"4F3C2B1A\"));\n\
    console.log(hex_key(\"4D3C2B1A\"));\nconsole.log(hex_key(\"4D3C2B1A\"));\nconsole.log(hex_key(\"\
    4D3C2B1A\"));\nconsole.log(hex_key(\"4D3C2B1A\"));\nconsole.log(hex_key(\"4D3C2B1A\"\
    ));\nconsole.log(hex_key(\"4D3C2B1A\"));\nconsole.log(hex_key(\"4D3C2B1A\"));\n\
    console.log(hex_key(\"4D3C2B1A\"));\nconsole.log(hex_key(\"4D3C2B1A\"));\nconsole.log(hex_key(\"\
    4D3C2B1A\"));\nconsole.log(hex_key(\"4D3C2B1A\"));\nconsole.log(hex_key(\"4D3C2B1A\"\
    ));\nconsole.log(hex_key(\"4D3C2B1A\"));\nconsole.log(hex_key(\"4D3C2B1A\"));\n\
    console.log(hex_key(\"4D3C2B1A\"));\nconsole.log(hex_key(\"4D3C2B1A\"));\nconsole.log(hex",
  "    let hex_key: string = \"0123456789ABCDEF\";\n    let hex_primes: string = \"\
    2357BD\";\n    let count: number = 0;\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_primes.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"\
    4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"\
    7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"\
    A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    AA\"));\nconsole.log(hex_key(\"B8\"));\nconsole.log(hex_key(\"CC\"));\nconsole.log(hex_key(\"\
    DD\"));\nconsole.log(hex_key(\"EE\"));\nconsole.log(hex_key(\"FF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"BADDAD\"));\nconsole.log(hex_key(\"CABBAC\"\
    ));\nconsole.log(hex_key(\"DADADD\"));\nconsole.log(hex_key(\"EFEFEF\"));\nconsole.log(hex_key(\"\
    FEDBAD\"));\nconsole.log(hex_key(\"BADA55\"));\nconsole.log(hex_key(\"DEADBEEF\"\
    ));\nconsole.log(hex_key(\"BEEFCAFE\"));\nconsole.log(hex_key(\"DEADBEEFBEEFC",
  "    let hex_key: string = '2357BDF';\n    let count: number = 0;\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) >\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('C0A'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEFA'));\n\
    console.log(hex_key('1A'));\nconsole.log(hex_key('9F'));\nconsole.log(hex_key('CD'));\n\
    console.log(hex_key('EF'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFFF'));\nconsole.log(hex_key('FFFFF'));\nconsole.log(hex_key('FFFFFF'));\n\
    console.log(hex_key('FFFFFFF'));\nconsole.log(hex_key('FFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFF'));\n", "  let result: number = 0;\n\
    \  let hex: string = '0123456789ABCDEF';\n  let primes: string = '2357BD';\n \
    \ for (let i: number = 0; i < num.length; i++) {\n    if (primes.indexOf(num[i])\
    \ !== -1) {\n      result++;\n    }\n  }\n  return result;\n}\nconsole.log(hex_key('1A'));\n\
    console.log(hex_key('7F'));\nconsole.log(hex_key('AC00'));\nconsole.log(hex_key('AC01'));\n\
    console.log(hex_key('AC08'));\nconsole.log(hex_key('AC10'));\nconsole.log(hex_key('AC20'));\n\
    console.log(hex_key('AC40'));\nconsole.log(hex_key('AC80'));\nconsole.log(hex_key('ACFF'));\n\
    console.log(hex_key('AD00'));\nconsole.log(hex_key('AD01'));\nconsole.log(hex_key('AD04'));\n\
    console.log(hex_key('AD10'));\nconsole.log(hex_key('AD20'));\nconsole.log(hex_key('AD40'));\n\
    console.log(hex_key('AD80'));\nconsole.log(hex_key('ADFF'));\nconsole.log(hex_key('AE00'));\n\
    console.log(hex_key('AE01'));\nconsole.log(hex_key('AE02'));\nconsole.log(hex_key('AE04'));\n\
    console.log(hex_key('AE08'));\nconsole.log(hex_key('AE10'));\nconsole.log(hex_key('AE20'));\n\
    console.log(hex_key('AE40'));\nconsole.log(hex_key('AE80'));\nconsole.log(hex_key('AEFF'));\n\
    console.log(hex_key('AF00'));\nconsole.log(hex_key('AF01'));\nconsole.log(hex_key('AF02'));\n\
    console.log(hex_key('AF04'));\n", "    let count: number = 0;\n    let hex: string\
    \ = \"0123456789ABCDEF\";\n    let primes: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (primes.indexOf(num[i]) >\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    1A\"));\nconsole.log(hex_key(\"7F9A2B\"));\nconsole.log(hex_key(\"39A\"));\nconsole.log(hex_key(\"\
    FFF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\"));", " \
    \   let count = 0;\n    for (let i = 0; i < num.length; i++) {\n        if (num[i]\
    \ === '2' || num[i] === '3' || num[i] === '5' || num[i] === '7' || num[i] ===\
    \ 'B' || num[i] === 'D') {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\nconsole.log(hex_key('2A3B'));\nconsole.log(hex_key('BAD'));\nconsole.log(hex_key('BACD'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex", "    let hex_primes: number\
    \ = 0;\n    let hex_nums: string[] = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"\
    , \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n   \
    \ let hex_primes_nums: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n\
    \    for (let i: number = 0; i < num.length; i++) {\n        if (hex_primes_nums.indexOf(num[i])\
    \ !== -1) {\n            hex_primes++;\n        }\n    }\n    return hex_primes;\n\
    }\nconsole.log(hex_key(\"2A3AE\"));\nconsole.log(hex_key(\"21B13\"));\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"\
    B\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"\
    F\"));\nconsole.log(hex_key(\"10\"));\nconsole.log(hex_key(\"EF\"));\nconsole.log(hex_key(\"\
    CD\"));\nconsole.log(hex_key(\"89\"));\nconsole.log(hex_key(\"EF10\"));\nconsole.log(hex_key(\"\
    CD89\"));\nconsole.log(hex_key(\"EF10CD89\"));\nconsole.log(hex_key(\"EF10CD89EF10CD89\"\
    ));\nconsole.log(hex_key(\"EF10CD89EF10CD89EF10CD89EF10CD89\"));\nconsole.log(hex_key(\"\
    EF10CD89EF10CD89EF10CD89EF10CD89EF10CD89EF10CD89EF10CD89EF10CD89\"));\nconsole.log(hex_key(\"\
    EF10CD89EF10CD89EF10CD89EF10CD89EF10CD89EF10CD89EF10CD89EF10CD89EF10CD89EF10CD89",
  "    let count = 0;\n    let hex = ['0', '1', '2', '3', '4', '5', '6', '7', '8',\
    \ '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let prime = [2, 3, 5, 7, 11, 13];\n\
    \    for (let i = 0; i < num.length; i++) {\n        if (prime.includes(hex.indexOf(num[i])))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('0F'));\n\
    console.log(hex_key('1A'));\nconsole.log(hex_key('2B'));\nconsole.log(hex_key('3C'));\n\
    console.log(hex_key('4D'));\nconsole.log(hex_key('5E'));\nconsole.log(hex_key('6F'));\n\
    console.log(hex_key('7A'));\nconsole.log(hex_key('8B'));\nconsole.log(hex_key('9C'));\n\
    console.log(hex_key('AD'));\nconsole.log(hex_key('BE'));\nconsole.log(hex_key('CF'));\n\
    console.log(hex_key('D0'));\nconsole.log(hex_key('E1'));\nconsole.log(hex_key('F2'));\n\
    console.log(hex_key('0A'));\nconsole.log(hex_key('1B'));\nconsole.log(hex_key('2C'));\n\
    console.log(hex_key('3D'));\nconsole.log(hex_key('4E'));\nconsole.log(hex_key('5F'));\n\
    console.log(hex_key('6A'));\nconsole.log(hex_key('7B'));\nconsole.log(hex_key('8C'));\n\
    console.log(hex_key('9D'));\nconsole.log(hex_key('AE'));\nconsole.log(hex_key('BF'));\n\
    console.log(hex_key('C0'));\nconsole.log(hex_", "    let count: number = 0;\n\
    \    let hex: string = \"0123456789ABCDEF\";\n    let hex_arr: string[] = hex.split(\"\
    \");\n    let hex_num: string[] = num.split(\"\");\n    for (let i: number = 0;\
    \ i < hex_num.length; i++) {\n        if (hex_arr.indexOf(hex_num[i]) % 2 != 0\
    \ && hex_arr.indexOf(hex_num[i]) != 0) {\n            count++;\n        }\n  \
    \  }\n    return count;\n}\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"\
    4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"\
    7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"\
    A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    1A\"));\nconsole.log(hex_key(\"2A3B4C\"));\nconsole.log(hex_key(\"FFF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole", "    let count = 0;\n    let hex = ['2', '3', '5', '7',\
    \ 'B', 'D'];\n    for (let i = 0; i < num.length; i++) {\n        if (hex.includes(num[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('BABA'));\n",
  "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let\
    \ hexArr: string[] = hex.split(\"\");\n    let hexNum: string[] = num.split(\"\
    \");\n    for (let i: number = 0; i < hexNum.length; i++) {\n        if (hexArr.indexOf(hexNum[i])\
    \ % 2 != 0 && hexArr.indexOf(hexNum[i]) != 0) {\n            count++;\n      \
    \  }\n    }\n    return count;\n}\nconsole.log(hex_key(\"1A2F3E4D\"));\nconsole.log(hex_key(\"\
    1A2F3E4D5C\"));\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"1234567890ABCDEF\"\
    ));\nconsole.log(hex_key(\"1234567890ABCDEF\"));\nconsole.log(hex_key(\"1A2F3E4D5C6B7A\"\
    ));\nconsole.log(hex_key(\"1A2F3E4D5C6B7A8\"));\nconsole.log(hex_key(\"1A2F3E4D5C6B7A8\"\
    ));\nconsole.log(hex_key(\"1A2F3E4D5C6B7A8\"));\nconsole.log(hex_key(\"1A2F3E4D5C6B7A8\"\
    ));\nconsole.log(hex_key(\"1A2F3E4D5C6B7A8\"));\nconsole.log(hex_key(\"1A2F3E4D5C6B7A8\"\
    ));\nconsole.log(hex_key(\"1A2F3E4D5C6B7A8\"));\nconsole.log(hex_key(\"1A2F3E4D5C6B7A8\"\
    ));\nconsole.log(hex_key(\"1A2F3E4D5C6B7A8\"));\nconsole.log(hex_key(\"1A2F3E4D5C6B7A8\"\
    ));\nconsole.log(hex_key(\"1A2F", "    let result: number = 0;\n    let arr: string[]\
    \ = num.split('');\n    for (let i: number = 0; i < arr.length; i++) {\n     \
    \   if (arr[i] === '2' || arr[i] === '3' || arr[i] === '5' || arr[i] === '7' ||\
    \ arr[i] === 'B' || arr[i] === 'D') {\n            result++;\n        }\n    }\n\
    \    return result;\n}\nconsole.log(hex_key('2A3F'));\nconsole.log(hex_key('F89D'));\n\
    console.log(hex_key('ABCDEFabcdef'));\n", "    let hex_primes = [2, 3, 5, 7, 11,\
    \ 13];\n    let hex_digits = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\
    \ 'A', 'B', 'C', 'D', 'E', 'F'];\n    let hex_dict = {};\n    for (let i = 0;\
    \ i < hex_digits.length; i++) {\n        hex_dict[hex_digits[i]] = hex_primes[i];\n\
    \    }\n    let count = 0;\n    for (let i = 0; i < num.length; i++) {\n     \
    \   if (hex_dict[num[i]]) {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('C'));\nconsole.log(hex_key('F'));\n\
    console.log(hex_key('1F'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFFF'));\nconsole.log(hex_key('FFFFF'));\nconsole.log(hex_key('FFFFFF'));\n\
    console.log(hex_key('FFFFFFF'));\nconsole.log(hex_key('FFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFF'));\n",
  "    let count = 0;\n    let hex = ['0', '1', '2', '3', '4', '5', '6', '7', '8',\
    \ '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let prime = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101,\
    \ 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181,\
    \ 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271,\
    \ 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373,\
    \ 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463,\
    \ 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577,\
    \ 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673,\
    \ 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787,\
    \ 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887,\
    \ 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];\n   \
    \ for (let i = 0; i < num.length; i++) {\n        if (hex.indexOf(num[i", "  \
    \  let count: number = 0;\n    let hex: string = '0123456789ABCDEF';\n    let\
    \ hex_prime: string = '2357BDF';\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_prime.indexOf(num[i]) !== -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('2A3B'));\nconsole.log(hex_key('FF'));\n\
    console.log(hex_key('1A2B3C4D5E6F'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('1234567890ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123456789ABCDEF'));\n\
    console.log(hex_key('123456789ABCDEF'));\nconsole.log(hex_key('123", "  const\
    \ hex_primes = [2, 3, 5, 7, 11, 13];\n  const hex_digits = [0, 1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n  let count = 0;\n \
    \ for (let i = 0; i < num.length; i++) {\n    if (hex_primes.includes(hex_digits.indexOf(num[i])))\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(hex_key(\"\"\
    ));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"\
    3\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"\
    6\"));\nconsole.log(hex_key(\"7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"\
    9\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"\
    C\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"\
    F\"));\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"2A3B\"));\nconsole.log(hex_key(\"\
    FFF\"));\nconsole.log(hex_key(\"FFFF\"));\nconsole.log(hex_key(\"ABCDEF\"));\n\
    console.log(hex_key(\"ABCDAEF\"));\nconsole.log(hex_key(\"BAAABAAA\"));\nconsole.log(hex_key(\"\
    BAAABAAABAAA\"));\nconsole.log(hex_key(\"BAAABAAABAAABAAA\"));\nconsole.log(hex_key(\"\
    BAAABAAABAAABAAABAAA\"));\nconsole.log(hex_key(\"BAAABAAABAAABAAABAAABAAA\"));\n\
    console.log(hex_key(\"", "    let count: number = 0;\n    let hex: string = \"\
    0123456789ABCDEF\";\n    let hex_num: string[] = num.split(\"\");\n    for (let\
    \ i: number = 0; i < hex_num.length; i++) {\n        if (hex.indexOf(hex_num[i])\
    \ % 2 != 0 && hex.indexOf(hex_num[i]) != 0 && hex.indexOf(hex_num[i]) != 1) {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    2A3E\"));\nconsole.log(hex_key(\"A0E\"));\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"\
    3\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"\
    6\"));\nconsole.log(hex_key(\"7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"\
    9\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"\
    C\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"\
    F\"));", "    let key: number = 0;\n    let hex: string = \"0123456789ABCDEF\"\
    ;\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex.indexOf(num[i])\
    \ % 2 === 1) {\n            key++;\n        }\n    }\n    return key;\n}\n\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"\
    3\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"\
    6\"));\nconsole.log(hex_key(\"7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"\
    9\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"\
    C\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"\
    F\"));\nconsole.log(hex_key(\"AA\"));\nconsole.log(hex_key(\"B8\"));\nconsole.log(hex_key(\"\
    CC\"));\nconsole.log(hex_key(\"DD\"));\nconsole.log(hex_key(\"EE\"));\nconsole.log(hex_key(\"\
    FF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"BADFACE\"));\n\
    console.log(hex_key(\"C0FFEE\"));\nconsole.log(hex_key(\"DEADBEEF\"));\nconsole.log(hex_key(\"\
    BEEFCAFE\"));\nconsole.log(hex_key(\"DEADBEEFDEADBEEF\"));\nconsole.log(hex_key(\"\
    BEEFCAFEBEEFCAFE\"));\nconsole.log(hex_key(\"DEADBEEFBEEFCAFE\"));\nconsole.log(hex_key(\"\
    BEEFCAFEDEADBEEF\"));\nconsole.log(hex_key(\"DE", "    let count = 0;\n    let\
    \ hex = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D',\
    \ 'E', 'F'];\n    let prime = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53];\n    for (let i = 0; i < num.length; i++) {\n        if (prime.includes(hex.indexOf(num[i])))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('1A'));\n\
    console.log(hex_key('21'));\nconsole.log(hex_key('F'));\nconsole.log(hex_key('FF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFFF'));\nconsole.log(hex_key('FFFFF'));\n\
    console.log(hex_key('FFFFFF'));\nconsole.log(hex_key('FFFFFFF'));\nconsole.log(hex_key('FFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFF",
  "    let count: number = 0;\n    const hex: string[] = ['0', '1', '2', '3', '4',\
    \ '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    const prime: string[]\
    \ = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (prime.includes(num[i])) {\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconsole.log(hex_key('1A2F'));\nconsole.log(hex_key('FFFF'));\n\
    console.log(hex_key('B'));\nconsole.log(hex_key('F'));\nconsole.log(hex_key('A'));\n\
    console.log(hex_key('0'));\nconsole.log(hex_key('C'));\nconsole.log(hex_key('D'));\n\
    console.log(hex_key('E'));\nconsole.log(hex_key('1'));\nconsole.log(hex_key('2'));\n\
    console.log(hex_key('3'));\nconsole.log(hex_key('4'));\nconsole.log(hex_key('5'));\n\
    console.log(hex_key('6'));\nconsole.log(hex_key('7'));\nconsole.log(hex_key('8'));\n\
    console.log(hex_key('9'));\nconsole.log(hex_key('10'));\nconsole.log(hex_key('11'));\n\
    console.log(hex_key('12'));\nconsole.log(hex_key('13'));\nconsole.log(hex_key('14'));\n\
    console.log(hex_key('15'));\nconsole.log(hex_key('16'));\nconsole.log(hex_key('17'));\n\
    console.log(hex_key('18'));\nconsole.log(hex_key('19'));\nconsole.log(hex_key('1A'));\n\
    console.log(hex_key('1B'));\nconsole", "    let result: number = 0;\n    let hex:\
    \ string = '0123456789ABCDEF';\n    let hex_primes: string = '2357BD';\n    for\
    \ (let i: number = 0; i < num.length; i++) {\n        if (hex_primes.indexOf(num[i])\
    \ > -1) {\n            result++;\n        }\n    }\n    return result;\n}\n\n\
    console.log(hex_key('F'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFFF'));\nconsole.log(hex_key('FFFFF'));\nconsole.log(hex_key('FFFFFF'));\n\
    console.log(hex_key('FFFFFFF'));\nconsole.log(hex_key('FFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log", "    let count:\
    \ number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let primes: number[]\
    \ = [2, 3, 5, 7, 11, 13];\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (primes.indexOf(hex.indexOf(num[i])) !== -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"\
    4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"\
    7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"\
    A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    AA\"));\nconsole.log(hex_key(\"B1\"));\nconsole.log(hex_key(\"B2\"));\nconsole.log(hex_key(\"\
    B3\"));\nconsole.log(hex_key(\"B4\"));\nconsole.log(hex_key(\"B5\"));\nconsole.log(hex_key(\"\
    B6\"));\nconsole.log(hex_key(\"B7\"));\nconsole.log(hex_key(\"B8\"));\nconsole.log(hex_key(\"\
    B9\"));\nconsole.log(hex_key(\"BA\"));\nconsole.log(hex_key(\"BB\"));\nconsole.log(hex_key(\"\
    BC\"));\nconsole.log(hex_key(\"BD\"));\nconsole.log(hex_key(\"BE\"));\nconsole.log(hex_key(\"\
    BF\"));\nconsole.log(hex_key(\"", "    let count: number = 0;\n    let hex: string\
    \ = '0123456789ABCDEF';\n    let hex_prime: string = '2357BDF';\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('1A'));\n\
    console.log(hex_key('7F'));\nconsole.log(hex_key('AC'));\nconsole.log(hex_key('39'));\n\
    console.log(hex_key('AB'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('CD'));\n\
    console.log(hex_key('EF'));\nconsole.log(hex_key('1AEF'));\nconsole.log(hex_key('BAC'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDEFABCDEF'));\n\
    console.log(hex_key('ABCDEFABCDEFABCDEF'));\nconsole.log(hex_key('ABCDEFABCDEFABCDEFABCDEF'));\n\
    console.log(hex_key('ABCDEFABCDEFABCDEFABCDEFABCDEF'));\nconsole.log(hex_key('ABCDEFABCDEFABCDEFABCDEFABCDEFABCDEF'));\n\
    console.log(hex_key('ABCDEFABCDEFABCDEFABCDEFABCDEFABCDEFABCDEF'));\nconsole.log(hex_key('ABCDEFABCDEFABCDEFABCDEFABCDEFABCDEFABCDEFABCDEF'));\n\
    console.log(hex_key('ABCDEFABCDEFABCDEFABCDEFABCDEFABCDEFABCDEFABCDEFABCDEF'));\n\
    console.log(hex_key('ABCDEFABCDEFABCDEFABCDEFABCDEFABCDEFABCDEFABCDEFABCDEFABCDEF'));\n\
    console.log(hex_key('ABCDE", "  let count = 0;\n  const hex = [\"2\", \"3\", \"\
    5\", \"7\", \"B\", \"D\"];\n  for (let i = 0; i < num.length; i++) {\n    if (hex.includes(num[i]))\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\nconsole.log(hex_key(\"2A3BE\"\
    ));\nconsole.log(hex_key(\"B1A122\"));\nconsole.log(hex_key(\"BAC\"));\n", " \
    \   let sum: number = 0;\n    let hex: string = '0123456789ABCDEF';\n    let hex_prime:\
    \ string = '2357BD';\n    for (let i: number = 0; i < num.length; i++) {\n   \
    \     for (let j: number = 0; j < hex_prime.length; j++) {\n            if (num[i]\
    \ === hex_prime[j]) {\n                sum++;\n            }\n        }\n    }\n\
    \    return sum;\n}\n\nconsole.log(hex_key('C578EF'));\nconsole.log(hex_key('C578EF'));\n\
    console.log(hex_key('C578EF'));\nconsole.log(hex_key('C578EF'));\nconsole.log(hex_key('C578EF'));\n\
    console.log(hex_key('C578EF'));\nconsole.log(hex_key('C578EF'));\nconsole.log(hex_key('C578EF'));\n\
    console.log(hex_key('C578EF'));\nconsole.log(hex_key('C578EF'));\nconsole.log(hex_key('C578EF'));\n\
    console.log(hex_key('C578EF'));\nconsole.log(hex_key('C578EF'));\nconsole.log(hex_key('C578EF'));\n\
    console.log(hex_key('C578EF'));\nconsole.log(hex_key('C578EF'));\nconsole.log(hex_key('C578EF'));\n\
    console.log(hex_key('C578EF'));\nconsole.log(hex_key('C578EF'));\nconsole.log(hex_key('C578EF'));\n\
    console.log(hex_key('C578EF'));\nconsole.log(hex_key('C578EF'));\nconsole.log(hex_key('C578EF'));\n\
    console.log(hex_key('C578EF'));\nconsole.log(hex_key('C578EF'));\nconsole.log(hex_key('C578EF'));\n\
    console.log(hex_key('C578EF'));\nconsole.log(hex_key('C578EF'));\nconsole", " \
    \   let hex_key: number = 0;\n    let hex_key_array: string[] = [\"2\", \"3\"\
    , \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++)\
    \ {\n        for (let j: number = 0; j < hex_key_array.length; j++) {\n      \
    \      if (num[i] === hex_key_array[j]) {\n                hex_key++;\n      \
    \      }\n        }\n    }\n    return hex_key;\n}\nconsole.log(hex_key(\"2A3AE\"\
    ));\nconsole.log(hex_key(\"A23B\"));\nconsole.log(hex_key(\"BAD\"));\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"\
    5\"));\nconsole.log(hex_key(\"7\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"\
    8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"\
    C\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    10\"));\nconsole.log(hex_key(\"11\"));\nconsole.log(hex_key(\"12\"));\nconsole.log(hex_key(\"\
    13\"));\nconsole.log(hex_key(\"14\"));\nconsole.log(hex_key(\"15\"));\nconsole.log(hex_key(\"\
    16\"));\nconsole.log(hex_key(\"17\"));\nconsole.log(hex_key(\"18\"));\nconsole.log(hex_key(\"\
    19\"));\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"1B\"));\nconsole.log(hex_key(\"\
    1C\"));\nconsole.log", "    let result: number = 0;\n    let hex: string = \"\
    0123456789ABCDEF\";\n    let hex_prime: string = \"2357BD\";\n    for (let i:\
    \ number = 0; i < num.length; i++) {\n        for (let j: number = 0; j < hex_prime.length;\
    \ j++) {\n            if (num[i] === hex_prime[j]) {\n                result++;\n\
    \            }\n        }\n    }\n    return result;\n}\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"\
    3\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"\
    6\"));\nconsole.log(hex_key(\"7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"\
    9\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"\
    C\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"\
    F\"));\nconsole.log(hex_key(\"10\"));\nconsole.log(hex_key(\"11\"));\nconsole.log(hex_key(\"\
    12\"));\nconsole.log(hex_key(\"13\"));\nconsole.log(hex_key(\"14\"));\nconsole.log(hex_key(\"\
    15\"));\nconsole.log(hex_key(\"16\"));\nconsole.log(hex_key(\"17\"));\nconsole.log(hex_key(\"\
    18\"));\nconsole.log(hex_key(\"19\"));\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"\
    1B\"));\nconsole.log(hex_key(\"1C\"));\nconsole.log(hex_key(\"1D\"));\nconsole.log(hex_key(\"\
    1E\"));\nconsole.log(hex_key(\"1F\"));\nconsole.log(hex", "    let hex_key: number\
    \ = 0;\n    let hex_key_arr: string[] = ['2', '3', '5', '7', 'B', 'D'];\n    for\
    \ (let i: number = 0; i < num.length; i++) {\n        if (hex_key_arr.indexOf(num[i])\
    \ != -1) {\n            hex_key++;\n        }\n    }\n    return hex_key;\n}\n\
    \nconsole.log(hex_key('1A'));\nconsole.log(hex_key('2100'));\nconsole.log(hex_key('EF'));\n\
    console.log(hex_key('CD'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFFF'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCDFFF'));\n\
    console.log(hex_key('FFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key", "  \
    \  let hex: string = \"0123456789ABCDEF\";\n    let primes: number[] = [2, 3,\
    \ 5, 7, 11, 13];\n    let count: number = 0;\n    for (let i: number = 0; i <\
    \ num.length; i++) {\n        if (primes.indexOf(hex.indexOf(num[i])) != -1) {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"\
    3\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"\
    6\"));\nconsole.log(hex_key(\"7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"\
    9\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"\
    C\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"\
    F\"));\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"2A\"));\nconsole.log(hex_key(\"\
    3A\"));\nconsole.log(hex_key(\"4A\"));\nconsole.log(hex_key(\"5A\"));\nconsole.log(hex_key(\"\
    6A\"));\nconsole.log(hex_key(\"7A\"));\nconsole.log(hex_key(\"8A\"));\nconsole.log(hex_key(\"\
    9A\"));\nconsole.log(hex_key(\"AA\"));\nconsole.log(hex_key(\"BA\"));\nconsole.log(hex_key(\"\
    CA\"));\nconsole.log(hex_key(\"DA\"));\nconsole.log(hex_key(\"EA\"));\nconsole.log(hex_key(\"\
    FA\"));\nconsole.log(hex_key(\"1B\"));\nconsole.log(hex_key(\"", "    let count:\
    \ number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let hex_prime:\
    \ string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_prime.indexOf(num[i]) > -1) {\n            count++;\n       \
    \ }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"\
    4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"\
    7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"\
    A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    10\"));\nconsole.log(hex_key(\"11\"));\nconsole.log(hex_key(\"12\"));\nconsole.log(hex_key(\"\
    13\"));\nconsole.log(hex_key(\"14\"));\nconsole.log(hex_key(\"15\"));\nconsole.log(hex_key(\"\
    16\"));\nconsole.log(hex_key(\"17\"));\nconsole.log(hex_key(\"18\"));\nconsole.log(hex_key(\"\
    19\"));\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"1B\"));\nconsole.log(hex_key(\"\
    1C\"));\nconsole.log(hex_key(\"1D\"));\nconsole.log(hex_key(\"1E\"));\nconsole.log(hex_key(\"\
    1F\"));\nconsole.log(hex_key(\"FEDCBA9876543210\"));\nconsole.log(hex", "    let\
    \ key: number = 0;\n    let hex_digits: string[] = ['0', '1', '2', '3', '4', '5',\
    \ '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let hex_primes: string[]\
    \ = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i = 0; i < num.length; i++)\
    \ {\n        for (let j = 0; j < hex_primes.length; j++) {\n            if (num[i]\
    \ === hex_primes[j]) {\n                key++;\n            }\n        }\n   \
    \ }\n    return key;\n}\nconsole.log(hex_key('A'));\nconsole.log(hex_key('B'));\n\
    console.log(hex_key('C'));\nconsole.log(hex_key('D'));\nconsole.log(hex_key('E'));\n\
    console.log(hex_key('F'));\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('2A'));\n\
    console.log(hex_key('3A'));\nconsole.log(hex_key('4A'));\nconsole.log(hex_key('5A'));\n\
    console.log(hex_key('6A'));\nconsole.log(hex_key('7A'));\nconsole.log(hex_key('8A'));\n\
    console.log(hex_key('9A'));\nconsole.log(hex_key('AA'));\nconsole.log(hex_key('BA'));\n\
    console.log(hex_key('CA'));\nconsole.log(hex_key('DA'));\nconsole.log(hex_key('EA'));\n\
    console.log(hex_key('FA'));\nconsole.log(hex_key('1B'));\nconsole.log(hex_key('2B'));\n\
    console.log(hex_key('3B'));\nconsole.log(hex_key('4B'));\nconsole.log(hex_key('5B'));\n\
    console.log(hex_key('6B", "    const hex_prime = ['2', '3', '5', '7', 'B', 'D'];\n\
    \    let count = 0;\n    for (let i = 0; i < num.length; i++) {\n        if (hex_prime.includes(num[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('2A3F'));\n\
    console.log(hex_key('F'));\nconsole.log(hex_key('AAABCCDDDD'));\n", "    let prime\
    \ = 0;\n    let hex = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A',\
    \ 'B', 'C', 'D', 'E', 'F'];\n    let primeHex = ['2', '3', '5', '7', 'B', 'D'];\n\
    \    for (let i = 0; i < num.length; i++) {\n        for (let j = 0; j < primeHex.length;\
    \ j++) {\n            if (num[i] === primeHex[j]) {\n                prime++;\n\
    \            }\n        }\n    }\n    return prime;\n}\nconsole.log(hex_key('1A'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('FEDCBA'));\nconsole.log(hex_key('AAABBB'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('AAABBB'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('AAABBB'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('AAABBB'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('AAABBB'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('AAABBB'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('AAABBB'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('AAABBB'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('AAABBB'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('AAABBB'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('AAABBB'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('AAABBB')", "    let count: number = 0;\n    let hex: string\
    \ = '0123456789ABCDEF';\n    let hex_arr: string[] = hex.split('');\n    let hex_primes:\
    \ string[] = ['2', '3', '5', '7', 'B', 'D'];\n    let num_arr: string[] = num.split('');\n\
    \    for (let i: number = 0; i < num_arr.length; i++) {\n        for (let j: number\
    \ = 0; j < hex_primes.length; j++) {\n            if (num_arr[i] === hex_primes[j])\
    \ {\n                count++;\n            }\n        }\n    }\n    return count;\n\
    }\nconsole.log(hex_key('2A3B'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('B1'));\n\
    console.log(hex_key('BACD'));\nconsole.log(hex_key('BACDEF'));\nconsole.log(hex_key('BACDEFF'));\n\
    console.log(hex_key('BACDEFFF'));\nconsole.log(hex_key('BACDEFFFF'));\nconsole.log(hex_key('BACDEFFFFF'));\n\
    console.log(hex_key('BACDEFFFFFF'));\nconsole.log(hex_key('BACDEFFFFFFF'));\n\
    console.log(hex_key('BACDEFFFFFFFF'));\nconsole.log(hex_key('BACDEFFFFFFFFF'));\n\
    console.log(hex_key('BACDEFFFFFFFFFF'));\nconsole.log(hex_key('BACDEFFFFFFFFFFF'));\n\
    console.log(hex_key('BACDEFFFFFFFFFFFF'));\nconsole.log(hex_key('BACDEFFFFFFFFFFFFF'));\n\
    console.log(hex_key('BACDEFFFFFFFFFFFFFF'));\nconsole.log(hex_key('BACDEFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('BACDEFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('BACDEFFFFFFFFFFFFFFFFF'));\n",
  "    let count = 0;\n    const hex = \"0123456789ABCDEF\";\n    const primes = [2,\
    \ 3, 5, 7, 11, 13];\n    for (let i = 0; i < num.length; i++) {\n        if (primes.includes(hex.indexOf(num[i])))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    2A3CF\"));\nconsole.log(hex_key(\"2A3CFF\"));\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    2A3CFFF\"));\nconsole.log(hex_key(\"2A3CFFF5\"));\nconsole.log(hex_key(\"2A3CFFF55\"\
    ));\nconsole.log(hex_key(\"2A3CFFF55F\"));\nconsole.log(hex_key(\"2A3CFFF55FF\"\
    ));\nconsole.log(hex_key(\"2A3CFFF55FFF\"));\nconsole.log(hex_key(\"2A3CFFF55FFFF\"\
    ));\nconsole.log(hex_key(\"2A3CFFF55FFFFF\"));\nconsole.log(hex_key(\"2A3CFFF55FFFFFF\"\
    ));\nconsole.log(hex_key(\"2A3CFFF55FFFFFFF\"));\nconsole.log(hex_key(\"2A3CFFF55FFFFFFFF\"\
    ));\nconsole.log(hex_key(\"2A3CFFF55FFFFFFFFF\"));\nconsole.log(hex_key(\"2A3CFFF55FFFFFFFFFF\"\
    ));\nconsole.log(hex_key(\"2A3CFFF55FFFFFFFFFFF\"));\nconsole.log(hex_key(\"2A3CFFF55FFFFFFFFFFFF\"\
    ));\nconsole.log(hex_key(\"2A3CFFF55FFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"\
    2A3CFFF55FFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"2A3CFFF55FFFFFFFFFFFFFFF\"\
    ));\nconsole.log(hex_key(\"2A3", "    let result: number = 0;\n    let hex: string\
    \ = \"0123456789ABCDEF\";\n    let hex_prime: string = \"2357BD\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ != -1) {\n            result++;\n        }\n    }\n    return result;\n}\n\n\
    console.log(hex_key(\"\"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"\
    2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"\
    5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"7\"));\nconsole.log(hex_key(\"\
    8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"\
    B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"\
    E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"10\"));\nconsole.log(hex_key(\"\
    11\"));\nconsole.log(hex_key(\"12\"));\nconsole.log(hex_key(\"13\"));\nconsole.log(hex_key(\"\
    14\"));\nconsole.log(hex_key(\"15\"));\nconsole.log(hex_key(\"16\"));\nconsole.log(hex_key(\"\
    17\"));\nconsole.log(hex_key(\"18\"));\nconsole.log(hex_key(\"19\"));\nconsole.log(hex_key(\"\
    1A\"));\nconsole.log(hex_key(\"1B\"));\nconsole.log(hex_key(\"1C\"));\nconsole.log(hex_key(\"\
    1D\"));\nconsole.log(hex_key(\"1E\"));\nconsole.log(hex_key(\"1F\"));\nconsole.log(hex_key(\"\
    20\"));\nconsole.log(hex_key(\"21\"));\nconsole", "    let count: number = 0;\n\
    \    let hex: string = \"0123456789ABCDEF\";\n    let prime: string = \"2357BDF\"\
    ;\n    for (let i: number = 0; i < num.length; i++) {\n        if (prime.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    console.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"7F\"));\nconsole.log(hex_key(\"\
    AC\"));\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"39A\"));\nconsole.log(hex_key(\"\
    FFF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDFFF\"));\n\
    console.log(hex_key(\"ABCDFFFF\"));\nconsole.log(hex_key(\"ABCDFFFFF\"));\nconsole.log(hex_key(\"\
    ABCDFFFFFF\"));\nconsole.log(hex_key(\"ABCDFFFFFFF\"));\nconsole.log(hex_key(\"\
    ABCDFFFFFFFF\"));\nconsole.log(hex_key(\"ABCDFFFFFFFFF\"));\nconsole.log(hex_key(\"\
    ABCDFFFFFFFFFF\"));\nconsole.log(hex_key(\"ABCDFFFFFFFFFFF\"));\nconsole.log(hex_key(\"\
    ABCDFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"ABCDFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"\
    ABCDFFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"ABCDFFFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"\
    ABCDFFFFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"ABCDFFFFFFFFFFFFFFFFF\"));\n\
    console.log(hex_key(\"ABCDFFFFFFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"ABCDFFFFFFFFFFFFFFFFFFF\"\
    ));\nconsole.log(hex_key(\"ABCDFFFFFFFFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"\
    ABCDFFFFFFFFFFFFFFFFFFFFF\"));\nconsole.log(hex_key(\"ABCDFFFFFFFF", "    let\
    \ count: number = 0;\n    const hex: string[] = ['0', '1', '2', '3', '4', '5',\
    \ '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    const prime: string[]\
    \ = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (prime.includes(num[i])) {\n            count++;\n      \
    \  }\n    }\n    return count;\n}\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('7F'));\n\
    console.log(hex_key('AC'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('1A2B3C4D'));\n\
    console.log(hex_key('1A2B3C4D5E6F'));\nconsole.log(hex_key('1A2B3C4D5E6F7G8H9I'));\n\
    console.log(hex_key('1A2B3C4D5E6F7G8H9I0J'));\nconsole.log(hex_key('1A2B3C4D5E6F7G8H9I0J1K2L3M4N5O6P7Q8R9S0T1U2V3W4X5Y6Z'));\n\
    console.log(hex_key('1A2B3C4D5E6F7G8H9I0J1K2L3M4N5O6P7Q8R9S0T1U2V3W4X5Y6Z7A8B9C0D1E2F3G4H5I6J7K8L9M0N1O2P3Q4R5S6T7U8V9W0X1Y2Z3A4B5C6D7E8F9G0H1I2J3K4L5M6N7O8P9Q0R1S2T",
  "    let hex_key = {\n        '0': 0,\n        '1': 1,\n        '2': 2,\n      \
    \  '3': 3,\n        '4': 4,\n        '5': 5,\n        '6': 6,\n        '7': 7,\n\
    \        '8': 8,\n        '9': 9,\n        'A': 10,\n        'B': 11,\n      \
    \  'C': 12,\n        'D': 13,\n        'E': 14,\n        'F': 15\n    }\n    return\
    \ hex_key[num];\n}\n", "    let hex_key: number = 0;\n    let hex_key_arr: string[]\
    \ = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i\
    \ < num.length; i++) {\n        for (let j: number = 0; j < hex_key_arr.length;\
    \ j++) {\n            if (num[i] === hex_key_arr[j]) {\n                hex_key++;\n\
    \            }\n        }\n    }\n    return hex_key;\n}\nconsole.log(hex_key(\"\
    2A3BE\"));\nconsole.log(hex_key(\"A23B\"));\nconsole.log(hex_key(\"BAD\"));\n\
    console.log(hex_key(\"\"));\n", "    let count: number = 0;\n    let hex: string\
    \ = \"0123456789ABCDEF\";\n    let prime: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (prime.indexOf(num[i]) !==\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    1A\"));\nconsole.log(hex_key(\"7F9A2B\"));\nconsole.log(hex_key(\"39A\"));\nconsole.log(hex_key(\"\
    B1A012\"));\nconsole.log(hex_key(\"\"));\n", "    let result: number = 0;\n  \
    \  let hex: string = '0123456789ABCDEF';\n    let hex_prime: string = '2357BD';\n\
    \    for (let i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ !== -1) {\n            result++;\n        }\n    }\n    return result;\n}\n\
    console.log(hex_key('1F'));\nconsole.log(hex_key('2F'));\nconsole.log(hex_key('3F'));\n\
    console.log(hex_key('4F'));\nconsole.log(hex_key('5F'));\nconsole.log(hex_key('6F'));\n\
    console.log(hex_key('7F'));\nconsole.log(hex_key('8F'));\nconsole.log(hex_key('9F'));\n\
    console.log(hex_key('AF'));\nconsole.log(hex_key('BF'));\nconsole.log(hex_key('CF'));\n\
    console.log(hex_key('DF'));\nconsole.log(hex_key('EF'));\nconsole.log(hex_key('FF'));\n\
    console.log(hex_key('1A'));\nconsole.log(hex_key('2A'));\nconsole.log(hex_key('3A'));\n\
    console.log(hex_key('4A'));\nconsole.log(hex_key('5A'));\nconsole.log(hex_key('6A'));\n\
    console.log(hex_key('7A'));\nconsole.log(hex_key('8A'));\nconsole.log(hex_key('9A'));\n\
    console.log(hex_key('AA'));\nconsole.log(hex_key('BA'));\nconsole.log(hex_key('CA'));\n\
    console.log(hex_key('DA'));\nconsole.log(hex_key('EA'));\nconsole.log(hex_key('FA'));\n\
    console.log(hex_key('1B'));\nconsole.log(hex_key('2B'));\nconsole.log(hex_key('3B",
  "    let hex = {\n        '0': 0,\n        '1': 1,\n        '2': 2,\n        '3':\
    \ 3,\n        '4': 4,\n        '5': 5,\n        '6': 6,\n        '7': 7,\n   \
    \     '8': 8,\n        '9': 9,\n        'A': 10,\n        'B': 11,\n        'C':\
    \ 12,\n        'D': 13,\n        'E': 14,\n        'F': 15\n    }\n    let count\
    \ = 0;\n    for (let i = 0; i < num.length; i++) {\n        if (hex[num[i]] ===\
    \ 2 || hex[num[i]] === 3 || hex[num[i]] === 5 || hex[num[i]] === 7 || hex[num[i]]\
    \ === 11 || hex[num[i]] === 13) {\n            count++;\n        }\n    }\n  \
    \  return count;\n}\nconsole.log(hex_key('2A3B'));\nconsole.log(hex_key('C0DE'));\n\
    console.log(hex_key('BADA55'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('ABCDEF'));\n\
    console.log(hex_key('ABC'));\nconsole.log(hex_key('123'));\nconsole.log(hex_key('1A2B3C'));\n\
    console.log(hex_key('DEADBEEF'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFFA'));\nconsole.log(hex_key('FFFAA'));\nconsole.log(hex_key('FFFAAA'));\n\
    console.log(hex_key('FFFAAAA'));\nconsole.log(hex_key('FFFAAAAA'));\nconsole.log(hex_key('FFFAAAAAA'));\n\
    console.log(hex_key('FFFAAAAAAA'));\nconsole.log(hex_key('FFFAAAAAAAA'));\nconsole.log(hex_key('FFFAAAAAAAAA'));\n\
    console.log(hex_key('FFF", "    let hex_primes = ['2', '3', '5', '7', 'B', 'D'];\n\
    \    let count = 0;\n    for (let i = 0; i < num.length; i++) {\n        if (hex_primes.includes(num[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('C0FFEE'));\n\
    console.log(hex_key('F0F0F0'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('DEADBEEF'));\n\
    console.log(hex_key('BADA55'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('CAFEBABE'));\n\
    console.log(hex_key('BABECAFE'));\nconsole.log(hex_key('DEADBEEF'));\nconsole.log(hex_key('BEEFDEAD'));\n\
    console.log(hex_key('DEADBEEF'));\nconsole.log(hex_key('BEEFDEAD'));\nconsole.log(hex_key('DEADBEEF'));\n\
    console.log(hex_key('BEEFDEAD'));\nconsole.log(hex_key('DEADBEEF'));\nconsole.log(hex_key('BEEFDEAD'));\n\
    console.log(hex_key('DEADBEEF'));\nconsole.log(hex_key('BEEFDEAD'));\nconsole.log(hex_key('DEADBEEF'));\n\
    console.log(hex_key('BEEFDEAD'));\nconsole.log(hex_key('DEADBEEF'));\nconsole.log(hex_key('BEEFDEAD'));\n\
    console.log(hex_key('DEADBEEF'));\nconsole.log(hex_key('BEEFDEAD'));\nconsole.log(hex_key('DEADBEEF'));\n\
    console.log(hex_key('BEEFDEAD'));\nconsole.log(hex_key('DEADBEEF'));\nconsole",
  "    const hex_digits = {\n        '0': 0,\n        '1': 1,\n        '2': 2,\n \
    \       '3': 3,\n        '4': 4,\n        '5': 5,\n        '6': 6,\n        '7':\
    \ 7,\n        '8': 8,\n        '9': 9,\n        'A': 10,\n        'B': 11,\n \
    \       'C': 12,\n        'D': 13,\n        'E': 14,\n        'F': 15\n    }\n\
    \    let count = 0;\n    for (let i = 0; i < num.length; i++) {\n        if (hex_digits[num[i]]\
    \ === 2 || hex_digits[num[i]] === 3 || hex_digits[num[i]] === 5 || hex_digits[num[i]]\
    \ === 7 || hex_digits[num[i]] === 11 || hex_digits[num[i]] === 13) {\n       \
    \     count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('FF'));\nconsole.log(hex_key('1A2B3C4D5E6F'));", "    let\
    \ hex_key: number = 0;\n    let hex_key_arr: string[] = ['2', '3', '5', '7', 'B',\
    \ 'D'];\n    for (let i: number = 0; i < num.length; i++) {\n        for (let\
    \ j: number = 0; j < hex_key_arr.length; j++) {\n            if (num[i] === hex_key_arr[j])\
    \ {\n                hex_key++;\n            }\n        }\n    }\n    return hex_key;\n\
    }\nconsole.log(hex_key('C'));\nconsole.log(hex_key('CD'));\nconsole.log(hex_key('EF'));\n\
    console.log(hex_key('1AE3'));\nconsole.log(hex_key('ABCDEF'));\n", "    const\
    \ hex = {\n        '0': 0,\n        '1': 1,\n        '2': 2,\n        '3': 3,\n\
    \        '4': 4,\n        '5': 5,\n        '6': 6,\n        '7': 7,\n        '8':\
    \ 8,\n        '9': 9,\n        'A': 10,\n        'B': 11,\n        'C': 12,\n\
    \        'D': 13,\n        'E': 14,\n        'F': 15\n    }\n    let count = 0;\n\
    \    for (let i = 0; i < num.length; i++) {\n        if (hex[num[i]] === 2 ||\
    \ hex[num[i]] === 3 || hex[num[i]] === 5 || hex[num[i]] === 7 || hex[num[i]] ===\
    \ 11 || hex[num[i]] === 13) {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('21'));\nconsole.log(hex_key('EF'));\n\
    console.log(hex_key('CD'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFFF'));\nconsole.log(hex_key('FFFFF'));\nconsole.log(hex_key('FFFFFF'));\n\
    console.log(hex_key('FFFFFFF'));\nconsole.log(hex_key('FFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFF'));\n",
  "    let count = 0;\n    let hex = ['0', '1', '2', '3', '4', '5', '6', '7', '8',\
    \ '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let primes = [2, 3, 5, 7, 11, 13];\n\
    \    for (let i = 0; i < num.length; i++) {\n        if (primes.includes(hex.indexOf(num[i])))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('2A3B'));\n\
    console.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFF", "  let count = 0;\n  const hex = ['2', '3', '5', '7',\
    \ 'B', 'D'];\n  for (let i = 0; i < num.length; i++) {\n    if (hex.includes(num[i]))\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(hex_key('F'));\n\
    console.log(hex_key('2A'));\nconsole.log(hex_key('3AE'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('ABCDEF'));\nconsole.log(hex_key('ABCD2EF'));\nconsole.log(hex_key('ABCD23EF'));\n\
    console.log(hex_key('B1CDEF'));\nconsole.log(hex_key('BACDEF'));\nconsole.log(hex_key('AA22BB'));\n\
    console.log(hex_key('BACD22EF'));\nconsole.log(hex_key('BACD22FF'));\nconsole.log(hex_key('BACD2F22'));\n\
    console.log(hex_key('BACD2F2F'));\nconsole.log(hex_key('BACD2F2F'));\nconsole.log(hex_key('BACD2F2F'));\n\
    console.log(hex_key('BACD2F2F'));\nconsole.log(hex_key('BACD2F2F'));\nconsole.log(hex_key('BACD2F2F'));\n\
    console.log(hex_key('BACD2F2F'));\nconsole.log(hex_key('BACD2F2F'));\nconsole.log(hex_key('BACD2F2F'));\n\
    console.log(hex_key('BACD2F2F'));\nconsole.log(hex_key('BACD2F2F'));\nconsole.log(hex_key('BACD2F2F'));\n\
    console.log(hex_key('BACD2F2F'));\nconsole.log(hex_key('BAC", "    let count:\
    \ number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let hex_primes:\
    \ string = \"2357BD\";\n    for (let i: number = 0; i < num.length; i++) {\n \
    \       if (hex_primes.indexOf(num[i]) !== -1) {\n            count++;\n     \
    \   }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"\
    7F\"));\nconsole.log(hex_key(\"AC\"));\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    39A\"));\nconsole.log(hex_key(\"FFF\"));\nconsole.log(hex_key(\"ABCDEF\"));\n\
    console.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    ));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"\
    ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEF\"\
    )", "    let hex_key = {\n        \"0\": 0,\n        \"1\": 1,\n        \"2\"\
    : 2,\n        \"3\": 3,\n        \"4\": 4,\n        \"5\": 5,\n        \"6\":\
    \ 6,\n        \"7\": 7,\n        \"8\": 8,\n        \"9\": 9,\n        \"A\":\
    \ 10,\n        \"B\": 11,\n        \"C\": 12,\n        \"D\": 13,\n        \"\
    E\": 14,\n        \"F\": 15\n    }\n    let count = 0;\n    for (let i = 0; i\
    \ < num.length; i++) {\n        if (hex_key[num[i]] === 2 || hex_key[num[i]] ===\
    \ 3 || hex_key[num[i]] === 5 || hex_key[num[i]] === 7 || hex_key[num[i]] === 11\
    \ || hex_key[num[i]] === 13) {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"\
    21\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"\
    F\"));\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"2A3B\"));\nconsole.log(hex_key(\"\
    FFF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"ABCDEFabcdef\"\
    ));\n", "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\"\
    ;\n    let primes: string = \"2357BD\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (primes.indexOf(num[i]) > -1) {\n            count++;\n \
    \       }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"\
    4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"\
    7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"\
    A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    10\"));\nconsole.log(hex_key(\"11\"));\nconsole.log(hex_key(\"12\"));\nconsole.log(hex_key(\"\
    13\"));\nconsole.log(hex_key(\"14\"));\nconsole.log(hex_key(\"15\"));\nconsole.log(hex_key(\"\
    16\"));\nconsole.log(hex_key(\"17\"));\nconsole.log(hex_key(\"18\"));\nconsole.log(hex_key(\"\
    19\"));\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"1B\"));\nconsole.log(hex_key(\"\
    1C\"));\nconsole.log(hex_key(\"1D\"));\nconsole.log(hex_key(\"1E\"));\nconsole.log(hex_key(\"\
    1F\"));\nconsole.log(hex_key(\"20\"));\nconsole.log(hex_key(\"21\"));\nconsole.log(",
  "    let hex_key: string = '2357BDF';\n    let count: number = 0;\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) >\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('2A3F'));\n\
    console.log(hex_key('FBA'));\nconsole.log(hex_key('FFFF'));\nconsole.log(hex_key('ABCDEF'));\n",
  "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    let\
    \ primes: string = \"2357BD\";\n    for (let i: number = 0; i < num.length; i++)\
    \ {\n        if (primes.indexOf(num[i]) !== -1) {\n            count++;\n    \
    \    }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"\
    4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"\
    7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"\
    A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"\
    D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"\
    10\"));\nconsole.log(hex_key(\"11\"));\nconsole.log(hex_key(\"12\"));\nconsole.log(hex_key(\"\
    13\"));\nconsole.log(hex_key(\"14\"));\nconsole.log(hex_key(\"15\"));\nconsole.log(hex_key(\"\
    16\"));\nconsole.log(hex_key(\"17\"));\nconsole.log(hex_key(\"18\"));\nconsole.log(hex_key(\"\
    19\"));\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"1B\"));\nconsole.log(hex_key(\"\
    1C\"));\nconsole.log(hex_key(\"1D\"));\nconsole.log(hex_key(\"1E\"));\nconsole.log(hex_key(\"\
    1F\"));\nconsole.log(hex_key(\"20\"));\nconsole.log(hex_key(\"21\"));\nconsole.",
  "    let count: number = 0;\n    let hex: string = \"0123456789ABCDEF\";\n    for\
    \ (let i: number = 0; i < num.length; i++) {\n        if (hex.indexOf(num[i])\
    \ % 2 === 1) {\n            count++;\n        }\n    }\n    return count;\n}\n\
    \nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"\
    2\"));\nconsole.log(hex_key(\"3\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"\
    5\"));\nconsole.log(hex_key(\"6\"));\nconsole.log(hex_key(\"7\"));\nconsole.log(hex_key(\"\
    8\"));\nconsole.log(hex_key(\"9\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"\
    B\"));\nconsole.log(hex_key(\"C\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"\
    E\"));\nconsole.log(hex_key(\"F\"));\nconsole.log(hex_key(\"1A\"));\nconsole.log(hex_key(\"\
    2B\"));\nconsole.log(hex_key(\"3C\"));\nconsole.log(hex_key(\"4D\"));\nconsole.log(hex_key(\"\
    5E\"));\nconsole.log(hex_key(\"6F\"));\nconsole.log(hex_key(\"7A\"));\nconsole.log(hex_key(\"\
    8B\"));\nconsole.log(hex_key(\"9C\"));\nconsole.log(hex_key(\"AD\"));\nconsole.log(hex_key(\"\
    BE\"));\nconsole.log(hex_key(\"CF\"));\nconsole.log(hex_key(\"D0\"));\nconsole.log(hex_key(\"\
    E1\"));\nconsole.log(hex_key(\"F2\"));\nconsole.log(hex_key(\"1A2B3C4D5E6F7A8B9CADBECF\"\
    ));\nconsole.log(hex_key(\"D0E1F", "    let count: number = 0;\n    let hex: string\
    \ = \"0123456789ABCDEF\";\n    let hex_prime: string = \"2357BD\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ > -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    \"));\nconsole.log(hex_key(\"1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"\
    3\"));\nconsole.log(hex_key(\"4\"));\nconsole.log(hex_key(\"5\"));\nconsole.log(hex_key(\"\
    6\"));\nconsole.log(hex_key(\"7\"));\nconsole.log(hex_key(\"8\"));\nconsole.log(hex_key(\"\
    9\"));\nconsole.log(hex_key(\"A\"));\nconsole.log(hex_key(\"B\"));\nconsole.log(hex_key(\"\
    C\"));\nconsole.log(hex_key(\"D\"));\nconsole.log(hex_key(\"E\"));\nconsole.log(hex_key(\"\
    F\"));\nconsole.log(hex_key(\"AA\"));\nconsole.log(hex_key(\"B8\"));\nconsole.log(hex_key(\"\
    CC\"));\nconsole.log(hex_key(\"DD\"));\nconsole.log(hex_key(\"EE\"));\nconsole.log(hex_key(\"\
    FF\"));\nconsole.log(hex_key(\"ABCDEF\"));\nconsole.log(hex_key(\"BADDAD\"));\n\
    console.log(hex_key(\"DEADBEEF\"));\nconsole.log(hex_key(\"FFEEDDCCBBAA\"));\n\
    console.log(hex_key(\"ABCDEFEDCBA\"));\nconsole.log(hex_key(\"BAADF00DBAADF00D\"\
    ));\nconsole.log(hex_key(\"123456789ABCDEF\"));\nconsole.log(hex_key(\"BADCAFEBADCAFE\"\
    ));\nconsole.log(hex_key(\"DEADBEEFDEADBEEF", "    let result: number = 0;\n \
    \   let hex: string = \"0123456789ABCDEF\";\n    let hex_arr: string[] = num.split(\"\
    \");\n    for (let i: number = 0; i < hex_arr.length; i++) {\n        if (hex.indexOf(hex_arr[i])\
    \ % 2 !== 0 && hex.indexOf(hex_arr[i]) !== 0) {\n            result++;\n     \
    \   }\n    }\n    return result;\n}\n\nconsole.log(hex_key(\"\"));\nconsole.log(hex_key(\"\
    1\"));\nconsole.log(hex_key(\"2\"));\nconsole.log(hex_key(\"21\"));\nconsole.log(hex_key(\"\
    CD\"));\nconsole.log(hex_key(\"E1\"));\nconsole.log(hex_key(\"FEDCBA\"));\n",
  "    let hex_digits: string[] = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\
    \ 'A', 'B', 'C', 'D', 'E', 'F'];\n    let hex_primes: string[] = ['2', '3', '5',\
    \ '7', 'B', 'D'];\n    let count: number = 0;\n    for (let i = 0; i < num.length;\
    \ i++) {\n        if (hex_primes.includes(num[i])) {\n            count++;\n \
    \       }\n    }\n    return count;\n}\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('244F'));\n\
    console.log(hex_key('B'));\nconsole.log(hex_key('F'));\nconsole.log(hex_key('FF'));\n\
    console.log(hex_key('1A2B'));\nconsole.log(hex_key('1A2B3C'));\nconsole.log(hex_key('1A2B3C4D'));\n\
    console.log(hex_key('1A2B3C4D5E'));\nconsole.log(hex_key('1A2B3C4D5E6F'));\nconsole.log(hex_key('1A2B3C4D5E6F7'));\n\
    console.log(hex_key('1A2B3C4D5E6F7A'));\nconsole.log(hex_key('1A2B3C4D5E6F7A8'));\n\
    console.log(hex_key('1A2B3C4D5E6F7A8B'));\nconsole.log(hex_key('1A2B3C4D5E6F7A8B9'));\n\
    console.log(hex_key('1A2B3C4D5E6F7A8B9C'));\nconsole.log(hex_key('1A2B3C4D5E6F7A8B9CAD'));\n\
    console.log(hex_key('1A2B3C", "    let hex = {\n        '0': 0,\n        '1':\
    \ 1,\n        '2': 2,\n        '3': 3,\n        '4': 4,\n        '5': 5,\n   \
    \     '6': 6,\n        '7': 7,\n        '8': 8,\n        '9': 9,\n        'A':\
    \ 10,\n        'B': 11,\n        'C': 12,\n        'D': 13,\n        'E': 14,\n\
    \        'F': 15\n    }\n    let count = 0;\n    for (let i = 0; i < num.length;\
    \ i++) {\n        if (hex[num[i]] === 2 || hex[num[i]] === 3 || hex[num[i]] ===\
    \ 5 || hex[num[i]] === 7 || hex[num[i]] === 11 || hex[num[i]] === 13) {\n    \
    \        count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key('2A3F'));\n\
    console.log(hex_key('F885'));\nconsole.log(hex_key('A78B5'));\nconsole.log(hex_key('0123456789ABCDEF'));\n\
    console.log(hex_key('FEDCBA9876543210'));\nconsole.log(hex_key(''));\n", "   \
    \ let count = 0;\n    let hex = ['0', '1', '2', '3', '4', '5', '6', '7', '8',\
    \ '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let prime = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53];\n    for (let i = 0; i < num.length; i++)\
    \ {\n        if (hex.indexOf(num[i]) !== -1) {\n            count += prime[hex.indexOf(num[i])];\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key('1F'));\nconsole.log(hex_key('C'));\n\
    console.log(hex_key('1AE3'));\nconsole.log(hex_key('FFFFFFFFFF'));\nconsole.log(hex_key('ABCDEFabcdef'));\n\
    console.log(hex_key('ABCD'));\nconsole.log(hex_key('FF'));\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('FFFF'));\nconsole.log(hex_key('FFFFF'));\nconsole.log(hex_key('FFFFFF'));\n\
    console.log(hex_key('FFFFFFF'));\nconsole.log(hex_key('FFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('FFFFFFFFFFFFFFFFFF'));\n\
    console.log(hex_key('FFFFFFFFFFFFFFFFFFF'));\nconsole.log(hex_key('", "  let result:\
    \ number = 0;\n  let arr: string[] = num.split('');\n  for (let i: number = 0;\
    \ i < arr.length; i++) {\n    if (arr[i] === '2' || arr[i] === '3' || arr[i] ===\
    \ '5' || arr[i] === '7' || arr[i] === 'B' || arr[i] === 'D') {\n      result++;\n\
    \    }\n  }\n  return result;\n}\nconsole.log(hex_key('1A'));\nconsole.log(hex_key('21F'));\n\
    console.log(hex_key('FFFF'));\n", "    let count: number = 0;\n    let hex: string\
    \ = '0123456789ABCDEF';\n    let primes: string = '2357BD';\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        if (primes.indexOf(num[i]) !== -1) {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('FFF'));\n\
    console.log(hex_key('C'));\nconsole.log(hex_key('ABCDEF'));\nconsole.log(hex_key('CD'));\n\
    console.log(hex_key('A'));\nconsole.log(hex_key('B'));\nconsole.log(hex_key('C'));\n\
    console.log(hex_key('D'));\nconsole.log(hex_key('E'));\nconsole.log(hex_key('F'));\n\
    console.log(hex_key('0'));\nconsole.log(hex_key('1'));\nconsole.log(hex_key('2'));\n\
    console.log(hex_key('3'));\nconsole.log(hex_key('4'));\nconsole.log(hex_key('5'));\n\
    console.log(hex_key('6'));\nconsole.log(hex_key('7'));\nconsole.log(hex_key('8'));\n\
    console.log(hex_key('9'));\nconsole.log(hex_key('A'));\nconsole.log(hex_key('B'));\n\
    console.log(hex_key('C'));\nconsole.log(hex_key('D'));\nconsole.log(hex_key('E'));\n\
    console.log(hex_key('F'));\nconsole.log(hex_key('10'));\nconsole.log(hex_key('11'));\n\
    console.log(hex_key('12'));\nconsole.log(hex_key('13'));\nconsole.log(hex_key('14'));\n\
    console.log(hex_key('15'));\nconsole.log(hex_key('16'));\nconsole.log(hex_key('17'));\n\
    console.log(hex"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

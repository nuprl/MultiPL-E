name: HumanEval_128_prod_signs
language: ts
prompt: "//You are given an array arr of integers and you need to return\n// sum of\
  \ magnitudes of integers multiplied by product of all signs\n// of each number in\
  \ the array, represented by 1, -1 or 0.\n// Note: return None for empty arr.\n//\
  \ Example:\nfunction prod_signs(arr: number[]): number | undefined {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = prod_signs;\n  assert.deepEqual(candidate([1, 2, 2,\
  \ -4]),-9);\n  assert.deepEqual(candidate([0, 1]),0);\n  assert.deepEqual(candidate([1,\
  \ 1, 1, 2, 3, -1, 1]),-10);\n  assert.deepEqual(candidate([]),undefined);\n  assert.deepEqual(candidate([2,\
  \ 4, 1, 2, -1, -1, 9]),20);\n  assert.deepEqual(candidate([-1, 1, -1, 1]),4);\n\
  \  assert.deepEqual(candidate([-1, 1, 1, 1]),-4);\n  assert.deepEqual(candidate([-1,\
  \ 1, 1, 0]),0);\n}\n\ntest();"
completions: ["    if (arr.length === 0) {\n        return undefined;\n    }\n   \
    \ let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n\
    \        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n\
    \    return sum * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([0, 0, 0, 0, 0]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += Math.abs(arr[i]);\n            prod *= -1;\n\
    \        } else {\n            prod *= 0;\n        }\n    }\n    return sum *\
    \ prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n\
    \    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        if (arr[i] > 0) {\n            sum += arr[i];\n            prod *=\
    \ 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n    \
    \        prod *= -1;\n        } else {\n            prod *= 0;\n        }\n  \
    \  }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, -4, -5, 0]));\n\
    console.log(prod_signs([]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0]));\n\
    console.log(prod_signs([-1, -2, -3, -4, -5, -6]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5, 6]));\nconsole.log(prod_signs([1, 2, 3, 4, 5, 0]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5, -6]));\nconsole.log(prod_signs([1, 2, 3, 4, 5, -6, 0]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5, -6, 0, 0]));\nconsole.log(prod_signs([1, 2, 3, 4, 5, -6, 0, 0, 0]));\n\
    console.log(prod_signs([1, 2, 3, 4, 5, -6, 0, 0, 0, 0]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5, -6, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([1, 2, 3, 4, 5, -6,\
    \ 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_sign", "    if (arr.length === 0) return\
    \ undefined;\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\n\
    console.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3,\
    \ 4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([]));\n",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 5]));\nconsole.log(prod_signs([-1, -2, -3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n\
    \        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n     \
    \   prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\n", "  if (arr.length === 0)\
    \ return undefined;\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n      prod *= 1;\n    }\
    \ else if (arr[i] < 0) {\n      sum += Math.abs(arr[i]);\n      prod *= -1;\n\
    \    } else {\n      prod *= 0;\n    }\n  }\n  return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5, 6]));\nconsole.log(prod_signs([1, 2, 3, -4, -5, 0]));\nconsole.log(prod_signs([]));\n",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([])); // undefined\nconsole.log(prod_signs([1,\
    \ 2, 3])); // 18\nconsole.log(prod_signs([-1, -2, -3])); // 18\nconsole.log(prod_signs([-1,\
    \ 2, -3])); // -18\nconsole.log(prod_signs([1, -2, 3])); // -18\nconsole.log(prod_signs([-1,\
    \ 2, 3])); // -18\nconsole.log(prod_signs([1, -2, -3])); // 18\nconsole.log(prod_signs([0,\
    \ -2, -3])); // 0\nconsole.log(prod_signs([0, -2, 3])); // 0\nconsole.log(prod_signs([0,\
    \ 2, 3])); // 0\nconsole.log(prod_signs([0, 2, -3])); // 0\nconsole.log(prod_signs([0,\
    \ 0, 0])); // 0\nconsole.log(prod_signs([-1, 0, 0])); // 0\nconsole.log(prod_signs([1,\
    \ 0, 0])); // 0\nconsole.log(prod_signs([-1, 0, 1])); // 0\nconsole.log(prod_signs([1,\
    \ 0, -1])); // 0\nconsole.log(prod_signs([-1, 0, -1])); // 0\nconsole.log(prod_signs([1,\
    \ 0, 1])); // 0\nconsole.log(prod_signs([-1, -1, -1])); // 3\nconsole.log(prod_signs([1,\
    \ 1, 1])); // 3\nconsole.log", "  if (arr.length === 0) return undefined;\n  let\
    \ sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] > 0) {\n      sum += arr[i];\n      prod *= 1;\n    } else if (arr[i]\
    \ < 0) {\n      sum += arr[i] * -1;\n      prod *= -1;\n    } else {\n      prod\
    \ *= 0;\n    }\n  }\n  return sum * prod;\n}\n\nconsole.log(prod_signs([1, 2,\
    \ 3, 4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([0, 0,\
    \ 0, 0, 0]));\n", "  if (arr.length === 0) return undefined;\n  let sum = 0;\n\
    \  let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n    sum += Math.abs(arr[i]);\n\
    \    prod *= Math.sign(arr[i]);\n  }\n  return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5])); // -120\nconsole.log(prod_signs([1, 2, 3, 4, 5])); // 120\n\
    console.log(prod_signs([0, 1, 2, 3, 4, 5])); // 0\nconsole.log(prod_signs([]));\
    \ // undefined", "    if (arr.length === 0) {\n        return undefined;\n   \
    \ }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n            prod\
    \ *= 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\n\
    console.log(prod_signs([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\nconsole.log(prod_signs([]));\n\
    console.log(prod_signs([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0, 0]));\nconsole.log(prod_signs([-1, -2,\
    \ -3, -4, -5, 0, 1, 2, 3, 4, 5, 0, 0, 0]));", "    if (arr.length === 0) {\n \
    \       return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n     \
    \   prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([-1, -2, -3, 4, -5]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum: number\
    \ = 0;\n    let prod: number = 1;\n    for (let i: number = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n            prod\
    \ *= 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, -4, 5]));\n\
    console.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2,\
    \ 3, 4, 5]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n \
    \       return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n     \
    \   prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(prod_signs([-1, -2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, -5]));\nconsole.log(prod_signs([1, 2, 3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, -3, -4, -5]));\nconsole.log(prod_signs([1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0]));\n\
    console.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5,\
    \ 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0)\
    \ return undefined;\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n            prod *= -1;\n        } else {\n            prod *=\
    \ 0;\n        }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 0, -5]));\nconsole.log(prod_signs([-1, -2, -3, 0, 5]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) return undefined;\n    let prod = 1;\n    let sum = 0;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n     \
    \       prod *= 1;\n            sum += arr[i];\n        } else if (arr[i] < 0)\
    \ {\n            prod *= -1;\n            sum += Math.abs(arr[i]);\n        }\
    \ else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n\
    \nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, -2, -3,\
    \ -4, -5]));\nconsole.log(prod_signs([1, -2, 3, -4, 5]));\nconsole.log(prod_signs([0,\
    \ -2, 3, -4, 5]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0,\
    \ 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5,\
    \ 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0,\
    \ 0, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0, 0, 0,\
    \ 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\n\
    console.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\n\
    console.log(prod_signs([-1, -2", "  if (arr.length === 0) return undefined;\n\
    \  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n \
    \   sum += Math.abs(arr[i]);\n    prod *= Math.sign(arr[i]);\n  }\n  return sum\
    \ * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n   \
    \ }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-3, -4, -5]));\n\
    console.log(prod_signs([-3, -4, -5, 0]));\nconsole.log(prod_signs([-3, -4, -5,\
    \ 0, 0]));\nconsole.log(prod_signs([-3, -4, -5, 0, 0, 0]));\nconsole.log(prod_signs([-3,\
    \ -4, -5, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3, -4, -5, 0, 0, 0, 0, 0]));\n\
    console.log(prod_signs([-3, -4, -5, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3,\
    \ -4, -5, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3, -4, -5, 0, 0, 0,\
    \ 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3, -4, -5, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0]));\nconsole.log(prod_signs([-3, -4, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\n\
    console.log(prod_signs([-3, -4, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3,\
    \ -4, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", "    if (arr.length === 0) {\n      \
    \  return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n        prod\
    \ *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\n", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n      \
    \      sum += arr[i];\n            prod *= 1;\n        } else if (arr[i] < 0)\
    \ {\n            sum += arr[i] * -1;\n            prod *= -1;\n        } else\
    \ {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([0,\
    \ -1, -2, -3, -4, -5]));\nconsole.log(prod_signs([]));\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let prod = 1;\n    let sum =\
    \ 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            prod *=\
    \ -1;\n        } else {\n            prod *= 0;\n        }\n        sum += Math.abs(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, -4, -5,\
    \ -6]));\nconsole.log(prod_signs([-1, -2, -3, 4, 5, 6]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 0, 5, 6]));\nconsole.log(prod_signs([]));", "    if (arr.length ===\
    \ 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] !== 0) {\n   \
    \         sum += Math.abs(arr[i]);\n            prod *= Math.sign(arr[i]);\n \
    \       }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3,\
    \ -4, -5, -6]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, -6]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5, 6]));\nconsole.log(prod_signs([-1, -2, -3, 4, 5, 6]));\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, 5, 6]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 6]));\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5, 6]));\nconsole.log(prod_signs([-1, -2, -3, 4, 5, -6]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5, -6]));\nconsole.log(prod_signs([-1, -2, -3, -4, 5, -6]));\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, 5, -6]));\nconsole.log(prod_signs([-1, -2, -3, 4, -5, -6]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, -5, -6]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, -6]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5, 6]));\nconsole", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n            prod\
    \ *= 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\n\
    console.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3,\
    \ 4, -5]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([0, 0, 0, 0,\
    \ 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0]));", "   \
    \ if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if\
    \ (arr[i] === 0) {\n            continue;\n        }\n        sum += Math.abs(arr[i]);\n\
    \        product *= Math.sign(arr[i]);\n    }\n    return sum * product;\n}\n\n\
    console.log(prod_signs([1, 2, 3, -4]));\nconsole.log(prod_signs([-1, -2, -3, 4]));\n\
    console.log(prod_signs([-1, -2, -3, 0]));\nconsole.log(prod_signs([]));", "  \
    \  if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([-3, -4, 5]));\nconsole.log(prod_signs([-3,\
    \ -4, -5]));\nconsole.log(prod_signs([-3, 4, -5]));\nconsole.log(prod_signs([]));\n\
    console.log(prod_signs([0, 0, 0]));\nconsole.log(prod_signs([-3, 0, -5]));\nconsole.log(prod_signs([-3,\
    \ 0, -5, 0]));\nconsole.log(prod_signs([-3, 0, -5, 0, 0]));\nconsole.log(prod_signs([-3,\
    \ 0, -5, 0, 0, 0]));\nconsole.log(prod_signs([-3, 0, -5, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3,\
    \ 0, -5, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3, 0, -5, 0, 0, 0, 0, 0,\
    \ 0]));\nconsole.log(prod_signs([-3, 0, -5, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3,\
    \ 0, -5, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3, 0, -5, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3, 0, -5, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0]));\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] < 0) {\n            prod *= -1;\n\
    \        } else if (arr[i] > 0) {\n            prod *= 1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += Math.abs(arr[i]);\n    }\n\
    \    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\n\
    console.log(prod_signs([-1, -2, -3, -4, 5]));\nconsole.log(prod_signs([-1, -2,\
    \ -3, 4, 5]));\nconsole.log(prod_signs([-1, -2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, -5]));\nconsole.log(prod_signs([1, 2, 3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, -3, -4, -5]));\nconsole.log(prod_signs([1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0]));\n\
    console.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0, 0, 0, 0]));\nconsole.log(prod", "    if (arr.length === 0)\
    \ return undefined;\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n            prod *= -1;\n        } else {\n            prod *=\
    \ 0;\n        }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, -5]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([]));", "  if (arr.length === 0) return\
    \ undefined;\n  let prodSigns = 1;\n  let sumMagnitudes = 0;\n  for (let i = 0;\
    \ i < arr.length; i++) {\n    if (arr[i] > 0) {\n      prodSigns *= 1;\n     \
    \ sumMagnitudes += arr[i];\n    } else if (arr[i] < 0) {\n      prodSigns *= -1;\n\
    \      sumMagnitudes += arr[i] * -1;\n    } else {\n      prodSigns *= 0;\n  \
    \  }\n  }\n  return sumMagnitudes * prodSigns;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5, -6]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, -6]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, -6, 0]));\nconsole.log(prod_signs([]));\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, 3, -4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 5]));\nconsole.log(prod_signs([-1, -2, -3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([]));\n", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-2,\
    \ -3, 4, -5]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([-2, -3,\
    \ 4, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0", "    if (arr.length === 0) {\n        return undefined;\n    }\n\
    \    let prod = 1;\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        if (arr[i] > 0) {\n            prod *= 1;\n        } else if (arr[i]\
    \ < 0) {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += Math.abs(arr[i]);\n    }\n    return sum * prod;\n\
    }\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([0, 0, 0, 0, 0]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\n",
  "  if (arr.length === 0) return undefined;\n  let sum = 0;\n  let prod = 1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] === 0) {\n      sum += 0;\n\
    \      prod *= 1;\n    } else if (arr[i] > 0) {\n      sum += arr[i];\n      prod\
    \ *= 1;\n    } else {\n      sum += Math.abs(arr[i]);\n      prod *= -1;\n   \
    \ }\n  }\n  return sum * prod;\n}\n", "    if (arr.length == 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\n\
    console.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3,\
    \ 4, -5]));\nconsole.log(prod_signs([]));\n", "    let sum = 0;\n    let prod\
    \ = 1;\n    if (arr.length === 0) {\n        return undefined;\n    }\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum\
    \ += arr[i];\n            prod *= 1;\n        } else if (arr[i] < 0) {\n     \
    \       sum += arr[i] * -1;\n            prod *= -1;\n        } else {\n     \
    \       prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([0, 0,\
    \ 0, 0, 0]));\nconsole.log(prod_signs([-1, 0, -2, 0, -3]));\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n\
    \            sum += arr[i];\n            prod *= 1;\n        } else if (arr[i]\
    \ < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n        }\
    \ else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n\
    \nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2,\
    \ 3, 4, 5]));\nconsole.log(prod_signs([0, 1, 2, 3, 4, 5]));\nconsole.log(prod_signs([]));\n",
  "  if (arr.length === 0) return undefined;\n  let prod = 1;\n  let sum = 0;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    sum += Math.abs(arr[i]);\n    if (arr[i]\
    \ !== 0) prod *= Math.sign(arr[i]);\n  }\n  return sum * prod;\n}\n", "    if\
    \ (arr.length === 0) {\n        return undefined;\n    }\n    let prod = 1;\n\
    \    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            prod *= 1;\n        } else if (arr[i] < 0) {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += Math.abs(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5, 6]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, -6]));\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5, -6]));\nconsole.log(prod_signs([-1, 2, 3, -4, -5, 6]));\nconsole.log(prod_signs([1,\
    \ -2, 3, -4, -5, 6]));\nconsole.log(prod_signs([1, 2, 3, -4, 5, 6]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5, 6]));\nconsole.log(prod_signs([1, 2, 3, 4, 5, -6]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, -5, -6]));\nconsole.log(prod_signs([1, 2, 3, -4, -5, -6]));\nconsole.log(prod_signs([1,\
    \ -2, 3, -4, -5, -6]));\nconsole.log(prod_signs([-1, -2, 3, -4, -5, -6]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4", "    if (arr.length === 0) {\n        return undefined;\n    }\n\
    \    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        if (arr[i] === 0) {\n            continue;\n        }\n        sum\
    \ += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return\
    \ sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 0, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, 0, -5, 0]));\n\
    console.log(prod_signs([-1, -2, -3, -4, 0, -5, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 0, -5, 0, 0, 0]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 0, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, 0, 5, 0]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 0, 5, 0, 0]));\nconsole.log(prod_signs([1, 2, 3, 4, 0, 5, 0, 0, 0]));",
  "  if (arr.length === 0) return undefined;\n  let sum = 0;\n  let prod = 1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    sum += Math.abs(arr[i]);\n    prod *=\
    \ Math.sign(arr[i]);\n  }\n  return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\n", "  if (arr.length === 0)\
    \ return undefined;\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n      prod *= 1;\n    }\
    \ else if (arr[i] < 0) {\n      sum += arr[i] * -1;\n      prod *= -1;\n    }\
    \ else if (arr[i] === 0) {\n      prod *= 0;\n    }\n  }\n  return sum * prod;\n\
    }\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0]));\n\
    console.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5,\
    \ 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0,\
    \ 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0, 0, 0]));\n\
    console.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_sign", "  if\
    \ (arr.length === 0) return undefined;\n  let sum = 0;\n  let prod = 1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n\
    \      prod *= 1;\n    } else if (arr[i] < 0) {\n      sum += Math.abs(arr[i]);\n\
    \      prod *= -1;\n    } else {\n      prod *= 0;\n    }\n  }\n  return sum *\
    \ prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, -2, 3, -4, 5]));\nconsole.log(prod_signs([]));\n",
  "    if (arr.length === 0) return undefined;\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ -2, 3, -4, 5]));\nconsole.log(prod_signs([]));\n", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([]));\n", "    let prod = 1;\n    let\
    \ sum = 0;\n    if (arr.length === 0) {\n        return undefined;\n    }\n  \
    \  for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === 0) {\n     \
    \       prod *= 1;\n        } else if (arr[i] > 0) {\n            prod *= 1;\n\
    \            sum += arr[i];\n        } else {\n            prod *= -1;\n     \
    \       sum += arr[i];\n        }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 1, 2, 3,\
    \ 4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0]));\n\
    console.log(prod_signs([]));\nconsole.log(prod_signs([0, 0, 0, 0, 0]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5, 0, -1, -2, -3, -4, -5]));\n\
    console.log(prod_signs([1, 2, 3, 4, 5, 0, -1, -2, -3, -4, -5, 0]));", "    if\
    \ (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n \
    \   let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\n\
    console.log(prod_signs([0, 0, 0, 0, 0]));\nconsole.log(prod_signs([0, 0, 0, 0,\
    \ 1]));\nconsole.log(prod_signs([0, 0, 0, 0, -1]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 1, -1]));\nconsole.log(prod_signs([0, 0, 1, -1, -1]));\nconsole.log(prod_signs([0,\
    \ 1, -1, -1, -1]));\nconsole.log(prod_signs([1, -1, -1, -1, -1]));", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(prod_signs([-1, -2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, -5]));\nconsole.log(prod_signs([-1, 2, -3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, 0]));\nconsole.log(prod_signs([-1, 2, -3, 0, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, 0, 4, 5]));\nconsole.log(prod_signs([-1, 0, -3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3, 4, 5]));\nconsole.log(prod_sign",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([-1, -2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, 3, 4, 5, 0]));\nconsole.log(prod_signs([-1, -2, 3, 4, 5, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, 3, 4, 5, 0, 0, 0]));\nconsole.log(prod_signs([]));\n", "  if (arr.length\
    \ === 0) return undefined;\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0;\
    \ i < arr.length; i++) {\n    if (arr[i] === 0) continue;\n    sum += Math.abs(arr[i]);\n\
    \    prod *= Math.sign(arr[i]);\n  }\n  return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5, -6]));\nconsole.log(prod_signs([1, 2, 3, -4, -5, -6, 0, 0, 0]));\n\
    console.log(prod_signs([0, 0, 0]));\nconsole.log(prod_signs([]));\n", "    if\
    \ (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n \
    \   let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4,\
    \ -5, 0, 1, 2, 3, 4, 5, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0,\
    \ 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4,\
    \ -5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0]));", "    if (arr.length === 0) return\
    \ undefined;\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n            prod\
    \ *= 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\n\
    console.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1, -2, 3, -4,\
    \ 5]));\nconsole.log(prod_signs([0, -2, 3, -4, 5]));\nconsole.log(prod_signs([]));",
  "  if (arr.length === 0) return undefined;\n  let sum = 0;\n  let prod = 1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    sum += Math.abs(arr[i]);\n    prod *=\
    \ Math.sign(arr[i]);\n  }\n  return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5]));\nconsole.log(prod_signs([]));\n", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(prod_signs([-1, -2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) return undefined;\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === 0) continue;\n\
    \        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n\
    \    return sum * prod;\n}\n", "  if (arr.length === 0) return undefined;\n  let\
    \ sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] === 0) continue;\n    sum += Math.abs(arr[i]);\n    prod *= Math.sign(arr[i]);\n\
    \  }\n  return sum * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([]));\n", "    if\
    \ (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n \
    \   let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 5]));\nconsole.log(prod_signs([-1, -2, -3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5]));\nconsole.log(prod_signs([1, 2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) return undefined;\n    const sum = arr.reduce((acc, curr)\
    \ => acc + Math.abs(curr), 0);\n    const prod = arr.reduce((acc, curr) => acc\
    \ * Math.sign(curr), 1);\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3])); // 6\nconsole.log(prod_signs([-1, -2, -3])); // 6\nconsole.log(prod_signs([1,\
    \ -2, 3])); // -6\nconsole.log(prod_signs([-1, 2, -3])); // -6\nconsole.log(prod_signs([1,\
    \ 0, -3])); // -3\nconsole.log(prod_signs([-1, 0, 3])); // 3\nconsole.log(prod_signs([0,\
    \ 0, 0])); // 0\nconsole.log(prod_signs([])); // None\n", "    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n\nconsole.log(prod_signs([1, 2, 3, -4, -5, -6]));\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5, -6, 0]));\nconsole.log(prod_signs([]));", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -1, 1, 1, 1]));\nconsole.log(prod_signs([-1, -1, 1, 1, 1, 0, 10]));\nconsole.log(prod_signs([]));\n",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\n",
  "    if (arr.length === 0) return undefined;\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n     \
    \       sum += arr[i];\n            prod *= 1;\n        } else if (arr[i] < 0)\
    \ {\n            sum += arr[i] * -1;\n            prod *= -1;\n        } else\
    \ {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-2,\
    \ -3, 4, -5]));\nconsole.log(prod_signs([-2, -3, 4, -5, 0]));\nconsole.log(prod_signs([]));\n",
  "    if (arr.length === 0) return undefined;\n    let sum = 0;\n    let product\
    \ = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n\
    \            sum += arr[i];\n            product *= 1;\n        } else if (arr[i]\
    \ < 0) {\n            sum += Math.abs(arr[i]);\n            product *= -1;\n \
    \       } else {\n            product *= 0;\n        }\n    }\n    return sum\
    \ * product;\n}\n\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([0, 1, 2, 3, 4, 5]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n\nconsole.log(prod_signs([1, 2, 3, -1, -2, -3]));\nconsole.log(prod_signs([-1,\
    \ -2, -3]));\nconsole.log(prod_signs([1, 2, 3]));\nconsole.log(prod_signs([]));\n",
  "  if (arr.length === 0) return undefined;\n  let prod = 1;\n  let sum = 0;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] === 0) {\n      prod *= 1;\n\
    \      sum += 0;\n    } else if (arr[i] > 0) {\n      prod *= 1;\n      sum +=\
    \ arr[i];\n    } else {\n      prod *= -1;\n      sum += Math.abs(arr[i]);\n \
    \   }\n  }\n  return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4,\
    \ -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(prod_signs([]));\n", "    if (arr.length ===\
    \ 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n\
    \        return undefined;\n    }\n    let sum = 0;\n    let product = 1;\n  \
    \  for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        product *= Math.sign(arr[i]);\n    }\n    return sum * product;\n}\n\n\
    console.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2,\
    \ 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let prod = 1;\n\
    \    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            prod *= 1;\n        } else if (arr[i] < 0) {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += Math.abs(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([1, -2, 3, -4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, -4, 0]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if\
    \ (arr[i] > 0) {\n            sum += arr[i];\n            product *= 1;\n    \
    \    } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n            product\
    \ *= -1;\n        } else {\n            product *= 0;\n        }\n    }\n    return\
    \ sum * product;\n}\n\nconsole.log(prod_signs([-3, -4, -5]));\nconsole.log(prod_signs([-3,\
    \ -4, -5, 0]));\nconsole.log(prod_signs([-3, -4, -5, 0, 0]));\nconsole.log(prod_signs([-3,\
    \ -4, -5, 0, 0, 0]));\nconsole.log(prod_signs([-3, -4, -5, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3,\
    \ -4, -5, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3, -4, -5, 0, 0, 0, 0, 0,\
    \ 0]));\nconsole.log(prod_signs([-3, -4, -5, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3,\
    \ -4, -5, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3, -4, -5, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3, -4, -5, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3, -4, -5, 0, 0, 0, 0, 0, 0", " \
    \ if (arr.length === 0) return undefined;\n  let sum = 0;\n  let prod = 1;\n \
    \ for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      sum +=\
    \ arr[i];\n      prod *= 1;\n    } else if (arr[i] < 0) {\n      sum += Math.abs(arr[i]);\n\
    \      prod *= -1;\n    } else {\n      prod *= 0;\n    }\n  }\n  return sum *\
    \ prod;\n}\n\nconsole.log(prod_signs([1, 2, 3]));\nconsole.log(prod_signs([-1,\
    \ 2, 3]));\nconsole.log(prod_signs([-1, -2, 3]));\nconsole.log(prod_signs([-1,\
    \ -2, -3]));\nconsole.log(prod_signs([1, -2, 3]));\nconsole.log(prod_signs([1,\
    \ -2, -3]));\nconsole.log(prod_signs([1, 2, -3]));\nconsole.log(prod_signs([-1,\
    \ 2, -3]));\nconsole.log(prod_signs([-1, -2, -3]));\nconsole.log(prod_signs([0,\
    \ 0, 0]));\nconsole.log(prod_signs([0, 0, 1]));\nconsole.log(prod_signs([0, 0,\
    \ -1]));\nconsole.log(prod_signs([0, 1, -1]));\nconsole.log(prod_signs([0, -1,\
    \ -1]));\nconsole.log(prod_signs([1, -1, -1]));\nconsole.log(prod_signs([-1, -1,\
    \ -1]));\nconsole.log(prod_signs([-1, -1, 1]));\nconsole.log(prod_signs([-1, 1,\
    \ 1]));\nconsole.log(prod_signs([1, 1, 1]));\nconsole.log(prod_sign", "    if\
    \ (arr.length === 0) {\n        return undefined;\n    }\n    let sum: number\
    \ = 0;\n    let prod: number = 1;\n    for (let i: number = 0; i < arr.length;\
    \ i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\n\
    console.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0, 1, 2, 3,\
    \ 4, 5]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n    \
    \    return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum +=\
    \ arr[i];\n            prod *= 1;\n        } else if (arr[i] < 0) {\n        \
    \    sum += arr[i] * -1;\n            prod *= -1;\n        } else {\n        \
    \    prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0,\
    \ -1, -2, -3, -4, -5]));\nconsole.log(prod_signs([]));\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, -5]));\nconsole.log(prod_signs([-1, -2, 3, 4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5]));\nconsole.log(prod_signs([1, 2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, -5]));\nconsole.log(prod_signs([1, 2, 3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, -3, -4, -5]));\nconsole.log(prod_signs([1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(pro", "  if (arr.length === 0) return undefined;\n\
    \  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n \
    \   sum += Math.abs(arr[i]);\n    prod *= Math.sign(arr[i]);\n  }\n  return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, -2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([]));", "  if (arr.length === 0)\
    \ return undefined;\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    sum += Math.abs(arr[i]);\n    prod *= Math.sign(arr[i]);\n  }\n\
    \  return sum * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, -4, 5]));\nconsole.log(prod_signs([]));\n\
    console.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2,\
    \ 3, 4, 5]));\nconsole.log(prod_signs([0, 0, 0, 0, 0]));\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(prod_signs([-1, -2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([]));\n",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let prod = 1;\n\
    \    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            prod *= 1;\n        } else if (arr[i] < 0) {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += Math.abs(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, -5]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n\
    \        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n     \
    \   prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([0, 0,\
    \ 0, 0, 0]));", "  if (arr.length === 0) return undefined;\n  let sum = 0;\n \
    \ let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0)\
    \ {\n      sum += arr[i];\n      prod *= 1;\n    } else if (arr[i] < 0) {\n  \
    \    sum += Math.abs(arr[i]);\n      prod *= -1;\n    } else {\n      prod *=\
    \ 0;\n    }\n  }\n  return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3,\
    \ -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(prod_signs([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5, 6, -7, 8, -9, 10]));\n\
    console.log(prod_signs([-1, 2, -3, 4, -5, 6, -7, 8, -9, 10, 0]));\nconsole.log(prod_signs([]));\n",
  "  if (arr.length === 0) return undefined;\n  let sum = 0;\n  let prod = 1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] === 0) {\n      continue;\n\
    \    } else if (arr[i] > 0) {\n      sum += arr[i];\n    } else {\n      sum +=\
    \ Math.abs(arr[i]);\n      prod *= -1;\n    }\n  }\n  return sum * prod;\n}\n\n\
    console.log(prod_signs([-2, -3, 4, 0, -5]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([-1, -2, 3, 4, -5]));\nconsole.log(prod_signs([-1,\
    \ 2, 3, 4, -5]));\nconsole.log(prod_signs([-1, 2, -3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, 3, 4, 5]));\nconsole.log(prod_signs([1, -2, 3, 4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 0]));\nconsole.log(prod_signs([0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 0]));\nconsole.log(prod_signs([1, 2, 3, 4, 0]));\nconsole.log(prod_signs([0,\
    \ -2, -", "    if (arr.length === 0) return undefined;\n    let sum = 0;\n   \
    \ let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  \
    \  let sum = 0;\n    let prod = 1;\n    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += Math.abs(arr[i]);\n            prod *= -1;\n\
    \        } else {\n            prod *= 0;\n        }\n    }\n    return sum *\
    \ prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, -4, -5, -6]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, -6]));\nconsole.log(prod_signs([1, 2, 3, 4, 5, 6]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, 5, 6]));\nconsole.log(prod_signs([-1, -2, -3, 0, 5, 6]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let prod = 1;\n    let sum = 0;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === 0) {\n    \
    \        continue;\n        }\n        prod *= Math.sign(arr[i]);\n        sum\
    \ += Math.abs(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([-1, -2, -3, 4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, 2, -3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, -4, 5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([-1, -2, -3, 4, -5]));\nconsole", " \
    \   if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ === 0) {\n            continue;\n        }\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([-1, -2, 3, 4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,", "    if (arr.length\
    \ === 0) return undefined;\n    let sum = 0;\n    let prod = 1;\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum +=\
    \ arr[i];\n            prod *= 1;\n        } else if (arr[i] < 0) {\n        \
    \    sum += Math.abs(arr[i]);\n            prod *= -1;\n        } else {\n   \
    \         prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5, -6]));\nconsole.log(prod_signs([1, 2, 3, -4, -5, -6, 0]));\nconsole.log(prod_signs([]));\n\
    console.log(prod_signs([0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, -2,\
    \ -3, -4, -5, -6]));\nconsole.log(prod_signs([1, 2, 3, 4, 5, 6]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, 5, 6]));\nconsole.log(prod_signs([1, 2, 3, -4, -5, 6]));\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, 5, -6]));\nconsole.log(prod_signs([1, 2, 3, -4, 5, -6, 0]));\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, 5, -6, 0, 0]));\nconsole.log(prod_signs([1, 2, 3, -4, 5, -6, 0, 0,\
    \ 0]));\nconsole.log(prod_signs([1, 2, 3, -4, 5, -6, 0, 0, 0, 0]));\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, 5, -6, 0", "  if (arr.length === 0) return undefined;\n  let prod\
    \ = 1;\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ > 0) {\n      prod *= 1;\n      sum += arr[i];\n    } else if (arr[i] < 0) {\n\
    \      prod *= -1;\n      sum += arr[i] * -1;\n    } else {\n      prod *= 0;\n\
    \    }\n  }\n  return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4,\
    \ -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, -5]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n\
    \        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n     \
    \   prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ -2, 3, -4, 5]));\nconsole.log(prod_signs([]));", "  if (arr.length === 0) return\
    \ undefined;\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n      prod *= 1;\n    }\
    \ else if (arr[i] < 0) {\n      sum += arr[i] * -1;\n      prod *= -1;\n    }\
    \ else {\n      prod *= 0;\n    }\n  }\n  return sum * prod;\n}\n\nconsole.log(prod_signs([-3,\
    \ -4, 5]));\nconsole.log(prod_signs([-3, -4, 0, 5]));\nconsole.log(prod_signs([]));\n",
  "    if (arr.length === 0) return undefined;\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n     \
    \       sum += arr[i];\n            prod *= 1;\n        } else if (arr[i] < 0)\
    \ {\n            sum += Math.abs(arr[i]);\n            prod *= -1;\n        }\
    \ else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n\
    \nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2,\
    \ 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n\
    \        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n     \
    \   prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\n", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < 0) {\n      \
    \      prod *= -1;\n        } else if (arr[i] > 0) {\n            prod *= 1;\n\
    \        } else {\n            prod *= 0;\n        }\n        sum += Math.abs(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\n\
    console.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([1, 2, 3,\
    \ 4, 5]));\nconsole.log(prod_signs([0, 0, 0, 0, 0]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([]));",
  "  if (arr.length === 0) return undefined;\n  let sum = 0;\n  let prod = 1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n\
    \      prod *= 1;\n    } else if (arr[i] < 0) {\n      sum += arr[i] * -1;\n \
    \     prod *= -1;\n    } else {\n      prod *= 0;\n    }\n  }\n  return sum *\
    \ prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n\
    \    let prod = 1;\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        if (arr[i] > 0) {\n            prod *= 1;\n        } else if (arr[i]\
    \ < 0) {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += Math.abs(arr[i]);\n    }\n    return sum * prod;\n\
    }\n\nconsole.log(prod_signs([1, 2, 3, -4, -5, -6]));\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5, -6, 0]));\nconsole.log(prod_signs([1, 2, 3, -4, -5, -6, 0, 0]));\n\
    console.log(prod_signs([]));\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let product = 1;\n    for (let i =\
    \ 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n        product\
    \ *= Math.sign(arr[i]);\n    }\n    return sum * product;\n}\n\nconsole.log(prod_signs([-3,\
    \ -4, -5]));\nconsole.log(prod_signs([-3, -4, -5, 0]));\nconsole.log(prod_signs([-3,\
    \ -4, -5, 0, 0]));\nconsole.log(prod_signs([-3, -4, -5, 0, 0, 0]));\nconsole.log(prod_signs([-3,\
    \ -4, -5, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3, -4, -5, 0, 0, 0, 0, 0]));\n\
    console.log(prod_signs([-3, -4, -5, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3,\
    \ -4, -5, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3, -4, -5, 0, 0, 0,\
    \ 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3, -4, -5, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0]));\nconsole.log(prod_signs([-3, -4, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\n\
    console.log(prod_signs([-3, -4, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-3,\
    \ -4, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", "    if (arr.length === 0) return undefined;\n\
    \    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        if (arr[i] === 0) {\n            continue;\n        }\n        sum\
    \ += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return\
    \ sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, -5]));\nconsole.log(prod_signs([0, 0, 0, 0, 0]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ === 0) {\n            continue;\n        }\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 5]));\nconsole.log(prod_signs([-1, -2, -3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5]));\nconsole.log(prod_signs([1, 2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n\
    \        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n     \
    \   prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, -4]));\nconsole.log(prod_signs([-1, -2, -3, -4]));\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, 0]));\nconsole.log(prod_signs([]));\n", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n\
    \        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n     \
    \   prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, 5]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) return\
    \ undefined;\n    let prod = 1;\n    let sum = 0;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] === 0) {\n            prod *= 1;\n            sum\
    \ += 0;\n        } else if (arr[i] > 0) {\n            prod *= 1;\n          \
    \  sum += arr[i];\n        } else {\n            prod *= -1;\n            sum\
    \ += Math.abs(arr[i]);\n        }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(prod_signs([-1, -2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, -5]));\nconsole.log(prod_signs([1, 2, 3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, -3, -4, -5]));\nconsole.log(prod_signs([1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([]));", "    if (arr.length\
    \ === 0) return undefined;\n    let sum = 0;\n    let prod = 1;\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum +=\
    \ arr[i];\n            prod *= 1;\n        } else if (arr[i] < 0) {\n        \
    \    sum += Math.abs(arr[i]);\n            prod *= -1;\n        } else {\n   \
    \         prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([]));\n", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ -2, 3, -4, 5]));\nconsole.log(prod_signs([]));\n", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let prod = 1;\n    let sum = 0;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n      \
    \      prod *= 1;\n        } else if (arr[i] < 0) {\n            prod *= -1;\n\
    \        } else {\n            prod *= 0;\n        }\n        sum += Math.abs(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\n\
    console.log(prod_signs([-1, -2, -3, -4, 5]));\nconsole.log(prod_signs([1, 2, 3,\
    \ 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, -5]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([]));\n", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let sum = 0;\n    let product = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        product *= Math.sign(arr[i]);\n    }\n    return sum * product;\n}\n\n\
    console.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2,\
    \ -3, -4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, -5]));\nconsole.log(prod_signs([0, 0, 0, 0, 0]));\nconsole.log(prod_signs([]));",
  "  if (arr.length === 0) return undefined;\n  let sum = 0;\n  let prod = 1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n\
    \      prod *= 1;\n    } else if (arr[i] < 0) {\n      sum += Math.abs(arr[i]);\n\
    \      prod *= -1;\n    } else {\n      prod *= 0;\n    }\n  }\n  return sum *\
    \ prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5])); // 30\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 5])); // -30\nconsole.log(prod_signs([-1, -2, -3, 4, 5])); // -30\n\
    console.log(prod_signs([-1, -2, 3, 4, 5])); // -30\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5])); // 30\nconsole.log(prod_signs([1, 2, 3, 4, -5])); // -30\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5])); // -30\nconsole.log(prod_signs([1, 2, -3, -4, -5])); // -30\n\
    console.log(prod_signs([1, -2, -3, -4, -5])); // 30\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 0])); // 0\nconsole.log(prod_signs([-1, -2, -3, 0, -5])); // 0\n\
    console.log(prod_signs([-1, -2, 0, -4, -5])); // 0\nconsole.log(prod_signs([-1,\
    \ 0, -3, -4, -5])); // 0\nconsole.log(prod_signs([0, -2, -3, -", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0,\
    \ 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5,\
    \ 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0,\
    \ 0, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0, 0, 0,\
    \ 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\n\
    console.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\n\
    console.log(prod_signs([-1, -2", "  if (arr.length === 0) return undefined;\n\
    \  let sum = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] > 0) {\n      sum += arr[i];\n      product *= 1;\n    } else\
    \ if (arr[i] < 0) {\n      sum += arr[i] * -1;\n      product *= -1;\n    } else\
    \ {\n      product *= 0;\n    }\n  }\n  return sum * product;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5, -6]));\nconsole.log(prod_signs([0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        let\
    \ sign = Math.sign(arr[i]);\n        sum += Math.abs(arr[i]);\n        product\
    \ *= sign;\n    }\n    return sum * product;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0)\
    \ return undefined;\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n            prod *= -1;\n        } else {\n            prod *=\
    \ 0;\n        }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, -5]));\nconsole.log(prod_signs([1, 2, 3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, -3, -4, -5]));\nconsole.log(prod_signs([1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 0]));\nconsole.log(prod_signs([-1, -2, -3, 0, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, 0, -4, -5]));\nconsole.log(prod_signs([-1, 0, -3, -4, -5]));\nconsole.log(prod_signs([0,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([0, 0, 0, 0, 0]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 5]));\nconsole.log(prod_signs([-1, -2, -3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([]));\n", "  if (arr.length === 0) return\
    \ undefined;\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n      prod *= 1;\n    }\
    \ else if (arr[i] < 0) {\n      sum += arr[i] * -1;\n      prod *= -1;\n    }\
    \ else {\n      prod *= 0;\n    }\n  }\n  return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5, 6]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, -6]));\nconsole.log(prod_signs([1, 2, 3, 4, 5, 6]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, 5, 6]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 6]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0]));\nconsole.log(prod_signs([0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0, 1]));\nconsole.log(prod_signs([0, 0, 0, 0, 0, -1]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0, -1]));\nconsole.log(prod_signs([0, 0, 0, 0, 0, -1]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0, -1]));\nconsole.log(prod_signs([0, 0, 0, 0, 0, -1]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0, -1]));\nconsole", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let prod = 1;\n    let sum = 0;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] === 0) {\n            continue;\n        }\n    \
    \    prod *= Math.sign(arr[i]);\n        sum += Math.abs(arr[i]);\n    }\n   \
    \ return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 5]));\nconsole.log(prod_signs([-1, -2, -3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5]));\nconsole.log(prod_signs([1, 2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", "  if (arr.length === 0) return undefined;\n\
    \  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n \
    \   sum += Math.abs(arr[i]);\n    prod *= Math.sign(arr[i]);\n  }\n  return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\n",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\n",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 5]));\nconsole.log(prod_signs([-1, -2, -3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([]));\n", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([0, 0, 0, 0, 0]));\nconsole.log(prod_signs([]));\n",
  "  let sum = 0;\n  let prod = 1;\n  if (arr.length === 0) {\n    return undefined;\n\
    \  }\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      sum\
    \ += arr[i];\n      prod *= 1;\n    } else if (arr[i] < 0) {\n      sum += arr[i]\
    \ * -1;\n      prod *= -1;\n    } else {\n      prod *= 0;\n    }\n  }\n  return\
    \ sum * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, -4, -5, 6]));\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5, 6, 0]));\nconsole.log(prod_signs([]));\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(prod_signs([-1, -2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, -5]));\nconsole.log(prod_signs([1, 2, 3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, -3, -4, -5]));\nconsole.log(prod_signs([1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([]));", "  if (arr.length === 0)\
    \ return undefined;\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n      prod *= 1;\n    }\
    \ else if (arr[i] < 0) {\n      sum += arr[i] * -1;\n      prod *= -1;\n    }\
    \ else {\n      prod *= 0;\n    }\n  }\n  return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3]));\nconsole.log(prod_signs([-1, -2, -3]));\nconsole.log(prod_signs([1,\
    \ -2, 3]));\nconsole.log(prod_signs([-1, 2, -3]));\nconsole.log(prod_signs([1,\
    \ 2, 0]));\nconsole.log(prod_signs([-1, -2, 0]));\nconsole.log(prod_signs([1,\
    \ -2, 0]));\nconsole.log(prod_signs([-1, 2, 0]));\nconsole.log(prod_signs([0,\
    \ 0, 0]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) return undefined;\n\
    \    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        if (arr[i] < 0) prod *= -1;\n        sum += Math.abs(arr[i]);\n \
    \   }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\n\
    console.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0, 0, 0, 0,\
    \ 0]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n       \
    \ return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum +=\
    \ arr[i];\n            prod *= 1;\n        } else if (arr[i] < 0) {\n        \
    \    sum += Math.abs(arr[i]);\n            prod *= -1;\n        } else {\n   \
    \         prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5, 6, 7, -8, 9, 0, -10]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(prod_signs([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));\nconsole.log(prod_signs([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, -2,\
    \ -3, -4, -5]));\nconsole.log(prod_signs([0, 1, 2, 3, 4, 5]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\n\
    console.log(prod_signs([0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, 0, 1]));\n\
    console.log(prod_signs([-1, 0, 1, 0]));\nconsole.log(prod_signs([-1, 0, 1, 0,\
    \ 0]));\nconsole.log(prod_signs([-1, 0, 1, 0, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ 0, 1, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, 0, 1, 0, 0, 0, 0, 0]));\n\
    console.log(prod_signs([-1, 0, 1, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ 0, 1, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, 0, 1, 0, 0, 0, 0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\n\
    console.log(prod_signs([-1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,", "  if (arr.length\
    \ === 0) return undefined;\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0;\
    \ i < arr.length; i++) {\n    if (arr[i] > 0) prod *= 1;\n    else if (arr[i]\
    \ < 0) prod *= -1;\n    else prod *= 0;\n    sum += Math.abs(arr[i]);\n  }\n \
    \ return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        sum += Math.abs(arr[i]);\n        product *= Math.sign(arr[i]);\n\
    \    }\n    return sum * product;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4,\
    \ -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\n", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let prod = 1;\n    let sum = 0;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n      \
    \      prod *= 1;\n        } else if (arr[i] < 0) {\n            prod *= -1;\n\
    \        } else {\n            prod *= 0;\n        }\n        sum += Math.abs(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\n\
    console.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0, 0, 0, 0,\
    \ 0]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n       \
    \ return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        if (arr[i] < 0) {\n            prod *=\
    \ -1;\n        } else if (arr[i] > 0) {\n            prod *= 1;\n        } else\
    \ {\n            prod *= 0;\n        }\n        sum += Math.abs(arr[i]);\n   \
    \ }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, 3, 4, 5]));\n\
    console.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2,\
    \ 3, 4, 5]));\nconsole.log(prod_signs([0, 0, 0, 0, 0]));\nconsole.log(prod_signs([]));",
  "  if (arr.length === 0) return undefined;\n  let sum = 0;\n  let prod = 1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    sum += Math.abs(arr[i]);\n    prod *=\
    \ Math.sign(arr[i]);\n  }\n  return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\n", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([0, 0,\
    \ 0, 0, 0]));\nconsole.log(prod_signs([0, 0, 0, 0, 1]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, -1]));\nconsole.log(prod_signs([0, 0, 0, 1, -1]));\nconsole.log(prod_signs([0,\
    \ 0, 1, 1, -1]));\nconsole.log(prod_signs([0, 1, 1, 1, -1]));\nconsole.log(prod_signs([1,\
    \ 1, 1, 1, -1]));\nconsole.log(prod_signs([1, 1, 1, 1, 1]));\nconsole.log(prod_signs([-1,\
    \ -1, -1, -1, -1]));\nconsole.log(prod_signs([-1, -1, -1, -1, 1]));\nconsole.log(prod_signs([-1,\
    \ -1, -1, 1, 1]));\nconsole.log(prod_signs([-1, -1, 1, 1, 1]));\nconsole.log(prod_signs([-1,\
    \ 1, 1, 1, 1]));\nconsole.log(prod_signs([1, 1, 1, 1, 0]));\nconsole.log(prod_",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n\nconsole.log(prod_signs([-1, 0, 1]));\nconsole.log(prod_signs([-1, -2, -3]));\n\
    console.log(prod_signs([-1, -2, -3, 0]));\nconsole.log(prod_signs([]));\n", " \
    \   if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, -2, 3, -4, 5]));\nconsole.log(prod_signs([]));\n",
  "  if (arr.length === 0) return undefined;\n  let sum = 0;\n  let prod = 1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n\
    \      prod *= 1;\n    } else if (arr[i] < 0) {\n      sum += Math.abs(arr[i]);\n\
    \      prod *= -1;\n    } else {\n      prod *= 0;\n    }\n  }\n  return sum *\
    \ prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ 2, 3, 4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([]));", "  if (arr.length === 0) return\
    \ undefined;\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n      prod *= 1;\n    }\
    \ else if (arr[i] < 0) {\n      sum += arr[i] * -1;\n      prod *= -1;\n    }\
    \ else {\n      prod *= 0;\n    }\n  }\n  return sum * prod;\n}\n", "    if (arr.length\
    \ === 0) return undefined;\n    let prod = 1;\n    let sum = 0;\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            prod *=\
    \ 1;\n            sum += arr[i];\n        } else if (arr[i] < 0) {\n         \
    \   prod *= -1;\n            sum += arr[i];\n        } else {\n            prod\
    \ *= 0;\n            sum += 0;\n        }\n    }\n    return sum * prod;\n}\n\n\
    console.log(prod_signs([1, 2, 3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3,\
    \ -4, -5, 0]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([0, 0, 0,\
    \ 0, 0]));\nconsole.log(prod_signs([-1, -1, -1, -1, -1]));\nconsole.log(prod_signs([1,\
    \ 1, 1, 1, 1]));\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\n\
    console.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0, 0, 0, 0,\
    \ 0]));\nconsole.log(prod_signs([]));", "  if (arr.length === 0) return undefined;\n\
    \  let prod = 1;\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n \
    \   if (arr[i] > 0) {\n      prod *= 1;\n      sum += arr[i];\n    } else if (arr[i]\
    \ < 0) {\n      prod *= -1;\n      sum += arr[i] * -1;\n    } else {\n      prod\
    \ *= 0;\n    }\n  }\n  return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2,\
    \ -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([]));\n", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let prod = 1;\n    let sum = 0;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === 0) {\n    \
    \        continue;\n        }\n        prod *= Math.sign(arr[i]);\n        sum\
    \ += Math.abs(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 0]));\nconsole.log(prod_signs([1, 2, 3, 4, -5]));\nconsole.log(prod_signs([]));\n",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let prod = 1;\n\
    \    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ < 0) {\n            prod *= -1;\n        } else if (arr[i] > 0) {\n        \
    \    prod *= 1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += Math.abs(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([]));", "  if (arr.length === 0) return\
    \ undefined;\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n      prod *= 1;\n    }\
    \ else if (arr[i] < 0) {\n      sum += Math.abs(arr[i]);\n      prod *= -1;\n\
    \    } else {\n      prod *= 0;\n    }\n  }\n  return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5, 6]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, -6]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5, 6]));\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\n\
    console.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, 2,\
    \ -3, 4, -5]));\nconsole.log(prod_signs([]));\n", "    let prod = 1;\n    let\
    \ sum = 0;\n    if (arr.length === 0) {\n        return undefined;\n    }\n  \
    \  for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n       \
    \     prod *= 1;\n            sum += arr[i];\n        } else if (arr[i] < 0) {\n\
    \            prod *= -1;\n            sum += arr[i] * -1;\n        } else {\n\
    \            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([1, -2, 3, -4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, -5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, 5]));\nconsole.log(prod_signs([1, -2, 3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, -4, 5]));\nconsole.log(prod_signs([1, -2, 3, 4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, -5]));\nconsole.log(prod_signs([1, 2, 3, -4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, -4, -5]));\nconsole.", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n            prod\
    \ *= 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-5, -3, -1, 0, 1,\
    \ 3, 5]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([-1, 0, 1]));\n\
    console.log(prod_signs([-1, 1]));\nconsole.log(prod_signs([1, 1, 1, 1]));\nconsole.log(prod_signs([-1,\
    \ -1, -1, -1]));\nconsole.log(prod_signs([-1, -1, -1, 1]));\nconsole.log(prod_signs([-1,\
    \ -1, 1, 1]));\nconsole.log(prod_signs([-1, 1, 1, 1]));\nconsole.log(prod_signs([1,\
    \ 1, 1, -1]));\nconsole.log(prod_signs([1, -1, -1, -1]));\nconsole.log(prod_signs([1,\
    \ -1, -1, 1]));\nconsole.log(prod_signs([1, -1, 1, 1]));\nconsole.log(prod_signs([1,\
    \ 1, -1, 1]));\nconsole.log(prod_signs([0, 0, 0, 0]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 1]));\nconsole.log(prod_signs([0, 0, 1, 1]));\nconsole.log(prod_signs([0,\
    \ 1, 1", "    if (arr.length === 0) {\n        return undefined;\n    }\n    let\
    \ sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n  \
    \      sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n \
    \   return sum * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\n",
  "    if (arr.length === 0) return undefined;\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  \
    \  if (arr.length === 0) {\n        return undefined;\n    }\n    let sum: number\
    \ = 0;\n    let prod: number = 1;\n    for (let i: number = 0; i < arr.length;\
    \ i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\nconsole.log(prod_signs([1, 2, 3, -4]));\nconsole.log(prod_signs([]));\n\
    console.log(prod_signs([-1, -2, -3, -4]));\nconsole.log(prod_signs([-1, -2, -3,\
    \ 0]));\nconsole.log(prod_signs([-1, -2, -3, 0, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, 0, 0, 0, 0, 0]));\n\
    console.log(prod_signs([-1, -2, -3, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, 0, 0, 0,\
    \ 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\n\
    console.log(prod_signs([-1, -2, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 0,", "    if (arr.length === 0) return undefined;\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += Math.abs(arr[i]);\n            prod *= -1;\n\
    \        } else {\n            prod *= 0;\n        }\n    }\n    return sum *\
    \ prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\n\
    console.log(prod_signs([0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, 0, -3,\
    \ 0, -5]));\nconsole.log(prod_signs([1, 0, 3, 0, 5]));\n", "  if (arr.length ===\
    \ 0) return undefined;\n  return arr.reduce((acc, curr) => acc + Math.abs(curr)\
    \ * Math.sign(curr), 0);\n}\n\nconsole.log(prod_signs([1, 2, 3, 4, 5])); // -1\n\
    console.log(prod_signs([-1, -2, -3, -4, -5])); // 1\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, -5])); // -1\nconsole.log(prod_signs([-1, -2, -3, -4, 5])); // 1\n\
    console.log(prod_signs([1, 2, 3, -4, -5])); // -1\nconsole.log(prod_signs([-1,\
    \ -2, 3, 4, -5])); // 1\nconsole.log(prod_signs([1, -2, 3, 4, -5])); // -1\nconsole.log(prod_signs([1,\
    \ 2, -3, 4, -5])); // -1\nconsole.log(prod_signs([1, 2, 3, -4, 5])); // 1\nconsole.log(prod_signs([-1,\
    \ 2, 3, -4, 5])); // 1\nconsole.log(prod_signs([1, -2, 3, 4, 5])); // 1\nconsole.log(prod_signs([1,\
    \ 2, -3, 4, 5])); // 1\nconsole.log(prod_signs([1, 2, 3, -4, -5])); // -1\nconsole.log(prod_signs([-1,\
    \ 2, 3, 4, -5])); // 1\nconsole.log(prod_signs([1, -2, 3, -4, 5])); // 1\nconsole.log(prod_signs([1,\
    \ -2, 3, 4, 5])); // 1\nconsole.log(prod_signs([1, 2, -3, -4, 5])); // 1\nconsole.log(prod_signs([1,\
    \ 2, -", "    if (arr.length === 0) {\n        return undefined;\n    }\n    let\
    \ sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n  \
    \      if (arr[i] > 0) {\n            sum += arr[i];\n            prod *= 1;\n\
    \        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n    }\n\
    \    return sum * prod;\n}\n\nconsole.log(prod_signs([1, -2, 3, -4, 5, -6]));\n\
    console.log(prod_signs([1, -2, 3, -4, 5, -6, 0]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 1, 2,\
    \ 3, 4, 5]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([0, 0, 0,\
    \ 0, 0]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5, 0]));\nconsole.log(prod_signs([1, 2, 3, 4, 5, 0, -1, -2, -3, -4,\
    \ -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5, 0, -1, -2, -3, -4, -5, 0]));",
  "    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n\
    \        if (arr[i] !== 0) {\n            sum += Math.abs(arr[i]);\n         \
    \   prod *= Math.sign(arr[i]);\n        }\n    }\n    return sum * prod;\n}\n\n\
    console.log(prod_signs([1, 2, 3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3,\
    \ -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < 0) {\n      \
    \      prod *= -1;\n        } else if (arr[i] > 0) {\n            prod *= 1;\n\
    \        } else {\n            prod *= 0;\n        }\n        sum += Math.abs(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\n\
    console.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0, 1, 2, 3,\
    \ 4, 5]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n    \
    \    return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n        prod\
    \ *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0,\
    \ 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5,\
    \ 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0,\
    \ 0, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0, 0, 0,\
    \ 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\n\
    console.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\n\
    console.log(prod_signs([-1, -2", "    if (arr.length === 0) return undefined;\n\
    \    let prod = 1;\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        if (arr[i] > 0) {\n            prod *= 1;\n            sum += arr[i];\n\
    \        } else if (arr[i] < 0) {\n            prod *= -1;\n            sum +=\
    \ arr[i];\n        } else {\n            prod *= 0;\n            sum += 0;\n \
    \       }\n    }\n    return prod * sum;\n}\n\nconsole.log(prod_signs([-1, -2,\
    \ -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\n\
    console.log(prod_signs([]));\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\n\
    console.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0, 0, 0, 0,\
    \ 0]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n       \
    \ return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum +=\
    \ arr[i];\n            prod *= 1;\n        } else if (arr[i] < 0) {\n        \
    \    sum += Math.abs(arr[i]);\n            prod *= -1;\n        } else {\n   \
    \         prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5, 6, 7, -8, 9, 0]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, 0]));\nconsole.log(prod_signs([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 0]));\n", "    if (arr.length === 0) return undefined;\n    let\
    \ sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n  \
    \      sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n \
    \   return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\n\
    console.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3,\
    \ 4, -5]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([0, 0, 0, 0,\
    \ 0]));\n", "    if (arr.length === 0) return undefined;\n    let sum = 0;\n \
    \   let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += Math.abs(arr[i]);\n            prod *= -1;\n\
    \        } else {\n            prod *= 0;\n        }\n    }\n    return sum *\
    \ prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, -5]));\nconsole.log(prod_signs([-1,\
    \ 2, 3, 4, -5]));\nconsole.log(prod_signs([-1, -2, 3, 4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 5]));\nconsole.log(prod_signs([-1, -2, -3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n\
    \        return undefined;\n    }\n    let prod = 1;\n    let sum = 0;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        if (arr[i] < 0) {\n            prod\
    \ *= -1;\n        } else if (arr[i] > 0) {\n            prod *= 1;\n        }\
    \ else {\n            prod *= 0;\n        }\n        sum += Math.abs(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, -4, -5,\
    \ -6]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([0, 0, 0, 0, 0,\
    \ 0]));\nconsole.log(prod_signs([1, 2, 3, -4, -5, -6, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 4, 5, 6]));\nconsole.log(prod_signs([-1, -2, -3, 4, 5, 6, 0, 0, 0, 0,\
    \ 0, 0]));\nconsole.log(prod_signs([1, 2, 3, 4, 5, 6]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5, 6, 0, 0, 0, 0, 0, 0]));\n", "    if (arr.length === 0) {\n     \
    \   return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n        prod\
    \ *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, 3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, -5]));\nconsole.log(prod_signs([1, 2, -3, 4, -5]));\nconsole.log(prod_signs([1,\
    \ -2, -3, 4, -5]));\nconsole.log(prod_signs([1, -2, -3, -4, -5]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) return undefined;\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5])); // -51\nconsole.log(prod_signs([-1, -2, -3, -4, -5])); // -51\n\
    console.log(prod_signs([1, 2, 3, 4, 5])); // 51\nconsole.log(prod_signs([-1, -2,\
    \ -3, 4, 5])); // -51\nconsole.log(prod_signs([-1, -2, -3, -4, 5])); // 51\nconsole.log(prod_signs([]));\
    \ // None\nconsole.log(prod_signs([0, 0, 0, 0, 0])); // 0\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0])); // 0\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0]));\
    \ // 0\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0])); // 0\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, 0, 0, 0, 0])); // 0\nconsole.log(prod_signs([-1, -2, -3, -4,\
    \ -5, 0, 0, 0, 0, 0])); // 0\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0,\
    \ 0, 0, 0, 0])); // 0\nconsole.log(prod_signs([-1, -2, -3, -4, -5, 0, 0, 0, 0,\
    \ 0, 0", "  if (arr.length === 0) return undefined;\n  let sum = 0;\n  let prod\
    \ = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === 0) {\n  \
    \    continue;\n    } else if (arr[i] > 0) {\n      sum += arr[i];\n    } else\
    \ {\n      sum += Math.abs(arr[i]);\n      prod *= -1;\n    }\n  }\n  return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5])); // -120\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5])); // 120\nconsole.log(prod_signs([-1, 2, -3, 4, -5])); // 120\n\
    console.log(prod_signs([-1, -2, 3, 4, -5])); // -120\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 0])); // 0\nconsole.log(prod_signs([])); // None\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let prod = 1;\n    let sum =\
    \ 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            prod *=\
    \ -1;\n        } else {\n            prod *= 0;\n        }\n        sum += Math.abs(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\n\
    console.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0, 0, 0, 0,\
    \ 0]));\nconsole.log(prod_signs([]));", "  if (arr.length === 0) return undefined;\n\
    \  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n \
    \   if (arr[i] > 0) {\n      sum += arr[i];\n      prod *= 1;\n    } else if (arr[i]\
    \ < 0) {\n      sum += arr[i] * -1;\n      prod *= -1;\n    } else {\n      prod\
    \ *= 0;\n    }\n  }\n  return sum * prod;\n}\n\nconsole.log(prod_signs([1, 2,\
    \ 3, -4, -5, -6]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, -6]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 0]));\nconsole.log(prod_signs([]));\n", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 5]));\nconsole.log(prod_signs([]));", "  if (arr.length === 0) return\
    \ undefined;\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    sum += Math.abs(arr[i]);\n    prod *= Math.sign(arr[i]);\n  }\n\
    \  return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, 0, 5]));\nconsole.log(prod_signs([]));\n", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\n", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n      \
    \      sum += arr[i];\n            prod *= 1;\n        } else if (arr[i] < 0)\
    \ {\n            sum += arr[i] * -1;\n            prod *= -1;\n        } else\
    \ {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 5]));\nconsole.log(prod_signs([-1, -2, -3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, 0]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 0, 5]));\nconsole.log(prod_signs([1, 2, 0, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 0, 3, 4, 5]));\nconsole.log(prod_signs([0, 2, 3, 4, 5]));\nconsole.log(prod_signs([]));",
  "  if (arr.length === 0) return undefined;\n  let prod = 1;\n  let sum = 0;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      prod *= 1;\n\
    \      sum += arr[i];\n    } else if (arr[i] < 0) {\n      prod *= -1;\n     \
    \ sum += arr[i] * -1;\n    } else {\n      prod *= 0;\n    }\n  }\n  return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, -4, -5, 6])); // -21\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5, 6, 0])); // 0\nconsole.log(prod_signs([])); // undefined\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, -6])); // 21\nconsole.log(prod_signs([-1, -2, -3, -4, -5, -6,\
    \ 0])); // 0\nconsole.log(prod_signs([-1, -2, -3, -4, -5, -6, 0, 0])); // 0\n\
    console.log(prod_signs([1, 2, 3, -4, -5, 6, 0, 0])); // 0\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5, -6, 0, 0, 0])); // 0\nconsole.log(prod_signs([1, 2, 3, -4, -5,\
    \ 6, 0, 0, 0])); // 0\nconsole.log(prod_signs([1, 2, 3, -4, -5, 6, 0, 0, 0, 0]));\
    \ // 0\nconsole.log(prod_signs([-1, -2, -3, -4, -5, -6, 0, 0, 0, 0])); // 0\n\
    console.log(prod_signs([-1, -2, -3, -4", "    if (arr.length === 0) {\n      \
    \  return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n        prod\
    \ *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, 3, 4, -5]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([1, 2,\
    \ 3, 4, 5]));", "    if (arr.length === 0) return undefined;\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, 0]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n\
    \        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n     \
    \   prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  if (arr.length\
    \ === 0) return undefined;\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0;\
    \ i < arr.length; i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n      prod\
    \ *= 1;\n    } else if (arr[i] < 0) {\n      sum += arr[i] * -1;\n      prod *=\
    \ -1;\n    } else {\n      prod *= 0;\n    }\n  }\n  return sum * prod;\n}\n\n\
    console.log(prod_signs([1, 2, 3, -1, -2, -3]));\nconsole.log(prod_signs([1, 2,\
    \ 3, -1, -2, -3, 0]));\nconsole.log(prod_signs([]));\n", "    if (arr.length ===\
    \ 0) {\n        return undefined;\n    }\n    let prod = 1;\n    let sum = 0;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n     \
    \       prod *= 1;\n        } else if (arr[i] < 0) {\n            prod *= -1;\n\
    \        } else {\n            prod *= 0;\n        }\n        sum += Math.abs(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\n\
    console.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1, -2,\
    \ 3, -4, 5]));\nconsole.log(prod_signs([1, 2, 3, 4, 0]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([]));\n", "    let sum = 0;\n    let\
    \ prod = 1;\n    if (arr.length === 0) {\n        return undefined;\n    }\n \
    \   for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n      \
    \      sum += arr[i];\n            prod *= 1;\n        } else if (arr[i] < 0)\
    \ {\n            sum += arr[i] * -1;\n            prod *= -1;\n        } else\
    \ {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ 2, 3, -4]));\nconsole.log(prod_signs([-1, 2, 3, -4, 0]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let prod = 1;\n\
    \    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            prod *= 1;\n        } else if (arr[i] < 0) {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += Math.abs(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n\
    \        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n     \
    \   prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, -5]));\nconsole.log(prod_signs([-1, -2, -3, -4, 5]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += Math.abs(arr[i]);\n            prod *= -1;\n\
    \        } else {\n            prod *= 0;\n        }\n    }\n    return sum *\
    \ prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([]));\n\
    console.log(prod_signs([0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1, 2, -3,\
    \ 4, 0]));\nconsole.log(prod_signs([-1, 2, -3, 4, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0)\
    \ {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, 3, 4, 5]));\nconsole.log(prod_signs([-1, -2, -3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n\
    \        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n     \
    \   prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-2,\
    \ -3, 4, -5]));\nconsole.log(prod_signs([-2, -3, 4, -5, 0]));\nconsole.log(prod_signs([]));\n\
    console.log(prod_signs([0, 0, 0, 0]));\nconsole.log(prod_signs([-2, -3, 4, -5,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([-2, -3, 4, -5, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-2,\
    \ -3, 4, -5, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-2, -3, 4, -5, 0, 0,\
    \ 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-2, -3, 4, -5, 0, 0, 0, 0, 0, 0,\
    \ 0, 0]));\nconsole.log(prod_signs([-2, -3, 4, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\n\
    console.log(prod_signs([-2, -3, 4, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-2,\
    \ -3, 4, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(prod_signs([-2,\
    \ -3, 4, -5, 0, 0, 0, 0, 0, 0, 0, 0,", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n            prod *= -1;\n        } else {\n            prod *=\
    \ 0;\n        }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, -4, -5, 6, -7, 8, 9]));\nconsole.log(prod_signs([1, 2, 3, -4, -5, 6, -7,\
    \ 8, 9, 0]));\nconsole.log(prod_signs([]));\n", "  if (!arr.length) return undefined;\n\
    \  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n \
    \   if (arr[i] > 0) {\n      sum += arr[i];\n      prod *= 1;\n    } else if (arr[i]\
    \ < 0) {\n      sum += arr[i] * -1;\n      prod *= -1;\n    } else {\n      prod\
    \ *= 0;\n    }\n  }\n  return sum * prod;\n}\n\nconsole.log(prod_signs([1, 2,\
    \ 3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, -4, -5, 0]));\nconsole.log(prod_signs([]));\n",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let prod = 1;\n\
    \    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            prod *= 1;\n        } else if (arr[i] < 0) {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += Math.abs(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -1, -1, -1, -1]));\nconsole.log(prod_signs([-1, -1, -1, -1, 1]));\nconsole.log(prod_signs([-1,\
    \ -1, -1, 0, -1]));\nconsole.log(prod_signs([-1, -1, -1, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ -1, -1, 0, 1]));\nconsole.log(prod_signs([-1, -1, 0, -1, -1]));\nconsole.log(prod_signs([-1,\
    \ -1, 0, -1, 0]));\nconsole.log(prod_signs([-1, -1, 0, -1, 1]));\nconsole.log(prod_signs([-1,\
    \ -1, 0, 0, -1]));\nconsole.log(prod_signs([-1, -1, 0, 0, 0]));\nconsole.log(prod_signs([-1,\
    \ -1, 0, 0, 1]));\nconsole.log(prod_signs([-1, -1, 0, 1, -1]));\nconsole.log(prod_signs([-1,\
    \ -1, 0, 1, 0]));\nconsole.log(prod_signs([-1, -1, 0, 1, 1]));\nconsole.log(prod_signs([-1,\
    \ -1, 1, -1, -1]));\nconsole.", "    if (arr.length === 0) return undefined;\n\
    \    let prod = 1;\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        if (arr[i] > 0) {\n            prod *= 1;\n            sum += arr[i];\n\
    \        } else if (arr[i] < 0) {\n            prod *= -1;\n            sum +=\
    \ arr[i];\n        } else {\n            prod *= 0;\n            sum += 0;\n \
    \       }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2,\
    \ -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([]));", "  if (arr.length === 0) return\
    \ undefined;\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    sum += Math.abs(arr[i]);\n    prod *= Math.sign(arr[i]);\n  }\n\
    \  return sum * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, -4])); // -4\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4])); // 4\nconsole.log(prod_signs([0, 0, 0, 0])); // 0\nconsole.log(prod_signs([]));\
    \ // undefined\n", "    if (arr.length === 0) {\n        return undefined;\n \
    \   }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, -4, -5,\
    \ -6]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([0, 0, 0, 0, 0,\
    \ 0]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, -6]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5, 6]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5, 6]));\nconsole.log(prod_signs([1,\
    \ -2, 3, -4, 5, -6]));\nconsole.log(prod_signs([1, -2, 3, -4, 5, -6, 7, 8, 9,\
    \ 10]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\
    console.log(prod_signs([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(prod_signs([-1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10]));\nconsole.log(prod_signs([1, -2, 3, -4, 5,\
    \ -6, 7, -8, 9, -10]));\nconsole.log(prod_signs([1, -2, 3, -4, 5, -6, 7, -8, 9,\
    \ -10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(prod_signs([",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ !== 0) {\n            sum += Math.abs(arr[i]);\n            prod *= Math.sign(arr[i]);\n\
    \        }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, -2,\
    \ -3, -4, -5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([1, -2, 3, -4, 5]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n\
    \        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n     \
    \   prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ -2, 3, -4, 5]));\nconsole.log(prod_signs([]));\nconsole.log(prod_signs([0, 0,\
    \ 0, 0, 0]));", "    if (arr.length === 0) {\n        return undefined;\n    }\n\
    \    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n  \
    \  }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\n\
    console.log(prod_signs([]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", "    if\
    \ (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n \
    \   let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([0, 0, 0, 0, 0]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([-1, -2, -3, -4, -5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 5]));\nconsole.log(prod_signs([-1, 2, -3, 4, -5]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([0, 0, 0, 0, 0]));\nconsole.log(prod_signs([]));",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ < 0) {\n            prod *= -1;\n        } else if (arr[i] > 0) {\n        \
    \    prod *= 1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += Math.abs(arr[i]);\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([0,\
    \ 0, 0, 0, 0]));\nconsole.log(prod_signs([]));", "    if (arr.length === 0) {\n\
    \        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum\
    \ += arr[i];\n            prod *= 1;\n        } else if (arr[i] < 0) {\n     \
    \       sum += Math.abs(arr[i]);\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n\nconsole.log(prod_signs([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(prod_signs([1, 2, 3, 4, 5]));\nconsole.log(prod_signs([1,\
    \ 2, 3, 4, 0]));\nconsole.log(prod_signs([]));"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

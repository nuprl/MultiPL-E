name: HumanEval_111_histogram
language: ts
prompt: "//Given a string representing a space separated lowercase letters, return\
  \ a dictionary\n// of the letter with the most repetition and containing the corresponding\
  \ count.\n// If several letters have the same occurrence, return all of them.\n\
  // Example:\nfunction histogram(test: string): {[key: string]: number} {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = histogram;\n  assert.deepEqual(candidate(\"a b b a\"\
  ),{\"a\": 2, \"b\": 2});\n  assert.deepEqual(candidate(\"a b c a b\"),{\"a\": 2,\
  \ \"b\": 2});\n  assert.deepEqual(candidate(\"a b c d g\"),{\"a\": 1, \"b\": 1,\
  \ \"c\": 1, \"d\": 1, \"g\": 1});\n  assert.deepEqual(candidate(\"r t g\"),{\"r\"\
  : 1, \"t\": 1, \"g\": 1});\n  assert.deepEqual(candidate(\"b b b b a\"),{\"b\":\
  \ 4});\n  assert.deepEqual(candidate(\"r t g\"),{\"r\": 1, \"t\": 1, \"g\": 1});\n\
  \  assert.deepEqual(candidate(\"\"),{});\n  assert.deepEqual(candidate(\"a\"),{\"\
  a\": 1});\n}\n\ntest();"
completions: ["    let result: {[key: string]: number} = {};\n    let max: number\
    \ = 0;\n    let maxKeys: string[] = [];\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n   \
    \     } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxKeys = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxKeys.push(test[i]);\n\
    \        }\n    }\n    return {[maxKeys.join('')]: max};\n}\n", "    let result:\
    \ {[key: string]: number} = {};\n    let max: number = 0;\n    let maxLetters:\
    \ string[] = [];\n    for (let i = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('hello'));\nconsole.log(histogram('world'));\n\
    console.log(histogram('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetter: string = '';\n    for (let i: number = 0; i < test.length; i++) {\n\
    \        if (result[test[i]]) {\n            result[test[i]]++;\n        } else\
    \ {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetter = test[i];\n\
    \        }\n    }\n    for (let key in result) {\n        if (result[key] !==\
    \ max) {\n            delete result[key];\n        }\n    }\n    return result;\n\
    }\nconsole.log(histogram('aabbbcccc')); // {a: 2, b: 3, c: 4}\nconsole.log(histogram('aabbbccccdddd'));\
    \ // {d: 4}\nconsole.log(histogram('aabbbccccddddeeeee')); // {e: 5}\nconsole.log(histogram('aabbbccccddddeeeeeffffff'));\
    \ // {f: 6}\nconsole.log(histogram('aabbbccccddddeeeeeffffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg",
  "    let dict: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxKey: string = '';\n    let maxKeys: string[] = [];\n    for (let i = 0; i\
    \ < test.length; i++) {\n        if (dict[test[i]]) {\n            dict[test[i]]++;\n\
    \        } else {\n            dict[test[i]] = 1;\n        }\n        if (dict[test[i]]\
    \ > max) {\n            max = dict[test[i]];\n            maxKey = test[i];\n\
    \            maxKeys = [maxKey];\n        } else if (dict[test[i]] === max) {\n\
    \            maxKeys.push(test[i]);\n        }\n    }\n    return {[maxKey]: max};\n\
    }\n\nconsole.log(histogram('aabbcc')); // {a: 2, b: 2, c: 2}\nconsole.log(histogram('abbccc'));\
    \ // {c: 3}\nconsole.log(histogram('abbcccdddd')); // {d: 4}\nconsole.log(histogram('abbcccddddeeee'));\
    \ // {e: 4}\nconsole.log(histogram('abbcccddddeeeeeeeeee')); // {e: 10}\nconsole.log(histogram('abbcccddddeeeeeeeeeeffffff'));\
    \ // {f: 6}\nconsole.log(histogram('abbcccddddeeeeeeeeeeffffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i: number = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]]) {\n            result[test[i]]++;\n        }\
    \ else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbcccc'));\
    \ // {c: 4}\nconsole.log(histogram('aabbbccccdddd')); // {d: 4}\nconsole.log(histogram('aabbbccccddddeeeeeeeeeeee'));\
    \ // {e: 12}\nconsole.log(histogram('aabbbccccddddeeeeeeeeeeeeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    for\
    \ (let i: number = 0; i < test.length; i++) {\n        if (result[test[i]] ===\
    \ undefined) {\n            result[test[i]] = 1;\n        } else {\n         \
    \   result[test[i]]++;\n        }\n        if (result[test[i]] > max) {\n    \
    \        max = result[test[i]];\n        }\n    }\n    for (let key in result)\
    \ {\n        if (result[key] < max) {\n            delete result[key];\n     \
    \   }\n    }\n    return result;\n}\nconsole.log(histogram(\"aabbbccc\"));\nconsole.log(histogram(\"\
    aabbbcccdddd\"));\nconsole.log(histogram(\"aabbbcccddddeeee\"));\nconsole.log(histogram(\"\
    aabbbcccddddeeeeffff\"));\nconsole.log(histogram(\"aabbbcccddddeeeeffffgggg\"\
    ));\nconsole.log(histogram(\"aabbbcccddddeeeeffffgggghhhhh\"));\nconsole.log(histogram(\"\
    aabbbcccddddeeeeffffgggghhhhhiiii\"));\nconsole.log(histogram(\"aabbbcccddddeeeeffffgggghhhhhiiiiiiii\"\
    ));\nconsole.log(histogram(\"aabbbcccddddeeeeffffgggghhhhhiiiiiiiijjjj\"));\n\
    console.log(histogram(\"aabbbcccddddeeeeffffgggghhhhhiiiiiiiijjjjkkkk\"));\nconsole.log(histogram(\"\
    aabbbcccddddeeeeffffgggghhhhhiiiiiiiijjjjkkkkllll\"));\nconsole.log(histogram(\"\
    aabbbcccddddeeeeffffgggghhhhhiiiiiiiijjjjkkkkllllmmmm\"));\nconsole.log(histogram(\"\
    aabbbcccddddeeeeffffgggghhhhhiiiiiiiijjjjkkkkllllmmmmnnnn\"));\nconsole.log(histogram(\"\
    aabbbcccddddeeeeffffgggghhhhhiiiiii", "  let result: {[key: string]: number} =\
    \ {};\n  let max: number = 0;\n  let maxLetters: string[] = [];\n  for (let i\
    \ = 0; i < test.length; i++) {\n    if (result[test[i]]) {\n      result[test[i]]++;\n\
    \    } else {\n      result[test[i]] = 1;\n    }\n    if (result[test[i]] > max)\
    \ {\n      max = result[test[i]];\n      maxLetters = [test[i]];\n    } else if\
    \ (result[test[i]] === max) {\n      maxLetters.push(test[i]);\n    }\n  }\n \
    \ return {[maxLetters.join('')]: max};\n}\nconsole.log(histogram('aabbbcc'));\
    \ // {a: 2, b: 3, c: 2}\nconsole.log(histogram('abbccc')); // {a: 1, b: 2, c:\
    \ 3}\nconsole.log(histogram('abc')); // {a: 1, b: 1, c: 1}\nconsole.log(histogram('aabbccdd'));\
    \ // {a: 2, b: 2, c: 2, d: 2}\nconsole.log(histogram('aabbccdde')); // {a: 2,\
    \ b: 2, c: 2, d: 2, e: 1}\nconsole.log(histogram('aabbccddee')); // {a: 2, b:\
    \ 2, c: 2, d: 2, e: 2}\nconsole.log(histogram('aabbccddeeff')); // {a: 2, b: 2,\
    \ c: 2, d: 2, e: 2, f: 2}\nconsole.log(histogram('aabbccddeeffgg')); // {a: 2,\
    \ b: 2, c: 2, d: 2, e: 2, f: 2, g: 2}\nconsole.log(histogram('aabbccddeeffgghh'));\
    \ // {a: 2, b: 2, c: 2, d: 2, e: 2, f: 2, g: 2, h: 2}\n", "    let result: {[key:\
    \ string]: number} = {};\n    let max: number = 0;\n    let maxLetters: string[]\
    \ = [];\n    for (let i = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbbccc'));\nconsole.log(histogram('aabbbcccdddd'));\n\
    console.log(histogram('aabbbcccddddeeeee'));\nconsole.log(histogram('aabbbcccddddeeeeeffffff'));\n\
    console.log(histogram('aabbbcccddddeeeeeffffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++) {\n  \
    \      if (result[test[i]]) {\n            result[test[i]]++;\n        } else\
    \ {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbccdddd'));\
    \ // {d: 4}\nconsole.log(histogram('aabbccddddeeee')); // {e: 4}\nconsole.log(histogram('aabbccddddeeeefffff'));\
    \ // {f: 5}\nconsole.log(histogram('aabbccddddeeeefffffgggg')); // {g: 5}\nconsole.log(histogram('aabbccddddeeeefffffgggggggg'));\
    \ // {g: 7}\nconsole.log(histogram('aabbccddddeeeefffffgggggggghhhhh')); // {h:\
    \ 8}\nconsole.log(histogram('aabbccddddeeeefffffgggggggghhhhhiiii')); // {i: 9}\n\
    console.log(histogram('aabbccddddeeeefffffgggggggghhhhhiiiiiiii')); // {i: 10}\n\
    console.log(histogram('aabbccddddeeeefffffgggggggghhhhhiiiiiiiijjjjjjjj')); //\
    \ {j: 10}\nconsole.log(histogram('aabbccddddeeeefffffgggggggghhhhhiiiiiiiijjjjjjjjkkkkkkkk'));\
    \ // {k: 12}\nconsole.log(histogram('aabbccddddeeeefffffgggggggghhhhhiiiiiiiijjjjjjjjkk",
  "    let result = {};\n    let max = 0;\n    for (let i = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]]) {\n            result[test[i]]++;\n        }\
    \ else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n        }\n    }\n    for (let\
    \ key in result) {\n        if (result[key] < max) {\n            delete result[key];\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(histogram(\"abccccccc\"\
    )); // {c: 8}\nconsole.log(histogram(\"aabbbccc\")); // {a: 2, b: 3, c: 3}\nconsole.log(histogram(\"\
    aaabbbccc\")); // {a: 3, b: 3, c: 3}\nconsole.log(histogram(\"aaabbbcccdddd\"\
    )); // {d: 4}\nconsole.log(histogram(\"aaabbbcccddddeeeeeeee\")); // {e: 9}\n\
    console.log(histogram(\"aaabbbcccddddeeeeeeeeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxKeys: string[] = [];\n    for (let i = 0; i < test.length; i++) {\n     \
    \   if (result[test[i]] === undefined) {\n            result[test[i]] = 1;\n \
    \       } else {\n            result[test[i]]++;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxKeys = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxKeys.push(test[i]);\n\
    \        }\n    }\n    return {[maxKeys.join(\"\")]: max};\n}\n\nconsole.log(histogram(\"\
    aabbbcccc\")); // {c: 4}\nconsole.log(histogram(\"aabbbccccdddd\")); // {d: 4}\n\
    console.log(histogram(\"aabbbccccddddeeeeeeeeee\")); // {e: 10}\nconsole.log(histogram(\"\
    aabbbccccddddeeeeeeeeeeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetter: string = '';\n    for (let i = 0; i < test.length; i++) {\n     \
    \   if (result[test[i]]) {\n            result[test[i]]++;\n        } else {\n\
    \            result[test[i]] = 1;\n        }\n        if (result[test[i]] > max)\
    \ {\n            max = result[test[i]];\n            maxLetter = test[i];\n  \
    \      }\n    }\n    let maxDict: {[key: string]: number} = {};\n    for (let\
    \ key in result) {\n        if (result[key] === max) {\n            maxDict[key]\
    \ = result[key];\n        }\n    }\n    return maxDict;\n}\n\nconsole.log(histogram('abccccc'));\n\
    console.log(histogram('aabbb'));\nconsole.log(histogram('abc'));\nconsole.log(histogram('aabbccdddd'));\n\
    console.log(histogram('aabbccddddeeeee'));", "    let result: {[key: string]:\
    \ number} = {};\n    let max: number = 0;\n    let maxLetter: string = '';\n \
    \   for (let i: number = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetter = test[i];\n        }\n    }\n    for (let key in result)\
    \ {\n        if (result[key] !== max) {\n            delete result[key];\n   \
    \     }\n    }\n    return result;\n}\n\nconsole.log(histogram('aaabbc')); //\
    \ {a: 3, b: 2}\nconsole.log(histogram('aabbcc')); // {a: 2, b: 2, c: 2}\nconsole.log(histogram('aabbccddeeffgghh'));\
    \ // {a: 2, b: 2, c: 2, d: 2, e: 2, f: 2, g: 2, h: 2}\nconsole.log(histogram('abcdefghijklmnopqrstuvwxyz'));\
    \ // {a: 1, b: 1, c: 1, d: 1, e: 1, f: 1, g: 1, h: 1, i: 1, j: 1, k: 1, l: 1,\
    \ m: 1, n: 1, o: 1, p: 1, q: 1, r: 1, s: 1, t: 1, u: 1, v: 1, w: 1, x: 1, y: 1,\
    \ z: 1}", "    let result: {[key: string]: number} = {};\n    let max: number\
    \ = 0;\n    let maxLetters: string[] = [];\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n   \
    \     } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbccdddd'));\
    \ // {d: 4}\nconsole.log(histogram('aabbccddddee')); // {d: 4}\nconsole.log(histogram('aabbccddddeeee'));\
    \ // {de: 4}\nconsole.log(histogram('aabbccddddeeeeff')); // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffff'));\
    \ // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffffgg')); // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffffgggg'));\
    \ // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffffgggggg')); // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffffgggggggg'));\
    \ // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffffgggggggggg')); // {e: 4}\n\
    console.log(histogram('aabbccddddeeeeffffgggggggggggg')); // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffffgggggggggggggg'));\
    \ // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffffgggggggggggggggg')); //\
    \ {e", "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n\
    \    let maxLetters: string[] = [];\n    let letters: string[] = test.split('\
    \ ');\n    for (let i: number = 0; i < letters.length; i++) {\n        if (result[letters[i]]\
    \ === undefined) {\n            result[letters[i]] = 1;\n        } else {\n  \
    \          result[letters[i]]++;\n        }\n        if (result[letters[i]] >\
    \ max) {\n            max = result[letters[i]];\n            maxLetters = [];\n\
    \            maxLetters.push(letters[i]);\n        } else if (result[letters[i]]\
    \ === max) {\n            maxLetters.push(letters[i]);\n        }\n    }\n   \
    \ return {[maxLetters.join(', ')]: max};\n}\nconsole.log(histogram('a b c d e\
    \ f'));\nconsole.log(histogram('a b c d e f a b c d e f a b c d e f'));\nconsole.log(histogram('a\
    \ b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c\
    \ d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e\
    \ f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a\
    \ b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c\
    \ d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e\
    \ f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a\
    \ b c d e f a b c d e f a b c d e f a b c d e", "    let result: {[key: string]:\
    \ number} = {};\n    let max: number = 0;\n    let maxLetters: string[] = [];\n\
    \    for (let i: number = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbbcccc'));", "    let result: {[key: string]:\
    \ number} = {};\n    let max: number = 0;\n    let maxKeys: string[] = [];\n \
    \   for (let i: number = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxKeys = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxKeys.push(test[i]);\n        }\n    }\n    return {[maxKeys.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbbcccc'));\nconsole.log(histogram('aabbcc'));\n\
    console.log(histogram('aabbccdddd'));\nconsole.log(histogram('aabbccddddeeeee'));\n\
    console.log(histogram('aabbccddddeeeeeffffff'));\nconsole.log(histogram('aabbccddddeeeeeffffffggggggg'));\n\
    console.log(histogram('aabbccddddeeeeeffffffgggggggiiiiiiii'));\nconsole.log(histogram('aabbccddddeeeeeffffffgggggggiiiiiiiihhhhhhhh'));\n\
    console.log(histogram('aabbccddddeeeeeffffffgggggggiiiiiiiihhhhhhhhjjjjjjjjjj'));\n\
    console.log(histogram('aabbccddddeeeeeffffffgggggggiiiiiiiihhhhhhhhjjjjjjjjjjkkkkkkkkkkkk'));\n\
    console.log(histogram('aabbccddddeeeeeffffffgggggggiiiiiiiihhhhhhhhjjjjjjjjjjkkkkkkkkkkkkllllllllllllll'));\n\
    console.log(histogram('aabbccddddeeeeeffffffgggggggiiiiiiiihhhhhhhhjjjjjjjjjjkkkkkkkkkkkkllllllllllllllmmmmmmmmmmmmmmmmmm')",
  "    let hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (hist[test[i]]) {\n            hist[test[i]]++;\n       \
    \ } else {\n            hist[test[i]] = 1;\n        }\n    }\n    return hist;\n\
    }\n", "    let dict: {[key: string]: number} = {};\n    let max: number = 0;\n\
    \    let maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++)\
    \ {\n        if (dict[test[i]]) {\n            dict[test[i]] += 1;\n        }\
    \ else {\n            dict[test[i]] = 1;\n        }\n        if (dict[test[i]]\
    \ > max) {\n            max = dict[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (dict[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbccdddd'));",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i: number = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]]) {\n            result[test[i]]++;\n        }\
    \ else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbccccdddd'));\n\
    console.log(histogram('aabbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
  "    let hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        hist[test[i]] = (hist[test[i]] || 0) + 1;\n    }\n    return\
    \ hist;\n}\n", "    let result: {[key: string]: number} = {};\n    let max: number\
    \ = 0;\n    let maxLetter: string[] = [];\n    for (let i: number = 0; i < test.length;\
    \ i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n   \
    \     } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetter = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetter.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetter.join('')]: max};\n}\n\nconsole.log(histogram('aabbbccccdddd'));",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++) {\n  \
    \      if (result[test[i]]) {\n            result[test[i]]++;\n        } else\
    \ {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbccc'));\
    \ // {a: 2, b: 3, c: 3}\nconsole.log(histogram('aabbccdddd')); // {d: 4}\nconsole.log(histogram('aabbccddee'));\
    \ // {a: 2, b: 2, c: 2, d: 2, e: 2}\nconsole.log(histogram('aabbccddeef')); //\
    \ {f: 1}\nconsole.log(histogram('aabbccddeeff')); // {f: 2}\nconsole.log(histogram('aabbccddeeffg'));\
    \ // {f: 2, g: 1}\nconsole.log(histogram('aabbccddeeffgg')); // {f: 2, g: 2}\n\
    console.log(histogram('aabbccddeeffggh')); // {f: 2, g: 2, h: 1}\nconsole.log(histogram('aabbccddeeffgghh'));\
    \ // {f: 2, g: 2, h: 2}\nconsole.log(histogram('aabbccddeeffgghhi')); // {f: 2,\
    \ g: 2, h: 2, i: 1}\nconsole.log(histogram('aabbccddeeffgghhii')); // {f: 2, g:\
    \ 2, h: 2, i: 2}\nconsole.", "    let result: {[key: string]: number} = {};\n\
    \    let max: number = 0;\n    let maxLetters: string[] = [];\n    for (let i\
    \ = 0; i < test.length; i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n\
    \        } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbccdddd'));\n\
    console.log(histogram('aabbccddddeeeee'));\nconsole.log(histogram('aabbccddddeeeeefffff'));\n\
    console.log(histogram('aabbccddddeeeeefffffgggggg'));\nconsole.log(histogram('aabbccddddeeeeefffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg",
  "    let hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (hist[test[i]]) {\n            hist[test[i]] += 1;\n    \
    \    } else {\n            hist[test[i]] = 1;\n        }\n    }\n    return hist;\n\
    }\n", "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n\
    \    let maxLetter: string = \"\";\n    for (let i = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]]) {\n            result[test[i]]++;\n        }\
    \ else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetter = test[i];\n\
    \        }\n    }\n    for (let key in result) {\n        if (result[key] !==\
    \ max) {\n            delete result[key];\n        }\n    }\n    return result;\n\
    }\nconsole.log(histogram(\"aabbbccccc\"));\nconsole.log(histogram(\"aabbbcccccdddd\"\
    ));\nconsole.log(histogram(\"aabbbcccccddddeeeee\"));\nconsole.log(histogram(\"\
    aabbbcccccddddeeeeeffffff\"));\nconsole.log(histogram(\"aabbbcccccddddeeeeeffffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i: number = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]] === undefined) {\n            result[test[i]]\
    \ = 1;\n        } else {\n            result[test[i]]++;\n        }\n        if\
    \ (result[test[i]] > max) {\n            max = result[test[i]];\n            maxLetters\
    \ = [test[i]];\n        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbccdd'));\n\
    console.log(histogram('aabbccddee'));\nconsole.log(histogram('aabbccddeeff'));\n\
    console.log(histogram('aabbccddeeffgg'));\nconsole.log(histogram('aabbccddeeffgghh'));\n\
    console.log(histogram('aabbccddeeffgghhii'));\nconsole.log(histogram('aabbccddeeffgghhiijj'));\n\
    console.log(histogram('aabbccddeeffgghhiijjkk'));\nconsole.log(histogram('aabbccddeeffgghhiijjkkll'));\n\
    console.log(histogram('aabbccddeeffgghhiijjkkllmm'));\nconsole.log(histogram('aabbccddeeffgghhiijjkkllmmnn'));\n\
    console.log(histogram('aabbccddeeffgghhiijjkkllmmnnoo'));\nconsole.log(histogram('aabbccddeeffgghhiijjkkllmmnnoopp'));\n\
    console.log(histogram('aabbccddeeffgghhiijjkkllmmnnooppqq'));\nconsole.log(histogram('aabbccddeeffgghhiijjkkllmmnnooppqqrr",
  "    let result: {[key: string]: number} = {};\n    let maxCount: number = 0;\n\
    \    let maxLetters: string[] = [];\n    for (let i: number = 0; i < test.length;\
    \ i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n   \
    \     } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > maxCount) {\n            maxCount = result[test[i]];\n            maxLetters\
    \ = [test[i]];\n        } else if (result[test[i]] === maxCount) {\n         \
    \   maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ maxCount};\n}\nconsole.log(histogram('aabbbccccdddd'));\nconsole.log(histogram('aabbbccccddddeee'));\n\
    console.log(histogram('aabbbccccddddeeefff'));\nconsole.log(histogram('aabbbccccddddeeefffgggg'));\n\
    console.log(histogram('aabbbccccddddeeefffgggghhhh'));\nconsole.log(histogram('aabbbccccddddeeefffgggghhhhiiii'));\n\
    console.log(histogram('aabbbccccddddeeefffgggghhhhiiiijjjj'));\nconsole.log(histogram('aabbbccccddddeeefffgggghhhhiiiijjjjkkkk'));\n\
    console.log(histogram('aabbbccccddddeeefffgggghhhhiiiijjjjkkkkllll'));\nconsole.log(histogram('aabbbccccddddeeefffgggghhhhiiiijjjjkkkkllllmmmm'));\n\
    console.log(histogram('aabbbccccddddeeefffgggghhhhiiiijjjjkkkkllllmmmmnnnn'));\n\
    console.log(histogram('aabbbccccddddeeefffgggghhhhiiiijjjjkkkkllllmmmmnnnnoooo'));",
  "    let histogram: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        let letter = test[i];\n        if (histogram[letter]) {\n  \
    \          histogram[letter]++;\n        } else {\n            histogram[letter]\
    \ = 1;\n        }\n    }\n    return histogram;\n}\n", "    let hist: {[key: string]:\
    \ number} = {};\n    for (let i = 0; i < test.length; i++) {\n        if (hist[test[i]])\
    \ {\n            hist[test[i]]++;\n        } else {\n            hist[test[i]]\
    \ = 1;\n        }\n    }\n    return hist;\n}\n", "    let result: {[key: string]:\
    \ number} = {};\n    let max: number = 0;\n    let maxLetters: string[] = [];\n\
    \    for (let i = 0; i < test.length; i++) {\n        if (!result[test[i]]) {\n\
    \            result[test[i]] = 1;\n        } else {\n            result[test[i]]++;\n\
    \        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbbccdddd'));\nconsole.log(histogram('aabbbccddddeee'));\n\
    console.log(histogram('aabbbccddddeeefff'));\nconsole.log(histogram('aabbbccddddeeefffggg'));\n\
    console.log(histogram('aabbbccddddeeefffggghhh'));\nconsole.log(histogram('aabbbccddddeeefffggghhhiii'));\n\
    console.log(histogram('aabbbccddddeeefffggghhhiiijjj'));\nconsole.log(histogram('aabbbccddddeeefffggghhhiiijjjkkk'));\n\
    console.log(histogram('aabbbccddddeeefffggghhhiiijjjkkklll'));\nconsole.log(histogram('aabbbccddddeeefffggghhhiiijjjkkklllmmm'));\n\
    console.log(histogram('aabbbccddddeeefffggghhhiiijjjkkklllmmmnnn'));\nconsole.log(histogram('aabbbccddddeeefffggghhhiiijjjkkklllmmmnnnooo'));\n\
    console.log(histogram('aabbbccddddeeefffggghhhiiijjjkkklllmmmnnnoooppp", "  let\
    \ result: {[key: string]: number} = {};\n  let max: number = 0;\n  let maxLetter:\
    \ string = '';\n  for (let i: number = 0; i < test.length; i++) {\n    if (result[test[i]]\
    \ === undefined) {\n      result[test[i]] = 1;\n    } else {\n      result[test[i]]++;\n\
    \    }\n    if (result[test[i]] > max) {\n      max = result[test[i]];\n     \
    \ maxLetter = test[i];\n    }\n  }\n  for (let key in result) {\n    if (result[key]\
    \ !== max) {\n      delete result[key];\n    }\n  }\n  return result;\n}\n\nconsole.log(histogram('aabbbcccc'));\
    \ // {a: 2, b: 3, c: 4}\nconsole.log(histogram('aabbbccccdddd')); // {d: 4}\n\
    console.log(histogram('aabbbccccddddeeeee')); // {e: 5}\nconsole.log(histogram('aabbbccccddddeeeeeffffff'));\
    \ // {f: 6}\nconsole.log(histogram('aabbbccccddddeeeeeffffffggggggg')); // {g:\
    \ 7}\nconsole.log(histogram('aabbbccccddddeeeeeffffffggggggghhhhhhhh')); // {h:\
    \ 8}\nconsole.log(histogram('aabbbccccddddeeeeeffffffggggggghhhhhhhhiiiiiiii'));\
    \ // {i: 9}\nconsole.log(histogram('aabbbccccddddeeeeeffffffggggggghhhhhhhhiiiiiiiijjjjjjjjj'));\
    \ // {j: 10}\nconsole.log(histogram('aabbbccccddddeeeeeffffffggggggghhhhhhhhiiiiiiiijjjjjjjjjkkkkkkkkkk'));\
    \ // {k: 11}\nconsole.log(histogram('aabbbccccddddeeeeeffffffggggggghhhhhhhhiiiiiiiijjjjjjjjjkkkkkk",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i: number = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]] === undefined) {\n            result[test[i]]\
    \ = 1;\n        } else {\n            result[test[i]]++;\n        }\n        if\
    \ (result[test[i]] > max) {\n            max = result[test[i]];\n            maxLetters\
    \ = [test[i]];\n        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\nconsole.log(histogram('aabbccdddd'));",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++) {\n  \
    \      if (result[test[i]]) {\n            result[test[i]]++;\n        } else\
    \ {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbcc'));\
    \ // {a: 2, b: 2, c: 2}\nconsole.log(histogram('aabbccdddd')); // {d: 4}\nconsole.log(histogram('aabbccddddeee'));\
    \ // {e: 3}\nconsole.log(histogram('aabbccddddeeeefffff')); // {f: 5}\nconsole.log(histogram('aabbccddddeeeefffffgggg'));\
    \ // {g: 6}\nconsole.log(histogram('aabbccddddeeeefffffgggggggg')); // {g: 8}\n\
    console.log(histogram('aabbccddddeeeefffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg",
  "    let histogram: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (histogram[test[i]]) {\n            histogram[test[i]]++;\n\
    \        } else {\n            histogram[test[i]] = 1;\n        }\n    }\n   \
    \ return histogram;\n}\n", "    let result: {[key: string]: number} = {};\n  \
    \  let max: number = 0;\n    let maxLetters: string[] = [];\n    for (let i: number\
    \ = 0; i < test.length; i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n\
    \        } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbccdddd'));\
    \ // {a: 2, b: 3, c: 2, d: 4}\nconsole.log(histogram('aabbccdddd')); // {a: 2,\
    \ b: 2, c: 2, d: 4}\nconsole.log(histogram('aabbccddddeee')); // {a: 2, b: 2,\
    \ c: 2, d: 4, e: 3}\nconsole.log(histogram('aabbccddddeeee')); // {a: 2, b: 2,\
    \ c: 2, d: 4, e: 4}\nconsole.log(histogram('aabbccddddeeeeff')); // {a: 2, b:\
    \ 2, c: 2, d: 4, e: 4, f: 2}\nconsole.log(histogram('aabbccddddeeeeffff')); //\
    \ {a: 2, b: 2, c: 2, d: 4, e: 4, f: 4}\nconsole.log(histogram('aabbccddddeeeeffffgg'));\
    \ // {a: 2, b: 2, c: 2, d: 4, e: 4, f: 4, g: 2}\nconsole.log(histogram('aabbccddddeeeeffffgggg'));\
    \ // {a: 2, b: 2, c: 2, d: 4, e: 4, f: 4, g: 3", "    let hist: {[key: string]:\
    \ number} = {};\n    for (let i = 0; i < test.length; i++) {\n        if (hist[test[i]])\
    \ {\n            hist[test[i]]++;\n        } else {\n            hist[test[i]]\
    \ = 1;\n        }\n    }\n    return hist;\n}\n", "    const dict: {[key: string]:\
    \ number} = {};\n    test.split('').forEach(letter => {\n        if (dict[letter])\
    \ {\n            dict[letter]++;\n        } else {\n            dict[letter] =\
    \ 1;\n        }\n    });\n    return dict;\n}\n", "    let dict: {[key: string]:\
    \ number} = {};\n    let max: number = 0;\n    let maxKeys: string[] = [];\n \
    \   for (let i = 0; i < test.length; i++) {\n        if (dict[test[i]]) {\n  \
    \          dict[test[i]]++;\n        } else {\n            dict[test[i]] = 1;\n\
    \        }\n        if (dict[test[i]] > max) {\n            max = dict[test[i]];\n\
    \            maxKeys = [test[i]];\n        } else if (dict[test[i]] === max) {\n\
    \            maxKeys.push(test[i]);\n        }\n    }\n    return {[maxKeys.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbccdddd'));", "    const dict: {[key:\
    \ string]: number} = {};\n    for (let i = 0; i < test.length; i++) {\n      \
    \  const letter = test[i];\n        if (dict[letter]) {\n            dict[letter]++;\n\
    \        } else {\n            dict[letter] = 1;\n        }\n    }\n    return\
    \ dict;\n}\n", "    let result: {[key: string]: number} = {};\n    let max: number\
    \ = 0;\n    let maxLetter: string = '';\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n   \
    \     } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetter = test[i];\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(histogram('aabbccdddd'));\n\
    console.log(histogram('aabbccddddeeeee'));\n", "    let result: {[key: string]:\
    \ number} = {};\n    let max: number = 0;\n    let maxKeys: string[] = [];\n \
    \   for (let i: number = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxKeys = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxKeys.push(test[i]);\n        }\n    }\n    let result2: {[key:\
    \ string]: number} = {};\n    for (let i: number = 0; i < maxKeys.length; i++)\
    \ {\n        result2[maxKeys[i]] = max;\n    }\n    return result2;\n}\nconsole.log(histogram(\"\
    aabbbccc\"));", "    let result: {[key: string]: number} = {};\n    let max: number\
    \ = 0;\n    let maxLetter: string = '';\n    for (let i: number = 0; i < test.length;\
    \ i++) {\n        if (result[test[i]] === undefined) {\n            result[test[i]]\
    \ = 1;\n        } else {\n            result[test[i]]++;\n        }\n        if\
    \ (result[test[i]] > max) {\n            max = result[test[i]];\n            maxLetter\
    \ = test[i];\n        }\n    }\n    for (let key in result) {\n        if (result[key]\
    \ !== max) {\n            delete result[key];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(histogram('hello'));\nconsole.log(histogram('abbccc'));\nconsole.log(histogram('abbcccddddeeeee'));\n",
  "    let hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (hist[test[i]]) {\n            hist[test[i]] += 1;\n    \
    \    } else {\n            hist[test[i]] = 1;\n        }\n    }\n    return hist;\n\
    }\n", "    let hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (hist[test[i]]) {\n            hist[test[i]]++;\n       \
    \ } else {\n            hist[test[i]] = 1;\n        }\n    }\n    return hist;\n\
    }\n", "    let dict: {[key: string]: number} = {};\n    let max: number = 0;\n\
    \    let maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++)\
    \ {\n        if (dict[test[i]]) {\n            dict[test[i]]++;\n        } else\
    \ {\n            dict[test[i]] = 1;\n        }\n        if (dict[test[i]] > max)\
    \ {\n            max = dict[test[i]];\n            maxLetters = [test[i]];\n \
    \       } else if (dict[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n", "    let hist:\
    \ {[key: string]: number} = {};\n    for (let i = 0; i < test.length; i++) {\n\
    \        if (hist[test[i]]) {\n            hist[test[i]]++;\n        } else {\n\
    \            hist[test[i]] = 1;\n        }\n    }\n    return hist;\n}\n", " \
    \   let hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (hist[test[i]]) {\n            hist[test[i]]++;\n       \
    \ } else {\n            hist[test[i]] = 1;\n        }\n    }\n    return hist;\n\
    }\n", "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n\
    \    let maxKeys: string[] = [];\n    for (let i: number = 0; i < test.length;\
    \ i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n   \
    \     } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxKeys = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxKeys.push(test[i]);\n\
    \        }\n    }\n    return {[maxKeys.join('')]: max};\n}\n\nconsole.log(histogram('aabbbcccdddd'));\
    \ // {'a': 2, 'b': 3, 'c': 3, 'd': 4}\nconsole.log(histogram('aabbbcccddddd'));\
    \ // {'a': 2, 'b': 3, 'c': 3, 'd': 5}\nconsole.log(histogram('aabbbcccdddddd'));\
    \ // {'a': 2, 'b': 3, 'c': 3, 'd': 6}\nconsole.log(histogram('aabbbcccddddddd'));\
    \ // {'a': 2, 'b': 3, 'c': 3, 'd': 7}\nconsole.log(histogram('aabbbcccdddddddd'));\
    \ // {'a': 2, 'b': 3, 'c': 3, 'd': 8}\nconsole.log(histogram('aabbbcccddddddddd'));\
    \ // {'a': 2, 'b': 3, 'c': 3, 'd': 9}\nconsole.log(histogram('aabbbcccdddddddddd'));\
    \ // {'a': 2, 'b': 3, 'c': 3, 'd': 10}\nconsole.log(histogram('aabbbcccddddddddddd'));\
    \ // {'a': 2, 'b': 3, 'c': 3, 'd': 11}\nconsole", "    let result: {[key: string]:\
    \ number} = {};\n    let max: number = 0;\n    let maxLetters: string[] = [];\n\
    \    for (let i = 0; i < test.length; i++) {\n        if (result[test[i]]) {\n\
    \            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbbbcccccdddddd'));\nconsole.log(histogram('aabbbbcccccddddddeeeeee'));\n\
    console.log(histogram('aabbbbcccccddddddeeeeeefffff'));\nconsole.log(histogram('aabbbbcccccddddddeeeeeefffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++) {\n  \
    \      if (result[test[i]]) {\n            result[test[i]]++;\n        } else\
    \ {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbccdddd'));\
    \ // {d: 4}\nconsole.log(histogram('aabbccddddee')); // {d: 4}\nconsole.log(histogram('aabbccddddeeee'));\
    \ // {de: 4}\nconsole.log(histogram('aabbccddddeeeeff')); // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffff'));\
    \ // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffffgg')); // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffffggg'));\
    \ // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffffgggg')); // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffffggggg'));\
    \ // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffffgggggg')); // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffffggggggg'));\
    \ // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffffgggggggg')); // {e: 4}\n\
    console.log(histogram('aabbccddddeeeeffffggggggggg')); // {e: 4}\nconsole.log(histogram('a",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxKeys: string[] = [];\n    for (let i: number = 0; i < test.length; i++) {\n\
    \        if (result[test[i]] === undefined) {\n            result[test[i]] = 1;\n\
    \        } else {\n            result[test[i]]++;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxKeys = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxKeys.push(test[i]);\n\
    \        }\n    }\n    return {[maxKeys.join('')]: max};\n}\n\nconsole.log(histogram('aabbbccc'));\n\
    console.log(histogram('aabbbccca'));\nconsole.log(histogram('aabbbcccaa'));\n\
    console.log(histogram('aabbbcccaaa'));\nconsole.log(histogram('aabbbcccaaaa'));\n\
    console.log(histogram('aabbbcccaaaaa'));\nconsole.log(histogram('aabbbcccaaaaaa'));\n\
    console.log(histogram('aabbbcccaaaaaaa'));\nconsole.log(histogram('aabbbcccaaaaaaaa'));\n\
    console.log(histogram('aabbbcccaaaaaaaaa'));\nconsole.log(histogram('aabbbcccaaaaaaaaaa'));\n\
    console.log(histogram('aabbbcccaaaaaaaaaaa'));\nconsole.log(histogram('aabbbcccaaaaaaaaaaaa'));\n\
    console.log(histogram('aabbbcccaaaaaaaaaaaaa'));\nconsole.log(histogram('aabbbcccaaaaaaaaaaaaaa'));\n\
    console.log(histogram('aabbbcccaaaaaaaaaaaaaaa'));\nconsole.log(histogram('aabbbcccaaaaaaaaaaaaaaaa'));\n\
    console.log(histogram('aabbbcccaaaaaaaaaaaaaaaaa'));\nconsole.log(histogram('aabbbcccaaaaaaaaaaaaaaaaaa",
  "    const hist: {[key: string]: number} = {};\n    for (const char of test) {\n\
    \        if (hist[char]) {\n            hist[char]++;\n        } else {\n    \
    \        hist[char] = 1;\n        }\n    }\n    return hist;\n}\n", "    let result:\
    \ {[key: string]: number} = {};\n    let max: number = 0;\n    let maxLetters:\
    \ string[] = [];\n    for (let i = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbccdddd')); // {d: 4}\nconsole.log(histogram('aabbccddddee'));\
    \ // {d: 4}\nconsole.log(histogram('aabbccddddeeff')); // {d: 4}\nconsole.log(histogram('aabbccddddeeffgg'));\
    \ // {d: 4}\nconsole.log(histogram('aabbccddddeeffgghh')); // {d: 4}\nconsole.log(histogram('aabbccddddeeffgghhii'));\
    \ // {d: 4}\nconsole.log(histogram('aabbccddddeeffgghhiijj')); // {d: 4}\nconsole.log(histogram('aabbccddddeeffgghhiijjkk'));\
    \ // {d: 4}\nconsole.log(histogram('aabbccddddeeffgghhiijjkkll')); // {d: 4}\n\
    console.log(histogram('aabbccddddeeffgghhiijjkkllmm')); // {d: 4}\nconsole.log(histogram('aabbccddddeeffgghhiijjkkllmmnn'));\
    \ // {d: 4}\nconsole.log(histogram('aabbccddddeeffgghhiijjkkllmmnnoo')); // {d:\
    \ 4}\nconsole", "    let result: {[key: string]: number} = {};\n    let max: number\
    \ = 0;\n    for (let i = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]] += 1;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \        }\n    }\n    let maxLetters: string[] = [];\n    for (let key in result)\
    \ {\n        if (result[key] === max) {\n            maxLetters.push(key);\n \
    \       }\n    }\n    return {[maxLetters.join('')]: max};\n}\nconsole.log(histogram('hello'));\n\
    console.log(histogram('aabbbcccc'));\nconsole.log(histogram('abbbcccc'));\nconsole.log(histogram('abbcccc'));\n\
    console.log(histogram('abbccccdddd'));\nconsole.log(histogram('abbccccddddeeeee'));\n\
    console.log(histogram('abbccccddddeeeeeffffff'));\nconsole.log(histogram('abbccccddddeeeeeffffffgggggggg'));\n\
    console.log(histogram('abbccccddddeeeeeffffffgggggggghhhhhhhhh'));\nconsole.log(histogram('abbccccddddeeeeeffffffgggggggghhhhhhhhhiiiiiiiiii'));\n\
    console.log(histogram('abbccccddddeeeeeffffffgggggggghhhhhhhhhiiiiiiiiiijjjjjjjjjjjj'));\n\
    console.log(histogram('abbccccddddeeeeeffffffgggggggghhhhhhhhhiiiiiiiiiijjjjjjjjjjjjkkkkkkkkkkkkkk'));\n\
    console.log(histogram('abbccccddddeeeeeffffffgggggggghhhhhhhhhiiiiiiiiiijjjjjjjjjjjjkkkkkkkkkkkkkkllllllllllllllllll'));\n\
    console.log(histogram('abbcccc", "    let result: {[key: string]: number} = {};\n\
    \    let max: number = 0;\n    let maxLetter: string = '';\n    for (let i = 0;\
    \ i < test.length; i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n\
    \        } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetter = test[i];\n\
    \        }\n    }\n    return {[maxLetter]: max};\n}\n\nconsole.log(histogram('abbccc'));\
    \ // {c: 3}\nconsole.log(histogram('aabbcc')); // {a: 2, b: 2, c: 2}\nconsole.log(histogram('abbcccddddeeeeeffffff'));\
    \ // {f: 6}\nconsole.log(histogram('abbcccddddeeeeeffffffggggggghhhhhhhhiiiiiiiiijjjjjjjjjjkkkkkkkkkkkllllllllllllmmmmmmmmmmmmmnnnnnnnnnnnnnnoooooooooooooooppppppppppppppppqqqqqqqqqqqqqqqqqqrrrrrrrrrrrrrrrrrrrsssssssssssssssssssttttttttttttttttttttttuuuuuuuuuuuuuuuuuuuuuuuvvvvvvvvvvvvvvvvvvvvvvvvwwwwwwwwwwwwwwwwwwwwwwwwwwxxxxxxxxxxxxxxxxxxxxxxxxyyyyyyyyyyyyyyyyyyyyyyyyyyyyzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz",
  "    let hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (hist[test[i]]) {\n            hist[test[i]]++;\n       \
    \ } else {\n            hist[test[i]] = 1;\n        }\n    }\n    return hist;\n\
    }\n", "    let hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (hist[test[i]]) {\n            hist[test[i]]++;\n       \
    \ } else {\n            hist[test[i]] = 1;\n        }\n    }\n    return hist;\n\
    }\n", "    let letters = test.split(\" \");\n    let result: {[key: string]: number}\
    \ = {};\n    let max = 0;\n    for (let i = 0; i < letters.length; i++) {\n  \
    \      let letter = letters[i];\n        if (result[letter] === undefined) {\n\
    \            result[letter] = 1;\n        } else {\n            result[letter]++;\n\
    \        }\n        if (result[letter] > max) {\n            max = result[letter];\n\
    \        }\n    }\n    let maxLetters: string[] = [];\n    for (let key in result)\
    \ {\n        if (result[key] === max) {\n            maxLetters.push(key);\n \
    \       }\n    }\n    return {[maxLetters.join(\" \")]: max};\n}\n\nconsole.log(histogram(\"\
    a b c d e f\")); // {a: 1, b: 1, c: 1, d: 1, e: 1, f: 1}\nconsole.log(histogram(\"\
    a b c d e f aa bb cc dd ee ff\")); // {a: 2, b: 2, c: 2, d: 2, e: 2, f: 2}\nconsole.log(histogram(\"\
    aa bb cc dd ee ff\")); // {aa: 2, bb: 2, cc: 2, dd: 2, ee: 2, ff: 2}\nconsole.log(histogram(\"\
    aa bb cc dd ee ff aa bb cc dd ee ff aa bb cc dd ee ff\")); // {aa: 6, bb: 6, cc:\
    \ 6, dd: 6, ee: 6, ff: 6}\nconsole.log(histogram(\"aa bb cc dd ee ff aa bb cc\
    \ dd ee ff aa bb cc dd ee ff aa bb cc dd ee ff aa bb cc dd ee ff aa bb cc dd ee\
    \ ff aa bb cc dd ee ff aa bb cc dd ee ff aa bb cc dd ee ff aa bb cc dd ee ff aa\
    \ bb cc dd ee ff aa bb cc dd ee ff aa b", "    let result: {[key: string]: number}\
    \ = {};\n    let max: number = 0;\n    let maxLetters: string[] = [];\n    for\
    \ (let i = 0; i < test.length; i++) {\n        if (result[test[i]]) {\n      \
    \      result[test[i]]++;\n        } else {\n            result[test[i]] = 1;\n\
    \        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbbcccddd'));", "    let result: {[key:\
    \ string]: number} = {};\n    let max: number = 0;\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (!result[test[i]]) {\n            result[test[i]] = 1;\n\
    \        } else {\n            result[test[i]]++;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n        }\n    }\n    let finalResult:\
    \ {[key: string]: number} = {};\n    for (let key in result) {\n        if (result[key]\
    \ === max) {\n            finalResult[key] = result[key];\n        }\n    }\n\
    \    return finalResult;\n}\nconsole.log(histogram(\"aabbbccccdddd\"));\nconsole.log(histogram(\"\
    aabbbccccdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    for\
    \ (let i = 0; i < test.length; i++) {\n        if (result[test[i]]) {\n      \
    \      result[test[i]]++;\n        } else {\n            result[test[i]] = 1;\n\
    \        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \        }\n    }\n    let maxKeys: string[] = [];\n    for (let key in result)\
    \ {\n        if (result[key] === max) {\n            maxKeys.push(key);\n    \
    \    }\n    }\n    return {[maxKeys.join('')]: max};\n}\n\nconsole.log(histogram('aabbccc'));\
    \ // {c: 3}\nconsole.log(histogram('aabbcc')); // {a: 2, b: 2, c: 2}\nconsole.log(histogram('abc'));\
    \ // {a: 1, b: 1, c: 1}\nconsole.log(histogram('aabbccdddd')); // {d: 4}\nconsole.log(histogram('aabbccddddeee'));\
    \ // {e: 3}\nconsole.log(histogram('aabbccddddeeefff')); // {f: 3}\nconsole.log(histogram('aabbccddddeeefffggg'));\
    \ // {g: 3}\nconsole.log(histogram('aabbccddddeeefffggghhh')); // {h: 3}\nconsole.log(histogram('aabbccddddeeefffggghhhiii'));\
    \ // {i: 3}\nconsole.log(histogram('aabbccddddeeefffggghhhiiijjj')); // {j: 3}\n\
    console.log(histogram('aabbccddddeeefffggghhhiiijjjkkk')); // {k: 3}\nconsole.log(histogram('aabbccddddeeefffggghhhiiijjjkkklll'));\
    \ // {l: 3}\nconsole.log(histogram('aabbccddddeeefff", "    let result: {[key:\
    \ string]: number} = {};\n    let max: number = 0;\n    let maxLetters: string[]\
    \ = [];\n    for (let i = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbbcccdddd'));\nconsole.log(histogram('aabbbcccddddd'));\n\
    console.log(histogram('aabbbcccdddddd'));\nconsole.log(histogram('aabbbcccddddddd'));\n\
    console.log(histogram('aabbbcccdddddddd'));\nconsole.log(histogram('aabbbcccddddddddd'));\n\
    console.log(histogram('aabbbcccdddddddddd'));\nconsole.log(histogram('aabbbcccddddddddddd'));\n\
    console.log(histogram('aabbbcccdddddddddddd'));\nconsole.log(histogram('aabbbcccddddddddddddd'));\n\
    console.log(histogram('aabbbcccdddddddddddddd'));\nconsole.log(histogram('aabbbcccddddddddddddddd'));\n\
    console.log(histogram('aabbbcccdddddddddddddddd'));\nconsole.log(histogram('aabbbcccddddddddddddddddd'));\n\
    console.log(histogram('aabbbcccdddddddddddddddddd'));\nconsole.log(histogram('aabbbcccdddddddd",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetter: string = \"\";\n    for (let i: number = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]]) {\n            result[test[i]]++;\n        }\
    \ else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetter = test[i];\n\
    \        }\n    }\n    return {[maxLetter]: max};\n}\n\nconsole.log(histogram(\"\
    aaabbc\")); // {a: 3}\nconsole.log(histogram(\"abcd\")); // {a: 1}\nconsole.log(histogram(\"\
    aabbb\")); // {a: 2, b: 3}\nconsole.log(histogram(\"aabbccdd\")); // {a: 2, b:\
    \ 2, c: 2, d: 2}\nconsole.log(histogram(\"aabbccdde\")); // {a: 2, b: 2, c: 2,\
    \ d: 2, e: 1}\n", "    let result: {[key: string]: number} = {};\n    let max:\
    \ number = 0;\n    let maxLetter: string = '';\n    for (let i: number = 0; i\
    \ < test.length; i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n\
    \        } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetter = test[i];\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(histogram('aabbbccc'));",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i: number = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]]) {\n            result[test[i]]++;\n        }\
    \ else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbcc'));\
    \ // {a: 2, b: 2, c: 2}\nconsole.log(histogram('abbba')); // {a: 3, b: 2}\nconsole.log(histogram('abcd'));\
    \ // {a: 1, b: 1, c: 1, d: 1}\nconsole.log(histogram('aabbccdd')); // {a: 2, b:\
    \ 2, c: 2, d: 2}\nconsole.log(histogram('aabbccdde')); // {a: 2, b: 2, c: 2, d:\
    \ 2, e: 1}\nconsole.log(histogram('abbcccddddeeeee')); // {a: 1, b: 2, c: 3, d:\
    \ 4, e: 5}", "    let result: {[key: string]: number} = {};\n    let max: number\
    \ = 0;\n    let maxKey: string = '';\n    let maxKeys: string[] = [];\n    for\
    \ (let i = 0; i < test.length; i++) {\n        if (result[test[i]]) {\n      \
    \      result[test[i]]++;\n        } else {\n            result[test[i]] = 1;\n\
    \        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxKey = test[i];\n            maxKeys = [maxKey];\n        } else\
    \ if (result[test[i]] === max) {\n            maxKeys.push(test[i]);\n       \
    \ }\n    }\n    return {[maxKey]: max};\n}\n\nconsole.log(histogram('aabbcc'));\n\
    console.log(histogram('aabbccddd'));\nconsole.log(histogram('aabbccdddeee'));\n\
    console.log(histogram('aabbccdddeeefff'));\nconsole.log(histogram('aabbccdddeeefffggg'));\n\
    console.log(histogram('aabbccdddeeefffggghhh'));\nconsole.log(histogram('aabbccdddeeefffggghhhiiii'));\n\
    console.log(histogram('aabbccdddeeefffggghhhiiiijjjj'));\nconsole.log(histogram('aabbccdddeeefffggghhhiiiijjjjkkkk'));\n\
    console.log(histogram('aabbccdddeeefffggghhhiiiijjjjkkkkllll'));\nconsole.log(histogram('aabbccdddeeefffggghhhiiiijjjjkkkkllllmmmm'));\n\
    console.log(histogram('aabbccdddeeefffggghhhiiiijjjjkkkkllllmmmmnnnn'));\nconsole.log(histogram('aabbccdddeeefffggghhhiiiijjjjkkkkllllmmmmnnnnoooo'));\n\
    console.log(histogram('aabbccdddeeefffgg", "    let result: {[key: string]: number}\
    \ = {};\n    let max: number = 0;\n    let maxLetter: string = \"\";\n    for\
    \ (let i = 0; i < test.length; i++) {\n        if (result[test[i]]) {\n      \
    \      result[test[i]]++;\n        } else {\n            result[test[i]] = 1;\n\
    \        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetter = test[i];\n        }\n    }\n    for (let key in result)\
    \ {\n        if (result[key] !== max) {\n            delete result[key];\n   \
    \     }\n    }\n    return result;\n}\n\nconsole.log(histogram(\"aabbbcccc\"));\n\
    console.log(histogram(\"aabbccdddd\"));\nconsole.log(histogram(\"aabbccddddeeeee\"\
    ));\nconsole.log(histogram(\"aabbccddddeeeeeffffffffff\"));\nconsole.log(histogram(\"\
    aabbccddddeeeeeffffffffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg",
  "    let hist: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++) {\n  \
    \      if (hist[test[i]]) {\n            hist[test[i]]++;\n        } else {\n\
    \            hist[test[i]] = 1;\n        }\n        if (hist[test[i]] > max) {\n\
    \            max = hist[test[i]];\n            maxLetters = [test[i]];\n     \
    \   } else if (hist[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbccddddeee'));\
    \ // {d: 4}\nconsole.log(histogram('aabbccddddeeefff')); // {f: 3}\nconsole.log(histogram('aabbccddddeeefffggg'));\
    \ // {f: 3}\nconsole.log(histogram('aabbccddddeeefffggghhh')); // {h: 3}\nconsole.log(histogram('aabbccddddeeefffggghhhiii'));\
    \ // {i: 3}\nconsole.log(histogram('aabbccddddeeefffggghhhiiijjj')); // {i: 3}\n\
    console.log(histogram('aabbccddddeeefffggghhhiiijjjkkk')); // {i: 3}\nconsole.log(histogram('aabbccddddeeefffggghhhiiijjjkkklll'));\
    \ // {i: 3}\nconsole.log(histogram('aabbccddddeeefffggghhhiiijjjkkklllmmm'));\
    \ // {i: 3}\nconsole.log(histogram('aabbccddddeeefffggghhhiiijjjkkklllmmm'));\
    \ // {i: 3}\nconsole.log(histogram('aabbccddddeeefffggghhhiiijjjkkklllmmm'));\
    \ // {i: 3", "    let dict: {[key: string]: number} = {};\n    for (let i = 0;\
    \ i < test.length; i++) {\n        if (dict[test[i]]) {\n            dict[test[i]]++;\n\
    \        } else {\n            dict[test[i]] = 1;\n        }\n    }\n    return\
    \ dict;\n}\n", "    let result: {[key: string]: number} = {};\n    let max: number\
    \ = 0;\n    let maxLetters: string[] = [];\n    test.split('').forEach(letter\
    \ => {\n        if(result[letter]) {\n            result[letter]++;\n        }\
    \ else {\n            result[letter] = 1;\n        }\n        if(result[letter]\
    \ > max) {\n            max = result[letter];\n            maxLetters = [letter];\n\
    \        } else if(result[letter] === max) {\n            maxLetters.push(letter);\n\
    \        }\n    });\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbccdd'));\n\
    console.log(histogram('aabbccddeeff'));\nconsole.log(histogram('aabbccddeeffgg'));\n\
    console.log(histogram('aabbccddeeffgghh'));\nconsole.log(histogram('aabbccddeeffgghhii'));\n\
    console.log(histogram('aabbccddeeffgghhiijj'));\nconsole.log(histogram('aabbccddeeffgghhiijjkk'));\n\
    console.log(histogram('aabbccddeeffgghhiijjkkll'));\nconsole.log(histogram('aabbccddeeffgghhiijjkkllmm'));\n\
    console.log(histogram('aabbccddeeffgghhiijjkkllmmnn'));\nconsole.log(histogram('aabbccddeeffgghhiijjkkllmmnnoo'));\n\
    console.log(histogram('aabbccddeeffgghhiijjkkllmmnnoopp'));\nconsole.log(histogram('aabbccddeeffgghhiijjkkllmmnnooppqq'));\n\
    console.log(histogram('aabbccddeeffgghhiijjkkllmmnnooppqqrr'));\nconsole.log(histogram('aabbccddeeffgghhiijjkkllmmnnooppqqrrsstt'));\n\
    console.log(histogram('", "    let histogram: {[key: string]: number} = {};\n\
    \    for (let i = 0; i < test.length; i++) {\n        if (histogram[test[i]])\
    \ {\n            histogram[test[i]]++;\n        } else {\n            histogram[test[i]]\
    \ = 1;\n        }\n    }\n    return histogram;\n}\n", "    let dict: {[key: string]:\
    \ number} = {};\n    let max: number = 0;\n    let maxLetters: string[] = [];\n\
    \    for (let i = 0; i < test.length; i++) {\n        if (dict[test[i]]) {\n \
    \           dict[test[i]]++;\n        } else {\n            dict[test[i]] = 1;\n\
    \        }\n        if (dict[test[i]] > max) {\n            max = dict[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (dict[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbbccdddd'));\nconsole.log(histogram('aabbbccddddeeeee'));\n\
    console.log(histogram('aabbbccddddeeeeefffff'));\nconsole.log(histogram('aabbbccddddeeeeefffffgggggg'));\n\
    console.log(histogram('aabbbccddddeeeeefffffgggggghhhhhhh'));\nconsole.log(histogram('aabbbccddddeeeeefffffgggggghhhhhhhiiiiiiii'));\n\
    console.log(histogram('aabbbccddddeeeeefffffgggggghhhhhhhiiiiiiiijjjjjjjjjj'));\n\
    console.log(histogram('aabbbccddddeeeeefffffgggggghhhhhhhiiiiiiiijjjjjjjjjjkkkkkkkkkkk'));\n\
    console.log(histogram('aabbbccddddeeeeefffffgggggghhhhhhhiiiiiiiijjjjjjjjjjkkkkkkkkkkkllllllllllll'));\n\
    console.log(histogram('aabbbccddddeeeeefffffgggggghhhhhhhiiiiiiiijjjjjjjjjjkkkkkkkkkkkllllllllllllmmmmmmmmmmmmmm'));\n\
    console.log(histogram('aabbbccddddeeeeefffffgggggghhhhhhhiiiiiiii", "    let hist:\
    \ {[key: string]: number} = {};\n    for (let i = 0; i < test.length; i++) {\n\
    \        let letter = test[i];\n        if (hist[letter]) {\n            hist[letter]++;\n\
    \        } else {\n            hist[letter] = 1;\n        }\n    }\n    return\
    \ hist;\n}\n", "    let result: {[key: string]: number} = {};\n    let max: number\
    \ = 0;\n    let maxLetters: string[] = [];\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n   \
    \     } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbcccc'));\
    \ // {c: 4}\nconsole.log(histogram('aabbbccccdddd')); // {d: 4}\nconsole.log(histogram('aabbbccccddddeeeefffff'));\
    \ // {e: 5}\nconsole.log(histogram('aabbbccccddddeeeefffffgggggg')); // {g: 7}\n\
    console.log(histogram('aabbbccccddddeeeefffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    test.split(\"\
    \").forEach(function(letter) {\n        if (result[letter] === undefined) {\n\
    \            result[letter] = 1;\n        } else {\n            result[letter]++;\n\
    \        }\n        if (result[letter] > max) {\n            max = result[letter];\n\
    \        }\n    });\n    for (let key in result) {\n        if (result[key] !==\
    \ max) {\n            delete result[key];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(histogram(\"hello\")); // {l: 2}\nconsole.log(histogram(\"aabbcc\"\
    )); // {a: 2, b: 2, c: 2}\nconsole.log(histogram(\"abbba\")); // {a: 1, b: 3}\n\
    console.log(histogram(\"\")); // {}", "    let histogram: {[key: string]: number}\
    \ = {};\n    let max: number = 0;\n    let maxLetters: string[] = [];\n    for\
    \ (let i = 0; i < test.length; i++) {\n        if (histogram[test[i]]) {\n   \
    \         histogram[test[i]] += 1;\n        } else {\n            histogram[test[i]]\
    \ = 1;\n        }\n        if (histogram[test[i]] > max) {\n            max =\
    \ histogram[test[i]];\n            maxLetters = [test[i]];\n        } else if\
    \ (histogram[test[i]] === max) {\n            maxLetters.push(test[i]);\n    \
    \    }\n    }\n    return {[maxLetters.join('')]: max};\n}\nconsole.log(histogram('aabbbccc'));\
    \ // {a: 2, b: 3, c: 3}\nconsole.log(histogram('aabbbcccdddd')); // {d: 4}\nconsole.log(histogram('aabbbcccddddeeee'));\
    \ // {e: 4}\nconsole.log(histogram('aabbbcccddddeeeeffff')); // {f: 4}\nconsole.log(histogram('aabbbcccddddeeeeffffgggg'));\
    \ // {g: 4}\nconsole.log(histogram('aabbbcccddddeeeeffffgggghhhh')); // {h: 4}\n\
    console.log(histogram('aabbbcccddddeeeeffffgggghhhhiiii')); // {i: 4}\nconsole.log(histogram('aabbbcccddddeeeeffffgggghhhhiiiijjjj'));\
    \ // {j: 4}\nconsole.log(histogram('aabbbcccddddeeeeffffgggghhhhiiiijjjjkkkk'));\
    \ // {k: 4}\nconsole.log(histogram('aabbbcccddddeeeeffffgggghhhhiiiijjjjkkkkllll'));\
    \ // {l: 4}\nconsole.log(histogram('aabbbcccddddeeeeffffgggghhhhiiiijjjjkkkk",
  "    let histogram: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (histogram[test[i]]) {\n            histogram[test[i]]++;\n\
    \        } else {\n            histogram[test[i]] = 1;\n        }\n    }\n   \
    \ return histogram;\n}\n", "    let result: {[key: string]: number} = {};\n  \
    \  let max: number = 0;\n    let maxLetters: string[] = [];\n    for (let i: number\
    \ = 0; i < test.length; i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n\
    \        } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbcccc'));\n\
    console.log(histogram('abcdefghijklmnopqrstuvwxyz'));\nconsole.log(histogram('aabbbccccddddeeeeffffgggghhhh'));\n\
    console.log(histogram('aabbbccccddddeeeeffffgggghhhhiiiiiiiiijjjjjjjjjjkkkkkkkkkkllllllllllmmmmmmmmmmnnnnnnnnnnooooooooooppppppppppqqqqqqqqqqrrrrrrrrrrssssssssssttttttttttuuuuuuuuuuvvvvvvvvvvwwwwwwwwwwxxxxxxxxxxyyyyyyyyyyzzzzzzzzzz'));",
  "    let dict: {[key: string]: number} = {};\n    let max: number = 0;\n    for\
    \ (let i = 0; i < test.length; i++) {\n        if (dict[test[i]]) {\n        \
    \    dict[test[i]]++;\n        } else {\n            dict[test[i]] = 1;\n    \
    \    }\n        if (dict[test[i]] > max) {\n            max = dict[test[i]];\n\
    \        }\n    }\n    let result: {[key: string]: number} = {};\n    for (let\
    \ key in dict) {\n        if (dict[key] === max) {\n            result[key] =\
    \ dict[key];\n        }\n    }\n    return result;\n}\n\nconsole.log(histogram(\"\
    hello\"));\nconsole.log(histogram(\"world\"));\nconsole.log(histogram(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetter: string = '';\n    for (let i: number = 0; i < test.length; i++) {\n\
    \        if (result[test[i]]) {\n            result[test[i]]++;\n        } else\
    \ {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetter = test[i];\n\
    \        }\n    }\n    let maxDict: {[key: string]: number} = {};\n    for (let\
    \ i: number = 0; i < test.length; i++) {\n        if (result[test[i]] === max)\
    \ {\n            maxDict[test[i]] = max;\n        }\n    }\n    return maxDict;\n\
    }\n\nconsole.log(histogram('aabbccdddd'));\nconsole.log(histogram('aabbccddddeee'));\n\
    console.log(histogram('aabbccddddeeeee'));\nconsole.log(histogram('aabbccddddeeeeefffff'));\n\
    console.log(histogram('aabbccddddeeeeefffffgggggg'));\nconsole.log(histogram('aabbccddddeeeeefffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg",
  "    let hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (hist[test[i]]) {\n            hist[test[i]]++;\n       \
    \ } else {\n            hist[test[i]] = 1;\n        }\n    }\n    return hist;\n\
    }\n", "    let histogram: {[key: string]: number} = {};\n    for (let i = 0; i\
    \ < test.length; i++) {\n        if (histogram[test[i]]) {\n            histogram[test[i]]++;\n\
    \        } else {\n            histogram[test[i]] = 1;\n        }\n    }\n   \
    \ return histogram;\n}\n", "    let hist: {[key: string]: number} = {};\n    let\
    \ max: number = 0;\n    let maxLetters: string[] = [];\n    for (let i = 0; i\
    \ < test.length; i++) {\n        if (hist[test[i]]) {\n            hist[test[i]]++;\n\
    \        } else {\n            hist[test[i]] = 1;\n        }\n        if (hist[test[i]]\
    \ > max) {\n            max = hist[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (hist[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join(\"\")]: max};\n}\n\nconsole.log(histogram(\"\
    aabbccdddd\"));\nconsole.log(histogram(\"aabbccddddeeee\"));\nconsole.log(histogram(\"\
    aabbccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    let letters: string[] = test.split(\" \");\n\
    \    for (let i = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
    \ {\n            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
    \ = 1;\n        }\n        if (result[letters[i]] > max) {\n            max =\
    \ result[letters[i]];\n            maxLetters = [letters[i]];\n        } else\
    \ if (result[letters[i]] === max) {\n            maxLetters.push(letters[i]);\n\
    \        }\n    }\n    return {[maxLetters.join(\" \")]: max};\n}\n", "    let\
    \ hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length; i++)\
    \ {\n        if (hist[test[i]] === undefined) {\n            hist[test[i]] = 1;\n\
    \        } else {\n            hist[test[i]] += 1;\n        }\n    }\n    return\
    \ hist;\n}\n", "    let hist: {[key: string]: number} = {};\n    for (let i =\
    \ 0; i < test.length; i++) {\n        if (hist[test[i]]) {\n            hist[test[i]]\
    \ += 1;\n        } else {\n            hist[test[i]] = 1;\n        }\n    }\n\
    \    return hist;\n}\n", "    let result: {[key: string]: number} = {};\n    let\
    \ max: number = 0;\n    let maxLetters: string[] = [];\n    test.split(\"\").forEach(letter\
    \ => {\n        if (result[letter]) {\n            result[letter]++;\n       \
    \ } else {\n            result[letter] = 1;\n        }\n        if (result[letter]\
    \ > max) {\n            max = result[letter];\n            maxLetters = [letter];\n\
    \        } else if (result[letter] === max) {\n            maxLetters.push(letter);\n\
    \        }\n    });\n    return {[maxLetters.join(\"\")]: max};\n}\n\nconsole.log(histogram(\"\
    abbccc\")); // {c: 3}\nconsole.log(histogram(\"abbcccddddeeeee\")); // {e: 5}\n\
    console.log(histogram(\"abbcccddddeeeeeffffff\")); // {f: 6}\nconsole.log(histogram(\"\
    abbcccddddeeeeeffffffgggggg\")); // {g: 7}\nconsole.log(histogram(\"abbcccddddeeeeeffffffggggggaaaaaaa\"\
    )); // {a: 8}\nconsole.log(histogram(\"abbcccddddeeeeeffffffggggggaaaaaaaabbbbbbbbbb\"\
    )); // {b: 11}\nconsole.log(histogram(\"abbcccddddeeeeeffffffggggggaaaaaaaabbbbbbbbbbcccccccccc\"\
    )); // {c: 12}\nconsole.log(histogram(\"abbcccddddeeeeeffffffggggggaaaaaaaabbbbbbbbbbccccccccccddddddddddd\"\
    )); // {d: 13}\nconsole.log(histogram(\"abbcccddddeeeeeffffffggggggaaaaaaaabbbbbbbbbbccccccccccdddddddddddeeeeeeeeeee\"\
    )); // {e: 14}\nconsole.log(histogram(\"abbcccddddeeeeeffffffggggggaaaaaaaabbbbbbbbbbccccccccccdddddddddddeeeeeeeeeeefffffffffff\"\
    )); // {f: 15}\nconsole.log", "    let result: {[key: string]: number} = {};\n\
    \    let max: number = 0;\n    let maxKeys: string[] = [];\n    for (let i: number\
    \ = 0; i < test.length; i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n\
    \        } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxKeys = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxKeys.push(test[i]);\n\
    \        }\n    }\n    return {[maxKeys.join('')]: max};\n}\n\nconsole.log(histogram('aabbbcccc'));\n\
    console.log(histogram('aabbbccccdddd'));\nconsole.log(histogram('aabbbccccddddeeeee'));\n\
    console.log(histogram('aabbbccccddddeeeeeffffff'));\nconsole.log(histogram('aabbbccccddddeeeeeffffffggggggg'));\n\
    console.log(histogram('aabbbccccddddeeeeeffffffggggggghhhhhhhh'));\nconsole.log(histogram('aabbbccccddddeeeeeffffffggggggghhhhhhhhiiiiiiii'));\n\
    console.log(histogram('aabbbccccddddeeeeeffffffggggggghhhhhhhhiiiiiiiijjjjjjjjj'));\n\
    console.log(histogram('aabbbccccddddeeeeeffffffggggggghhhhhhhhiiiiiiiijjjjjjjjjkkkkkkkkkk'));\n\
    console.log(histogram('aabbbccccddddeeeeeffffffggggggghhhhhhhhiiiiiiiijjjjjjjjjkkkkkkkkkklllllllllll'));\n\
    console.log(histogram('aabbbccccddddeeeeeffffffggggggghhhhhhhhiiiiiiiijjjjjjjjjkkkkkkkkkklllllllllllmmmmmmmmmmmmmm'));",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++) {\n  \
    \      if (result[test[i]]) {\n            result[test[i]]++;\n        } else\
    \ {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbccc'));\
    \ // {a: 2, b: 3, c: 3}\nconsole.log(histogram('aabbcc')); // {a: 2, b: 2, c:\
    \ 2}\nconsole.log(histogram('abbbcc')); // {b: 3, c: 2}\nconsole.log(histogram('abbcc'));\
    \ // {b: 2, c: 2}\nconsole.log(histogram('abcc')); // {a: 1, b: 1, c: 2}\nconsole.log(histogram('a'));\
    \ // {a: 1}\nconsole.log(histogram('')); // {}\n", "    let result: {[key: string]:\
    \ number} = {};\n    for (let i = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n    }\n    return result;\n}\n", "    let result: {[key: string]:\
    \ number} = {};\n    let max: number = 0;\n    let maxLetters: string[] = [];\n\
    \    let letters: string[] = test.split(\" \");\n    for (let letter of letters)\
    \ {\n        if (result[letter] === undefined) {\n            result[letter] =\
    \ 1;\n        } else {\n            result[letter]++;\n        }\n        if (result[letter]\
    \ > max) {\n            max = result[letter];\n            maxLetters = [letter];\n\
    \        } else if (result[letter] === max) {\n            maxLetters.push(letter);\n\
    \        }\n    }\n    return {[maxLetters.join(\" \")]: max};\n}\n\nconsole.log(histogram(\"\
    a b c d e f\")); // {a: 1, b: 1, c: 1, d: 1, e: 1, f: 1}\nconsole.log(histogram(\"\
    a b c d e f aa bb cc dd ee ff\")); // {aa: 2, bb: 2, cc: 2, dd: 2, ee: 2, ff:\
    \ 2}\nconsole.log(histogram(\"a b c d e f aa bb cc dd ee ff aaa\")); // {aaa:\
    \ 1}\nconsole.log(histogram(\"a b c d e f aa bb cc dd ee ff aaa aa\")); // {aa:\
    \ 3}\nconsole.log(histogram(\"a b c d e f aa bb cc dd ee ff aaa aa bb\")); //\
    \ {aa: 3, bb: 3}\nconsole.log(histogram(\"a b c d e f aa bb cc dd ee ff aaa aa\
    \ bb aaa\")); // {aaa: 3}\nconsole.log(histogram(\"a b c d e f aa bb cc dd ee\
    \ ff aaa aa bb aaa bb\")); // {bb: 4}\nconsole.log(histogram(\"a b c d e f aa\
    \ bb cc dd ee ff aaa aa bb aaa bb cc\")); // {bb: 4, cc: 4}\nconsole.log(histogram",
  "    let histogram: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (histogram[test[i]]) {\n            histogram[test[i]]++;\n\
    \        } else {\n            histogram[test[i]] = 1;\n        }\n    }\n   \
    \ return histogram;\n}\n", "    let hist: {[key: string]: number} = {};\n    for\
    \ (let i = 0; i < test.length; i++) {\n        if (hist[test[i]]) {\n        \
    \    hist[test[i]] += 1;\n        } else {\n            hist[test[i]] = 1;\n \
    \       }\n    }\n    return hist;\n}\n", "    let result: {[key: string]: number}\
    \ = {};\n    let maxCount: number = 0;\n    let maxLetter: string = '';\n    for\
    \ (let i: number = 0; i < test.length; i++) {\n        if (result[test[i]] ===\
    \ undefined) {\n            result[test[i]] = 1;\n        } else {\n         \
    \   result[test[i]]++;\n        }\n        if (result[test[i]] > maxCount) {\n\
    \            maxCount = result[test[i]];\n            maxLetter = test[i];\n \
    \       }\n    }\n    for (let key in result) {\n        if (result[key] !== maxCount)\
    \ {\n            delete result[key];\n        }\n    }\n    return result;\n}\n\
    console.log(histogram('abbccc')); // {c: 3}\nconsole.log(histogram('abbcccc'));\
    \ // {c: 4}\nconsole.log(histogram('abbccccc')); // {c: 5}\nconsole.log(histogram('abbcccccc'));\
    \ // {c: 6}\nconsole.log(histogram('abbccccccc')); // {c: 7}\nconsole.log(histogram('abbcccccccc'));\
    \ // {c: 8}\nconsole.log(histogram('abbccccccccc')); // {c: 9}\nconsole.log(histogram('abbcccccccccc'));\
    \ // {c: 10}\nconsole.log(histogram('abbccccccccccc')); // {c: 11}\nconsole.log(histogram('abbcccccccccccc'));\
    \ // {c: 12}\nconsole.log(histogram('abbccccccccccccc')); // {c: 13}\nconsole.log(histogram('abbcccccccccccccc'));\
    \ // {c: 14}\nconsole.log(histogram('abbccccccccccccccc')); // {c: 15}\nconsole.log(histogram('abbcccccccccccccccc'));\
    \ // {c: 16}\nconsole.log(histogram('abbccccccccccccccccc'));", "    let result:\
    \ {[key: string]: number} = {};\n    let max: number = 0;\n    let maxLetter:\
    \ string = \"\";\n    for (let i = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetter = test[i];\n        }\n    }\n    return result;\n}\n",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i: number = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]]) {\n            result[test[i]]++;\n        }\
    \ else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbccccdddd'));\
    \ // {c: 4}\nconsole.log(histogram('aabbccdddd')); // {d: 4}\nconsole.log(histogram('aabbccddddeee'));\
    \ // {d: 4}\nconsole.log(histogram('aabbccddddeeeeff')); // {e: 5}\nconsole.log(histogram('aabbccddddeeeeffff'));\
    \ // {e: 5}\nconsole.log(histogram('aabbccddddeeeeffffgg')); // {e: 5}\nconsole.log(histogram('aabbccddddeeeeffffgggg'));\
    \ // {e: 5}\nconsole.log(histogram('aabbccddddeeeeffffgggggg')); // {e: 5}\nconsole.log(histogram('aabbccddddeeeeffffgggggggg'));\
    \ // {e: 5}\nconsole.log(histogram('aabbccddddeeeeffffgggggggggg')); // {e: 5}\n\
    console.log(histogram('aabbccddddeeeeffffgggggggggggg')); // {e: 5}\nconsole.log(histogram('aabbccddddeeeeffffgggggggggggggg'));\
    \ // {e: 5}\nconsole.log(histogram('aabbccddddeeeeffffgggggggggggggggg')", " \
    \   let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    test.split(\"\").forEach(letter => {\n     \
    \   if (result[letter]) {\n            result[letter]++;\n        } else {\n \
    \           result[letter] = 1;\n        }\n        if (result[letter] > max)\
    \ {\n            max = result[letter];\n            maxLetters = [letter];\n \
    \       } else if (result[letter] === max) {\n            maxLetters.push(letter);\n\
    \        }\n    });\n    return {[maxLetters.join(\"\")]: max};\n}\n\nconsole.log(histogram(\"\
    aabbbccc\"));\nconsole.log(histogram(\"aabbbcccdddd\"));\nconsole.log(histogram(\"\
    aabbbcccddddeeee\"));", "    let result: {[key: string]: number} = {};\n    let\
    \ max: number = 0;\n    let maxLetters: string[] = [];\n    for (let i: number\
    \ = 0; i < test.length; i++) {\n        if (result[test[i]] === undefined) {\n\
    \            result[test[i]] = 1;\n        } else {\n            result[test[i]]++;\n\
    \        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join(\"\
    \")]: max};\n}\n\nconsole.log(histogram(\"aabbbccc\")); // {a: 2, b: 3, c: 3}\n\
    console.log(histogram(\"aabbccdddd\")); // {d: 4}\nconsole.log(histogram(\"aabbccddddeeee\"\
    )); // {e: 4}\nconsole.log(histogram(\"aabbccddddeeeeffffff\")); // {f: 6}\nconsole.log(histogram(\"\
    aabbccddddeeeeffffffgggggg\")); // {g: 7}\nconsole.log(histogram(\"aabbccddddeeeeffffffggggggaaaaaaaaa\"\
    )); // {a: 9}\nconsole.log(histogram(\"aabbccddddeeeeffffffggggggaaaaaaaaabbbbbbbbbb\"\
    )); // {b: 11}\nconsole.log(histogram(\"aabbccddddeeeeffffffggggggaaaaaaaaabbbbbbbbbbcccccccccc\"\
    )); // {c: 12}\nconsole.log(histogram(\"aabbccddddeeeeffffffggggggaaaaaaaaabbbbbbbbbbccccccccccdddddddddd\"\
    )); // {d: 13}\nconsole.log(histogram(\"aabbccddddeeeeffffffggggggaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeeee\"\
    )); // {e: 16}\nconsole.log(histogram(\"", "    let histogram: {[key: string]:\
    \ number} = {};\n    for (let i = 0; i < test.length; i++) {\n        if (histogram[test[i]])\
    \ {\n            histogram[test[i]]++;\n        } else {\n            histogram[test[i]]\
    \ = 1;\n        }\n    }\n    return histogram;\n}\n", "    let histogram: {[key:\
    \ string]: number} = {};\n    let max: number = 0;\n    let maxLetters: string[]\
    \ = [];\n    for (let i: number = 0; i < test.length; i++) {\n        if (histogram[test[i]])\
    \ {\n            histogram[test[i]]++;\n        } else {\n            histogram[test[i]]\
    \ = 1;\n        }\n        if (histogram[test[i]] > max) {\n            max =\
    \ histogram[test[i]];\n            maxLetters = [test[i]];\n        } else if\
    \ (histogram[test[i]] === max) {\n            maxLetters.push(test[i]);\n    \
    \    }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbccdddd'));\n\
    console.log(histogram('aabbbccddddee'));\nconsole.log(histogram('aabbbccddddeeff'));\n\
    console.log(histogram('aabbbccddddeeffgg'));\nconsole.log(histogram('aabbbccddddeeffgggg'));\n\
    console.log(histogram('aabbbccddddeeffgggggg'));\nconsole.log(histogram('aabbbccddddeeffgggggggg'));\n\
    console.log(histogram('aabbbccddddeeffgggggggggg'));\nconsole.log(histogram('aabbbccddddeeffgggggggggggg'));\n\
    console.log(histogram('aabbbccddddeeffgggggggggggggg'));\nconsole.log(histogram('aabbbccddddeeffgggggggggggggggg'));\n\
    console.log(histogram('aabbbccddddeeffgggggggggggggggggg'));\nconsole.log(histogram('aabbbccddddeeffgggggggggggggggggggg'));\n\
    console.log(histogram('aabbbccddddeeffgggggggggggggggggggggg'));\nconsole.log",
  "    let histogram: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (histogram[test[i]]) {\n            histogram[test[i]]++;\n\
    \        } else {\n            histogram[test[i]] = 1;\n        }\n    }\n   \
    \ return histogram;\n}\n", "    let histogram: {[key: string]: number} = {};\n\
    \    for (let i = 0; i < test.length; i++) {\n        if (histogram[test[i]])\
    \ {\n            histogram[test[i]] += 1;\n        } else {\n            histogram[test[i]]\
    \ = 1;\n        }\n    }\n    return histogram;\n}\n", "    let dict: {[key: string]:\
    \ number} = {};\n    let max: number = 0;\n    let maxLetters: string[] = [];\n\
    \    for (let i = 0; i < test.length; i++) {\n        if (dict[test[i]]) {\n \
    \           dict[test[i]]++;\n        } else {\n            dict[test[i]] = 1;\n\
    \        }\n        if (dict[test[i]] > max) {\n            max = dict[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (dict[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbccdddd'));\nconsole.log(histogram('aabbccddddeee'));\n\
    console.log(histogram('aabbccddddeeeee'));\nconsole.log(histogram('aabbccddddeeeeefffff'));\n\
    console.log(histogram('aabbccddddeeeeefffffgggggg'));\nconsole.log(histogram('aabbccddddeeeeefffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg",
  "    let hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (hist[test[i]]) {\n            hist[test[i]] += 1;\n    \
    \    } else {\n            hist[test[i]] = 1;\n        }\n    }\n    return hist;\n\
    }\n", "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n\
    \    let maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]]) {\n            result[test[i]] += 1;\n     \
    \   } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\nconsole.log(histogram('abcccccddddeeeeeffffff'));",
  "    let result: {[key: string]: number} = {};\n    let max = 0;\n    let maxLetter\
    \ = '';\n    for (let i = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetter = test[i];\n        }\n    }\n    return {[maxLetter]:\
    \ max};\n}\nconsole.log(histogram('abracadabra'));", "    let dict: {[key: string]:\
    \ number} = {};\n    let max: number = 0;\n    let maxLetters: string[] = [];\n\
    \    for (let i = 0; i < test.length; i++) {\n        if (dict[test[i]]) {\n \
    \           dict[test[i]]++;\n        } else {\n            dict[test[i]] = 1;\n\
    \        }\n        if (dict[test[i]] > max) {\n            max = dict[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (dict[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbbccdddd'));\nconsole.log(histogram('aabbbccddddeeeeeeee'));\n\
    console.log(histogram('aabbbccddddeeeeeeeeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
  "    const letters = test.split(\" \");\n    const letterCounts: {[key: string]:\
    \ number} = {};\n    let maxCount = 0;\n    for (const letter of letters) {\n\
    \        if (letterCounts[letter]) {\n            letterCounts[letter]++;\n  \
    \      } else {\n            letterCounts[letter] = 1;\n        }\n        if\
    \ (letterCounts[letter] > maxCount) {\n            maxCount = letterCounts[letter];\n\
    \        }\n    }\n    const result: {[key: string]: number} = {};\n    for (const\
    \ letter in letterCounts) {\n        if (letterCounts[letter] === maxCount) {\n\
    \            result[letter] = letterCounts[letter];\n        }\n    }\n    return\
    \ result;\n}\n\nconsole.log(histogram(\"a b c d e f\")); // {a: 1, b: 1, c: 1,\
    \ d: 1, e: 1, f: 1}\nconsole.log(histogram(\"a b c d e f aa bb cc dd ee\")); //\
    \ {a: 2, b: 2, c: 2, d: 2, e: 2}\nconsole.log(histogram(\"a b c d e f aa bb cc\
    \ dd ee aaa\")); // {a: 3}\nconsole.log(histogram(\"a b c d e f aa bb cc dd ee\
    \ aaa bbb\")); // {a: 3, b: 3}\nconsole.log(histogram(\"a b c d e f aa bb cc dd\
    \ ee aaa bbb ccc\")); // {a: 3, b: 3, c: 3}\nconsole.log(histogram(\"a b c d e\
    \ f aa bb cc dd ee aaa bbb ccc ddd\")); // {a: 3, b: 3, c: 3, d: 3}\nconsole.log(histogram(\"\
    a b c d e f aa bb cc dd ee aaa bbb ccc ddd eee\")); // {a: 3, b: 3, c: 3, d: 3,\
    \ e: 3}\nconsole.log(histogram(\"a b c d e f aa", "    let hist: {[key: string]:\
    \ number} = {};\n    for (let i = 0; i < test.length; i++) {\n        if (hist[test[i]])\
    \ {\n            hist[test[i]]++;\n        } else {\n            hist[test[i]]\
    \ = 1;\n        }\n    }\n    return hist;\n}\n", "    let result: {[key: string]:\
    \ number} = {};\n    let max: number = 0;\n    let maxLetter: string = '';\n \
    \   for (let i: number = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetter = test[i];\n        }\n    }\n    for (let key in result)\
    \ {\n        if (result[key] !== max) {\n            delete result[key];\n   \
    \     }\n    }\n    return result;\n}\n\nconsole.log(histogram('aabbcc')); //\
    \ {a: 2, b: 2, c: 2}\nconsole.log(histogram('aabbccdd')); // {a: 2, b: 2, c: 2,\
    \ d: 2}\nconsole.log(histogram('abc')); // {a: 1, b: 1, c: 1}\nconsole.log(histogram('aabbccddeeff'));\
    \ // {a: 2, b: 2, c: 2, d: 2, e: 2, f: 2}\nconsole.log(histogram('aabbccddeeffgg'));\
    \ // {a: 2, b: 2, c: 2, d: 2, e: 2, f: 2, g: 2}\nconsole.log(histogram('aabbccddeeffgghh'));\
    \ // {a: 2, b: 2, c: 2, d: 2, e: 2, f: 2, g: 2, h: 2}\nconsole.log(histogram('aabbccddeeffgghhiijj'));\
    \ // {a: 2, b: 2, c: 2, d: 2, e: 2, f: 2, g: 2, h: 2, i: 2, j: 2}\nconsole.log(histogram('aabbccddeeffgghhiijjkkll'));\
    \ // {a: 2, b: 2, c: 2, d: 2, e: 2", "    let result: {[key: string]: number}\
    \ = {};\n    let max: number = 0;\n    let maxLetters: string[] = [];\n    let\
    \ letters: string[] = test.split(\" \");\n    for (let letter of letters) {\n\
    \        if (result[letter] === undefined) {\n            result[letter] = 1;\n\
    \        } else {\n            result[letter]++;\n        }\n        if (result[letter]\
    \ > max) {\n            max = result[letter];\n            maxLetters = [letter];\n\
    \        } else if (result[letter] === max) {\n            maxLetters.push(letter);\n\
    \        }\n    }\n    return {[maxLetters.join(\" \")]: max};\n}\n\nconsole.log(histogram(\"\
    a b c d e f\")); // {a: 1, b: 1, c: 1, d: 1, e: 1, f: 1}\nconsole.log(histogram(\"\
    a b c d e f a b c d e f\")); // {a: 2, b: 2, c: 2, d: 2, e: 2, f: 2}\nconsole.log(histogram(\"\
    a b c d e f a b c d e f a b c d e f\")); // {a: 3, b: 3, c: 3, d: 3, e: 3, f:\
    \ 3}\nconsole.log(histogram(\"a b c d e f a b c d e f a b c d e f a b c d e f\"\
    )); // {a: 4, b: 4, c: 4, d: 4, e: 4, f: 4}\nconsole.log(histogram(\"a b c d e\
    \ f a b c d e f a b c d e f a b c d e f a b c d e f\")); // {a: 5, b: 5, c: 5,\
    \ d: 5, e: 5, f: 5}\nconsole.log(histogram(\"a b c d e f a b c d e f a b c d e\
    \ f a b c d e f a b c d e f a b c d e f\")); // {a: 6, b: 6, c: 6, d: 6, e: 6,",
  "    let result = {};\n    let max = 0;\n    let maxKeys = [];\n    for (let i =\
    \ 0; i < test.length; i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n\
    \        } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxKeys = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxKeys.push(test[i]);\n\
    \        }\n    }\n    return {[maxKeys.join('')]: max};\n}\n\nconsole.log(histogram('aabbbccddddd'));\n\
    console.log(histogram('aabbbccdddddeeeee'));\nconsole.log(histogram('aabbbccdddddeeeeefffff'));\n\
    console.log(histogram('aabbbccdddddeeeeefffffgggggg'));\nconsole.log(histogram('aabbbccdddddeeeeefffffgggggghhhhhhh'));\n\
    console.log(histogram('aabbbccdddddeeeeefffffgggggghhhhhhhiiiiiiii'));\nconsole.log(histogram('aabbbccdddddeeeeefffffgggggghhhhhhhiiiiiiiijjjjjjjjjj'));\n\
    console.log(histogram('aabbbccdddddeeeeefffffgggggghhhhhhhiiiiiiiijjjjjjjjjjkkkkkkkkkkk'));\n\
    console.log(histogram('aabbbccdddddeeeeefffffgggggghhhhhhhiiiiiiiijjjjjjjjjjkkkkkkkkkkkllllllllllll'));\n\
    console.log(histogram('aabbbccdddddeeeeefffffgggggghhhhhhhiiiiiiiijjjjjjjjjjkkkkkkkkkkkllllllllllllmmmmmmmmmmmmmm'));\n\
    console.log(histogram('aabbbccdddddeeeeefffffgggggghhhhhhhiiiiiiiijjjjjjjjjjkkkk",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++) {\n  \
    \      if (result[test[i]]) {\n            result[test[i]]++;\n        } else\
    \ {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbccdddd'));\
    \ // {d: 4}\nconsole.log(histogram('aabbccddddeee')); // {e: 3}\nconsole.log(histogram('aabbccddddeeeeee'));\
    \ // {e: 6}\nconsole.log(histogram('aabbccddddeeeeeeff')); // {e: 6}\nconsole.log(histogram('aabbccddddeeeeeeffgg'));\
    \ // {e: 6}\nconsole.log(histogram('aabbccddddeeeeeeffgggg')); // {g: 3}\nconsole.log(histogram('aabbccddddeeeeeeffgggggg'));\
    \ // {g: 4}\nconsole.log(histogram('aabbccddddeeeeeeffgggggggg')); // {g: 5}\n\
    console.log(histogram('aabbccddddeeeeeeffgggggggggg')); // {g: 6}\nconsole.log(histogram('aabbccddddeeeeeeffgggggggggggg'));\
    \ // {g: 7}\nconsole.log(histogram('aabbccddddeeeeeeffgggggggggggggg')); // {g:\
    \ 8}\nconsole.log(histogram('aabbccddddeeeeeeffgggggggggggggggg')); // {g: 9}\n\
    console.log(histogram('a", "    let result: {[key: string]: number} = {};\n  \
    \  let max: number = 0;\n    let maxLetters: string[] = [];\n    for (let i =\
    \ 0; i < test.length; i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n\
    \        } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbcccc'));\
    \ // {a: 2, b: 3, c: 4}\nconsole.log(histogram('abbccc')); // {a: 1, b: 2, c:\
    \ 3}\nconsole.log(histogram('abc')); // {a: 1, b: 1, c: 1}\nconsole.log(histogram('aabbbcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc",
  "    let histo: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (histo[test[i]]) {\n            histo[test[i]]++;\n     \
    \   } else {\n            histo[test[i]] = 1;\n        }\n    }\n    return histo;\n\
    }\n", "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n\
    \    let maxLetters: string[] = [];\n    for (let i: number = 0; i < test.length;\
    \ i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n   \
    \     } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbccdddd'));\
    \ // {d: 4}\nconsole.log(histogram('aabbccddddeee')); // {e: 3}\nconsole.log(histogram('aabbccddddeeee'));\
    \ // {e: 4}\nconsole.log(histogram('aabbccddddeeeeff')); // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffgg'));\
    \ // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffgghh')); // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffgghhii'));\
    \ // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffgghhiiii')); // {i: 4}\nconsole.log(histogram('aabbccddddeeeeffgghhiiiii'));\
    \ // {i: 5}\nconsole.log(histogram('aabbccddddeeeeffgghhiiiiijj')); // {i: 5}\n\
    console.log(histogram('aabbccddddeeeeffgghhiiiiijjkk')); // {i: 5}\nconsole.log(histogram('aabbccddddeeeeffgghhiiiiijjkkll'));\
    \ // {i: 5}\nconsole.log(histogram('aabbcc", "    let result: {[key: string]:\
    \ number} = {};\n    let max: number = 0;\n    let maxLetters: string[] = [];\n\
    \    for (let i = 0; i < test.length; i++) {\n        if (result[test[i]] ===\
    \ undefined) {\n            result[test[i]] = 1;\n        } else {\n         \
    \   result[test[i]]++;\n        }\n        if (result[test[i]] > max) {\n    \
    \        max = result[test[i]];\n            maxLetters = [test[i]];\n       \
    \ } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbccc'));\n\
    console.log(histogram('aabbbcccdddd'));\nconsole.log(histogram('aabbbcccddddeeeee'));\n\
    console.log(histogram('aabbbcccddddeeeeeffffff'));\nconsole.log(histogram('aabbbcccddddeeeeeffffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    for\
    \ (let i: number = 0; i < test.length; i++) {\n        if (result[test[i]]) {\n\
    \            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \        }\n    }\n    for (let key in result) {\n        if (result[key] < max)\
    \ {\n            delete result[key];\n        }\n    }\n    return result;\n}\n\
    \nconsole.log(histogram(\"aabbbcccc\")); // {a: 2, b: 3, c: 4}\nconsole.log(histogram(\"\
    aaabbbccc\")); // {a: 3, b: 3, c: 3}\nconsole.log(histogram(\"aaabbbcccdddd\"\
    )); // {d: 4}\nconsole.log(histogram(\"aaabbbcccddddeeeeeeee\")); // {e: 9}\n\
    console.log(histogram(\"aaabbbcccddddeeeeeeeefffffff\")); // {f: 7}\nconsole.log(histogram(\"\
    aaabbbcccddddeeeeeeeefffffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i: number = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]]) {\n            result[test[i]]++;\n        }\
    \ else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('abbccc'));\
    \ // {c: 3}\nconsole.log(histogram('abbcccdddd')); // {d: 4}\nconsole.log(histogram('abbcccddddeeeee'));\
    \ // {e: 5}\nconsole.log(histogram('abbcccddddeeeeeffffff')); // {f: 6}\nconsole.log(histogram('abbcccddddeeeeeffffffggggggg'));\
    \ // {g: 7}\nconsole.log(histogram('abbcccddddeeeeeffffffggggggghhhhhhhh')); //\
    \ {h: 8}\nconsole.log(histogram('abbcccddddeeeeeffffffggggggghhhhhhhhiiiiiiii'));\
    \ // {i: 9}\nconsole.log(histogram('abbcccddddeeeeeffffffggggggghhhhhhhhiiiiiiiijjjjjjjjjj'));\
    \ // {j: 10}\nconsole.log(histogram('abbcccddddeeeeeffffffggggggghhhhhhhhiiiiiiiijjjjjjjjjjkkkkkkkkkkk'));\
    \ // {k: 11}\nconsole.log(histogram('abbcccddddeeeeeffffffggggggghhhhhhhhiiiiiiiijjjjjjjjjjkkkkkkkkkkkllllllllllll'));\
    \ // {l: 12}\nconsole.log(", "    let result: {[key: string]: number} = {};\n\
    \    let max: number = 0;\n    let maxLetter: string[] = [];\n    for (let i:\
    \ number = 0; i < test.length; i++) {\n        if (result[test[i]] === undefined)\
    \ {\n            result[test[i]] = 1;\n        } else {\n            result[test[i]]++;\n\
    \        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetter = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetter.push(test[i]);\n        }\n    }\n    return {[maxLetter.join('')]:\
    \ max};\n}\nconsole.log(histogram('aabbbcc'));\nconsole.log(histogram('aabbbcccc'));\n\
    console.log(histogram('aabbbccccdddd'));\nconsole.log(histogram('aabbbccccddddeeeeeeeeee'));\n\
    console.log(histogram('aabbbccccddddeeeeeeeeeeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i: number = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]] === undefined) {\n            result[test[i]]\
    \ = 1;\n        } else {\n            result[test[i]]++;\n        }\n        if\
    \ (result[test[i]] > max) {\n            max = result[test[i]];\n            maxLetters\
    \ = [test[i]];\n        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbcccc'));",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++) {\n  \
    \      if (result[test[i]] === undefined) {\n            result[test[i]] = 1;\n\
    \        } else {\n            result[test[i]]++;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbcccdddd'));\n\
    console.log(histogram('aabbbcccdddde'));\nconsole.log(histogram('aabbbbcccdddde'));\n\
    console.log(histogram('aabbbbcccddddee'));\nconsole.log(histogram('aabbbbcccddddeee'));\n\
    console.log(histogram('aabbbbcccddddeeee'));\n", "    let histogram: {[key: string]:\
    \ number} = {};\n    for (let i = 0; i < test.length; i++) {\n        if (histogram[test[i]])\
    \ {\n            histogram[test[i]]++;\n        } else {\n            histogram[test[i]]\
    \ = 1;\n        }\n    }\n    return histogram;\n}\n", "    let result: {[key:\
    \ string]: number} = {};\n    let max: number = 0;\n    let maxKey: string = '';\n\
    \    for (let i: number = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxKey = test[i];\n        }\n    }\n    for (let key in result)\
    \ {\n        if (result[key] < max) {\n            delete result[key];\n     \
    \   }\n    }\n    return result;\n}\nconsole.log(histogram('aaabbbccc'));\nconsole.log(histogram('aabbbccc'));\n\
    console.log(histogram('aabbbcccdddd'));\n", "    let result: {[key: string]: number}\
    \ = {};\n    let max: number = 0;\n    let maxLetters: string[] = [];\n    for\
    \ (let i = 0; i < test.length; i++) {\n        if (result[test[i]]) {\n      \
    \      result[test[i]]++;\n        } else {\n            result[test[i]] = 1;\n\
    \        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbbccc'));\nconsole.log(histogram('aabbbcccdddd'));\n\
    console.log(histogram('aabbbcccddddeeee'));\nconsole.log(histogram('aabbbcccddddeeeefffff'));\n\
    console.log(histogram('aabbbcccddddeeeefffffgggggg'));\nconsole.log(histogram('aabbbcccddddeeeefffffgggggghhhhh'));\n\
    console.log(histogram('aabbbcccddddeeeefffffgggggghhhhhiiiiii'));\nconsole.log(histogram('aabbbcccddddeeeefffffgggggghhhhhiiiiiijjjjjjjj'));\n\
    console.log(histogram('aabbbcccddddeeeefffffgggggghhhhhiiiiiijjjjjjjjkkkkkkkkkk'));\n\
    console.log(histogram('aabbbcccddddeeeefffffgggggghhhhhiiiiiijjjjjjjjkkkkkkkkkkllllllllllll'));\n\
    console.log(histogram('aabbbcccddddeeeefffffgggggghhhhhiiiiiijjjjjjjjkkkkkkkkkkllllllllllllmmmmmmmmmmmmmmmm'));\n\
    console.log(histogram('aabbbcccddddeeeefffffgggggghhhhh", "    let dict: {[key:\
    \ string]: number} = {};\n    for (let i = 0; i < test.length; i++) {\n      \
    \  let letter = test[i];\n        if (dict[letter]) {\n            dict[letter]++;\n\
    \        } else {\n            dict[letter] = 1;\n        }\n    }\n    return\
    \ dict;\n}\n", "    let result: {[key: string]: number} = {};\n    let max: number\
    \ = 0;\n    let maxKeys: string[] = [];\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n   \
    \     } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxKeys = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxKeys.push(test[i]);\n\
    \        }\n    }\n    let finalResult: {[key: string]: number} = {};\n    for\
    \ (let i = 0; i < maxKeys.length; i++) {\n        finalResult[maxKeys[i]] = max;\n\
    \    }\n    return finalResult;\n}\n\nconsole.log(histogram(\"abracadabra\"));\
    \ // {a: 5, b: 2, r: 2, c: 1, d: 1}\nconsole.log(histogram(\"aabbccdd\")); //\
    \ {a: 2, b: 2, c: 2, d: 2}\nconsole.log(histogram(\"aabbccddee\")); // {a: 2,\
    \ b: 2, c: 2, d: 2, e: 2}\nconsole.log(histogram(\"aabbccddeef\")); // {a: 2,\
    \ b: 2, c: 2, d: 2, e: 2, f: 1}\nconsole.log(histogram(\"aabbccddeeff\")); //\
    \ {a: 2, b: 2, c: 2, d: 2, e: 2, f: 2}\nconsole.log(histogram(\"aabbccddeeffg\"\
    )); // {a: 2, b: 2, c: 2, d: 2, e: 2, f: 2, g: 1}\nconsole.log(histogram(\"aabbccddeeffgg\"\
    )); // {a: 2, b: 2, c: 2, d: 2, e: 2, f: 2, g: 2}\nconsole.log(", "    let dict:\
    \ {[key: string]: number} = {};\n    for (let i = 0; i < test.length; i++) {\n\
    \        if (dict[test[i]]) {\n            dict[test[i]] += 1;\n        } else\
    \ {\n            dict[test[i]] = 1;\n        }\n    }\n    return dict;\n}\n",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++) {\n  \
    \      if (result[test[i]]) {\n            result[test[i]]++;\n        } else\
    \ {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbccccdddd'));\n\
    console.log(histogram('aabbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxKey: string = '';\n    for (let i = 0; i < test.length; i++) {\n        if\
    \ (result[test[i]] === undefined) {\n            result[test[i]] = 1;\n      \
    \  } else {\n            result[test[i]] += 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxKey = test[i];\n\
    \        }\n    }\n    for (let key in result) {\n        if (result[key] !==\
    \ max) {\n            delete result[key];\n        }\n    }\n    return result;\n\
    }\nconsole.log(histogram('aabbccdd'));\nconsole.log(histogram('aabbccdddd'));\n\
    console.log(histogram('aabbccddddeeee'));\nconsole.log(histogram('aabbccddddeeeeffff'));\n\
    console.log(histogram('aabbccddddeeeeffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg",
  "  let result: {[key: string]: number} = {};\n  let max: number = 0;\n  let maxLetters:\
    \ string[] = [];\n  let letters: string[] = test.split(\" \");\n  for (let i:\
    \ number = 0; i < letters.length; i++) {\n    if (result[letters[i]]) {\n    \
    \  result[letters[i]]++;\n    } else {\n      result[letters[i]] = 1;\n    }\n\
    \    if (result[letters[i]] > max) {\n      max = result[letters[i]];\n      maxLetters\
    \ = [];\n      maxLetters.push(letters[i]);\n    } else if (result[letters[i]]\
    \ === max) {\n      maxLetters.push(letters[i]);\n    }\n  }\n  return {[maxLetters.join(\"\
    \ \")]: max};\n}\n\nconsole.log(histogram(\"a b c d e f\")); // {a: 1, b: 1, c:\
    \ 1, d: 1, e: 1, f: 1}\nconsole.log(histogram(\"a a b b c c d d e e f f\")); //\
    \ {a: 2, b: 2, c: 2, d: 2, e: 2, f: 2}\nconsole.log(histogram(\"a a b b c c d\
    \ d e e f f a a b b c c d d e e f f\")); // {a: 4, b: 4, c: 4, d: 4, e: 4, f:\
    \ 4}\nconsole.log(histogram(\"a a b b c c d d e e f f a a b b c c d d e e f f\
    \ a a b b c c d d e e f f\")); // {a: 6, b: 6, c: 6, d: 6, e: 6, f: 6}\nconsole.log(histogram(\"\
    a a b b c c d d e e f f a a b b c c d d e e f f a a b b c c d d e e f f a a b\
    \ b c c d d e e f f\")); // {a: 8, b: 8, c: 8, d: 8, e: 8, f: 8", "    let hist:\
    \ {[key: string]: number} = {};\n    for (let i = 0; i < test.length; i++) {\n\
    \        if (hist[test[i]]) {\n            hist[test[i]]++;\n        } else {\n\
    \            hist[test[i]] = 1;\n        }\n    }\n    return hist;\n}\n", " \
    \   let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i: number = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]] === undefined) {\n            result[test[i]]\
    \ = 1;\n        } else {\n            result[test[i]]++;\n        }\n        if\
    \ (result[test[i]] > max) {\n            max = result[test[i]];\n            maxLetters\
    \ = [test[i]];\n        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join(\"\")]: max};\n}\n\nconsole.log(histogram(\"\
    aabbbccc\")); // {a: 2, b: 3, c: 3}\nconsole.log(histogram(\"aabbcc\")); // {a:\
    \ 2, b: 2, c: 2}\nconsole.log(histogram(\"abc\")); // {a: 1, b: 1, c: 1}\nconsole.log(histogram(\"\
    \")); // {}\nconsole.log(histogram(\"aabbbcccdddd\")); // {a: 2, b: 3, c: 3, d:\
    \ 4}\nconsole.log(histogram(\"aabbbcccddddeeeefffff\")); // {a: 2, b: 3, c: 3,\
    \ d: 4, e: 5, f: 6}\nconsole.log(histogram(\"aabbbcccddddeeeefffffgggggg\"));\
    \ // {a: 2, b: 3, c: 3, d: 4, e: 5, f: 6, g: 7}\nconsole.log(histogram(\"aabbbcccddddeeeefffffggggggaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
  "    let result: {[key: string]: number} = {};\n    let max = 0;\n    let maxLetters:\
    \ string[] = [];\n    for (let i = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('abcccccddddeeeeeffffff')); // {f: 6}\nconsole.log(histogram('abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb",
  "    let hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (hist[test[i]]) {\n            hist[test[i]]++;\n       \
    \ } else {\n            hist[test[i]] = 1;\n        }\n    }\n    return hist;\n\
    }\n", "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n\
    \    for (let i = 0; i < test.length; i++) {\n        if (result[test[i]]) {\n\
    \            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \        }\n    }\n    for (let key in result) {\n        if (result[key] !==\
    \ max) {\n            delete result[key];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(histogram(\"aaabbc\")); // {a: 3, b: 2}\nconsole.log(histogram(\"\
    aabbbcc\")); // {a: 2, b: 3, c: 2}\nconsole.log(histogram(\"abbba\")); // {a:\
    \ 2, b: 3}\nconsole.log(histogram(\"\")); // {}\n", "    let result: {[key: string]:\
    \ number} = {};\n    let max: number = 0;\n    let maxLetters: string[] = [];\n\
    \    for (let i: number = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbbcccc')); // {c: 4}\nconsole.log(histogram('aabbbccc'));\
    \ // {a: 2, b: 3, c: 3}\nconsole.log(histogram('aabbbccccc')); // {c: 5}\nconsole.log(histogram('aabbbcccccc'));\
    \ // {c: 6}\nconsole.log(histogram('aabbbcccccccc')); // {c: 7}\nconsole.log(histogram('aabbbccccccccc'));\
    \ // {c: 8}\nconsole.log(histogram('aabbbcccccccccc')); // {c: 9}\nconsole.log(histogram('aabbbccccccccccc'));\
    \ // {c: 10}\nconsole.log(histogram('aabbbcccccccccccc')); // {c: 11}\nconsole.log(histogram('aabbbccccccccccccc'));\
    \ // {c: 12}\nconsole.log(histogram('aabbbcccccccccccccc')); // {c: 13}\nconsole.log(histogram('aabbbccccccccccccccc'));\
    \ // {c: 14}\nconsole.log(histogram('aabbbcccccccccccccccc')); // {c: 15}\nconsole.log(",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++) {\n  \
    \      if (result[test[i]]) {\n            result[test[i]]++;\n        } else\
    \ {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbcccdddd'));",
  "    let hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (hist[test[i]]) {\n            hist[test[i]]++;\n       \
    \ } else {\n            hist[test[i]] = 1;\n        }\n    }\n    return hist;\n\
    }\n", "    let hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (hist[test[i]]) {\n            hist[test[i]]++;\n       \
    \ } else {\n            hist[test[i]] = 1;\n        }\n    }\n    return hist;\n\
    }\n", "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n\
    \    let maxLetters: string[] = [];\n    for (let i: number = 0; i < test.length;\
    \ i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n   \
    \     } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\nconsole.log(histogram('aabbcc'));\n\
    console.log(histogram('aabbccdddd'));\nconsole.log(histogram('aabbccddddeee'));\n\
    console.log(histogram('aabbccddddeeefff'));\nconsole.log(histogram('aabbccddddeeefffgggg'));\n\
    console.log(histogram('aabbccddddeeefffgggghhhhh'));\nconsole.log(histogram('aabbccddddeeefffgggghhhhhiiiiii'));\n\
    console.log(histogram('aabbccddddeeefffgggghhhhhiiiiiijjjjjjjj'));\nconsole.log(histogram('aabbccddddeeefffgggghhhhhiiiiiijjjjjjjjkkkkkkkkk'));\n\
    console.log(histogram('aabbccddddeeefffgggghhhhhiiiiiijjjjjjjjkkkkkkkkkllllllllll'));\n\
    console.log(histogram('aabbccddddeeefffgggghhhhhiiiiiijjjjjjjjkkkkkkkkkllllllllllmmmmmmmmmm'));\n\
    console.log(histogram('aabbccddddeeefffgggghhhhhiiiiiijjjjjjjjkkkkkkkkkllllllllllmmmmmmmmmmnnnnnnnnnnn'));\n\
    console.log(", "    const hist: {[key: string]: number} = {};\n    for (const\
    \ char of test) {\n        if (hist[char]) {\n            hist[char]++;\n    \
    \    } else {\n            hist[char] = 1;\n        }\n    }\n    return hist;\n\
    }\n", "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n\
    \    let maxLetters: string[] = [];\n    for (let i: number = 0; i < test.length;\
    \ i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n   \
    \     } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\nconsole.log(histogram('aabbbcccc'));\
    \ // {c: 4}\nconsole.log(histogram('aabbccdddd')); // {d: 4}\nconsole.log(histogram('aabbccddddeeee'));\
    \ // {de: 4}\nconsole.log(histogram('aabbccddddeeeefffff')); // {f: 5}\nconsole.log(histogram('aabbccddddeeeefffffgggggg'));\
    \ // {g: 7}\nconsole.log(histogram('aabbccddddeeeefffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg",
  "    const hist: {[key: string]: number} = {};\n    for (const char of test) {\n\
    \        if (hist[char]) {\n            hist[char]++;\n        } else {\n    \
    \        hist[char] = 1;\n        }\n    }\n    return hist;\n}\n", "    let result:\
    \ {[key: string]: number} = {};\n    let max: number = 0;\n    let maxLetters:\
    \ string[] = [];\n    for (let i = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbcc')); // {a: 2, b: 2, c: 2}\nconsole.log(histogram('aabbccdddd'));\
    \ // {d: 4}\nconsole.log(histogram('aabbccddddeeee')); // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffffff'));\
    \ // {f: 6}\nconsole.log(histogram('aabbccddddeeeeffffffgggggg')); // {g: 7}\n\
    console.log(histogram('aabbccddddeeeeffffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg",
  "    let dict: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++) {\n  \
    \      if (dict[test[i]]) {\n            dict[test[i]]++;\n        } else {\n\
    \            dict[test[i]] = 1;\n        }\n        if (dict[test[i]] > max) {\n\
    \            max = dict[test[i]];\n            maxLetters = [test[i]];\n     \
    \   } else if (dict[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbccddd'));\
    \ // {a: 2, b: 2, c: 2, d: 3}\nconsole.log(histogram('aabbccddee')); // {a: 2,\
    \ b: 2, c: 2, d: 2, e: 2}\nconsole.log(histogram('aabbccddeef')); // {a: 2, b:\
    \ 2, c: 2, d: 2, e: 2, f: 1}\n", "    let result: {[key: string]: number} = {};\n\
    \    for (let i = 0; i < test.length; i++) {\n        if (result[test[i]]) {\n\
    \            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n    }\n    return result;\n}\n", "    let dict: {[key: string]:\
    \ number} = {};\n    for (let i = 0; i < test.length; i++) {\n        if (dict[test[i]])\
    \ {\n            dict[test[i]] += 1;\n        } else {\n            dict[test[i]]\
    \ = 1;\n        }\n    }\n    return dict;\n}\n", "    let result: {[key: string]:\
    \ number} = {};\n    let max = 0;\n    let maxLetters: string[] = [];\n    for\
    \ (let i = 0; i < test.length; i++) {\n        if (result[test[i]]) {\n      \
    \      result[test[i]]++;\n        } else {\n            result[test[i]] = 1;\n\
    \        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbccdddd')); // {d: 4}\nconsole.log(histogram('aabbccddddeee'));\
    \ // {e: 3}\nconsole.log(histogram('aabbccddddeeeeee')); // {e: 6}\nconsole.log(histogram('aabbccddddeeeeeeff'));\
    \ // {e: 6}\nconsole.log(histogram('aabbccddddeeeeeeffgg')); // {e: 6}\nconsole.log(histogram('aabbccddddeeeeeeffgggg'));\
    \ // {g: 2}\nconsole.log(histogram('aabbccddddeeeeeeffgggggg')); // {g: 3}\nconsole.log(histogram('aabbccddddeeeeeeffgggggggg'));\
    \ // {g: 4}\nconsole.log(histogram('aabbccddddeeeeeeffgggggggggg')); // {g: 5}\n\
    console.log(histogram('aabbccddddeeeeeeffgggggggggggg')); // {g: 6}\nconsole.log(histogram('aabbccddddeeeeeeffgggggggggggggg'));\
    \ // {g: 7}\nconsole.log(histogram('aabbccddddeeeeeeffgggggggggggggggg')); //\
    \ {g: 8}\nconsole.log(histogram('aabbcc", "    let histogram: {[key: string]:\
    \ number} = {};\n    for (let i = 0; i < test.length; i++) {\n        let letter\
    \ = test[i];\n        if (histogram[letter]) {\n            histogram[letter]++;\n\
    \        } else {\n            histogram[letter] = 1;\n        }\n    }\n    return\
    \ histogram;\n}\n", "    let dict: {[key: string]: number} = {};\n    for (let\
    \ i = 0; i < test.length; i++) {\n        if (dict[test[i]]) {\n            dict[test[i]]++;\n\
    \        } else {\n            dict[test[i]] = 1;\n        }\n    }\n    return\
    \ dict;\n}\n", "    let result: {[key: string]: number} = {};\n    let max: number\
    \ = 0;\n    let maxLetters: string[] = [];\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n   \
    \     } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbcccc'));\
    \ // {c: 4}\nconsole.log(histogram('aabbbccccdddd')); // {d: 4}\nconsole.log(histogram('aabbbccccddddeeee'));\
    \ // {e: 4}\nconsole.log(histogram('aabbbccccddddeeeefffff')); // {f: 5}\nconsole.log(histogram('aabbbccccddddeeeefffffgggggg'));\
    \ // {g: 6}\nconsole.log(histogram('aabbbccccddddeeeefffffggggggaaaaaa')); //\
    \ {a: 7}\nconsole.log(histogram('aabbbccccddddeeeefffffggggggaaaaaabbbbbb'));\
    \ // {b: 8}\nconsole.log(histogram('aabbbccccddddeeeefffffggggggaaaaaabbbbbbcccccccc'));\
    \ // {c: 9}\nconsole.log(histogram('aabbbccccddddeeeefffffggggggaaaaaabbbbbbccccccccddddddddd'));\
    \ // {d: 10}\nconsole.log(histogram('aabbbccccddddeeeefffffggggggaaaaaabbbbbbccccccccdddddddddeeeeeeeeee'));\
    \ // {e: 11}\nconsole.log(histogram('aabbbcccc", "    let result: {[key: string]:\
    \ number} = {};\n    let max: number = 0;\n    let maxLetters: string[] = [];\n\
    \    for (let i: number = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbbcccc')); // {a: 2, b: 3, c: 4}\nconsole.log(histogram('aabbbccccdddd'));\
    \ // {a: 2, b: 3, c: 4, d: 4}\nconsole.log(histogram('aabbbccccddddeeeee')); //\
    \ {a: 2, b: 3, c: 4, d: 4, e: 5}\nconsole.log(histogram('aabbbccccddddeeeeeffffff'));\
    \ // {a: 2, b: 3, c: 4, d: 4, e: 5, f: 6}\nconsole.log(histogram('aabbbccccddddeeeeeffffffgggggggg'));\
    \ // {a: 2, b: 3, c: 4, d: 4, e: 5, f: 6, g: 8}\nconsole.log(histogram('aabbbccccddddeeeeeffffffgggggggghhhhhhhhh'));\
    \ // {a: 2, b: 3, c: 4, d: 4, e: 5, f: 6, g: 8, h: 10}\nconsole.log(histogram('aabbbccccddddeeeeeffffffgggggggghhhhhhhhhiiiiiiiiii'));\
    \ // {a: 2, b: 3, c: 4, d: 4, e: 5, f:", "    let result: {[key: string]: number}\
    \ = {};\n    let max: number = 0;\n    let maxLetters: string[] = [];\n    for\
    \ (let i = 0; i < test.length; i++) {\n        if (result[test[i]]) {\n      \
    \      result[test[i]]++;\n        } else {\n            result[test[i]] = 1;\n\
    \        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('hello'));\nconsole.log(histogram('aabbb'));\n\
    console.log(histogram('abbba'));\nconsole.log(histogram('abbbb'));\nconsole.log(histogram('aabbbb'));\n\
    console.log(histogram('abbbbb'));\nconsole.log(histogram('abbbbbb'));\nconsole.log(histogram('abbbbbbb'));\n\
    console.log(histogram('abbbbbbbb'));\nconsole.log(histogram('abbbbbbbbb'));\n\
    console.log(histogram('abbbbbbbbbb'));\nconsole.log(histogram('abbbbbbbbbbb'));\n\
    console.log(histogram('abbbbbbbbbbbb'));\nconsole.log(histogram('abbbbbbbbbbbbb'));\n\
    console.log(histogram('abbbbbbbbbbbbbb'));\nconsole.log(histogram('abbbbbbbbbbbbbbb'));\n\
    console.log(histogram('abbbbbbbbbbbbbbbb'));\nconsole.log(histogram('abbbbbbbbbbbbbbbbb'));\n\
    console.log(histogram('abbbbbbbbbbbbbbbbbb'));\nconsole.log(histogram('abbbbbbbbbbbbbbbbbbb'));\n\
    console.log(histogram('abbbbbbbbbbbbbbbbbbbb'));\nconsole.", "    let dict: {[key:\
    \ string]: number} = {};\n    for (let i = 0; i < test.length; i++) {\n      \
    \  if (dict[test[i]]) {\n            dict[test[i]]++;\n        } else {\n    \
    \        dict[test[i]] = 1;\n        }\n    }\n    return dict;\n}\n", "    let\
    \ histogram = {};\n    for (let i = 0; i < test.length; i++) {\n        if (histogram[test[i]])\
    \ {\n            histogram[test[i]]++;\n        } else {\n            histogram[test[i]]\
    \ = 1;\n        }\n    }\n    return histogram;\n}\n", "    let result: {[key:\
    \ string]: number} = {};\n    let max: number = 0;\n    let maxChars: string[]\
    \ = [];\n    for (let i = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxChars = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxChars.push(test[i]);\n        }\n    }\n    return {[maxChars.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbccdddd'));\nconsole.log(histogram('aabbccddddeee'));\n\
    console.log(histogram('aabbccddddeeeeee'));\nconsole.log(histogram('aabbccddddeeeeeeff'));\n\
    console.log(histogram('aabbccddddeeeeeeffgg'));\nconsole.log(histogram('aabbccddddeeeeeeffgggg'));\n\
    console.log(histogram('aabbccddddeeeeeeffgggggg'));\nconsole.log(histogram('aabbccddddeeeeeeffgggggggg'));\n\
    console.log(histogram('aabbccddddeeeeeeffgggggggggg'));\nconsole.log(histogram('aabbccddddeeeeeeffgggggggggggg'));\n\
    console.log(histogram('aabbccddddeeeeeeffgggggggggggggg'));\nconsole.log(histogram('aabbccddddeeeeeeffgggggggggggggggg'));\n\
    console.log(histogram('aabbccddddeeeeeeffgggggggggggggggggg'));\nconsole.log(histogram('aabbccddddeeeeeeffgggggggggggggggggggg'));\n\
    console.log(histogram('aabbccddddeeeeeeffgggggggggggggggggggg", "    let result:\
    \ {[key: string]: number} = {};\n    let max: number = 0;\n    let maxLetters:\
    \ string[] = [];\n    for (let i: number = 0; i < test.length; i++) {\n      \
    \  if (result[test[i]]) {\n            result[test[i]]++;\n        } else {\n\
    \            result[test[i]] = 1;\n        }\n        if (result[test[i]] > max)\
    \ {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    let finalResult: {[key: string]: number} = {};\n    for\
    \ (let i: number = 0; i < maxLetters.length; i++) {\n        finalResult[maxLetters[i]]\
    \ = max;\n    }\n    return finalResult;\n}\nconsole.log(histogram(\"aabbccdddd\"\
    ));", "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n\
    \    let maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]]) {\n            result[test[i]]++;\n        }\
    \ else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\nconsole.log(histogram('abcabcabc'));\n\
    console.log(histogram('aaaaaaaaaa'));\nconsole.log(histogram('aabbccddee'));\n\
    console.log(histogram('aabbccddeeffgghh'));\n", "    let histogram = {};\n   \
    \ for (let i = 0; i < test.length; i++) {\n        if (histogram[test[i]]) {\n\
    \            histogram[test[i]]++;\n        } else {\n            histogram[test[i]]\
    \ = 1;\n        }\n    }\n    return histogram;\n}\n", "    let result: {[key:\
    \ string]: number} = {};\n    let max: number = 0;\n    let maxLetters: string[]\
    \ = [];\n    for (let i = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]] += 1;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbccdd'));\nconsole.log(histogram('aabbccddee'));\n\
    console.log(histogram('aabbccddeeff'));\nconsole.log(histogram('aabbccddeeffgg'));\n\
    console.log(histogram('aabbccddeeffgghh'));\nconsole.log(histogram('aabbccddeeffgghhii'));\n\
    console.log(histogram('aabbccddeeffgghhiijj'));\nconsole.log(histogram('aabbccddeeffgghhiijjkk'));\n\
    console.log(histogram('aabbccddeeffgghhiijjkkll'));\nconsole.log(histogram('aabbccddeeffgghhiijjkkllmm'));\n\
    console.log(histogram('aabbccddeeffgghhiijjkkllmmnn'));\nconsole.log(histogram('aabbccddeeffgghhiijjkkllmmnnoo'));\n\
    console.log(histogram('aabbccddeeffgghhiijjkkllmmnnoopp'));\nconsole.log(histogram('aabbccddeeffgghhiijjkkllmmnnooppqq'));\n\
    console.log(histogram('aabbccddeeffgghhiijjkkllmmnnooppqqrr'));", "    let result:\
    \ {[key: string]: number} = {};\n    let max: number = 0;\n    let maxLetters:\
    \ string[] = [];\n    for (let i = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\nconsole.log(histogram('aabbbbcc')); // {a: 2, b: 4, c: 2}\nconsole.log(histogram('aabbbbcccc'));\
    \ // {c: 4}\nconsole.log(histogram('aabbbbccccdddd')); // {d: 4}\nconsole.log(histogram('aabbbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
  "    let result: {[key: string]: number} = {};\n    let arr = test.split(\" \");\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n \
    \           result[arr[i]] += 1;\n        } else {\n            result[arr[i]]\
    \ = 1;\n        }\n    }\n    let max = 0;\n    let maxKey = \"\";\n    for (let\
    \ key in result) {\n        if (result[key] > max) {\n            max = result[key];\n\
    \            maxKey = key;\n        }\n    }\n    return {[maxKey]: max};\n}\n\
    console.log(histogram(\"a b c d e f\"));\nconsole.log(histogram(\"a a b b b c\
    \ c c\"));\nconsole.log(histogram(\"a a b b b c c c d d d d d d e e e e e e e\
    \ e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e\
    \ e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e\
    \ e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e\
    \ e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e\
    \ e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e\
    \ e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e\
    \ e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e\
    \ e e e e e e e e e e e e e e e e e e e e e e e", "    let hist: {[key: string]:\
    \ number} = {};\n    for (let i = 0; i < test.length; i++) {\n        if (hist[test[i]])\
    \ {\n            hist[test[i]]++;\n        } else {\n            hist[test[i]]\
    \ = 1;\n        }\n    }\n    return hist;\n}\n", "    let hist: {[key: string]:\
    \ number} = {};\n    for (let i = 0; i < test.length; i++) {\n        if (hist[test[i]])\
    \ {\n            hist[test[i]]++;\n        } else {\n            hist[test[i]]\
    \ = 1;\n        }\n    }\n    return hist;\n}\n", "    let hist: {[key: string]:\
    \ number} = {};\n    for (let i = 0; i < test.length; i++) {\n        if (hist[test[i]])\
    \ {\n            hist[test[i]]++;\n        } else {\n            hist[test[i]]\
    \ = 1;\n        }\n    }\n    return hist;\n}\n", "    let result = {};\n    let\
    \ max = 0;\n    let maxLetter = '';\n    for (let i = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]]) {\n            result[test[i]]++;\n        }\
    \ else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetter = test[i];\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(histogram('aabbcc'));\
    \ // {a: 2, b: 2, c: 2}\nconsole.log(histogram('abbba')); // {a: 1, b: 3}\nconsole.log(histogram('abcd'));\
    \ // {a: 1, b: 1, c: 1, d: 1}\nconsole.log(histogram('aabbc')); // {a: 2, b: 2,\
    \ c: 1}\nconsole.log(histogram('aaabbbccc')); // {a: 3, b: 3, c: 3}\nconsole.log(histogram('aaabbbcccdddd'));\
    \ // {a: 3, b: 3, c: 3, d: 4}\nconsole.log(histogram('aaabbbcccddddeeeefffff'));\
    \ // {a: 3, b: 3, c: 3, d: 4, e: 5, f: 5}\nconsole.log(histogram('aaabbbcccddddeeeefffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetter: string = '';\n    for (let i = 0; i < test.length; i++) {\n     \
    \   if (result[test[i]]) {\n            result[test[i]]++;\n        } else {\n\
    \            result[test[i]] = 1;\n        }\n        if (result[test[i]] > max)\
    \ {\n            max = result[test[i]];\n            maxLetter = test[i];\n  \
    \      }\n    }\n    return result;\n}\n", "    let result: {[key: string]: number}\
    \ = {};\n    let max: number = 0;\n    let maxLetters: string[] = [];\n    let\
    \ letters: string[] = test.split(\" \");\n    for (let i: number = 0; i < letters.length;\
    \ i++) {\n        if (result[letters[i]]) {\n            result[letters[i]]++;\n\
    \        } else {\n            result[letters[i]] = 1;\n        }\n        if\
    \ (result[letters[i]] > max) {\n            max = result[letters[i]];\n      \
    \      maxLetters = [];\n            maxLetters.push(letters[i]);\n        } else\
    \ if (result[letters[i]] === max) {\n            maxLetters.push(letters[i]);\n\
    \        }\n    }\n    return {[maxLetters.join(\" \")]: max};\n}\n\nconsole.log(histogram(\"\
    a b c d e f\"));\nconsole.log(histogram(\"a b c d e f a b c d e f a b c d e f\
    \ a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b\
    \ c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d\
    \ e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f\
    \ a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b\
    \ c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d\
    \ e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f\
    \ a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e", "  \
    \  let hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (hist[test[i]]) {\n            hist[test[i]]++;\n       \
    \ } else {\n            hist[test[i]] = 1;\n        }\n    }\n    return hist;\n\
    }\n", "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n\
    \    let maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]]) {\n            result[test[i]]++;\n        }\
    \ else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join(\"\")]: max};\n}\n\nconsole.log(histogram(\"\
    aabbbcccc\")); // {c: 4}\nconsole.log(histogram(\"aabbbccccdddd\")); // {d: 4}\n\
    console.log(histogram(\"aabbbccccddddeeeee\")); // {e: 5}\nconsole.log(histogram(\"\
    aabbbccccddddeeeeeffffff\")); // {f: 6}\nconsole.log(histogram(\"aabbbccccddddeeeeeffffffggggggg\"\
    )); // {g: 7}\nconsole.log(histogram(\"aabbbccccddddeeeeeffffffggggggghhhhhhhh\"\
    )); // {h: 8}\nconsole.log(histogram(\"aabbbccccddddeeeeeffffffggggggghhhhhhhhiiiiiiiii\"\
    )); // {i: 9}\nconsole.log(histogram(\"aabbbccccddddeeeeeffffffggggggghhhhhhhhiiiiiiiii\"\
    )); // {i: 9}\nconsole.log(histogram(\"aabbbccccddddeeeeeffffffggggggghhhhhhhhiiiiiiiii\"\
    )); // {i: 9}\nconsole.log(histogram(\"aabbbccccddddeeeeeffffffggggggghhhhhhhhiiiiiiiii\"\
    )); // {i: 9}\nconsole.log(histogram(\"aabbbccccddddeeeeeffffffgggg", "  let hist:\
    \ {[key: string]: number} = {};\n  for (let i = 0; i < test.length; i++) {\n \
    \   if (hist[test[i]]) {\n      hist[test[i]]++;\n    } else {\n      hist[test[i]]\
    \ = 1;\n    }\n  }\n  return hist;\n}\n", "    let letters = test.split(' ');\n\
    \    let letterCount = {};\n    let maxCount = 0;\n    let maxLetter = '';\n \
    \   for (let letter of letters) {\n        if (letterCount[letter]) {\n      \
    \      letterCount[letter] += 1;\n        } else {\n            letterCount[letter]\
    \ = 1;\n        }\n        if (letterCount[letter] > maxCount) {\n           \
    \ maxCount = letterCount[letter];\n            maxLetter = letter;\n        }\n\
    \    }\n    return letterCount;\n}\n\nconsole.log(histogram('a b c d e f'));\n\
    console.log(histogram('a b c d e f a b c d e f'));\nconsole.log(histogram('a b\
    \ c d e f a b c d e f a b c d e f'));\nconsole.log(histogram('a b c d e f a b\
    \ c d e f a b c d e f a b c d e f'));\nconsole.log(histogram('a b c d e f a b\
    \ c d e f a b c d e f a b c d e f a b c d e f'));\nconsole.log(histogram('a b\
    \ c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f'));\nconsole.log(histogram('a\
    \ b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c\
    \ d e f'));\nconsole.log(histogram('a b c d e f a b c d e f a b c d e f a b c\
    \ d e f a b c d e f a b c d e f a b c d e f a b c d e f'));\nconsole.log(histogram('a\
    \ b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c\
    \ d e f a b c d e f a b c d e f'));\nconsole.log(histogram('a b c d e f a b c\
    \ d e f a b c", "    let result: {[key: string]: number} = {};\n    let max: number\
    \ = 0;\n    let maxLetters: string[] = [];\n    test.split(\"\").forEach(letter\
    \ => {\n        if (result[letter]) {\n            result[letter]++;\n       \
    \ } else {\n            result[letter] = 1;\n        }\n        if (result[letter]\
    \ > max) {\n            max = result[letter];\n            maxLetters = [letter];\n\
    \        } else if (result[letter] === max) {\n            maxLetters.push(letter);\n\
    \        }\n    });\n    return {[maxLetters.join(\"\")]: max};\n}\n\nconsole.log(histogram(\"\
    aabbbcccdddd\")); // {a: 2, b: 3, c: 3, d: 4}\nconsole.log(histogram(\"aabbcccdddd\"\
    )); // {a: 2, b: 2, c: 3, d: 4}\nconsole.log(histogram(\"aabbccdddd\")); // {a:\
    \ 2, b: 2, c: 2, d: 4}\nconsole.log(histogram(\"aabbccdd\")); // {a: 2, b: 2,\
    \ c: 2, d: 2}\nconsole.log(histogram(\"aabbcc\")); // {a: 2, b: 2, c: 2}\nconsole.log(histogram(\"\
    aabb\")); // {a: 2, b: 2}\nconsole.log(histogram(\"aa\")); // {a: 2}\nconsole.log(histogram(\"\
    a\")); // {a: 1}\nconsole.log(histogram(\"\")); // {}", "    let result: {[key:\
    \ string]: number} = {};\n    let max: number = 0;\n    let maxLetters: string[]\
    \ = [];\n    test.split(\"\").forEach(letter => {\n        if (result[letter])\
    \ {\n            result[letter]++;\n        } else {\n            result[letter]\
    \ = 1;\n        }\n        if (result[letter] > max) {\n            max = result[letter];\n\
    \            maxLetters = [letter];\n        } else if (result[letter] === max)\
    \ {\n            maxLetters.push(letter);\n        }\n    });\n    return {[maxLetters.join(\"\
    \")]: max};\n}\n\nconsole.log(histogram(\"abracadabra\"));", "    let result:\
    \ {[key: string]: number} = {};\n    let max: number = 0;\n    let maxLetter:\
    \ string = '';\n    for (let i: number = 0; i < test.length; i++) {\n        if\
    \ (result[test[i]]) {\n            result[test[i]] += 1;\n        } else {\n \
    \           result[test[i]] = 1;\n        }\n        if (result[test[i]] > max)\
    \ {\n            max = result[test[i]];\n            maxLetter = test[i];\n  \
    \      }\n    }\n    return {[maxLetter]: max};\n}\n\nconsole.log(histogram('aabbccdddd'));",
  "    let hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (hist[test[i]]) {\n            hist[test[i]] += 1;\n    \
    \    } else {\n            hist[test[i]] = 1;\n        }\n    }\n    return hist;\n\
    }\n", "    let result: {[key: string]: number} = {};\n    let max = 0;\n    let\
    \ maxKeys: string[] = [];\n    for (let i = 0; i < test.length; i++) {\n     \
    \   let key = test[i];\n        if (result[key] === undefined) {\n           \
    \ result[key] = 1;\n        } else {\n            result[key]++;\n        }\n\
    \        if (result[key] > max) {\n            max = result[key];\n          \
    \  maxKeys = [key];\n        } else if (result[key] === max) {\n            maxKeys.push(key);\n\
    \        }\n    }\n    return {[maxKeys.join('')]: max};\n}\n\nconsole.log(histogram('hello'));\n\
    console.log(histogram('abbccc'));\nconsole.log(histogram('abbcccddddeeeee'));\n\
    console.log(histogram('abbcccddddeeeeeffffff'));\nconsole.log(histogram('abbcccddddeeeeeffffffggggggg'));\n\
    console.log(histogram('abbcccddddeeeeeffffffggggggghhhhhhhh'));\nconsole.log(histogram('abbcccddddeeeeeffffffggggggghhhhhhhhiiiiiiii'));\n\
    console.log(histogram('abbcccddddeeeeeffffffggggggghhhhhhhhiiiiiiiijjjjjjjjjj'));\n\
    console.log(histogram('abbcccddddeeeeeffffffggggggghhhhhhhhiiiiiiiijjjjjjjjjjkkkkkkkkkkk'));\n\
    console.log(histogram('abbcccddddeeeeeffffffggggggghhhhhhhhiiiiiiiijjjjjjjjjjkkkkkkkkkkkllllllllllll'));\n\
    console.log(histogram('abbcccddddeeeeeffffffggggggghhhhhhhhiiiiiiiijjjjjjjjjjkkkkkkkkkkkllllllllllllmmmmmmmmmmmmmm'));\n\
    console.log(histogram('abbcccddddeeeeeffffffggggggghhhhhhhhiiiiiiiijjjjjjjjjjkkkk",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++) {\n  \
    \      if (result[test[i]]) {\n            result[test[i]]++;\n        } else\
    \ {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\nconsole.log(histogram('aabbcc'));\n\
    console.log(histogram('aabbccdddd'));\nconsole.log(histogram('aabbccddddeee'));\n\
    console.log(histogram('aabbccddddeeefff'));\nconsole.log(histogram('aabbccddddeeefffgggg'));\n\
    console.log(histogram('aabbccddddeeefffgggghhhhh'));\nconsole.log(histogram('aabbccddddeeefffgggghhhhhiiiiii'));\n\
    console.log(histogram('aabbccddddeeefffgggghhhhhiiiiiijjjjjjjj'));\nconsole.log(histogram('aabbccddddeeefffgggghhhhhiiiiiijjjjjjjjkkkkkkkk'));\n\
    console.log(histogram('aabbccddddeeefffgggghhhhhiiiiiijjjjjjjjkkkkkkkkllllllllll'));\n\
    console.log(histogram('aabbccddddeeefffgggghhhhhiiiiiijjjjjjjjkkkkkkkkllllllllllmmmmmmmmmmmm'));\n\
    console.log(histogram('aabbccddddeeefffgggghhhhhiiiiiijjjjjjjjkkkkkkkkllllllllllmmmmmmmmmmmmnnnnnnnnnnnnnnnn'));\n\
    console.log(histogram('a", "    let hist: {[key: string]: number} = {};\n    for\
    \ (let i = 0; i < test.length; i++) {\n        let letter = test[i];\n       \
    \ if (hist[letter]) {\n            hist[letter]++;\n        } else {\n       \
    \     hist[letter] = 1;\n        }\n    }\n    return hist;\n}\n", "    let hist:\
    \ {[key: string]: number} = {};\n    for (let i = 0; i < test.length; i++) {\n\
    \        if (hist[test[i]]) {\n            hist[test[i]]++;\n        } else {\n\
    \            hist[test[i]] = 1;\n        }\n    }\n    return hist;\n}\n", " \
    \   let result: {[key: string]: number} = {};\n    let max: number = 0;\n    for\
    \ (let i: number = 0; i < test.length; i++) {\n        if (result[test[i]]) {\n\
    \            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \        }\n    }\n    for (let key in result) {\n        if (result[key] < max)\
    \ {\n            delete result[key];\n        }\n    }\n    return result;\n}\n\
    console.log(histogram(\"aabbbcccc\"));\nconsole.log(histogram(\"aabbbccc\"));\n\
    console.log(histogram(\"aabbbccccc\"));\nconsole.log(histogram(\"aabbbcccccc\"\
    ));", "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n\
    \    let maxKey: string = '';\n    for (let i: number = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]]) {\n            result[test[i]]++;\n        }\
    \ else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxKey = test[i];\n\
    \        }\n    }\n    return {[maxKey]: max};\n}\n\nconsole.log(histogram('aabbbcccc'));\
    \ // {c: 4}\nconsole.log(histogram('aabbbccccdddd')); // {d: 4}\nconsole.log(histogram('aabbbccccddddeeeeeeeeee'));\
    \ // {e: 10}\nconsole.log(histogram('aabbbccccddddeeeeeeeeeeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
  "    let dict: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i: number = 0; i < test.length; i++)\
    \ {\n        if (dict[test[i]]) {\n            dict[test[i]]++;\n        } else\
    \ {\n            dict[test[i]] = 1;\n        }\n        if (dict[test[i]] > max)\
    \ {\n            max = dict[test[i]];\n            maxLetters = [test[i]];\n \
    \       } else if (dict[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbcccc'));\
    \ // {c: 4}\nconsole.log(histogram('aabbbbcccc')); // {b: 5}\nconsole.log(histogram('aabbbbccccdddd'));\
    \ // {d: 4}\nconsole.log(histogram('aabbbbccccddddeeeee')); // {e: 5}\nconsole.log(histogram('aabbbbccccddddeeeeeffffff'));\
    \ // {f: 6}\nconsole.log(histogram('aabbbbccccddddeeeeeffffffggggggg')); // {g:\
    \ 7}\nconsole.log(histogram('aabbbbccccddddeeeeeffffffggggggghhhhhhhh')); // {h:\
    \ 8}\nconsole.log(histogram('aabbbbccccddddeeeeeffffffggggggghhhhhhhhiiiiiiii'));\
    \ // {i: 9}\nconsole.log(histogram('aabbbbccccddddeeeeeffffffggggggghhhhhhhhiiiiiiiijjjjjjjjj'));\
    \ // {j: 10}\nconsole.log(histogram('aabbbbccccddddeeeeeffffffggggggghhhhhhhhiiiiiiiijjjjjjjjjkkkkkkkkkk'));\
    \ // {k: 11}\nconsole.log(histogram('aabbbbccccddddeeeeeffffff", "    let result:\
    \ {[key: string]: number} = {};\n    let max: number = 0;\n    let maxLetters:\
    \ string[] = [];\n    test.split(\"\").forEach(letter => {\n        if (result[letter])\
    \ {\n            result[letter]++;\n        } else {\n            result[letter]\
    \ = 1;\n        }\n        if (result[letter] > max) {\n            max = result[letter];\n\
    \            maxLetters = [letter];\n        } else if (result[letter] === max)\
    \ {\n            maxLetters.push(letter);\n        }\n    });\n    return {[maxLetters.join(\"\
    \")]: max};\n}\n\nconsole.log(histogram(\"abbbccc\")); // {b: 3}\nconsole.log(histogram(\"\
    abbbcccdddd\")); // {b: 3, d: 4}\nconsole.log(histogram(\"abbbcccddddeeee\"));\
    \ // {b: 3, d: 4, e: 4}\nconsole.log(histogram(\"abbbcccddddeeeefffff\")); //\
    \ {b: 3, d: 4, e: 4, f: 5}\nconsole.log(histogram(\"abbbcccddddeeeefffffgggggg\"\
    )); // {b: 3, d: 4, e: 4, f: 5, g: 6}\nconsole.log(histogram(\"abbbcccddddeeeefffffggggggaaaaa\"\
    )); // {a: 6, b: 3, d: 4, e: 4, f: 5, g: 6}\nconsole.log(histogram(\"abbbcccddddeeeefffffggggggaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb",
  "    let hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        let letter = test[i];\n        if (hist[letter]) {\n       \
    \     hist[letter]++;\n        } else {\n            hist[letter] = 1;\n     \
    \   }\n    }\n    return hist;\n}\n", "    let result: {[key: string]: number}\
    \ = {};\n    let max = 0;\n    let maxLetter = '';\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (result[test[i]]) {\n            result[test[i]]++;\n   \
    \     } else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetter = test[i];\n\
    \        }\n    }\n    for (let key in result) {\n        if (result[key] < max)\
    \ {\n            delete result[key];\n        }\n    }\n    return result;\n}\n\
    \nconsole.log(histogram('abccccc'));\nconsole.log(histogram('aabbcc'));\nconsole.log(histogram('aabbccdddd'));",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i: number = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]]) {\n            result[test[i]]++;\n        }\
    \ else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbccdddd'));",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i: number = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]] === undefined) {\n            result[test[i]]\
    \ = 1;\n        } else {\n            result[test[i]]++;\n        }\n        if\
    \ (result[test[i]] > max) {\n            max = result[test[i]];\n            maxLetters\
    \ = [test[i]];\n        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbccc'));\
    \ // {a: 2, b: 3, c: 3}\nconsole.log(histogram('aabbbcccdddd')); // {d: 4}\nconsole.log(histogram('aabbbcccddddeeee'));\
    \ // {e: 4}\nconsole.log(histogram('aabbbcccddddeeeeffff')); // {f: 4}\nconsole.log(histogram('aabbbcccddddeeeeffffgggg'));\
    \ // {g: 4}\nconsole.log(histogram('aabbbcccddddeeeeffffgggghhhh')); // {h: 4}\n\
    console.log(histogram('aabbbcccddddeeeeffffgggghhhhiiii')); // {i: 4}\nconsole.log(histogram('aabbbcccddddeeeeffffgggghhhhiiiijjjj'));\
    \ // {j: 4}\nconsole.log(histogram('aabbbcccddddeeeeffffgggghhhhiiiijjjjkkkk'));\
    \ // {k: 4}\nconsole.log(histogram('aabbbcccddddeeeeffffgggghhhhiiiijjjjkkkkllll'));\
    \ // {l: 4}\nconsole.log(histogram('aabbbcccddddeeeeffffgggghhhhiiiijjjjkkkkllllmmmm')",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetter: string = '';\n    for (let i = 0; i < test.length; i++) {\n     \
    \   if (result[test[i]]) {\n            result[test[i]]++;\n        } else {\n\
    \            result[test[i]] = 1;\n        }\n        if (result[test[i]] > max)\
    \ {\n            max = result[test[i]];\n            maxLetter = test[i];\n  \
    \      }\n    }\n    return result;\n}\n\nconsole.log(histogram('aabbccdd'));\n\
    console.log(histogram('aabbccddee'));\nconsole.log(histogram('aabbccddeeff'));\n\
    console.log(histogram('aabbccddeeffgg'));\nconsole.log(histogram('aabbccddeeffgghh'));\n\
    console.log(histogram('aabbccddeeffgghhii'));\nconsole.log(histogram('aabbccddeeffgghhiijj'));\n\
    console.log(histogram('aabbccddeeffgghhiijjkk'));\nconsole.log(histogram('aabbccddeeffgghhiijjkkll'));\n\
    console.log(histogram('aabbccddeeffgghhiijjkkllmm'));\nconsole.log(histogram('aabbccddeeffgghhiijjkkllmmnn'));\n\
    console.log(histogram('aabbccddeeffgghhiijjkkllmmnnoo'));\nconsole.log(histogram('aabbccddeeffgghhiijjkkllmmnnoopp'));\n\
    console.log(histogram('aabbccddeeffgghhiijjkkllmmnnooppqq'));\nconsole.log(histogram('aabbccddeeffgghhiijjkkllmmnnooppqqrr'));\n\
    console.log(histogram('aabbccddeeffgghhiijjkkllmmnnooppqqrrsstt'));\nconsole.log(histogram('aabbccddee",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i: number = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]]) {\n            result[test[i]]++;\n        }\
    \ else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbccdddd'));\
    \ // {d: 4}\nconsole.log(histogram('aabbccddddeeee')); // {e: 4}\nconsole.log(histogram('aabbccddddeeeeff'));\
    \ // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffgg')); // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffgghh'));\
    \ // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffgghhii')); // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffgghhiiijj'));\
    \ // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffgghhiiijjkk')); // {e: 4}\n\
    console.log(histogram('aabbccddddeeeeffgghhiiijjkkll')); // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffgghhiiijjkkllmm'));\
    \ // {e: 4}\nconsole.log(histogram('aabbccddddeeeeffgghhiiijjkkllmmnn')); // {e:\
    \ 4}\nconsole.log(histogram('aabbccddddeeeeffgghhiiijjkkllmmnnoo'));", "    let\
    \ hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length; i++)\
    \ {\n        let letter = test[i];\n        if (hist[letter]) {\n            hist[letter]++;\n\
    \        } else {\n            hist[letter] = 1;\n        }\n    }\n    return\
    \ hist;\n}\n", "    let result: {[key: string]: number} = {};\n    let max: number\
    \ = 0;\n    let maxLetters: string[] = [];\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (result[test[i]] === undefined) {\n            result[test[i]]\
    \ = 1;\n        } else {\n            result[test[i]]++;\n        }\n        if\
    \ (result[test[i]] > max) {\n            max = result[test[i]];\n            maxLetters\
    \ = [test[i]];\n        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbccc'));\n\
    console.log(histogram('aabbbcccdddd'));\nconsole.log(histogram('aabbbcccddddeeeeeeee'));",
  "    let hist: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
    \ i++) {\n        if (hist[test[i]]) {\n            hist[test[i]]++;\n       \
    \ } else {\n            hist[test[i]] = 1;\n        }\n    }\n    return hist;\n\
    }\n", "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n\
    \    let maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++)\
    \ {\n        if (result[test[i]]) {\n            result[test[i]]++;\n        }\
    \ else {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbcccc'));\n\
    console.log(histogram('aabbbccccd'));\nconsole.log(histogram('aabbbccccdd'));\n\
    console.log(histogram('aabbbccccddd'));\nconsole.log(histogram('aabbbccccdddd'));\n\
    console.log(histogram('aabbbccccdddde'));\nconsole.log(histogram('aabbbccccddddee'));\n\
    console.log(histogram('aabbbccccddddeee'));\nconsole.log(histogram('aabbbccccddddeeee'));\n\
    console.log(histogram('aabbbccccddddeeeee'));\nconsole.log(histogram('aabbbccccddddeeeeee'));\n\
    console.log(histogram('aabbbccccddddeeeeeee'));\nconsole.log(histogram('aabbbccccddddeeeeeeee'));\n\
    console.log(histogram('aabbbccccddddeeeeeeeee'));\nconsole.log(histogram('aabbbccccddddeeeeeeeeee'));\n\
    console.log(histogram('aabbbccccddddeeeeeeeeeee'));\nconsole.log(histogram('aabbbccccddddeeeeeeeeeeee'));\n\
    console.log(histogram('aabbbccccddddeeee", "    let result: {[key: string]: number}\
    \ = {};\n    let max: number = 0;\n    let maxLetters: string[] = [];\n    for\
    \ (let i: number = 0; i < test.length; i++) {\n        if (result[test[i]]) {\n\
    \            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \            maxLetters = [test[i]];\n        } else if (result[test[i]] === max)\
    \ {\n            maxLetters.push(test[i]);\n        }\n    }\n    return {[maxLetters.join('')]:\
    \ max};\n}\n\nconsole.log(histogram('aabbbcc')); // {a: 2, b: 3, c: 2}\nconsole.log(histogram('aabbccdddd'));\
    \ // {d: 4}\nconsole.log(histogram('aabbccddddeeeeeeeeee')); // {e: 10}\nconsole.log(histogram('aabbccddddeeeeeeeeeeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
  "    let result: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
    \ maxLetters: string[] = [];\n    for (let i = 0; i < test.length; i++) {\n  \
    \      if (result[test[i]]) {\n            result[test[i]]++;\n        } else\
    \ {\n            result[test[i]] = 1;\n        }\n        if (result[test[i]]\
    \ > max) {\n            max = result[test[i]];\n            maxLetters = [test[i]];\n\
    \        } else if (result[test[i]] === max) {\n            maxLetters.push(test[i]);\n\
    \        }\n    }\n    return {[maxLetters.join('')]: max};\n}\n\nconsole.log(histogram('aabbbccd'));\n\
    console.log(histogram('aabbbccdddd'));\nconsole.log(histogram('aabbbccddddeeeee'));\n\
    console.log(histogram('aabbbccddddeeeeeffffff'));\nconsole.log(histogram('aabbbccddddeeeeeffffffggggggg'));\n\
    console.log(histogram('aabbbccddddeeeeeffffffgggggggiiiiiiii'));\nconsole.log(histogram('aabbbccddddeeeeeffffffgggggggiiiiiiiihhhhhhhh'));\n\
    console.log(histogram('aabbbccddddeeeeeffffffgggggggiiiiiiiihhhhhhhhjjjjjjjjjj'));\n\
    console.log(histogram('aabbbccddddeeeeeffffffgggggggiiiiiiiihhhhhhhhjjjjjjjjjjkkkkkkkkkkk'));\n\
    console.log(histogram('aabbbccddddeeeeeffffffgggggggiiiiiiiihhhhhhhhjjjjjjjjjjkkkkkkkkkkkllllllllllll'));\n\
    console.log(histogram('aabbbccddddeeeeeffffffgggggggiiiiiiiihhhhhhhhjjjjjjjjjjkkkkkkkkkkkllllllllllllmmmmmmmmmmmmmm'));\n\
    console.", "    let result: {[key: string]: number} = {};\n    let max: number\
    \ = 0;\n    for (let i: number = 0; i < test.length; i++) {\n        if (result[test[i]])\
    \ {\n            result[test[i]]++;\n        } else {\n            result[test[i]]\
    \ = 1;\n        }\n        if (result[test[i]] > max) {\n            max = result[test[i]];\n\
    \        }\n    }\n    let result2: {[key: string]: number} = {};\n    for (let\
    \ i: number = 0; i < test.length; i++) {\n        if (result[test[i]] === max)\
    \ {\n            result2[test[i]] = max;\n        }\n    }\n    return result2;\n\
    }\nconsole.log(histogram(\"abbcccddddeeeee\"));", "    let letters: {[key: string]:\
    \ number} = {};\n    for (let i = 0; i < test.length; i++) {\n        if (letters[test[i]])\
    \ {\n            letters[test[i]]++;\n        } else {\n            letters[test[i]]\
    \ = 1;\n        }\n    }\n    return letters;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_68_pluck
language: ts
prompt: "//\"Given an array representing a branch of a tree that has non-negative\
  \ integer nodes\n// your task is to pluck one of the nodes and return it.\n// The\
  \ plucked node should be the node with the smallest even value.\n// If multiple\
  \ nodes with the same smallest even value are found return the node that has smallest\
  \ index.\n// The plucked node should be returned in a list, [ smalest_value, its\
  \ index ],\n// If there are no even values or the given array is empty, return [].\n\
  // Example 1:\n// Explanation: 2 has the smallest even value, and 2 has the smallest\
  \ index.\n// Example 2:\n// Explanation: 2 has the smallest even value, and 2 has\
  \ the smallest index.\n// Example 3:\n// Example 4:\n// Explanation: 0 is the smallest\
  \ value, but  there are two zeros,\n// so we will choose the first zero, which has\
  \ the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0\
  \ <= node.value\nfunction pluck(arr: number[]): number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = pluck;\n  assert.deepEqual(candidate([4, 2, 3]),[2,\
  \ 1]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 1]);\n  assert.deepEqual(candidate([]),[]);\n\
  \  assert.deepEqual(candidate([5, 0, 3, 0, 4, 2]),[0, 1]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 0, 5, 3]),[0, 3]);\n  assert.deepEqual(candidate([5, 4, 8, 4, 8]),[4, 1]);\n\
  \  assert.deepEqual(candidate([7, 6, 7, 1]),[6, 1]);\n  assert.deepEqual(candidate([7,\
  \ 9, 7, 1]),[]);\n}\n\ntest();"
completions: ["  let min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i <\
    \ arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min =\
    \ arr[i];\n      minIndex = i;\n    }\n  }\n  return minIndex === -1 ? [] : [min,\
    \ minIndex];\n}\n", "  let evens = arr.filter(x => x % 2 === 0);\n  let min =\
    \ Math.min(...evens);\n  let index = arr.indexOf(min);\n  return [min, index];\n\
    }\n", "    if (arr.length === 0) {\n        return [];\n    }\n    let evens =\
    \ arr.filter(x => x % 2 === 0);\n    if (evens.length === 0) {\n        return\
    \ [];\n    }\n    let min = Math.min(...evens);\n    let index = arr.indexOf(min);\n\
    \    return [min, index];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10]));\nconsole.log(pluck([1, 3, 5, 7, 9]));\nconsole.log(pluck([0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10]));", "  const evens = arr.filter(n => n % 2 === 0);\n  if (evens.length\
    \ === 0) return [];\n  const minEven = Math.min(...evens);\n  const minEvenIndex\
    \ = arr.indexOf(minEven);\n  return [minEven, minEvenIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let minEven: number = Infinity;\n\
    \  let minEvenIndex: number = -1;\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] % 2 === 0 && arr[i] < minEven) {\n      minEven = arr[i];\n  \
    \    minEvenIndex = i;\n    }\n  }\n  return minEvenIndex === -1 ? [] : [minEven,\
    \ minEvenIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));", "  let minEven: number = Infinity;\n  let minEvenIndex: number\
    \ = Infinity;\n  let minEvenFound: boolean = false;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < minEven) {\n       \
    \ minEven = arr[i];\n        minEvenIndex = i;\n        minEvenFound = true;\n\
    \      }\n    }\n  }\n  if (minEvenFound) {\n    return [minEven, minEvenIndex];\n\
    \  } else {\n    return [];\n  }\n}\n", "  let smallestEven = Infinity;\n  let\
    \ smallestEvenIndex = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n  \
    \  if (arr[i] % 2 === 0 && arr[i] < smallestEven) {\n      smallestEven = arr[i];\n\
    \      smallestEvenIndex = i;\n    }\n  }\n  return smallestEven === Infinity\
    \ ? [] : [smallestEven, smallestEvenIndex];\n}\n\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8", "  let min = Infinity;\n  let minIndex = -1;\n  for (let\
    \ i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n\
    \      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return minIndex === -1\
    \ ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14,", "  const evens = arr.filter(n => n % 2 === 0);\n\
    \  if (evens.length === 0) return [];\n  const min = Math.min(...evens);\n  const\
    \ index = arr.indexOf(min);\n  return [min, index];\n}\n", "  let min = Infinity;\n\
    \  let index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] %\
    \ 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      index = i;\n    }\n \
    \ }\n  return index === -1 ? [] : [min, index];\n}\n", "  let minEven = Infinity;\n\
    \  let minEvenIndex = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n  \
    \  if (arr[i] % 2 === 0 && arr[i] < minEven) {\n      minEven = arr[i];\n    \
    \  minEvenIndex = i;\n    }\n  }\n  return minEven === Infinity ? [] : [minEven,\
    \ minEvenIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); //\
    \ [2, 1]\nconsole.log(pluck([1, 3, 5, 7, 9, 11])); // []\nconsole.log(pluck([2,\
    \ 4, 6, 8, 10])); // [2, 0]\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10])); // [0, 0]\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\
    \ // [0, 0]", "  let min = Infinity;\n  let minIndex = Infinity;\n  let minFound\
    \ = false;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0\
    \ && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n      minFound\
    \ = true;\n    }\n  }\n  return minFound ? [min, minIndex] : [];\n}\n\nexport\
    \ default pluck;", "  let min = Infinity;\n  let minIndex = Infinity;\n  for (let\
    \ i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n\
    \      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return min === Infinity\
    \ ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10])); // [2, 1]\nconsole.log(pluck([1, 3, 5, 7, 9, 11])); // []\nconsole.log(pluck([2,\
    \ 4, 6, 8, 10])); // [2, 0]\nconsole.log(pluck([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\
    \ // [0, 0]\nconsole.log(pluck([])); // []", "  if (arr.length === 0) return [];\n\
    \  const evens = arr.filter((n) => n % 2 === 0);\n  if (evens.length === 0) return\
    \ [];\n  const min = Math.min(...evens);\n  const index = arr.indexOf(min);\n\
    \  return [min, index];\n}\n", "  let minEven = Infinity;\n  let minEvenIndex\
    \ = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 ===\
    \ 0 && arr[i] < minEven) {\n      minEven = arr[i];\n      minEvenIndex = i;\n\
    \    }\n  }\n  return minEven === Infinity ? [] : [minEven, minEvenIndex];\n}\n\
    \nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1,\
    \ 3, 5, 7, 9]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  if (arr.length === 0) return [];\n\
    \  let min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    const num = arr[i];\n    if (num % 2 === 0 && num < min) {\n   \
    \   min = num;\n      minIndex = i;\n    }\n  }\n  if (minIndex === -1) return\
    \ [];\n  return [min, minIndex];\n}\n\nexport default pluck;", "  if (arr.length\
    \ === 0) return [];\n  let smallestEven = Infinity;\n  let smallestEvenIndex =\
    \ Infinity;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 ===\
    \ 0 && arr[i] < smallestEven) {\n      smallestEven = arr[i];\n      smallestEvenIndex\
    \ = i;\n    }\n  }\n  if (smallestEven === Infinity) return [];\n  return [smallestEven,\
    \ smallestEvenIndex];\n}\n", "  let min = Infinity;\n  let index = -1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min)\
    \ {\n      min = arr[i];\n      index = i;\n    }\n  }\n  return index === -1\
    \ ? [] : [min, index];\n}\n", "  let min = Infinity;\n  let minIndex = Infinity;\n\
    \  let minFound = false;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n   \
    \   minFound = true;\n    }\n  }\n  return minFound ? [min, minIndex] : [];\n\
    }\n\nconsole.log(pluck([])); // []\nconsole.log(pluck([1, 2, 3, 4, 5])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8]));\
    \ // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15])); // [2, 1]\nconsole.log(pluck([", "  let min = Number.MAX_SAFE_INTEGER;\n\
    \  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n   \
    \ }\n  }\n  return minIndex === -1 ? [] : [min, minIndex];\n}\n", "  const evens\
    \ = arr.filter(x => x % 2 === 0);\n  if (evens.length === 0) {\n    return [];\n\
    \  }\n  const min = Math.min(...evens);\n  const index = arr.indexOf(min);\n \
    \ return [min, index];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(pluck([1, 3, 5, 7, 9]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));",
  "  let minEven = Infinity;\n  let minEvenIndex = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < minEven) {\n      minEven = arr[i];\n\
    \      minEvenIndex = i;\n    }\n  }\n  return minEvenIndex === -1 ? [] : [minEven,\
    \ minEvenIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));", "  let min = Infinity;\n  let minIndex = -1;\n  for (let i\
    \ = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n \
    \     min = arr[i];\n      minIndex = i;\n    }\n  }\n  return minIndex === -1\
    \ ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14,", "  let min = Infinity;\n  let minIndex = -1;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return minIndex\
    \ === -1 ? [] : [min, minIndex];\n}\n", "  const evens = arr.filter(x => x % 2\
    \ === 0);\n  if (evens.length === 0) {\n    return [];\n  }\n  const min = Math.min(...evens);\n\
    \  const index = arr.indexOf(min);\n  return [min, index];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let min = Infinity;\n  let minIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return\
    \ minIndex === -1 ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\
    \ // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])); // [2, 1]\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18])); // [", "  if\
    \ (arr.length === 0) return [];\n  let min = Infinity;\n  let minIndex = Infinity;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  if (min ===\
    \ Infinity) return [];\n  return [min, minIndex];\n}\n\nconsole.log(pluck([]));\
    \ // []\nconsole.log(pluck([1, 2, 3, 4, 5])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\
    \ // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])); //\
    \ [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\
    \ // [2, 1]\nconsole.log(pl", "  if (arr.length === 0) return [];\n  let min =\
    \ Infinity;\n  let minIndex = Infinity;\n  let found = false;\n  for (let i =\
    \ 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      found = true;\n\
    \      if (arr[i] < min) {\n        min = arr[i];\n        minIndex = i;\n   \
    \   } else if (arr[i] === min) {\n        minIndex = Math.min(minIndex, i);\n\
    \      }\n    }\n  }\n  if (!found) return [];\n  return [min, minIndex];\n}\n\
    \nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([1, 3, 5, 7, 9]));\n\
    console.log(pluck([]));", "  if (arr.length === 0) return [];\n  let min = Infinity;\n\
    \  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n   \
    \ }\n  }\n  if (min === Infinity) return [];\n  return [min, minIndex];\n}\n\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1,\
    \ 3, 5, 7, 9, 11])); // []\nconsole.log(pluck([2, 4, 6, 8, 10])); // [2, 0]\n\
    console.log(pluck([2, 4, 6, 8, 10, 11])); // [2, 0]\nconsole.log(pluck([0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0])); // [0, 0]\nconsole.log(pluck([])); // []", "  let\
    \ minEven = Infinity;\n  let minEvenIndex = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < minEven) {\n      minEven = arr[i];\n\
    \      minEvenIndex = i;\n    }\n  }\n  return minEvenIndex === -1 ? [] : [minEven,\
    \ minEvenIndex];\n}\n", "  let min = Number.MAX_SAFE_INTEGER;\n  let minIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return\
    \ minIndex === -1 ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\n\
    console.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let evens = arr.filter(x => x % 2\
    \ === 0);\n  let min = Math.min(...evens);\n  let index = arr.indexOf(min);\n\
    \  return [min, index];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));", "  let minEven = Infinity;\n  let minEvenIndex = Infinity;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < minEven) {\n      minEven = arr[i];\n      minEvenIndex = i;\n    }\n  }\n\
    \  return minEven === Infinity ? [] : [minEven, minEvenIndex];\n}\n\nconsole.log(pluck([]));\
    \ // []\nconsole.log(pluck([1, 2, 3, 4, 5])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\
    \ // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])); //\
    \ [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\
    \ // [2, 1]\nconsole.log(pluck([1, 2, 3,", "  let min = Infinity;\n  let minIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return\
    \ minIndex === -1 ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\n\
    console.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let min = Infinity;\n  let minIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return\
    \ minIndex === -1 ? [] : [min, minIndex];\n}\n", "  if (arr.length === 0) return\
    \ [];\n  let minEven = Infinity;\n  let minEvenIndex = Infinity;\n  for (let i\
    \ = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < minEven) {\n\
    \      minEven = arr[i];\n      minEvenIndex = i;\n    }\n  }\n  if (minEven ===\
    \ Infinity) return [];\n  return [minEven, minEvenIndex];\n}\n", "  let min =\
    \ Infinity;\n  let minIndex = Infinity;\n  let found = false;\n  for (let i =\
    \ 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n   \
    \   min = arr[i];\n      minIndex = i;\n      found = true;\n    }\n  }\n  return\
    \ found ? [min, minIndex] : [];\n}\n", "  let min = Infinity;\n  let minIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return\
    \ minIndex === -1 ? [] : [min, minIndex];\n}\n", "  let minEven = Infinity;\n\
    \  let minEvenIndex = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n  \
    \  if (arr[i] % 2 === 0 && arr[i] < minEven) {\n      minEven = arr[i];\n    \
    \  minEvenIndex = i;\n    }\n  }\n  return minEven === Infinity ? [] : [minEven,\
    \ minEvenIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); //\
    \ [2, 1]\nconsole.log(pluck([1, 3, 5, 7, 9, 11])); // []\nconsole.log(pluck([2,\
    \ 4, 6, 8, 10])); // [2, 0]\nconsole.log(pluck([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\
    \ // [0, 0]\nconsole.log(pluck([])); // []", "  let min = Infinity;\n  let minIndex\
    \ = Infinity;\n  let minEven = Infinity;\n  let minEvenIndex = Infinity;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] < min) {\n      min = arr[i];\n\
    \      minIndex = i;\n    }\n    if (arr[i] % 2 === 0 && arr[i] < minEven) {\n\
    \      minEven = arr[i];\n      minEvenIndex = i;\n    }\n  }\n  if (minEven ===\
    \ Infinity) {\n    return [];\n  }\n  return [minEven, minEvenIndex];\n}\n", " \
    \ if (arr.length === 0) return [];\n  let minEven = Infinity;\n  let minEvenIndex\
    \ = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 ===\
    \ 0 && arr[i] < minEven) {\n      minEven = arr[i];\n      minEvenIndex = i;\n\
    \    }\n  }\n  if (minEven === Infinity) return [];\n  return [minEven, minEvenIndex];\n\
    }\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1,\
    \ 3, 5, 7, 9]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let min = Infinity;\n  let index =\
    \ -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < min) {\n      min = arr[i];\n      index = i;\n    }\n  }\n  return index\
    \ === -1 ? [] : [min, index];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6])); //\
    \ [2, 1]\nconsole.log(pluck([2, 2, 2, 2, 2, 2])); // [2, 0]\nconsole.log(pluck([1,\
    \ 1, 1, 1, 1, 1])); // []\nconsole.log(pluck([0, 0, 0, 0, 0, 0])); // [0, 0]\n\
    console.log(pluck([])); // []", "    let min = Number.MAX_SAFE_INTEGER;\n    let\
    \ minIndex = -1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ % 2 === 0 && arr[i] < min) {\n            min = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return minIndex === -1 ? [] : [min, minIndex];\n\
    }\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(pluck([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(pluck([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]));\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]));", "  let min =\
    \ Infinity;\n  let minIndex = Infinity;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex\
    \ = i;\n    }\n  }\n  return min === Infinity ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,\
    \ 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23", "  const evens\
    \ = arr.filter(n => n % 2 === 0);\n  if (evens.length === 0) return [];\n  const\
    \ min = Math.min(...evens);\n  const index = arr.indexOf(min);\n  return [min,\
    \ index];\n}\n", "  let smallestEven = Infinity;\n  let smallestEvenIndex = Infinity;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < smallestEven) {\n      smallestEven = arr[i];\n      smallestEvenIndex = i;\n\
    \    }\n  }\n  return smallestEven === Infinity ? [] : [smallestEven, smallestEvenIndex];\n\
    }\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1,\
    \ 3, 5, 7, 9]));\nconsole.log(pluck([2, 4, 6, 8, 10]));\nconsole.log(pluck([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));", "  let min = Infinity;\n  let minIndex = Infinity;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min)\
    \ {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return min === Infinity\
    \ ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5])); // [2, 1]\n\
    console.log(pluck([1, 2, 3, 4, 5, 6])); // [2, 1]\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13,", "  let min = Infinity;\n  let minIndex = -1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min)\
    \ {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return minIndex ===\
    \ -1 ? [] : [min, minIndex];\n}\n", "  let minEven = Number.MAX_SAFE_INTEGER;\n\
    \  let minEvenIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < minEven) {\n      minEven = arr[i];\n      minEvenIndex\
    \ = i;\n    }\n  }\n  return minEvenIndex === -1 ? [] : [minEven, minEvenIndex];\n\
    }\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));",
  "  let min = Number.MAX_SAFE_INTEGER;\n  let minIndex = -1;\n  for (let i = 0; i\
    \ < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min\
    \ = arr[i];\n      minIndex = i;\n    }\n  }\n  return minIndex === -1 ? [] :\
    \ [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10", "  let minEven = Infinity;\n  let minEvenIndex = Infinity;\n \
    \ for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] <\
    \ minEven) {\n      minEven = arr[i];\n      minEvenIndex = i;\n    }\n  }\n \
    \ return minEven === Infinity ? [] : [minEven, minEvenIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let smallestEven: number = Infinity;\n\
    \  let smallestEvenIndex: number = Infinity;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < smallestEven) {\n      smallestEven\
    \ = arr[i];\n      smallestEvenIndex = i;\n    }\n  }\n  return smallestEven ===\
    \ Infinity ? [] : [smallestEven, smallestEvenIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 3, 5, 7, 9]));\nconsole.log(pluck([2,\
    \ 2, 2, 2, 2]));\nconsole.log(pluck([0, 0, 0, 0, 0]));", "  let minEven = Infinity;\n\
    \  let minEvenIndex = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n  \
    \  if (arr[i] % 2 === 0 && arr[i] < minEven) {\n      minEven = arr[i];\n    \
    \  minEvenIndex = i;\n    }\n  }\n  return minEven === Infinity ? [] : [minEven,\
    \ minEvenIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(pluck([0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\n\
    console.log(pluck([]));", "  if (arr.length === 0) return [];\n  let min = Infinity;\n\
    \  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n   \
    \ }\n  }\n  if (min === Infinity) return [];\n  return [min, minIndex];\n}\n\n\
    console.log(pluck([])); // []\nconsole.log(pluck([1, 2, 3, 4, 5])); // [2, 1]\n\
    console.log(pluck([1, 2, 3, 4, 5, 6])); // [2, 1]\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15])); // [2, 1]\nconsole.log(", "  let min = Infinity;\n\
    \  let index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] %\
    \ 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      index = i;\n    }\n \
    \ }\n  return index === -1 ? [] : [min, index];\n}\n\nconsole.log(pluck([]));\
    \ // []\nconsole.log(pluck([1, 2, 3, 4, 5])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\
    \ // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])); //\
    \ [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\
    \ // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8", "  if (arr.length ===\
    \ 0) return [];\n  let min = Number.MAX_SAFE_INTEGER;\n  let minIndex = Number.MAX_SAFE_INTEGER;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  if (min ===\
    \ Number.MAX_SAFE_INTEGER) return [];\n  return [min, minIndex];\n}\n", "  let\
    \ minEven: number = Number.MAX_SAFE_INTEGER;\n  let minEvenIndex: number = -1;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < minEven) {\n      minEven = arr[i];\n      minEvenIndex = i;\n    }\n  }\n\
    \  return minEvenIndex === -1 ? [] : [minEven, minEvenIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let min = Infinity;\n  let minIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return\
    \ minIndex === -1 ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 3, 5, 7, 9, 11])); //\
    \ []\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [0, 0]\nconsole.log(pluck([0,\
    \ 1, 2, 3, 0, 5, 6, 7, 8, 9, 10])); // [0, 0]", "  const evens = arr.filter(n\
    \ => n % 2 === 0);\n  if (evens.length === 0) return [];\n  const smallest = Math.min(...evens);\n\
    \  const index = arr.indexOf(smallest);\n  return [smallest, index];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 3, 5, 7, 9,\
    \ 11])); // []\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [0,\
    \ 0]\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [0, 0]", " \
    \ if (arr.length === 0) return [];\n  const evens = arr.filter((n) => n % 2 ===\
    \ 0);\n  if (evens.length === 0) return [];\n  const min = Math.min(...evens);\n\
    \  return [min, arr.indexOf(min)];\n}\n", "  let min = Infinity;\n  let minIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return\
    \ minIndex === -1 ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 3, 5, 7, 9, 11]));\nconsole.log(pluck([2,\
    \ 4, 6, 8, 10]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0]));", "  let min = Infinity;\n  let index =\
    \ -1;\n  arr.forEach((num, i) => {\n    if (num % 2 === 0 && num < min) {\n  \
    \    min = num;\n      index = i;\n    }\n  });\n  return index === -1 ? [] :\
    \ [min, index];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1,\
    \ 3, 5, 7, 9, 11]));\nconsole.log(pluck([2, 4, 6, 8, 10]));\nconsole.log(pluck([0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(pluck([]));", "  let min = Infinity;\n\
    \  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n   \
    \ }\n  }\n  return minIndex === -1 ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6])); // [2, 1]\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7])); // [2, 1]\nconsole.log(pluck([1, 2,\
    \ 3, 4, 5, 6, 7, 8])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9]));\
    \ // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [2, 1]\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])); // [2, 1]\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])); // [2, 1]\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])); // [2, 1]\nconsole.log(pluck([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,", "  let minEven = Infinity;\n  let minEvenIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < minEven) {\n      minEven = arr[i];\n      minEvenIndex = i;\n    }\n\
    \  }\n  return minEvenIndex === -1 ? [] : [minEven, minEvenIndex];\n}\n", "  let\
    \ min = Number.MAX_SAFE_INTEGER;\n  let minIndex = -1;\n  for (let i = 0; i <\
    \ arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min =\
    \ arr[i];\n      minIndex = i;\n    }\n  }\n  return minIndex === -1 ? [] : [min,\
    \ minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));",
  "  let evens = arr.filter(x => x % 2 === 0);\n  if (evens.length === 0) return [];\n\
    \  let min = Math.min(...evens);\n  let index = arr.indexOf(min);\n  return [min,\
    \ index];\n}\n", "  let minEven = Infinity;\n  let minEvenIndex = Infinity;\n\
    \  let minEvenFound = false;\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] % 2 === 0) {\n      if (arr[i] < minEven) {\n        minEven = arr[i];\n\
    \        minEvenIndex = i;\n        minEvenFound = true;\n      }\n    }\n  }\n\
    \  return minEvenFound ? [minEven, minEvenIndex] : [];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16])); // [2, 1]\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18])); // [2, 1]", " \
    \ let minEven = Infinity;\n  let minEvenIndex = Infinity;\n  for (let i = 0; i\
    \ < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < minEven) {\n    \
    \  minEven = arr[i];\n      minEvenIndex = i;\n    }\n  }\n  return minEven ===\
    \ Infinity ? [] : [minEven, minEvenIndex];\n}\n", "  if (arr.length === 0) return\
    \ [];\n  const evens = arr.filter((n) => n % 2 === 0);\n  if (evens.length ===\
    \ 0) return [];\n  const min = Math.min(...evens);\n  return [min, arr.indexOf(min)];\n\
    }\n", "  const result = [];\n  let min = Infinity;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n \
    \     result[0] = min;\n      result[1] = i;\n    }\n  }\n  return result;\n}\n\
    \nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));",
  "  let min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n \
    \     minIndex = i;\n    }\n  }\n  return minIndex === -1 ? [] : [min, minIndex];\n\
    }\n", "  if (arr.length === 0) return [];\n  const evens = arr.filter((n) => n\
    \ % 2 === 0);\n  if (evens.length === 0) return [];\n  const smallest = Math.min(...evens);\n\
    \  return [smallest, arr.indexOf(smallest)];\n}\n", "  if (arr.length === 0) return\
    \ [];\n  let smallestEven = Infinity;\n  let smallestEvenIndex = Infinity;\n \
    \ for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] <\
    \ smallestEven) {\n      smallestEven = arr[i];\n      smallestEvenIndex = i;\n\
    \    }\n  }\n  if (smallestEven === Infinity) return [];\n  return [smallestEven,\
    \ smallestEvenIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));", "  const evens = arr.filter(n => n % 2 === 0);\n  if (evens.length\
    \ === 0) return [];\n  const smallest = Math.min(...evens);\n  const index = arr.indexOf(smallest);\n\
    \  return [smallest, index];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12]));", "  if (arr.length === 0) return [];\n  const\
    \ evens = arr.filter((x) => x % 2 === 0);\n  const min = Math.min(...evens);\n\
    \  return [min, arr.indexOf(min)];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));", "  let min = Infinity;\n  let index = -1;\n  for (let i =\
    \ 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n   \
    \   min = arr[i];\n      index = i;\n    }\n  }\n  return index === -1 ? [] :\
    \ [min, index];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));",
  "  let min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n \
    \     minIndex = i;\n    }\n  }\n  return minIndex === -1 ? [] : [min, minIndex];\n\
    }\n", "  let smallestEven = Infinity;\n  let smallestEvenIndex = Infinity;\n \
    \ for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] <\
    \ smallestEven) {\n      smallestEven = arr[i];\n      smallestEvenIndex = i;\n\
    \    }\n  }\n  return smallestEven === Infinity ? [] : [smallestEven, smallestEvenIndex];\n\
    }\n\nconsole.log(pluck([1, 2, 3, 4, 5])); // [2, 1]\nconsole.log(pluck([1, 2,\
    \ 3, 4, 5, 6])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\
    \ // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])); //\
    \ [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\
    \ // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9", "  // TODO: implement\n\
    \  return [];\n}\n\nexport { pluck };", "  let min = Infinity;\n  let minIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return\
    \ minIndex === -1 ? [] : [min, minIndex];\n}\n", "  if (arr.length === 0) return\
    \ [];\n  let minEven = Infinity;\n  let minEvenIndex = -1;\n  for (let i = 0;\
    \ i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < minEven) {\n  \
    \    minEven = arr[i];\n      minEvenIndex = i;\n    }\n  }\n  if (minEven ===\
    \ Infinity) return [];\n  return [minEven, minEvenIndex];\n}\n", "  const evens\
    \ = arr.filter(n => n % 2 === 0);\n  const min = Math.min(...evens);\n  const\
    \ index = arr.indexOf(min);\n  return [min, index];\n}\n", "  let min = Infinity;\n\
    \  let minIndex = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex =\
    \ i;\n    }\n  }\n  return min === Infinity ? [] : [min, minIndex];\n}\n", " \
    \ if (arr.length === 0) return [];\n  let min = Infinity;\n  let minIndex = -1;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  if (min ===\
    \ Infinity) return [];\n  return [min, minIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  const evens = arr.filter(x => x %\
    \ 2 === 0);\n  const min = Math.min(...evens);\n  const index = arr.indexOf(min);\n\
    \  return evens.length ? [min, index] : [];\n}\n", "  let smallestEven = Infinity;\n\
    \  let smallestEvenIndex = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] % 2 === 0 && arr[i] < smallestEven) {\n      smallestEven = arr[i];\n\
    \      smallestEvenIndex = i;\n    }\n  }\n  return smallestEven === Infinity\
    \ ? [] : [smallestEven, smallestEvenIndex];\n}\n\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  const evens = arr.filter(x => x %\
    \ 2 === 0);\n  const minEven = Math.min(...evens);\n  const minEvenIndex = arr.indexOf(minEven);\n\
    \  return [minEven, minEvenIndex];\n}\n", "  if (arr.length === 0) return [];\n\
    \  let min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n \
    \     minIndex = i;\n    }\n  }\n  if (min === Infinity) return [];\n  return\
    \ [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]));\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])", "  if (arr.length\
    \ === 0) return [];\n  const evens = arr.filter((n) => n % 2 === 0);\n  if (evens.length\
    \ === 0) return [];\n  const min = Math.min(...evens);\n  const index = arr.indexOf(min);\n\
    \  return [min, index];\n}\n", "  let smallestEven = Infinity;\n  let smallestEvenIndex\
    \ = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 ===\
    \ 0 && arr[i] < smallestEven) {\n      smallestEven = arr[i];\n      smallestEvenIndex\
    \ = i;\n    }\n  }\n  return smallestEven === Infinity ? [] : [smallestEven, smallestEvenIndex];\n\
    }\n", "  let smallestEven = Number.MAX_SAFE_INTEGER;\n  let smallestEvenIndex\
    \ = Number.MAX_SAFE_INTEGER;\n  let smallestEvenFound = false;\n  for (let i =\
    \ 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallestEven)\
    \ {\n        smallestEven = arr[i];\n        smallestEvenIndex = i;\n        smallestEvenFound\
    \ = true;\n      }\n    }\n  }\n  if (smallestEvenFound) {\n    return [smallestEven,\
    \ smallestEvenIndex];\n  } else {\n    return [];\n  }\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let min = Infinity;\n  let minIndex\
    \ = Infinity;\n  let minEven = Infinity;\n  let minEvenIndex = Infinity;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    const num = arr[i];\n    if (num < min)\
    \ {\n      min = num;\n    }\n    if (num % 2 === 0 && num < minEven) {\n    \
    \  minEven = num;\n      minEvenIndex = i;\n    }\n  }\n  if (minEven === Infinity)\
    \ {\n    return [];\n  }\n  return [minEven, minEvenIndex];\n}\n", "  // TODO:\
    \ Implement\n  return [];\n}\n", "  let minEven = Infinity;\n  let minEvenIndex\
    \ = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 ===\
    \ 0 && arr[i] < minEven) {\n      minEven = arr[i];\n      minEvenIndex = i;\n\
    \    }\n  }\n  return minEven === Infinity ? [] : [minEven, minEvenIndex];\n}\n",
  "  let minEven = Infinity;\n  let minEvenIndex = Infinity;\n  for (let i = 0; i\
    \ < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < minEven) {\n    \
    \  minEven = arr[i];\n      minEvenIndex = i;\n    }\n  }\n  return minEven ===\
    \ Infinity ? [] : [minEven, minEvenIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 3, 5, 7, 9, 11]));\nconsole.log(pluck([2,\
    \ 4, 6, 8, 10]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0]));", "  let evens = arr.filter(n => n % 2\
    \ === 0);\n  if (evens.length === 0) return [];\n  let smallest = Math.min(...evens);\n\
    \  return [smallest, arr.indexOf(smallest)];\n}\n", "  let min = Infinity;\n \
    \ let minIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n   \
    \ }\n  }\n  return minIndex === -1 ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(pluck([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]));\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,", "  let min = Number.MAX_SAFE_INTEGER;\n\
    \  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n   \
    \ }\n  }\n  return minIndex === -1 ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));", "  if (arr.length === 0) return\
    \ [];\n  let min = Infinity;\n  let index = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n \
    \     index = i;\n    }\n  }\n  return index === -1 ? [] : [min, index];\n}\n\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", " \
    \ let min = Infinity;\n  let index = -1;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      index\
    \ = i;\n    }\n  }\n  return min === Infinity ? [] : [min, index];\n}\n", "  let\
    \ minEven = Infinity;\n  let minEvenIndex = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < minEven) {\n      minEven = arr[i];\n\
    \      minEvenIndex = i;\n    }\n  }\n  return minEvenIndex === -1 ? [] : [minEven,\
    \ minEvenIndex];\n}\n", "  const evens = arr.filter(x => x % 2 === 0);\n  const\
    \ min = Math.min(...evens);\n  const index = arr.indexOf(min);\n  return evens.length\
    \ ? [min, index] : [];\n}\n\nconsole.log(pluck([])); // []\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6])); // [2, 1]\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7])); // [2, 1]\nconsole.log(pluck([1, 2,\
    \ 3, 4, 5, 6, 7, 8])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9]));\
    \ // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [2, 1]\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])); // [2, 1]\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])); // [2, 1]\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])); // [2, 1]\nconsole.log(pluck([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16])); // [2, 1]\nconsole.log(pluck",
  "  if (arr.length === 0) return [];\n  const evens = arr.filter((n) => n % 2 ===\
    \ 0);\n  if (evens.length === 0) return [];\n  const minEven = Math.min(...evens);\n\
    \  const index = arr.indexOf(minEven);\n  return [minEven, index];\n}\n", "  let\
    \ smallestEven = Infinity;\n  let smallestEvenIndex = Infinity;\n  for (let i\
    \ = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < smallestEven)\
    \ {\n      smallestEven = arr[i];\n      smallestEvenIndex = i;\n    }\n  }\n\
    \  return smallestEven === Infinity ? [] : [smallestEven, smallestEvenIndex];\n\
    }\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));",
  "  let min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n \
    \     minIndex = i;\n    }\n  }\n  return minIndex === -1 ? [] : [min, minIndex];\n\
    }\n", "  let minEven = Infinity;\n  let minEvenIndex = Infinity;\n  for (let i\
    \ = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < minEven) {\n\
    \      minEven = arr[i];\n      minEvenIndex = i;\n    }\n  }\n  return minEven\
    \ === Infinity ? [] : [minEven, minEvenIndex];\n}\n\nconsole.log(pluck([1, 3,\
    \ 5, 7, 9, 11, 13, 15, 17, 19]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(pluck([]));", " \
    \ let smallestEven = Infinity;\n  let smallestEvenIndex = Infinity;\n  for (let\
    \ i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < smallestEven)\
    \ {\n      smallestEven = arr[i];\n      smallestEvenIndex = i;\n    }\n  }\n\
    \  return smallestEven === Infinity ? [] : [smallestEven, smallestEvenIndex];\n\
    }\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1,\
    \ 3, 5, 7, 9]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let smallestEven = Infinity;\n  let\
    \ smallestEvenIndex = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n  \
    \  if (arr[i] % 2 === 0 && arr[i] < smallestEven) {\n      smallestEven = arr[i];\n\
    \      smallestEvenIndex = i;\n    }\n  }\n  return smallestEven === Infinity\
    \ ? [] : [smallestEven, smallestEvenIndex];\n}\n\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\
    \ // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\
    \ // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20])); // [2, 1]\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,\
    \ 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40", "  let min = Infinity;\n\
    \  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n   \
    \ }\n  }\n  return minIndex === -1 ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 3, 5, 7, 9, 11]));\nconsole.log(pluck([2,\
    \ 4, 6, 8, 10]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let minEven = Infinity;\n  let minEvenIndex\
    \ = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 ===\
    \ 0 && arr[i] < minEven) {\n      minEven = arr[i];\n      minEvenIndex = i;\n\
    \    }\n  }\n  return minEven === Infinity ? [] : [minEven, minEvenIndex];\n}\n\
    \nconsole.log(pluck([1, 2, 3, 4, 5])); // [2, 1]\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7])); // [2, 1]\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\
    \ // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])); //\
    \ [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\
    \ // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,", "  let min = Infinity;\n\
    \  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n   \
    \ }\n  }\n  return minIndex === -1 ? [] : [min, minIndex];\n}\n", "  let min =\
    \ Infinity;\n  let minIndex = Infinity;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex\
    \ = i;\n    }\n  }\n  return min === Infinity ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 3, 5, 7, 9, 11]));\nconsole.log(pluck([2,\
    \ 4, 6, 8, 10]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  if (arr.length === 0) return [];\n\
    \  const evens = arr.filter((x) => x % 2 === 0);\n  if (evens.length === 0) return\
    \ [];\n  const min = Math.min(...evens);\n  const idx = arr.indexOf(min);\n  return\
    \ [min, idx];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1,\
    \ 3, 5, 7, 9]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let min = Infinity;\n  let minIndex\
    \ = Infinity;\n  let minEven = Infinity;\n  let minEvenIndex = Infinity;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] < min) {\n      min = arr[i];\n\
    \      minIndex = i;\n    }\n    if (arr[i] % 2 === 0 && arr[i] < minEven) {\n\
    \      minEven = arr[i];\n      minEvenIndex = i;\n    }\n  }\n  return minEven\
    \ === Infinity ? [] : [minEven, minEvenIndex];\n}\n", "  let min = Infinity;\n\
    \  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n   \
    \ }\n  }\n  return minIndex === -1 ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 3, 5, 7, 9,\
    \ 11])); // []\nconsole.log(pluck([2, 4, 6, 8, 10])); // [2, 0]\nconsole.log(pluck([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [0, 0]\nconsole.log(pluck([0, 0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10])); // [0, 0]", "  let minEven = Infinity;\n  let minEvenIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < minEven) {\n      minEven = arr[i];\n      minEvenIndex = i;\n    }\n\
    \  }\n  return minEvenIndex === -1 ? [] : [minEven, minEvenIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(pluck([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]));\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10,", "    let minEven = Infinity;\n    let minEvenIndex\
    \ = -1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 ===\
    \ 0 && arr[i] < minEven) {\n            minEven = arr[i];\n            minEvenIndex\
    \ = i;\n        }\n    }\n    return minEvenIndex > -1 ? [minEven, minEvenIndex]\
    \ : [];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]));\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10,", "  let min = Infinity;\n  let minIndex = -1;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return min\
    \ === Infinity ? [] : [min, minIndex];\n}\n", "  let min = Infinity;\n  let minIdx\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < min) {\n      min = arr[i];\n      minIdx = i;\n    }\n  }\n  return\
    \ minIdx === -1 ? [] : [min, minIdx];\n}\n", "  let min = Infinity;\n  let minIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return\
    \ minIndex === -1 ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 3, 5, 7, 9, 11]));\nconsole.log(pluck([2,\
    \ 4, 6, 8, 10]));\nconsole.log(pluck([1, 2, 2, 2, 2, 2, 2, 2, 2, 2]));\nconsole.log(pluck([]));",
  "  if (arr.length === 0) return [];\n  const evens = arr.filter((x) => x % 2 ===\
    \ 0);\n  if (evens.length === 0) return [];\n  const min = Math.min(...evens);\n\
    \  const index = arr.indexOf(min);\n  return [min, index];\n}\n\nexport default\
    \ pluck;", "  let min = Infinity;\n  let index = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n \
    \     index = i;\n    }\n  }\n  return index === -1 ? [] : [min, index];\n}\n",
  "  let min = Number.MAX_SAFE_INTEGER;\n  let minIndex = -1;\n  for (let i = 0; i\
    \ < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min\
    \ = arr[i];\n      minIndex = i;\n    }\n  }\n  return minIndex === -1 ? [] :\
    \ [min, minIndex];\n}\n", "  const evens = arr.filter(x => x % 2 === 0);\n  if\
    \ (evens.length === 0) {\n    return [];\n  }\n  const min = Math.min(...evens);\n\
    \  const index = arr.indexOf(min);\n  return [min, index];\n}\n", "  let minEven\
    \ = Infinity;\n  let minEvenIndex = Infinity;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < minEven) {\n      minEven = arr[i];\n\
    \      minEvenIndex = i;\n    }\n  }\n  return minEven === Infinity ? [] : [minEven,\
    \ minEvenIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])); // [2, 1]\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,", "  let minEven = Infinity;\n\
    \  let minIndex = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] % 2 === 0 && arr[i] < minEven) {\n      minEven = arr[i];\n      minIndex\
    \ = i;\n    }\n  }\n  return minEven === Infinity ? [] : [minEven, minIndex];\n\
    }\n", "  let minEven = Infinity;\n  let minEvenIndex = Infinity;\n  for (let i\
    \ = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < minEven) {\n\
    \      minEven = arr[i];\n      minEvenIndex = i;\n    }\n  }\n  return minEven\
    \ === Infinity ? [] : [minEven, minEvenIndex];\n}\n\nconsole.log(pluck([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(pluck([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]));\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12", "  let min = Infinity;\n  let minIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return\
    \ minIndex === -1 ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\n\
    console.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let min = Infinity;\n  let minIndex\
    \ = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 ===\
    \ 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n\
    \  return min === Infinity ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 3, 5, 7, 9, 11]));\nconsole.log(pluck([2,\
    \ 4, 6, 8, 10]));\nconsole.log(pluck([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));", "  if\
    \ (arr.length === 0) return [];\n  const evens = arr.filter((x) => x % 2 === 0);\n\
    \  if (evens.length === 0) return [];\n  const smallestEven = Math.min(...evens);\n\
    \  const smallestEvenIndex = arr.indexOf(smallestEven);\n  return [smallestEven,\
    \ smallestEvenIndex];\n}\n", "  let minEven = Infinity;\n  let minEvenIndex =\
    \ Infinity;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 ===\
    \ 0 && arr[i] < minEven) {\n      minEven = arr[i];\n      minEvenIndex = i;\n\
    \    }\n  }\n  return minEven === Infinity ? [] : [minEven, minEvenIndex];\n}\n\
    \nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1,\
    \ 3, 5, 7, 9]));\nconsole.log(pluck([0, 0, 0, 0, 0]));\nconsole.log(pluck([]));",
  "  let min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n \
    \     minIndex = i;\n    }\n  }\n  return minIndex === -1 ? [] : [min, minIndex];\n\
    }\n", "  if (arr.length === 0) return [];\n  const evens = arr.filter((x) => x\
    \ % 2 === 0);\n  if (evens.length === 0) return [];\n  const min = Math.min(...evens);\n\
    \  const index = arr.indexOf(min);\n  return [min, index];\n}\n", "  if (arr.length\
    \ === 0) return [];\n  let min = Infinity;\n  let minIndex = Infinity;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min)\
    \ {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  if (min === Infinity)\
    \ return [];\n  return [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\n\
    console.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let smallestEven = Infinity;\n  let\
    \ smallestEvenIndex = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n  \
    \  if (arr[i] % 2 === 0 && arr[i] < smallestEven) {\n      smallestEven = arr[i];\n\
    \      smallestEvenIndex = i;\n    }\n  }\n  return smallestEven === Infinity\
    \ ? [] : [smallestEven, smallestEvenIndex];\n}\n", "  let minEven = Infinity;\n\
    \  let minEvenIndex = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n  \
    \  if (arr[i] % 2 === 0 && arr[i] < minEven) {\n      minEven = arr[i];\n    \
    \  minEvenIndex = i;\n    }\n  }\n  return minEven === Infinity ? [] : [minEven,\
    \ minEvenIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([]));", "  if (arr.length\
    \ === 0) return [];\n  let min = Infinity;\n  let minIndex = Infinity;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min)\
    \ {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  if (min === Infinity)\
    \ return [];\n  return [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(pluck([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]));\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8", "  let min = Infinity;\n  let index = -1;\n  for (let\
    \ i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n\
    \      min = arr[i];\n      index = i;\n    }\n  }\n  return index === -1 ? []\
    \ : [min, index];\n}\n", "  let min = Number.MAX_SAFE_INTEGER;\n  let index =\
    \ -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < min) {\n      min = arr[i];\n      index = i;\n    }\n  }\n  return index\
    \ === -1 ? [] : [min, index];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));", "  let minEven = Infinity;\n  let minEvenIndex = Infinity;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < minEven) {\n      minEven = arr[i];\n      minEvenIndex = i;\n    }\n  }\n\
    \  return minEven === Infinity ? [] : [minEven, minEvenIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 3, 5, 7, 9, 11]));\nconsole.log(pluck([2,\
    \ 4, 6, 8, 10]));\nconsole.log(pluck([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(pluck([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(pluck([]));", "  let minEven = Infinity;\n\
    \  let minEvenIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < minEven) {\n      minEven = arr[i];\n      minEvenIndex\
    \ = i;\n    }\n  }\n  return minEvenIndex === -1 ? [] : [minEven, minEvenIndex];\n\
    }\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1,\
    \ 3, 5, 7, 9]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let min = Number.MAX_SAFE_INTEGER;\n\
    \  let minIndex = Number.MAX_SAFE_INTEGER;\n  let minEven = Number.MAX_SAFE_INTEGER;\n\
    \  let minEvenIndex = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    const num = arr[i];\n    if (num < min) {\n      min = num;\n  \
    \    minIndex = i;\n    }\n    if (num % 2 === 0 && num < minEven) {\n      minEven\
    \ = num;\n      minEvenIndex = i;\n    }\n  }\n  return minEven === Number.MAX_SAFE_INTEGER\
    \ ? [] : [minEven, minEvenIndex];\n}\n", "  let min = Infinity;\n  let minIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return\
    \ minIndex === -1 ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(pluck([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(pluck([0, 0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(pluck([]));", "  const evens =\
    \ arr.filter(x => x % 2 === 0);\n  if (evens.length === 0) {\n    return [];\n\
    \  }\n  const min = Math.min(...evens);\n  const index = arr.indexOf(min);\n \
    \ return [min, index];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(pluck([1,",
  "  let min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n \
    \     minIndex = i;\n    }\n  }\n  return minIndex === -1 ? [] : [min, minIndex];\n\
    }\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1,\
    \ 3, 5, 7, 9, 11]));\nconsole.log(pluck([2, 4, 6, 8, 10]));\nconsole.log(pluck([0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0]));", "  let min = Infinity;\n  let minIndex = -1;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return min\
    \ === Infinity ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 1, 2, 2, 2, 2, 2, 2, 2,\
    \ 2])); // [2, 2]\nconsole.log(pluck([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])); // []\n\
    console.log(pluck([0, 1, 1, 1, 1, 1, 1, 1, 1, 1])); // [0, 0]", "  let min = Infinity;\n\
    \  let minIndex = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex =\
    \ i;\n    }\n  }\n  return min === Infinity ? [] : [min, minIndex];\n}\n", " \
    \ if (arr.length === 0) return [];\n  let min = Infinity;\n  let minIndex = Infinity;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  if (min ===\
    \ Infinity) return [];\n  return [min, minIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\
    \ // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])); //\
    \ [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\
    \ // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16])); // [", "  if (arr.length === 0) return [];\n  let evens = arr.filter(x\
    \ => x % 2 === 0);\n  if (evens.length === 0) return [];\n  let min = Math.min(...evens);\n\
    \  return [min, arr.indexOf(min)];\n}\n", "  let min = Number.MAX_SAFE_INTEGER;\n\
    \  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n   \
    \ }\n  }\n  return minIndex === -1 ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let smallestEven = Infinity;\n  let\
    \ smallestEvenIndex = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n  \
    \  if (arr[i] % 2 === 0 && arr[i] < smallestEven) {\n      smallestEven = arr[i];\n\
    \      smallestEvenIndex = i;\n    }\n  }\n  return smallestEven === Infinity\
    \ ? [] : [smallestEven, smallestEvenIndex];\n}\n\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 3, 5, 7, 9])); //\
    \ []\nconsole.log(pluck([])); // []\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10])); // [0, 0]\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10])); // [0, 0]", "  let min = Number.MAX_SAFE_INTEGER;\n  let index = -1;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < min) {\n      min = arr[i];\n      index = i;\n    }\n  }\n  return index\
    \ === -1 ? [] : [min, index];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10]));\nconsole.log(pluck([1, 3, 5, 7, 9]));\nconsole.log(pluck([0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10]));", "  // TODO: implement\n  return [];\n}\n", "  if (arr.length ===\
    \ 0) return [];\n  const evens = arr.filter((n) => n % 2 === 0);\n  if (evens.length\
    \ === 0) return [];\n  const min = Math.min(...evens);\n  const index = arr.indexOf(min);\n\
    \  return [min, index];\n}\n\nexport default pluck;", "  let min = Infinity;\n\
    \  let index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] %\
    \ 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      index = i;\n    }\n \
    \ }\n  return index === -1 ? [] : [min, index];\n}\n\nconsole.log(pluck([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 3, 5, 7, 9]));\nconsole.log(pluck([0,\
    \ 0, 0, 0, 0]));\nconsole.log(pluck([]));", "  if (arr.length === 0) return [];\n\
    \  const evens = arr.filter((x) => x % 2 === 0);\n  if (evens.length === 0) return\
    \ [];\n  const min = Math.min(...evens);\n  return [min, arr.indexOf(min)];\n\
    }\n", "  let min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n \
    \     minIndex = i;\n    }\n  }\n  return minIndex === -1 ? [] : [min, minIndex];\n\
    }\n", "  const evens = arr.filter(num => num % 2 === 0);\n  const min = Math.min(...evens);\n\
    \  const index = arr.indexOf(min);\n  return evens.length ? [min, index] : [];\n\
    }\n", "  let minEven = Infinity;\n  let minEvenIndex = Infinity;\n  for (let i\
    \ = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < minEven) {\n\
    \      minEven = arr[i];\n      minEvenIndex = i;\n    }\n  }\n  return minEven\
    \ === Infinity ? [] : [minEven, minEvenIndex];\n}\n\nconsole.log(pluck([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 3, 5, 7, 9]));\nconsole.log(pluck([0,\
    \ 0, 0, 0, 0]));\nconsole.log(pluck([]));", "  if (arr.length === 0) return [];\n\
    \  const evens = arr.filter((n) => n % 2 === 0);\n  if (evens.length === 0) return\
    \ [];\n  const smallestEven = Math.min(...evens);\n  const smallestIndex = arr.indexOf(smallestEven);\n\
    \  return [smallestEven, smallestIndex];\n}\n", "  if (arr.length === 0) return\
    \ [];\n  const evens = arr.filter((x) => x % 2 === 0);\n  if (evens.length ===\
    \ 0) return [];\n  const min = Math.min(...evens);\n  return [min, arr.indexOf(min)];\n\
    }\n", "  let minEven = Infinity;\n  let minEvenIndex = Infinity;\n  for (let i\
    \ = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < minEven) {\n\
    \      minEven = arr[i];\n      minEvenIndex = i;\n    }\n  }\n  return minEven\
    \ === Infinity ? [] : [minEven, minEvenIndex];\n}\n\nconsole.log(pluck([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 3, 5, 7, 9, 11]));\
    \ // []\nconsole.log(pluck([2, 4, 6, 8, 10])); // [2, 0]\nconsole.log(pluck([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [0, 0]\nconsole.log(pluck([0, 0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10])); // [0, 0]", "  let minEven = Infinity;\n  let minEvenIdx\
    \ = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 ===\
    \ 0 && arr[i] < minEven) {\n      minEven = arr[i];\n      minEvenIdx = i;\n \
    \   }\n  }\n  return minEven === Infinity ? [] : [minEven, minEvenIdx];\n}\n",
  "  const evens = arr.filter(n => n % 2 === 0);\n  if (evens.length === 0) return\
    \ [];\n  const min = Math.min(...evens);\n  const index = arr.indexOf(min);\n\
    \  return [min, index];\n}\n", "  let min = Infinity;\n  let minIndex = -1;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return minIndex\
    \ === -1 ? [] : [min, minIndex];\n}\n", "  let minEven = Infinity;\n  let minEvenIndex\
    \ = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 ===\
    \ 0 && arr[i] < minEven) {\n      minEven = arr[i];\n      minEvenIndex = i;\n\
    \    }\n  }\n  return minEven === Infinity ? [] : [minEven, minEvenIndex];\n}\n\
    \nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));",
  "  if (arr.length === 0) return [];\n  const evens = arr.filter((x) => x % 2 ===\
    \ 0);\n  if (evens.length === 0) return [];\n  const min = Math.min(...evens);\n\
    \  const index = arr.indexOf(min);\n  return [min, index];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 3, 5, 7, 9]));\
    \ // []\nconsole.log(pluck([2, 4, 6, 8, 10])); // [2, 0]\nconsole.log(pluck([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [0, 0]\nconsole.log(pluck([])); // []",
  "  let min = Infinity;\n  let minIndex = Infinity;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n \
    \     minIndex = i;\n    }\n  }\n  return min === Infinity ? [] : [min, minIndex];\n\
    }\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(pluck([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(pluck([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]));\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]));\nconsole.log(pluck([1,\
    \ 2,", "  let min = Infinity;\n  let minIndex = Infinity;\n  for (let i = 0; i\
    \ < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min\
    \ = arr[i];\n      minIndex = i;\n    }\n  }\n  return min === Infinity ? [] :\
    \ [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 0]));\nconsole.log(pluck([]));", "  let min: number = Number.MAX_SAFE_INTEGER;\n\
    \  let minIndex: number = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex =\
    \ i;\n    }\n  }\n  return minIndex === -1 ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 3, 5, 7, 9]));\nconsole.log(pluck([0,\
    \ 0, 0, 0, 0]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0]));", " \
    \ const evens = arr.filter(x => x % 2 === 0);\n  if (evens.length === 0) {\n \
    \   return [];\n  }\n  const min = Math.min(...evens);\n  const index = arr.indexOf(min);\n\
    \  return [min, index];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\
    \ // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])); // [2, 1]\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])); // [2, 1",
  "  let min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n \
    \     minIndex = i;\n    }\n  }\n  return minIndex === -1 ? [] : [min, minIndex];\n\
    }\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\n\
    console.log(pluck([]));", "  let minEven = Infinity;\n  let minEvenIndex = Infinity;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < minEven) {\n      minEven = arr[i];\n      minEvenIndex = i;\n    }\n  }\n\
    \  return minEven === Infinity ? [] : [minEven, minEvenIndex];\n}\n", "  if (arr.length\
    \ === 0) return [];\n  const evens = arr.filter((n) => n % 2 === 0);\n  if (evens.length\
    \ === 0) return [];\n  const min = Math.min(...evens);\n  const index = arr.indexOf(min);\n\
    \  return [min, index];\n}\n", "  let smallestEven = Infinity;\n  let smallestEvenIndex\
    \ = Infinity;\n  let smallestEvenFound = false;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallestEven) {\n  \
    \      smallestEven = arr[i];\n        smallestEvenIndex = i;\n        smallestEvenFound\
    \ = true;\n      }\n    }\n  }\n  if (smallestEvenFound) {\n    return [smallestEven,\
    \ smallestEvenIndex];\n  } else {\n    return [];\n  }\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(pluck([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(pluck([0, 0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 0]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 0, 0]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 0, 0, 0]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 0, 0, 0, 0]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 0", "  let min = Infinity;\n  let index = -1;\n  for (let i =\
    \ 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n   \
    \   min = arr[i];\n      index = i;\n    }\n  }\n  return index === -1 ? [] :\
    \ [min, index];\n}\n", "  let minEven = Infinity;\n  let minEvenIndex = -1;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < minEven) {\n      minEven = arr[i];\n      minEvenIndex = i;\n    }\n  }\n\
    \  return minEvenIndex === -1 ? [] : [minEven, minEvenIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let min = Infinity;\n  let index =\
    \ -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < min) {\n      min = arr[i];\n      index = i;\n    }\n  }\n  return index\
    \ === -1 ? [] : [min, index];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6]));\n\
    console.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(pluck([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\n\
    console.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20]));", "  if (arr.length === 0) return [];\n  let min = Infinity;\n\
    \  let minIndex = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex =\
    \ i;\n    }\n  }\n  if (min === Infinity) return [];\n  return [min, minIndex];\n\
    }\n", "  const evens = arr.filter(n => n % 2 === 0);\n  if (evens.length === 0)\
    \ return [];\n  const smallest = Math.min(...evens);\n  const index = arr.indexOf(smallest);\n\
    \  return [smallest, index];\n}\n", "  if (arr.length === 0) return [];\n  const\
    \ evens = arr.filter((num) => num % 2 === 0);\n  if (evens.length === 0) return\
    \ [];\n  const smallest = Math.min(...evens);\n  return [smallest, arr.indexOf(smallest)];\n\
    }\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(pluck([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([]));\n\
    console.log(pluck([1, 3, 5, 7, 9]));", "  let min = Infinity;\n  let minIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return\
    \ minIndex === -1 ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([])); // []\n\
    console.log(pluck([1, 2, 3, 4, 5])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4,\
    \ 5, 6])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])); // [2, 1]\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])); // [2, 1]\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])); // [2, 1]\nconsole.log(pluck([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6", "  let min = Infinity;\n  let index = -1;\n  for (let i = 0;\
    \ i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min\
    \ = arr[i];\n      index = i;\n    }\n  }\n  return index === -1 ? [] : [min,\
    \ index];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(pluck([0, 0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]));", "  let minEven: number = Number.MAX_SAFE_INTEGER;\n\
    \  let minEvenIndex: number = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i <\
    \ arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < minEven) {\n      minEven\
    \ = arr[i];\n      minEvenIndex = i;\n    }\n  }\n  return minEven === Number.MAX_SAFE_INTEGER\
    \ ? [] : [minEven, minEvenIndex];\n}\n", "  let minEven = Number.MAX_SAFE_INTEGER;\n\
    \  let minEvenIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < minEven) {\n      minEven = arr[i];\n      minEvenIndex\
    \ = i;\n    }\n  }\n  return minEvenIndex === -1 ? [] : [minEven, minEvenIndex];\n\
    }\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1,\
    \ 3, 5, 7, 9, 11])); // []\nconsole.log(pluck([2, 4, 6, 8, 10])); // [2, 0]\n\
    console.log(pluck([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])); // [0, 0]\nconsole.log(pluck([]));\
    \ // []", "  let minEven = Infinity;\n  let minEvenIndex = Infinity;\n  for (let\
    \ i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < minEven)\
    \ {\n      minEven = arr[i];\n      minEvenIndex = i;\n    }\n  }\n  return minEven\
    \ === Infinity ? [] : [minEven, minEvenIndex];\n}\n\nconsole.log(pluck([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11]));\nconsole.log(pluck([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 0]));", "  // TODO: implement\n  return [];\n}\n\
    \nexport { pluck };", "  let minEven = Infinity;\n  let minEvenIndex = Infinity;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < minEven) {\n      minEven = arr[i];\n      minEvenIndex = i;\n    }\n  }\n\
    \  return minEven === Infinity ? [] : [minEven, minEvenIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11]));\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let min = Infinity;\n  let minIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return\
    \ minIndex === -1 ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\n\
    console.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let min = Infinity;\n  let minIndex\
    \ = Infinity;\n  let minArr = [];\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex\
    \ = i;\n    }\n  }\n  if (min === Infinity) {\n    return [];\n  }\n  minArr.push(min);\n\
    \  minArr.push(minIndex);\n  return minArr;\n}\n\nconsole.log(pluck([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(pluck([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\
    \ 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]));\nconsole.log(pluck([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45, 46, 47, 48, 49, 50]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15", "  let min = Infinity;\n  let minIndex = -1;\n  for (let\
    \ i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n\
    \      min = arr[i];\n      minIndex = i;\n    }\n  }\n  return minIndex === -1\
    \ ? [] : [min, minIndex];\n}\n", "  if (arr.length === 0) return [];\n  const\
    \ evens = arr.filter((n) => n % 2 === 0);\n  if (evens.length === 0) return [];\n\
    \  const min = Math.min(...evens);\n  const index = arr.indexOf(min);\n  return\
    \ [min, index];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); //\
    \ [2, 1]\nconsole.log(pluck([1, 3, 5, 7, 9])); // []\nconsole.log(pluck([]));\
    \ // []\nconsole.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [0, 0]\nconsole.log(pluck([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0])); // [0, 0]", "  if (arr.length === 0) return\
    \ [];\n  let smallest = Infinity;\n  let index = Infinity;\n  for (let i = 0;\
    \ i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < smallest) {\n \
    \     smallest = arr[i];\n      index = i;\n    }\n  }\n  if (smallest === Infinity)\
    \ return [];\n  return [smallest, index];\n}\n\nconsole.log(pluck([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\n\
    console.log(pluck([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  let min = Infinity;\n  let minIndex\
    \ = Infinity;\n  let minValue = Infinity;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex\
    \ = i;\n      minValue = arr[i];\n    }\n  }\n  if (min === Infinity) {\n    return\
    \ [];\n  }\n  return [minValue, minIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(pluck([0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(pluck([1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]));\nconsole.log(pluck([]));",
  "  let minEven = Infinity;\n  let minEvenIndex = Infinity;\n  let minEvenFound =\
    \ false;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0)\
    \ {\n      if (arr[i] < minEven) {\n        minEven = arr[i];\n        minEvenIndex\
    \ = i;\n        minEvenFound = true;\n      }\n    }\n  }\n  return minEvenFound\
    \ ? [minEven, minEvenIndex] : [];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\
    \ // [2, 1]\nconsole.log(pluck([1, 3, 5, 7, 9, 11])); // []\nconsole.log(pluck([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [0, 0]\nconsole.log(pluck([0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 0])); // [0, 0]\nconsole.log(pluck([])); // []", "  let\
    \ min = Infinity;\n  let minIndex = Infinity;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n \
    \     minIndex = i;\n    }\n  }\n  return min === Infinity ? [] : [min, minIndex];\n\
    }\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15])); // [2, 1]\nconsole.log(pluck([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])); // [2,\
    \ 1]\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30])); // [2, 1]\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40])); //\
    \ [2, 1]\n", "  if (arr.length === 0) return [];\n  const evens = arr.filter((x)\
    \ => x % 2 === 0);\n  if (evens.length === 0) return [];\n  const smallest = Math.min(...evens);\n\
    \  return [smallest, arr.indexOf(smallest)];\n}\n", "  let min = Number.MAX_SAFE_INTEGER;\n\
    \  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n   \
    \ }\n  }\n  return minIndex === -1 ? [] : [min, minIndex];\n}\n\nconsole.log(pluck([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(pluck([1, 3, 5, 7, 9, 11]));\nconsole.log(pluck([2,\
    \ 2, 2, 2, 2]));\nconsole.log(pluck([0, 0, 0, 0, 0]));", "  let minEven = Infinity;\n\
    \  let minEvenIndex = Infinity;\n  for (let i = 0; i < arr.length; i++) {\n  \
    \  if (arr[i] % 2 === 0 && arr[i] < minEven) {\n      minEven = arr[i];\n    \
    \  minEvenIndex = i;\n    }\n  }\n  return minEven === Infinity ? [] : [minEven,\
    \ minEvenIndex];\n}\n\nconsole.log(pluck([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(pluck([1, 3, 5, 7, 9]));\nconsole.log(pluck([2, 4, 6, 8, 10]));\n\
    console.log(pluck([0, 1, 0, 2, 0, 3, 0, 4, 0, 5]));", "  const evens = arr.filter(n\
    \ => n % 2 === 0);\n  const min = Math.min(...evens);\n  const index = arr.indexOf(min);\n\
    \  return [min, index];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

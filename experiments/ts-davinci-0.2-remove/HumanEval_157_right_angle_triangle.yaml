name: HumanEval_157_right_angle_triangle
language: ts
prompt: "//Given the lengths of the three sides of a triangle. Return True if the\
  \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
  // Example:\nfunction right_angle_triangle(a: number, b: number, c: number): boolean\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
  \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
  \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
  \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
  \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
  \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
  \ 2, 10),false);\n}\n\ntest();"
completions: ["    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ Math.pow(arr[0], 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(3, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 6));\nconsole.log(right_angle_triangle(6, 5, 4));\nconsole.log(right_angle_triangle(5,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 6, 5));\nconsole.log(right_angle_triangle(6,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 4, 6));\nconsole.log(right_angle_triangle(",
  "    let sides = [a, b, c].sort((a, b) => a - b);\n    return sides[0] ** 2 + sides[1]\
    \ ** 2 === sides[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));", "    return (a * a + b * b === c * c) || (a * a + c * c === b * b)\
    \ || (b * b + c * c === a * a);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(4, 5, 6));\nconsole.log(right_angle_triangle(5,\
    \ 6, 4));\nconsole.log(right_angle_triangle(6, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 6, 5));\nconsole.log(right_angle_triangle(6, 5, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 6));\nconsole.log(right_angle_triangle(5, 6, 7));\nconsole.log(right_angle_triangle(6,\
    \ 7, 5));\nconsole.log(right_angle_triangle(7, 5, 6));\nconsole.log(right_angle_triangle(5,\
    \ 7, 6));\nconsole.log(right_angle_triangle(7, 6, 5));\nconsole.log(right_angle_triangle(6,\
    \ 5, 7));\nconsole.log(right_angle_triangle(6, 7, 8));\nconsole.log(right_angle_triangle(7,\
    \ 8, 6));\nconsole.log(right_angle_triangle(8, 6, 7));\nconsole.log(right_angle_triangle(6,\
    \ 8, 7));\nconsole.log(right_angle_triangle(8, 7", "    let arr = [a, b, c].sort((a,\
    \ b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\n\
    console.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    return Math.pow(a, 2) + Math.pow(b, 2) === Math.pow(c, 2)\n}\n\
    \nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(3, 4, 7));\nconsole.log(right_angle_triangle(3,\
    \ 4, 8));\nconsole.log(right_angle_triangle(3, 4, 9));\nconsole.log(right_angle_triangle(3,\
    \ 4, 10));\nconsole.log(right_angle_triangle(3, 4, 11));\nconsole.log(right_angle_triangle(3,\
    \ 4, 12));\nconsole.log(right_angle_triangle(3, 4, 13));\nconsole.log(right_angle_triangle(3,\
    \ 4, 14));\nconsole.log(right_angle_triangle(3, 4, 15));\nconsole.log(right_angle_triangle(3,\
    \ 4, 16));\nconsole.log(right_angle_triangle(3, 4, 17));\nconsole.log(right_angle_triangle(3,\
    \ 4, 18));\nconsole.log(right_angle_triangle(3, 4, 19));\nconsole.log(right_angle_triangle(3,\
    \ 4, 20));\nconsole.log(right_angle_triangle(3, 4, 21));\nconsole.log(right_angle_triangle(3,\
    \ 4, 22));\nconsole.log(right_angle_triangle(3, 4, 23));\nconsole.log(right_angle_triangle(3,\
    \ 4, 24));\nconsole.log(right_angle_triangle(3, 4, 25));\nconsole.log(right_angle_triangle(3,\
    \ 4, 26));\nconsole.log(right_angle_triangle(3, 4, 27));\nconsole.log(right_angle_triangle(3,\
    \ 4, 28));\nconsole.log(right_angle_triangle(3, 4, 29));\nconsole.log(right_angle_triangle(3,\
    \ 4, 30));\nconsole.log(right_angle_", "    if (a > b && a > c) {\n        return\
    \ a * a === b * b + c * c;\n    } else if (b > a && b > c) {\n        return b\
    \ * b === a * a + c * c;\n    } else {\n        return c * c === a * a + b * b;\n\
    \    }\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(6,\
    \ 6, 6));", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(1, 2, 3));\n", "    let arr = [a,\
    \ b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2\
    \ === arr[2] ** 2;\n}\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\n", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(5, 12, 13));\nconsole.log(right_angle_triangle(12,\
    \ 5, 13));\nconsole.log(right_angle_triangle(13, 5, 12));\nconsole.log(right_angle_triangle(5,\
    \ 13, 12));\nconsole.log(right_angle_triangle(12, 13, 5));\nconsole.log(right_angle_triangle(13,\
    \ 12, 5));\nconsole.log(right_angle_triangle(5, 5, 5));\nconsole.log(right_angle_triangle(5,\
    \ 12, 14));\nconsole.log(right_angle_triangle(14, 5, 12));\nconsole.log(right_angle_triangle(5,\
    \ 14, 12));\nconsole.log(right_angle_triangle(12, 14, 5));\nconsole.log(right_angle_triangle(14,\
    \ 12, 5));\nconsole.log(right_angle_triangle(", "    let arr = [a, b, c];\n  \
    \  arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2]\
    \ ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 5, 5));\nconsole.log(right_angle_triangle(1,\
    \ 1, 1));\nconsole.log(right_angle_triangle(1, 2, 3));\nconsole.log(right_angle_triangle(1,\
    \ 3, 2));\nconsole.log(right_angle_triangle(2, 1, 3));\nconsole.log(right_angle_triangle(2,\
    \ 3, 1));\nconsole.log(right_angle_triangle(3, 1, 2));\nconsole.log(right_angle_triangle(3,\
    \ 2, 1));\nconsole.log(right_angle_triangle(1, 1, 2));\nconsole.log(right_angle_triangle(1,\
    \ 2, 1));\nconsole.log(right_angle_triangle(2, 1, 1));\nconsole.log(right_angle_triangle(1,\
    \ 1, 3));\nconsole.log(right_angle_triangle(1, 3, 1));\nconsole.log(right_angle",
  "    return (a ** 2 + b ** 2 === c ** 2) || (a ** 2 + c ** 2 === b ** 2) || (b **\
    \ 2 + c ** 2 === a ** 2);\n}\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 12, 13));\nconsole.log(right_angle_triangle(5, 12, 14));\n", "    return (a\
    \ ** 2 + b ** 2 === c ** 2) || (a ** 2 + c ** 2 === b ** 2) || (b ** 2 + c **\
    \ 2 === a ** 2);\n}\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(10, 24, 26));\nconsole.log(right_angle_triangle(26,\
    \ 10, 24));\nconsole.log(right_angle_triangle(24, 26, 10));\nconsole.log(right_angle_triangle(24,\
    \ 10, 26));\nconsole.log(right_angle_triangle(10, 26, 24));\nconsole.log(right_angle_triangle(26,\
    \ 24, 10));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(10, 24, 26));\nconsole.log(right_angle_triangle(26,\
    \ 10, 24));\nconsole.log(right_angle_triangle(24, 26, 10));\nconsole.log(right_angle_triangle(24,\
    \ 10,", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(arr[0],\
    \ 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ Math.pow(arr[0], 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));", "    let sides = [a,\
    \ b, c].sort((a, b) => a - b);\n    return sides[0] ** 2 + sides[1] ** 2 === sides[2]\
    \ ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));", "    return a ** 2 + b ** 2 === c ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(6, 4, 3));\n", "    let arr = [a,\
    \ b, c].sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2]\
    \ ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 12, 13));\nconsole.log(right_angle_triangle(1, 2, 3));", "    let arr = [a,\
    \ b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2\
    \ === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\n", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(1, 2, 3));", "    return (a*a + b*b\
    \ == c*c) || (a*a + c*c == b*b) || (b*b + c*c == a*a);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));\n", "    let arr = [a,\
    \ b, c].sort((a, b) => a - b);\n    return Math.pow(arr[0], 2) + Math.pow(arr[1],\
    \ 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 12, 13));\nconsole.log(right_angle_triangle(12,\
    \ 5, 13));\nconsole.log(right_angle_triangle(13, 5, 12));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(5, 12, 14));\nconsole.log(right_angle_triangle(12,\
    \ 5, 14));\nconsole.log(right_angle_triangle(14, 5, 12));", "    let arr = [a,\
    \ b, c];\n    arr.sort((a, b) => a - b);\n    return Math.pow(arr[0], 2) + Math.pow(arr[1],\
    \ 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(3, 4, 6));", "    let arr = [a, b, c].sort((a,\
    \ b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\n\
    console.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    return (a * a + b * b == c * c) || (a * a + c * c == b * b) ||\
    \ (b * b + c * c == a * a);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(3, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 5));\nconsole.log(right_angle_triangle(5, 4", "    return (a ** 2 + b **\
    \ 2 === c ** 2) || (a ** 2 + c ** 2 === b ** 2) || (b ** 2 + c ** 2 === a ** 2);\n\
    }\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 6));\nconsole.log(right_angle_triangle(5, 3, 6));\nconsole.log(right_angle_triangle(5,\
    \ 6, 3));\nconsole.log(right_angle_triangle(3, 6, 5));\nconsole.log(right_angle_triangle(6,\
    \ 3, 5));\nconsole.log(right_angle_triangle(6, 5, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 7));\nconsole.log(right_angle_triangle(5, 3, 7));\nconsole.log(right_angle_triangle(5,\
    \ 7, 3));\nconsole.log(right_angle_triangle(3, 7, 5));\nconsole.log(right_angle_triangle(7,\
    \ 3, 5));\nconsole.log(right_angle_triangle(7, 5, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(arr[0],\
    \ 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(3, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 2));\nconsole.log(right_angle_triangle(3, 4, 1));\nconsole.log(right_angle_triangle(3,\
    \ 4, 0));\nconsole.log(right_angle_triangle(3, 4, -1));\nconsole.log(right_angle_triangle(3,\
    \ 4, -2));\nconsole.log(right_angle_triangle(3, 4, -3));\nconsole.log(right_angle_triangle(3,\
    \ 4, -4));\nconsole.log(right_angle_triangle(3, 4, -5));\nconsole.log(right_angle_triangle(3,\
    \ 4, -6));\nconsole.log(right_angle_triangle(3, 4, -7));\nconsole.log(right_angle_triangle(3,\
    \ 4, -8));\nconsole.log(right_angle_triangle(3, 4, -9));\nconsole.log(right_angle_triangle(3,\
    \ 4, -10));\nconsole.log(right_angle_triangle(3, 4, -11));\nconsole.log(right_angle_triangle(3,\
    \ 4, -12));\nconsole.log(right_angle_triangle(3, 4, -13));\nconsole.log(right_angle_triangle(3,\
    \ 4, -14));\nconsole.log(right_angle_triangle(3, 4, -15));\nconsole.log(right_angle_triangle(3,\
    \ 4, -16));\nconsole.log(right_angle_triangle(3, 4, -17", "    return (a * a +\
    \ b * b == c * c) || (a * a + c * c == b * b) || (b * b + c * c == a * a);\n}\n\
    \nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(3, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 2));\nconsole.log(right_angle_triangle(3, 4, 1));\nconsole.log(right_angle_triangle(3,\
    \ 4, 0));\nconsole.log(right_angle_triangle(3, 4, -1));\nconsole.log(right_angle_triangle(3,\
    \ 4, -2));\nconsole.log(right_angle_triangle(3, 4, -3));\nconsole.log(right_angle_triangle(3,\
    \ 4, -4));\nconsole.log(right_angle_triangle(3, 4, -5));\nconsole.log(right_angle_triangle(3,\
    \ 4, -6));\nconsole.log(right_angle_triangle(3, 4, -7));\nconsole.log(right_angle_triangle(3,\
    \ 4, -8));\nconsole.log(right_angle_triangle(3, 4, -9));\nconsole.log(right_angle_triangle(3,\
    \ 4, -10));\nconsole.log(right_angle_triangle(3, 4, -11));\nconsole.log(right_angle_triangle(3,\
    \ 4, -12));\nconsole.log(right_angle_triangle(3, 4, -13));\nconsole.log(right_angle_triangle(3,\
    \ 4, -14));\nconsole.log(right_angle_triangle(3, 4, -15));\nconsole.log(right_angle_triangle(3,\
    \ 4, -16));\nconsole.log(right_angle_triangle(3, 4, -", "    let arr = [a, b,\
    \ c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 ===\
    \ arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(0, 0, 0));\nconsole.log(right_angle_triangle(3,\
    \ 4, -5));\nconsole.log(right_angle_triangle(-3, -4, -5));", "    return Math.pow(a,\
    \ 2) + Math.pow(b, 2) === Math.pow(c, 2) || Math.pow(a, 2) + Math.pow(c, 2) ===\
    \ Math.pow(b, 2) || Math.pow(b, 2) + Math.pow(c, 2) === Math.pow(a, 2);\n}\n\n\
    console.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(4, 3, 6));", "    let arr = [a, b,\
    \ c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 ===\
    \ arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    return (a * a + b * b == c * c) || (a * a + c * c == b * b) ||\
    \ (b * b + c * c == a * a);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 4, 7));\nconsole.log(right_angle_triangle(3, 4, 8));\nconsole.log(right_angle_triangle(3,\
    \ 4, 9));\nconsole.log(right_angle_triangle(3, 4, 10));\nconsole.log(right_angle_triangle(3,\
    \ 4, 11));\nconsole.log(right_angle_triangle(3, 4, 12));\nconsole.log(right_angle_triangle(3,\
    \ 4, 13));\nconsole.log(right_angle_triangle(3, 4, 14));\nconsole.log(right_angle_triangle(3,\
    \ 4, 15));\nconsole.log(right_angle_triangle(3, 4, 16));\nconsole.log(right_angle_triangle(3,\
    \ 4, 17));\nconsole.log(right_angle_triangle(3, 4, 18));\nconsole.log(right_angle_triangle(3,\
    \ 4, 19));\nconsole.log(right_angle_triangle(3, 4, 20));\nconsole.log(right_angle_triangle(3,\
    \ 4, 21));\nconsole.log(right_angle_triangle(3, 4, 22));\nconsole.log(right_angle_triangle(3,\
    \ 4, 23));\nconsole.log(right_angle_triangle(3, 4, 24));\nconsole.log(right_angle_triangle(3,\
    \ 4, 25));\nconsole.log(right_angle_triangle(3, 4, 26));\nconsole.log(right_angle_triangle(3,\
    \ 4, 27));\nconsole.log(right_angle_triangle(3, 4, 28));\nconsole.log(right_angle_triangle(3,\
    \ 4, 29));\nconsole.log(right_angle_triangle(3, 4", "    let arr = [a, b, c].sort((a,\
    \ b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\n\
    console.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 12, 13));\nconsole.log(right_angle_triangle(5,\
    \ 15, 20));\n", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0]\
    \ * arr[0] + arr[1] * arr[1] === arr[2] * arr[2];\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 4, 7));\nconsole.log(right_angle_triangle(3, 4, 8));\nconsole.log(right_angle_triangle(3,\
    \ 4, 9));\nconsole.log(right_angle_triangle(3, 4, 10));\nconsole.log(right_angle_triangle(3,\
    \ 4, 11));\nconsole.log(right_angle_triangle(3, 4, 12));\nconsole.log(right_angle_triangle(3,\
    \ 4, 13));\nconsole.log(right_angle_triangle(3, 4, 14));\nconsole.log(right_angle_triangle(3,\
    \ 4, 15));\nconsole.log(right_angle_triangle(3, 4, 16));\nconsole.log(right_angle_triangle(3,\
    \ 4, 17));\nconsole.log(right_angle_triangle(3, 4, 18));\nconsole.log(right_angle_triangle(3,\
    \ 4, 19));\nconsole.log(right_angle_triangle(3, 4, 20));\nconsole.log(right_angle_triangle(3,\
    \ 4, 21));\nconsole.log(right_angle_triangle(3, 4, 22));\nconsole.log(right_angle_triangle(3,\
    \ 4, 23));\nconsole.log(right_angle_triangle(3, 4, 24));\nconsole.log(right_angle_triangle(3,\
    \ 4, 25));\nconsole.log(right_angle_triangle(3, 4, 26));\nconsole.log(right_angle_triangle(3,\
    \ 4, 27));\nconsole.log(right_angle_triangle(3, 4, 28));\nconsole.log(right_angle_triangle(3,\
    \ 4, 29));\nconsole.log", "    if (a > b && a > c) {\n        return Math.pow(a,\
    \ 2) === Math.pow(b, 2) + Math.pow(c, 2);\n    } else if (b > a && b > c) {\n\
    \        return Math.pow(b, 2) === Math.pow(a, 2) + Math.pow(c, 2);\n    } else\
    \ {\n        return Math.pow(c, 2) === Math.pow(a, 2) + Math.pow(b, 2);\n    }\n\
    }\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    return (a ** 2 + b ** 2 === c ** 2) || (a ** 2 + c ** 2 === b\
    \ ** 2) || (b ** 2 + c ** 2 === a ** 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));", "    let arr = [a, b,\
    \ c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 ===\
    \ arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\n", "    return (a**2 + b**2 === c**2) || (a**2 + c**2 === b**2) ||\
    \ (b**2 + c**2 === a**2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(3, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 5, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 6));\nconsole.log(right_angle_triangle(6, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 3));\nconsole.log(right_angle_triangle(3, 3", "    let max = Math.max(a,\
    \ b, c);\n    let sum = a + b + c;\n    return sum - max === max * 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));", "    let arr = [a, b,\
    \ c].sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] **\
    \ 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));\n", "    return Math.pow(a,\
    \ 2) + Math.pow(b, 2) === Math.pow(c, 2) ||\n        Math.pow(a, 2) + Math.pow(c,\
    \ 2) === Math.pow(b, 2) ||\n        Math.pow(b, 2) + Math.pow(c, 2) === Math.pow(a,\
    \ 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(", "    let arr = [a, b, c];\n   \
    \ arr.sort((a, b) => a - b);\n    return Math.pow(arr[0], 2) + Math.pow(arr[1],\
    \ 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(0,\
    \ 0, 0));\nconsole.log(right_angle_triangle(3, 4, -5));\nconsole.log(right_angle_triangle(-3,\
    \ -4, -5));", "    return (a * a + b * b == c * c || a * a + c * c == b * b ||\
    \ b * b + c * c == a * a);\n}\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\n", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ Math.pow(arr[0], 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(3, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 5, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 6));\nconsole.log(right_angle_triangle(6, 5, 4));\nconsole.log(right_angle_triangle(",
  "    if (a > b && a > c) {\n        return a * a === b * b + c * c;\n    } else\
    \ if (b > a && b > c) {\n        return b * b === a * a + c * c;\n    } else {\n\
    \        return c * c === a * a + b * b;\n    }\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 3, 6));\nconsole.log(right_angle_triangle(3,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4,", "    return Math.pow(a, 2) +\
    \ Math.pow(b, 2) === Math.pow(c, 2) ||\n        Math.pow(a, 2) + Math.pow(c, 2)\
    \ === Math.pow(b, 2) ||\n        Math.pow(b, 2) + Math.pow(c, 2) === Math.pow(a,\
    \ 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 3, 6));", "    let arr = [a, b,\
    \ c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 ===\
    \ arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));", "    let arr = [a, b,\
    \ c].sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] **\
    \ 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(",
  "    let sides = [a, b, c];\n    sides.sort((a, b) => a - b);\n    return Math.pow(sides[0],\
    \ 2) + Math.pow(sides[1], 2) === Math.pow(sides[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));\n", "    let arr = [a,\
    \ b, c].sort((a, b) => a - b);\n    return Math.pow(arr[0], 2) + Math.pow(arr[1],\
    \ 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 4, 7));\nconsole.log(right_angle_triangle(3, 4, 8));\nconsole.log(right_angle_triangle(3,\
    \ 4, 9));\nconsole.log(right_angle_triangle(3, 4, 10));\nconsole.log(right_angle_triangle(3,\
    \ 4, 11));\nconsole.log(right_angle_triangle(3, 4, 12));\nconsole.log(right_angle_triangle(3,\
    \ 4, 13));\nconsole.log(right_angle_triangle(3, 4, 14));\nconsole.log(right_angle_triangle(3,\
    \ 4, 15));\nconsole.log(right_angle_triangle(3, 4, 16));\nconsole.log(right_angle_triangle(3,\
    \ 4, 17));\nconsole.log(right_angle_triangle(3, 4, 18));\nconsole.log(right_angle_triangle(3,\
    \ 4, 19));\nconsole.log(right_angle_triangle(3, 4, 20));\nconsole.log(right_angle_triangle(3,\
    \ 4, 21));\nconsole.log(right_angle_triangle(3, 4, 22));\nconsole.log(right_angle_triangle(3,\
    \ 4, 23));\nconsole.log(right_angle_triangle(3, 4, 24));\nconsole.log(right_angle_triangle(3,\
    \ 4, 25));\nconsole.log(right_angle_triangle(3, 4, 26));\nconsole.log(right_angle_triangle(3,\
    \ 4, 27));\nconsole.log(right_angle_triangle(3, 4, 28));\nconsole.log(right_angle_triangle(3,\
    \ 4,", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0] ** 2\
    \ + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4,\
    \ 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));", "    let arr = [a, b,\
    \ c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 ===\
    \ arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(3, 6, 5));\nconsole.log(right_angle_triangle(3,\
    \ 5, 6));\nconsole.log(right_angle_triangle(5, 3, 6));\nconsole.log(right_angle_triangle(5,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 5, 3));\nconsole.log(right_angle_triangle(6,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 4, 7));\nconsole.log(right_angle_triangle(3,\
    \ 7, 4));\nconsole.log(right_angle_triangle(7, 3, 4));\nconsole.log(right_angle_triangle(7,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 7, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 7));\nconsole.log(right_angle_triangle(3, 5, 7));\nconsole.log(right_angle",
  "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] **\
    \ 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4,\
    \ 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));", "    return a ** 2 +\
    \ b ** 2 === c ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\n", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(arr[0],\
    \ 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));", "    return (a ** 2 +\
    \ b ** 2 === c ** 2) || (a ** 2 + c ** 2 === b ** 2) || (b ** 2 + c ** 2 === a\
    \ ** 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\n", "    if (a > b && a > c) {\n        return a * a === b * b + c *\
    \ c;\n    } else if (b > a && b > c) {\n        return b * b === a * a + c * c;\n\
    \    } else {\n        return c * c === a * a + b * b;\n    }\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));", "    return Math.pow(a, 2) + Math.pow(b, 2) === Math.pow(c, 2)\n}\n\
    \nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\n", "    return (a ** 2 + b ** 2 === c ** 2) || (a ** 2 + c ** 2 ===\
    \ b ** 2) || (b ** 2 + c ** 2 === a ** 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));", "    return Math.pow(a,\
    \ 2) + Math.pow(b, 2) === Math.pow(c, 2) ||\n        Math.pow(a, 2) + Math.pow(c,\
    \ 2) === Math.pow(b, 2) ||\n        Math.pow(b, 2) + Math.pow(c, 2) === Math.pow(a,\
    \ 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));", "    let arr = [a, b,\
    \ c].sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] **\
    \ 2;\n}\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(3,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 6));\nconsole.log(right_angle_triangle(6, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 5));\nconsole.log(right_angle_triangle(5, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 4, 6));\nconsole.log(right_angle_triangle(4",
  "    let sides = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(sides[0],\
    \ 2) + Math.pow(sides[1], 2) === Math.pow(sides[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(4,\
    \ 5, 7));\nconsole.log(right_angle_triangle(4, 7, 5));\nconsole.log(right_angle_triangle(7,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 4, 7));\nconsole.log(right_angle_triangle(5,\
    \ 7, 4));\nconsole.log(right_angle_triangle(7, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 8));\nconsole.log(right_angle_triangle(4, 8, 5));\nconsole.log(right_angle_triangle(8,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 4, 8));\nconsole.log(right_angle_triangle(5,\
    \ 8, 4));\nconsole.log(right_angle_triangle(8, 5, 4));\nconsole.log(right_angle_triangle(4",
  "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] **\
    \ 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4,\
    \ 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\n", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(arr[0],\
    \ 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));", "    let arr = [a, b,\
    \ c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 ===\
    \ arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    let sides = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(sides[0],\
    \ 2) + Math.pow(sides[1], 2) === Math.pow(sides[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));", "    let arr = [a, b,\
    \ c].sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] **\
    \ 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 6));", "    let arr = [a, b,\
    \ c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 ===\
    \ arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(3,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 3, 6));\nconsole.log(right_angle_triangle(6,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 6, 3));\nconsole.log(right_angle",
  "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return Math.pow(arr[0],\
    \ 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(6,\
    \ 8, 10));\nconsole.log(right_angle_triangle(8, 6, 10));\nconsole.log(right_angle_triangle(10,\
    \ 6, 8));\nconsole.log(right_angle_triangle(6, 10, 8));\nconsole.log(right_angle_triangle(8,\
    \ 10, 6));\nconsole.log(right_angle_triangle(10, 8, 6));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 7));\nconsole.log(right_angle_triangle(4, 3, 7));\nconsole.log(right_angle_triangle(7,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 7, 4));\nconsole.log(right_angle_triangle(4,\
    \ 7, 3));\nconsole.log(right_angle_triangle(7, 4, 3));\nconsole.log(right_angle_triangle(",
  "    return (a ** 2 + b ** 2 === c ** 2) || (a ** 2 + c ** 2 === b ** 2) || (b **\
    \ 2 + c ** 2 === a ** 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 4, 7));\nconsole.log(right_angle_triangle(3, 4, 8));\nconsole.log(right_angle_triangle(3,\
    \ 4, 9));\nconsole.log(right_angle_triangle(3, 4, 10));\nconsole.log(right_angle_triangle(3,\
    \ 4, 11));\nconsole.log(right_angle_triangle(3, 4, 12));\nconsole.log(right_angle_triangle(3,\
    \ 4, 13));\nconsole.log(right_angle_triangle(3, 4, 14));\nconsole.log(right_angle_triangle(3,\
    \ 4, 15));\nconsole.log(right_angle_triangle(3, 4, 16));\nconsole.log(right_angle_triangle(3,\
    \ 4, 17));\nconsole.log(right_angle_triangle(3, 4, 18));\nconsole.log(right_angle_triangle(3,\
    \ 4, 19));\nconsole.log(right_angle_triangle(3, 4, 20));\nconsole.log(right_angle_triangle(3,\
    \ 4, 21));\nconsole.log(right_angle_triangle(3, 4, 22));\nconsole.log(right_angle_triangle(3,\
    \ 4, 23));\nconsole.log(right_angle_triangle(3, 4, 24));\nconsole.log(right_angle_triangle(3,\
    \ 4, 25));\nconsole.log(right_angle_triangle(3, 4, 26));\nconsole.log(right_angle_triangle(3,\
    \ 4, 27));\nconsole.log(right_angle_triangle(3, 4, 28));\nconsole.log(right_angle_triangle(3,\
    \ 4, 29));\nconsole.log(right_angle_triangle(3, 4", "    if (a === 0 || b ===\
    \ 0 || c === 0) {\n        return false;\n    }\n    const arr = [a, b, c].sort((a,\
    \ b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\n\
    console.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(0, 0, 0));\nconsole.log(right_angle_triangle(0,\
    \ 0, 1));\nconsole.log(right_angle_triangle(0, 1, 0));\nconsole.log(right_angle_triangle(1,\
    \ 0, 0));\nconsole.log(right_angle_triangle(0, 1, 1));\nconsole.log(right_angle_triangle(1,\
    \ 0, 1));\nconsole.log(right_angle_triangle(1, 1, 0));\nconsole.log(right_angle_triangle(1,\
    \ 1, 1));\nconsole.log(right_angle_triangle(1, 1, 2));\nconsole.log(right_angle_triangle(1,\
    \ 2, 1));\nconsole.log(right_angle_triangle(2, 1, 1));\nconsole.log(right_angle_triangle(2,\
    \ 2, 2));\nconsole.log(right_angle_triangle(2, 2, 3));\nconsole.log(right_angle_triangle(2,\
    \ 3, 2));\nconsole.log(right_angle_triangle(3, 2, 2));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 3));\nconsole.log(", "    return (a ** 2 + b ** 2 === c ** 2) || (a ** 2\
    \ + c ** 2 === b ** 2) || (b ** 2 + c ** 2 === a ** 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 5, 6));\nconsole.log(right_angle_triangle(5,\
    \ 3, 6));\nconsole.log(right_angle_triangle(5, 6, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 5));\nconsole.log(right_angle_triangle(6, 3, 5));\nconsole.log(right_angle_triangle(6,\
    \ 5, 3));", "    if (a > b && a > c) {\n        return a * a === b * b + c * c;\n\
    \    } else if (b > a && b > c) {\n        return b * b === a * a + c * c;\n \
    \   } else {\n        return c * c === a * a + b * b;\n    }\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));", "    return (a * a + b * b === c * c) || (a * a + c * c === b * b)\
    \ || (b * b + c * c === a * a);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 5, 6));\nconsole.log(right_angle_triangle(5,\
    \ 3, 6));\nconsole.log(right_angle_triangle(5, 6, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 5));\nconsole.log(right_angle_triangle(6, 3, 5));\nconsole.log(right_angle_triangle(6,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 6, 7));\nconsole.log(right_angle_triangle(6,\
    \ 3, 7));\nconsole.log(right_angle_triangle(6, 7, 3));\nconsole.log(right_angle_triangle(3,\
    \ 7, 6));\nconsole.log(right_angle_triangle(7, 3, 6));\nconsole.log(right_angle_triangle(7,\
    \ 6, 3));\nconsole.log(right_angle_triangle(3, 7", "    let arr = [a, b, c].sort((a,\
    \ b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\n\
    console.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));", "    if (a > b && a >\
    \ c) {\n        return a * a === b * b + c * c;\n    } else if (b > a && b > c)\
    \ {\n        return b * b === a * a + c * c;\n    } else {\n        return c *\
    \ c === a * a + b * b;\n    }\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\n", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 4, 7));\nconsole.log(right_angle_triangle(3, 4, 8));\nconsole.log(right_angle_triangle(3,\
    \ 4, 9));\nconsole.log(right_angle_triangle(3, 4, 10));\nconsole.log(right_angle_triangle(3,\
    \ 4, 11));\nconsole.log(right_angle_triangle(3, 4, 12));\nconsole.log(right_angle_triangle(3,\
    \ 4, 13));\nconsole.log(right_angle_triangle(3, 4, 14));\nconsole.log(right_angle_triangle(3,\
    \ 4, 15));\nconsole.log(right_angle_triangle(3, 4, 16));\nconsole.log(right_angle_triangle(3,\
    \ 4, 17));\nconsole.log(right_angle_triangle(3, 4, 18));\nconsole.log(right_angle_triangle(3,\
    \ 4, 19));\nconsole.log(right_angle_triangle(3, 4, 20));\nconsole.log(right_angle_triangle(3,\
    \ 4, 21));\nconsole.log(right_angle_triangle(3, 4, 22));\nconsole.log(right_angle_triangle(3,\
    \ 4, 23));\nconsole.log(right_angle_triangle(3, 4, 24));\nconsole.log(right_angle_triangle(3,\
    \ 4, 25));\nconsole.log(right_angle_triangle(3, 4, 26));\nconsole.log(right_angle_triangle(3,\
    \ 4, 27));\nconsole.log(right_angle_triangle(3, 4, 28));\nconsole.log(right_angle_triangle(3,\
    \ 4, 29));\nconsole.log(right_angle_triangle(", "    let arr = [a, b, c].sort((a,\
    \ b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\n\
    console.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 6));", "    let arr = [a, b,\
    \ c].sort((a, b) => a - b);\n    return Math.pow(arr[0], 2) + Math.pow(arr[1],\
    \ 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(3, 4, 6));", "    let arr = [a, b, c];\n    arr.sort((a,\
    \ b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\n\
    console.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));", "    return (a ** 2 + b ** 2 === c ** 2) || (a ** 2 + c ** 2 === b\
    \ ** 2) || (b ** 2 + c ** 2 === a ** 2);\n}\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(3, 4, 7));\nconsole.log(right_angle_triangle(7,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 7, 3));\nconsole.log(right_angle_triangle(7,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 7, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 7));\nconsole.log(right_angle_triangle(3, 4, 8));\nconsole.log(right_angle_triangle(8,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 8, 3));\nconsole.log(right_angle_triangle(8,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 8, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 8));\nconsole.log(right_angle_triangle(3, 4,", "    let arr = [a, b, c];\n\
    \    arr.sort((a, b) => a - b);\n    return Math.pow(arr[0], 2) + Math.pow(arr[1],\
    \ 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 6, 5));\nconsole.log(right_angle_triangle(6, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 6));\nconsole.log(right_angle_triangle(3, 5, 6));\nconsole.log(right_angle_triangle(6,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 6, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 7));\nconsole.log(right_angle_triangle(7, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 7));\nconsole.log(right_angle_triangle(3, 7, 4));\nconsole.log(right_angle_triangle(7,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 7, 3));\nconsole.log(right_angle_triangle(",
  "    return (a * a + b * b === c * c) || (a * a + c * c === b * b) || (b * b + c\
    \ * c === a * a);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(arr[0],\
    \ 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(arr[0],\
    \ 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(1, 2, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(1, 1, 1));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\n", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 12, 13));\nconsole.log(right_angle_triangle(5,\
    \ 15, 20));", "    let result: boolean = false;\n    let sides: number[] = [a,\
    \ b, c];\n    sides.sort((a, b) => a - b);\n    if (sides[0] ** 2 + sides[1] **\
    \ 2 === sides[2] ** 2) {\n        result = true;\n    }\n    return result;\n\
    }\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 12, 13));\nconsole.log(right_angle_triangle(5, 15, 20));", "    let arr = [a,\
    \ b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] * arr[0] + arr[1]\
    \ * arr[1] === arr[2] * arr[2];\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(3, 4, 6));\n", "    let arr = [a, b, c];\n  \
    \  arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2]\
    \ ** 2;\n}\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\n", "    if (a > b && a > c) {\n        return a * a === b * b + c *\
    \ c;\n    } else if (b > a && b > c) {\n        return b * b === a * a + c * c;\n\
    \    } else {\n        return c * c === a * a + b * b;\n    }\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(5, 5, 5));\nconsole.log(right_angle_triangle(5,\
    \ 5, 6));\nconsole.log(right_angle_triangle(5, 6, 5));\nconsole.log(right_angle_triangle(6,\
    \ 5, 5));\nconsole.log(right_angle_triangle(5, 6, 7));\nconsole.log(right_angle_triangle(6,\
    \ 7, 5));\nconsole.log(right_angle_triangle(7, 5, 6));\nconsole.log(right_angle_triangle(7,\
    \ 6, 5));\nconsole.log(right_angle_triangle(6, 5, 7));\nconsole.log(right_angle_triangle(5,\
    \ 7, 6));\nconsole.log(right_angle_triangle(6, 7, 8));\nconsole.log(right_angle_triangle(7,\
    \ 8, 6));\nconsole.log(right_angle_triangle(8, 6, 7));\nconsole.log(right_angle_triangle(8,\
    \ 7, 6));\nconsole.log(right_angle_triangle(7, 6, 8));\nconsole.log(right_angle_triangle(6,\
    \ 8, 7));\nconsole.log(right_angle_triangle(7,", "    let sides = [a, b, c];\n\
    \    sides.sort((a, b) => a - b);\n    return Math.pow(sides[0], 2) + Math.pow(sides[1],\
    \ 2) === Math.pow(sides[2], 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 4, 7));\nconsole.log(right_angle_triangle(3, 4, 8));\nconsole.log(right_angle_triangle(3,\
    \ 4, 9));\nconsole.log(right_angle_triangle(3, 4, 10));\nconsole.log(right_angle_triangle(3,\
    \ 4, 11));\nconsole.log(right_angle_triangle(3, 4, 12));\nconsole.log(right_angle_triangle(3,\
    \ 4, 13));\nconsole.log(right_angle_triangle(3, 4, 14));\nconsole.log(right_angle_triangle(3,\
    \ 4, 15));\nconsole.log(right_angle_triangle(3, 4, 16));\nconsole.log(right_angle_triangle(3,\
    \ 4, 17));\nconsole.log(right_angle_triangle(3, 4, 18));\nconsole.log(right_angle_triangle(3,\
    \ 4, 19));\nconsole.log(right_angle_triangle(3, 4, 20));\nconsole.log(right_angle_triangle(3,\
    \ 4, 21));\nconsole.log(right_angle_triangle(3, 4, 22));\nconsole.log(right_angle_triangle(3,\
    \ 4, 23));\nconsole.log(right_angle_triangle(3, 4, 24));\nconsole.log(right_angle_triangle(3,\
    \ 4, 25));\nconsole.log(right_angle_triangle(3, 4, 26));\nconsole.log(right_angle_triangle(3,\
    \ 4, 27));\nconsole.log(right_angle_triangle(3, 4, 28));\nconsole.log(right_angle_",
  "    return (a * a + b * b === c * c) || (a * a + c * c === b * b) || (b * b + c\
    \ * c === a * a);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 6));", "    let arr = [a, b,\
    \ c].sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] **\
    \ 2;\n}\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 6));", "    let arr = [a, b,\
    \ c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 ===\
    \ arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(3,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 4, 4));", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));", "    let max = Math.max(a, b, c);\n    let sum = a + b + c;\n    let\
    \ diff = sum - max;\n    if (max * max === diff * diff) {\n        return true;\n\
    \    }\n    return false;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ Math.pow(arr[0], 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    return (a ** 2 + b ** 2 === c ** 2) || (a ** 2 + c ** 2 === b\
    \ ** 2) || (b ** 2 + c ** 2 === a ** 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(5,\
    \ 6, 7));\n", "    return (a**2 + b**2 === c**2) || (a**2 + c**2 === b**2) ||\
    \ (b**2 + c**2 === a**2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));", "    let arr = [a, b,\
    \ c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 ===\
    \ arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 7));\nconsole.log(right_angle_triangle(7, 4, 3));\nconsole.log(right_angle_triangle(7,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 7, 3));\nconsole.log(right_angle_triangle(3,\
    \ 7, 4));\nconsole.log(right_angle_triangle(3, 4, 8));\nconsole.log(right_angle_triangle(8,\
    \ 4, 3));\nconsole.log(right_angle_triangle(8, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 8, 3));\nconsole.log(right_angle_triangle(3, 8, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 9));\nconsole.log(right_angle_triangle(9, 4, 3));\nconsole.log(right_angle_triangle(9,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 9, 3));\nconsole.log(right_angle",
  "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] **\
    \ 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4,\
    \ 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(6, 4, 5));\nconsole.log(right_angle_triangle(6,\
    \ 5, 4));\nconsole.log(right_angle_triangle(5, 6, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 6));\nconsole.log(right_angle_triangle(4, 6, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 6));", "    return a ** 2 + b ** 2 === c ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 4));\nconsole.log(right_angle_triangle(5, 4, 4));\nconsole.log(right_angle_triangle(5,\
    \ 5, 4));\nconsole.log(right_angle_triangle(5, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 5));\nconsole.log(right_angle_triangle(5, 5, 5));\n", "    return (a**2 +\
    \ b**2 === c**2) || (a**2 + c**2 === b**2) || (b**2 + c**2 === a**2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 4, 7));\nconsole.log(right_angle_triangle(3, 4, 8));\nconsole.log(right_angle_triangle(3,\
    \ 4, 9));\nconsole.log(right_angle_triangle(3, 4, 10));\nconsole.log(right_angle_triangle(3,\
    \ 4, 11));\nconsole.log(right_angle_triangle(3, 4, 12));\nconsole.log(right_angle_triangle(3,\
    \ 4, 13));\nconsole.log(right_angle_triangle(3, 4, 14));\nconsole.log(right_angle_triangle(3,\
    \ 4, 15));\nconsole.log(right_angle_triangle(3, 4, 16));\nconsole.log(right_angle_triangle(3,\
    \ 4, 17));\nconsole.log(right_angle_triangle(3, 4, 18));\nconsole.log(right_angle_triangle(3,\
    \ 4, 19));\nconsole.log(right_angle_triangle(3, 4, 20));\nconsole.log(right_angle_triangle(3,\
    \ 4, 21));\nconsole.log(right_angle_triangle(3, 4, 22));\nconsole.log(right_angle_triangle(3,\
    \ 4, 23));\nconsole.log(right_angle_triangle(3, 4, 24));\nconsole.log(right_angle_triangle(3,\
    \ 4, 25));\nconsole.log(right_angle_triangle(3, 4, 26));\nconsole.log(right_angle_triangle(3,\
    \ 4, 27));\nconsole.log(right_angle_triangle(3, 4, 28));\nconsole.log(right_angle_triangle(3,\
    \ 4, 29));\nconsole.log(right_angle_triangle(3, 4", "    let sides = [a, b, c].sort((a,\
    \ b) => a - b);\n    return Math.pow(sides[0], 2) + Math.pow(sides[1], 2) ===\
    \ Math.pow(sides[2], 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0]\
    \ * arr[0] + arr[1] * arr[1] === arr[2] * arr[2];\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(3, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 5, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 5));\nconsole.log(right_angle_triangle(6, 5, 4));\nconsole.log(right_angle_triangle(5,\
    \ 6, 4));\nconsole.log(right_angle_triangle(5, 4, 6));\nconsole.log(right_angle_triangle(4,\
    \ 6, 5));\nconsole.log(right_angle_triangle(4, 5, 6));\nconsole.log(right_angle_triangle(5,\
    \ 4, 6));\nconsole.log", "    let arr = [a, b, c].sort((a, b) => a - b);\n   \
    \ return arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));", "    let arr = [a, b,\
    \ c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 ===\
    \ arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(3, 4, 7));\nconsole.log(right_angle_triangle(3,\
    \ 4, 8));\nconsole.log(right_angle_triangle(3, 4, 9));\nconsole.log(right_angle_triangle(3,\
    \ 4, 10));\nconsole.log(right_angle_triangle(3, 4, 11));\nconsole.log(right_angle_triangle(3,\
    \ 4, 12));\nconsole.log(right_angle_triangle(3, 4, 13));\nconsole.log(right_angle_triangle(3,\
    \ 4, 14));\nconsole.log(right_angle_triangle(3, 4, 15));\nconsole.log(right_angle_triangle(3,\
    \ 4, 16));\nconsole.log(right_angle_triangle(3, 4, 17));\nconsole.log(right_angle_triangle(3,\
    \ 4, 18));\nconsole.log(right_angle_triangle(3, 4, 19));\nconsole.log(right_angle_triangle(3,\
    \ 4, 20));\nconsole.log(right_angle_triangle(3, 4, 21));\nconsole.log(right_angle_triangle(3,\
    \ 4, 22));\nconsole.log(right_angle_triangle(3, 4, 23));\nconsole.log(right_angle_triangle(3,\
    \ 4, 24));\nconsole.log(right_angle_triangle(3, 4, 25));\nconsole.log(right_angle_triangle(3,\
    \ 4, 26));\nconsole.log(right_angle_triangle(3, 4, 27));\nconsole.log(right_angle",
  "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] **\
    \ 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4,\
    \ 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    let sides = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(sides[0],\
    \ 2) + Math.pow(sides[1], 2) === Math.pow(sides[2], 2);\n}\n", "    return (a\
    \ ** 2 + b ** 2 === c ** 2) || (a ** 2 + c ** 2 === b ** 2) || (b ** 2 + c **\
    \ 2 === a ** 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(3,\
    \ 6, 5));\nconsole.log(right_angle_triangle(6, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 6, 3));\nconsole.log(right_angle_triangle(3, 5, 6));\nconsole.log(right_angle_triangle(5,\
    \ 3, 6));\nconsole.log(right_angle_triangle(6, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 6, 4));\nconsole.log(right_angle_triangle(6, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 5));\nconsole.log(right_angle_triangle(5, 4, 6));\nconsole.log(right_angle_triangle(4,\
    \ 5, 6));\nconsole.log(right_angle_triangle(6, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 6, 7));\nconsole.log(right_angle_triangle(6, 4, 7));\nconsole.log(right_angle_triangle(7,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 7, 6));\nconsole.log(right_angle_triangle(7,\
    \ 4", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return Math.pow(arr[0],\
    \ 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));\n", "    return (a * a\
    \ + b * b == c * c) || (a * a + c * c == b * b) || (b * b + c * c == a * a);\n\
    }\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(3,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 4, 4));\nconsole.log(right_angle_triangle(3, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 5, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 6));\nconsole.log(right_angle_triangle(6, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 3));\nconsole.log(right_angle_triangle(3, 3, 7));\nconsole.log(right_angle_triangle(7,\
    \ 3", "    return (a * a + b * b == c * c || a * a + c * c == b * b || b * b +\
    \ c * c == a * a);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 8));\nconsole.log(right_angle_triangle(3, 8, 6));\nconsole.log(right_angle_triangle(8,\
    \ 3, 6));\nconsole.log(right_angle_triangle(6, 3, 8));\nconsole.log(right_angle_triangle(6,\
    \ 8, 3));\nconsole.log(right_angle_triangle(8, 6, 3));\nconsole.log(right_angle_triangle(6,\
    \ 8, 10));\nconsole.log(right_angle_triangle(6, 10, 8));\nconsole.log(right_angle_triangle(10,\
    \ 6, 8));\nconsole.log(right_angle_triangle(8, 6, 10));\nconsole.log(right_angle_triangle(8,\
    \ 10, 6));\nconsole.log(right_angle_triangle(10, 8, 6));\nconsole.log(right_angle_triangle(8,\
    \ 10, 12));\n", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\n", "    if (a > b && a > c) {\n        return a * a === b * b + c *\
    \ c;\n    } else if (b > a && b > c) {\n        return b * b === a * a + c * c;\n\
    \    } else {\n        return c * c === a * a + b * b;\n    }\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 5, 5));\nconsole.log(right_angle_triangle(5,\
    \ 5, 3));\nconsole.log(right_angle_triangle(10, 24, 26));\nconsole.log(right_angle_triangle(24,\
    \ 26, 10));\nconsole.log(right_angle_triangle(26, 10, 24));\nconsole.log(right_angle_triangle(10,\
    \ 26, 24));\nconsole.log(right_angle_triangle(24, 10, 26));\nconsole.log(right_angle_triangle(26,\
    \ 24, 10));\nconsole.log(right_angle_triangle(30, 36, 42));\nconsole.log(right_angle_triangle(36,\
    \ 42, 30));\nconsole.log(right_angle_triangle(42, 30, 36));\nconsole.log(right_angle_triangle(30,\
    \ 42, 36));\nconsole.log(right_angle_triangle(36,", "    return (a ** 2 + b **\
    \ 2 == c ** 2) || (a ** 2 + c ** 2 == b ** 2) || (b ** 2 + c ** 2 == a ** 2);\n\
    }\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 3));\nconsole.log(right_angle_triangle(4, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 6, 4));\nconsole.log(right_angle_triangle(4,\
    \ 4, 7));\nconsole.log(right_angle_triangle(7, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 7", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(1, 2, 3));\n", "    let sides = [a,\
    \ b, c];\n    sides.sort((a, b) => a - b);\n    return Math.pow(sides[0], 2) +\
    \ Math.pow(sides[1], 2) === Math.pow(sides[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 4, 7));\nconsole.log(right_angle_triangle(3, 4, 8));\nconsole.log(right_angle_triangle(3,\
    \ 4, 9));\nconsole.log(right_angle_triangle(3, 4, 10));\nconsole.log(right_angle_triangle(3,\
    \ 4, 11));\nconsole.log(right_angle_triangle(3, 4, 12));\nconsole.log(right_angle_triangle(3,\
    \ 4, 13));\nconsole.log(right_angle_triangle(3, 4, 14));\nconsole.log(right_angle_triangle(3,\
    \ 4, 15));\nconsole.log(right_angle_triangle(3, 4, 16));\nconsole.log(right_angle_triangle(3,\
    \ 4, 17));\nconsole.log(right_angle_triangle(3, 4, 18));\nconsole.log(right_angle_triangle(3,\
    \ 4, 19));\nconsole.log(right_angle_triangle(3, 4, 20));\nconsole.log(right_angle_triangle(3,\
    \ 4, 21));\nconsole.log(right_angle_triangle(3, 4, 22));\nconsole.log(right_angle_triangle(3,\
    \ 4, 23));\nconsole.log(right_angle_triangle(3, 4, 24));\nconsole.log(right_angle_triangle(3,\
    \ 4, 25));\nconsole.log(right_angle_triangle(3, 4, 26));\nconsole.log(right_angle_triangle(3,\
    \ 4, 27));\nconsole.log(right_angle_triangle(3, 4, 28));\nconsole.log(right_angle_",
  "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] **\
    \ 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4,\
    \ 5));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));", "    return (a ** 2 +\
    \ b ** 2 === c ** 2 || a ** 2 + c ** 2 === b ** 2 || b ** 2 + c ** 2 === a **\
    \ 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(3,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 3, 6));\nconsole.log(right_angle_triangle(6,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 6, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 7));\n", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ Math.pow(arr[0], 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));", "    return (a * a +\
    \ b * b === c * c) || (a * a + c * c === b * b) || (b * b + c * c === a * a);\n\
    }\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(3,\
    \ 5, 5));\nconsole.log(right_angle_triangle(5, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 5, 5));\nconsole.log(right_angle_triangle(5,\
    \ 6, 7));\nconsole.log(right_angle_triangle(7, 5, 6));\nconsole.log(right_angle_triangle(6,\
    \ 7, 5));\nconsole.log(right_angle_triangle(5, 7, 6));\nconsole.log(right_angle_triangle(7,\
    \ 6, 5));\nconsole.log(right_angle_triangle(6, 5, 7));\n", "    let arr = [a,\
    \ b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2\
    \ === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(3, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 4, 7));\nconsole.log(right_angle_triangle(7,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 7, 4));\nconsole.log(right_angle",
  "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1]\
    \ ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));\n", "    return (a * a\
    \ + b * b === c * c) || (a * a + c * c === b * b) || (b * b + c * c === a * a);\n\
    }\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(3,\
    \ 5, 5));\nconsole.log(right_angle_triangle(5, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 5, 5));\nconsole.log(right_angle_triangle(5,\
    \ 5, 7));\nconsole.log(right_angle_triangle(7, 5, 5));\nconsole.log(right_angle_triangle(5,\
    \ 7, 5));\nconsole.log(right_angle_triangle(5, 5, 8));\nconsole.log(right_angle_triangle(8,\
    \ 5, 5));\nconsole.log(right_angle_triangle(5, 8, 5));\nconsole.log(right_angle_triangle(5,\
    \ 5, 12));\nconsole.log(right_angle_triangle(12, 5, 5));\nconsole.log(right_angle_triangle(5,\
    \ 12", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0] * arr[0]\
    \ + arr[1] * arr[1] === arr[2] * arr[2];\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));", "    if (a > b && a >\
    \ c) {\n        return a * a === b * b + c * c;\n    } else if (b > a && b > c)\
    \ {\n        return b * b === a * a + c * c;\n    } else {\n        return c *\
    \ c === a * a + b * b;\n    }\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 3, 6));\nconsole.log(right_angle_triangle(3,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4,", "    return (a * a + b * b ==\
    \ c * c) || (a * a + c * c == b * b) || (b * b + c * c == a * a);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(3, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 4", "    return a**2 + b**2 ===\
    \ c**2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\n", "    let sides = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(sides[0],\
    \ 2) + Math.pow(sides[1], 2) === Math.pow(sides[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));", "    let arr = [a, b,\
    \ c].sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] **\
    \ 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(1,\
    \ 2, 3));\n", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));\n", "    return (a ** 2\
    \ + b ** 2 === c ** 2) || (a ** 2 + c ** 2 === b ** 2) || (b ** 2 + c ** 2 ===\
    \ a ** 2);\n}\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(10, 24, 26));\nconsole.log(right_angle_triangle(26,\
    \ 10, 24));\nconsole.log(right_angle_triangle(24, 26, 10));\nconsole.log(right_angle_triangle(24,\
    \ 10, 26));\nconsole.log(right_angle_triangle(10, 26, 24));\nconsole.log(right_angle_triangle(26,\
    \ 24, 10));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(10, 24, 26));\nconsole.log(right_angle_triangle(26,\
    \ 10, 24));\nconsole.log(right_angle_triangle(24, 26, 10));\nconsole.log(right_angle_triangle(24,\
    \ 10,", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(arr[0],\
    \ 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));", "    if (a > b && a > c) {\n        return a * a === b * b + c * c;\n\
    \    } else if (b > a && b > c) {\n        return b * b === a * a + c * c;\n \
    \   } else {\n        return c * c === a * a + b * b;\n    }\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(4, 5, 3));", "    let sides = [a,\
    \ b, c].sort((a, b) => a - b);\n    return sides[0] ** 2 + sides[1] ** 2 === sides[2]\
    \ ** 2;\n}\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(1,\
    \ 2, 3));\n", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ Math.pow(arr[0], 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(13,\
    \ 12, 5));\nconsole.log(right_angle_triangle(12, 13, 5));\nconsole.log(right_angle_triangle(5,\
    \ 12, 13));\nconsole.log(right_angle_triangle(13, 5, 12));\nconsole.log(right_angle_triangle(12,\
    \ 5, 13));\nconsole.log(right_angle_triangle(5, 13, 12));\nconsole.log(right_angle_triangle(12,\
    \ 5, 13));\nconsole.log(right_angle_triangle(13, 12, 5));\nconsole.log(right_angle_triangle(5,\
    \ 13, 12));\nconsole.log(right_angle_triangle(12, 13, 5));\nconsole.log(right_angle_triangle(5,\
    \ 12, 13));\nconsole.log(right_angle_triangle(13, 5, 12));\nconsole.log(right_angle_triangle(12,\
    \ 5, 13));\nconsole.log(right_angle_triangle(5, 12, 13));\nconsole.log(right_angle_triangle(13,\
    \ 12, 5));\nconsole.log(right_angle_triangle(5, 13, 12));\nconsole.log(right_angle_triangle(12,\
    \ 13, 5));\nconsole.log(right_angle_triangle(5, 12, 13));\nconsole.log(right_angle_triangle(",
  "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1]\
    \ ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    let max = Math.max(a, b, c);\n    let sum = a + b + c;\n    let\
    \ rest = sum - max;\n    return max * max === rest * rest;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));\n", "    let sides = [a,\
    \ b, c].sort((a, b) => a - b);\n    return Math.pow(sides[0], 2) + Math.pow(sides[1],\
    \ 2) === Math.pow(sides[2], 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    return a ** 2 + b ** 2 === c ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 6, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 6));\nconsole.log(right_angle_triangle(5, 3, 6));\nconsole.log(right_angle_triangle(6,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 6, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 5));\nconsole.log(right_angle_triangle(5, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 6));\nconsole.log(right_angle_triangle(5,\
    \ 4, 7));\nconsole.log(right_angle_triangle(7, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 7, 5));\nconsole.log(right_angle", "    return a ** 2 + b ** 2 === c ** 2;\n\
    }\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 12, 13));\nconsole.log(right_angle_triangle(5, 15, 20));\n", "    let arr =\
    \ [a, b, c].sort((a, b) => a - b);\n    return Math.pow(arr[0], 2) + Math.pow(arr[1],\
    \ 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(1, 2, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\n", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(arr[0],\
    \ 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 4, 7));\nconsole.log(right_angle_triangle(3, 4, 8));\nconsole.log(right_angle_triangle(3,\
    \ 4, 9));\nconsole.log(right_angle_triangle(3, 4, 10));\nconsole.log(right_angle_triangle(3,\
    \ 4, 11));\nconsole.log(right_angle_triangle(3, 4, 12));\nconsole.log(right_angle_triangle(3,\
    \ 4, 13));\nconsole.log(right_angle_triangle(3, 4, 14));\nconsole.log(right_angle_triangle(3,\
    \ 4, 15));\nconsole.log(right_angle_triangle(3, 4, 16));\nconsole.log(right_angle_triangle(3,\
    \ 4, 17));\nconsole.log(right_angle_triangle(3, 4, 18));\nconsole.log(right_angle_triangle(3,\
    \ 4, 19));\nconsole.log(right_angle_triangle(3, 4, 20));\nconsole.log(right_angle_triangle(3,\
    \ 4, 21));\nconsole.log(right_angle_triangle(3, 4, 22));\nconsole.log(right_angle_triangle(3,\
    \ 4, 23));\nconsole.log(right_angle_triangle(3, 4, 24));\nconsole.log(right_angle_triangle(3,\
    \ 4, 25));\nconsole.log(right_angle_triangle(3, 4, 26));\nconsole.log(right_angle_triangle(3,\
    \ 4, 27));\nconsole.log(right_angle_triangle(3, 4, 28));\nconsole.log(right_angle_triangle(3,\
    \ 4,", "    return (a * a + b * b == c * c || a * a + c * c == b * b || b * b\
    \ + c * c == a * a);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 4));\nconsole.log(right_angle_triangle(5, 4, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 5));\nconsole.log(right_angle_triangle(5, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\n", "    return (a ** 2 + b ** 2 === c ** 2) || (a ** 2 + c ** 2 ===\
    \ b ** 2) || (b ** 2 + c ** 2 === a ** 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\n", "    return a * a + b * b === c * c || a * a + c * c === b * b ||\
    \ b * b + c * c === a * a;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 6));", "    let arr = [a, b,\
    \ c].sort((a, b) => a - b);\n    return Math.pow(arr[0], 2) + Math.pow(arr[1],\
    \ 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(2, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(3, 4, 7));\nconsole.log(right_angle_triangle(3,\
    \ 4, 8));\nconsole.log(right_angle_triangle(3, 4, 9));\nconsole.log(right_angle_triangle(3,\
    \ 4, 10));\nconsole.log(right_angle_triangle(3, 4, 11));\nconsole.log(right_angle_triangle(3,\
    \ 4, 12));\nconsole.log(right_angle_triangle(3, 4, 13));\nconsole.log(right_angle_triangle(3,\
    \ 4, 14));\nconsole.log(right_angle_triangle(3, 4, 15));\nconsole.log(right_angle_triangle(3,\
    \ 4, 16));\nconsole.log(right_angle_triangle(3, 4, 17));\nconsole.log(right_angle_triangle(3,\
    \ 4, 18));\nconsole.log(right_angle_triangle(3, 4, 19));\nconsole.log(right_angle_triangle(3,\
    \ 4, 20));\nconsole.log(right_angle_triangle(3, 4, 21));\nconsole.log(right_angle_triangle(3,\
    \ 4, 22));\nconsole.log(right_angle_triangle(3, 4, 23));\nconsole.log(right_angle_triangle(3,\
    \ 4, 24));\nconsole.log(right_angle_triangle(3, 4, 25));\nconsole.log(right_angle_triangle(3,\
    \ 4, 26));\nconsole.log(right_angle_triangle(3, 4, 27));\nconsole.log(right_angle_triangle(3,\
    \ 4,", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(3, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 4, 7));\nconsole.log(right_angle_triangle(7,\
    \ 4, 4));\nconsole.log(right_angle_", "    let arr = [a, b, c].sort((a, b) =>\
    \ a - b);\n    return Math.pow(arr[0], 2) + Math.pow(arr[1], 2) === Math.pow(arr[2],\
    \ 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 12, 13));\nconsole.log(right_angle_triangle(5, 15, 20));", "    let arr = [a,\
    \ b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2\
    \ === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 6));", "    return (a ** 2 +\
    \ b ** 2 === c ** 2) || (a ** 2 + c ** 2 === b ** 2) || (b ** 2 + c ** 2 === a\
    \ ** 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\n", "    let sides = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(sides[0],\
    \ 2) + Math.pow(sides[1], 2) === Math.pow(sides[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ Math.pow(arr[0], 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));\n", "    if (a * a + b\
    \ * b == c * c) {\n        return true;\n    } else if (a * a + c * c == b * b)\
    \ {\n        return true;\n    } else if (b * b + c * c == a * a) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\n", "    return (a * a + b * b == c * c || a * a + c * c == b * b ||\
    \ b * b + c * c == a * a);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 5, 6));\nconsole.log(right_angle_triangle(5,\
    \ 3, 6));\nconsole.log(right_angle_triangle(5, 6, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 5));\nconsole.log(right_angle_triangle(6, 3, 5));\nconsole.log(right_angle_triangle(6,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 7, 8));\nconsole.log(right_angle_triangle(7,\
    \ 3, 8));\nconsole.log(right_angle_triangle(7, 8, 3));\nconsole.log(right_angle_triangle(3,\
    \ 8, 7));\nconsole.log(right_angle_triangle(8, 3, 7));\nconsole.log(right_angle_triangle(8,\
    \ 7, 3));\nconsole.log(right_angle_triangle(4, 5, 7));\n", "    return (a ** 2\
    \ + b ** 2 === c ** 2) || (a ** 2 + c ** 2 === b ** 2) || (b ** 2 + c ** 2 ===\
    \ a ** 2);\n}\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(6,\
    \ 6, 6));\nconsole.log(right_angle_triangle(3, 4, 7));\nconsole.log(right_angle_triangle(7,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 7, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 7));\nconsole.log(right_angle_triangle(4, 7, 3));\nconsole.log(right_angle_triangle(7,\
    \ 3, 4));\nconsole.log(right_angle_triangle(7, 7, 7));\nconsole.log(right_angle_triangle(3,\
    \ 4, 8));\nconsole.log(right_angle_triangle(8, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 8, 4));\nconsole.log(right_angle_triangle(4, 3, 8));\nconsole.log(right_angle_triangle(4,\
    \ 8,", "    return (a * a + b * b == c * c) || (a * a + c * c == b * b) || (b\
    \ * b + c * c == a * a);\n}\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 6));\n", "    let arr = [a,\
    \ b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2\
    \ === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\n", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(6, 3, 4));", "    let arr = [a, b,\
    \ c].sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] **\
    \ 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 4));\nconsole.log(right_angle_triangle(5, 5, 5));\nconsole.log(right_angle_triangle(5,\
    \ 5, 6));\nconsole.log(right_angle_triangle(5, 6, 5));\nconsole.log(right_angle_triangle(6,\
    \ 5, 5));\nconsole.log(right_angle_triangle(6, 6, 6));\nconsole.log(right_angle_triangle(6,\
    \ 6, 7));\nconsole.log(right_angle_triangle(6, 7, 6));\nconsole.log(right_angle_triangle(7,\
    \ 6, 6));\nconsole.log(right_angle_triangle(7, 7, 7));\nconsole.log(right_angle_triangle(7,\
    \ 7, 8));\nconsole.log(right_angle_triangle(7, 8, 7));\nconsole.log(right_angle_triangle(",
  "    let arr = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(arr[0], 2)\
    \ + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));", "    let sides = [a,\
    \ b, c].sort((a, b) => a - b);\n    return sides[0] ** 2 + sides[1] ** 2 === sides[2]\
    \ ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(3,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 4));\nconsole.log(right_angle_triangle(4, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 3, 6));\nconsole.log(right_angle_triangle(6,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 6, 3));\nconsole.log(right_angle_triangle(",
  "    return a * a + b * b === c * c || a * a + c * c === b * b || b * b + c * c\
    \ === a * a;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\n", "    if (a > b && a > c) {\n        return Math.pow(a, 2) === Math.pow(b,\
    \ 2) + Math.pow(c, 2);\n    } else if (b > a && b > c) {\n        return Math.pow(b,\
    \ 2) === Math.pow(a, 2) + Math.pow(c, 2);\n    } else {\n        return Math.pow(c,\
    \ 2) === Math.pow(a, 2) + Math.pow(b, 2);\n    }\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(10,\
    \ 24, 26));\nconsole.log(right_angle_triangle(24, 10, 26));\nconsole.log(right_angle_triangle(26,\
    \ 24, 10));\nconsole.log(right_angle_triangle(26, 10, 24));\nconsole.log(right_angle_triangle(10,\
    \ 26, 24));\nconsole.log(right_angle_triangle(24, 26, 10));", "    return Math.pow(a,\
    \ 2) + Math.pow(b, 2) === Math.pow(c, 2) ||\n        Math.pow(a, 2) + Math.pow(c,\
    \ 2) === Math.pow(b, 2) ||\n        Math.pow(b, 2) + Math.pow(c, 2) === Math.pow(a,\
    \ 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(3, 4, 7));\nconsole.log(right_angle_triangle(3,\
    \ 4, 8));\nconsole.log(right_angle_triangle(3, 4, 9));\nconsole.log(right_angle_triangle(3,\
    \ 4, 10));\nconsole.log(right_angle_triangle(3, 4, 11));\nconsole.log(right_angle_triangle(3,\
    \ 4, 12));\nconsole.log(right_angle_triangle(3, 4, 13));\nconsole.log(right_angle_triangle(3,\
    \ 4, 14));\nconsole.log(right_angle_triangle(3, 4, 15));\nconsole.log(right_angle_triangle(3,\
    \ 4, 16));\nconsole.log(right_angle_triangle(3, 4, 17));\nconsole.log(right_angle_triangle(3,\
    \ 4, 18));\nconsole.log(right_angle_triangle(3, 4, 19));\nconsole.log(right_angle_triangle(3,\
    \ 4, 20));\nconsole.log(right_angle_triangle(3, 4, 21));\nconsole.log(right_angle_triangle(3,\
    \ 4, 22));\nconsole.log(right_angle_triangle(3, 4, 23));\nconsole.log(right_angle_triangle(3,\
    \ 4, 24));\nconsole.log(right_angle_triangle(3, 4, 25));\nconsole.log(right_angle_triangle(3,\
    \ 4, 26));\nconsole.log(right_angle_triangle(3, 4, 27", "    let arr = [a, b,\
    \ c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 ===\
    \ arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\n", "    if (a > b && a > c) {\n        return Math.pow(a, 2) === Math.pow(b,\
    \ 2) + Math.pow(c, 2);\n    } else if (b > a && b > c) {\n        return Math.pow(b,\
    \ 2) === Math.pow(a, 2) + Math.pow(c, 2);\n    } else {\n        return Math.pow(c,\
    \ 2) === Math.pow(a, 2) + Math.pow(b, 2);\n    }\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\n", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));", "    let arr = [a, b,\
    \ c];\n    arr.sort((a, b) => a - b);\n    return Math.pow(arr[0], 2) + Math.pow(arr[1],\
    \ 2) === Math.pow(arr[2], 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(3, 4, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 4, 4));\nconsole.log(right_angle_triangle(1, 1, 1));\nconsole.log(right_angle_triangle(1,\
    \ 1, 2));\nconsole.log(right_angle_triangle(1, 2, 1));\nconsole.log(right_angle_triangle(2,\
    \ 1, 1));\nconsole.log(right_angle_triangle(1, 2, 2));\nconsole.log(right_angle_triangle(2,\
    \ 1, 2));\nconsole.log(right_angle_triangle(2, 2, 1));\nconsole.log(right_angle_triangle(",
  "    return (a * a + b * b == c * c) || (a * a + c * c == b * b) || (b * b + c *\
    \ c == a * a);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(3,\
    \ 6, 5));\nconsole.log(right_angle_triangle(3, 5, 6));\nconsole.log(right_angle_triangle(5,\
    \ 3, 6));\nconsole.log(right_angle_triangle(5, 6, 3));\nconsole.log(right_angle_triangle(6,\
    \ 5, 3));\nconsole.log(right_angle_triangle(6, 3, 5));", "    return a * a + b\
    \ * b === c * c || a * a + c * c === b * b || b * b + c * c === a * a;\n}\n\n\
    console.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 12, 13));\nconsole.log(right_angle_triangle(9, 40, 41));\nconsole.log(right_angle_triangle(8,\
    \ 15, 17));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(120,\
    \ 209, 241));\nconsole.log(right_angle_triangle(3, 5, 7));\nconsole.log(right_angle_triangle(5,\
    \ 3, 7));\nconsole.log(right_angle_triangle(7, 5, 3));\nconsole.log(right_angle_triangle(7,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 7, 5));\nconsole.log(right_angle_triangle(5,\
    \ 7, 3));\nconsole.log(right_angle_triangle(7, 5, 12));\nconsole.log(right_angle_triangle(7,\
    \ 12, 5));\nconsole.log(right_angle_triangle(12, 7, 5));\nconsole.log(right_angle_triangle(12,\
    \ 5, 7));\nconsole.log(right_angle_triangle(5, 12, 7));\nconsole.log(right_angle_triangle(5,\
    \ 7, 12));\nconsole.log(right_angle_triangle(7, 5, 12));\nconsole.log(right_angle_triangle(7,\
    \ 12, 5));\nconsole.log(right_angle_triangle(12, 7, 5));\nconsole.log(right_angle_triangle(12,\
    \ 5, 7));\nconsole.log(right_angle_triangle(5, 12, 7));\nconsole.log(right_angle_triangle(5,\
    \ 7, 12));\nconsole", "    return a * a + b * b === c * c || a * a + c * c ===\
    \ b * b || b * b + c * c === a * a;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(3, 4, 7));\nconsole.log(right_angle_triangle(3,\
    \ 4, 8));\nconsole.log(right_angle_triangle(3, 4, 9));\nconsole.log(right_angle_triangle(3,\
    \ 4, 10));\nconsole.log(right_angle_triangle(3, 4, 11));\nconsole.log(right_angle_triangle(3,\
    \ 4, 12));\nconsole.log(right_angle_triangle(3, 4, 13));\nconsole.log(right_angle_triangle(3,\
    \ 4, 14));\nconsole.log(right_angle_triangle(3, 4, 15));\nconsole.log(right_angle_triangle(3,\
    \ 4, 16));\nconsole.log(right_angle_triangle(3, 4, 17));\nconsole.log(right_angle_triangle(3,\
    \ 4, 18));\nconsole.log(right_angle_triangle(3, 4, 19));\nconsole.log(right_angle_triangle(3,\
    \ 4, 20));\nconsole.log(right_angle_triangle(3, 4, 21));\nconsole.log(right_angle_triangle(3,\
    \ 4, 22));\nconsole.log(right_angle_triangle(3, 4, 23));\nconsole.log(right_angle_triangle(3,\
    \ 4, 24));\nconsole.log(right_angle_triangle(3, 4, 25));\nconsole.log(right_angle_triangle(3,\
    \ 4, 26));\nconsole.log(right_angle_triangle(3, 4, 27));\nconsole.log(right_angle_triangle(3,\
    \ 4, 28));\nconsole.log(right_angle_triangle(3, 4, 29));\nconsole", "    let arr\
    \ = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return Math.pow(arr[0], 2)\
    \ + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));\nconsole.log(right_angle_triangle(4, 3, 6));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 6, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(6",
  "    if (a === 0 || b === 0 || c === 0) {\n        return false;\n    }\n    let\
    \ arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1]\
    \ ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(0, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 0, 6));\nconsole.log(right_angle_triangle(3, 4, 0));\nconsole.log(right_angle_triangle(0,\
    \ 0, 0));\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(0, 4, 6));\nconsole.log(right_angle_triangle(3,\
    \ 0, 6));\nconsole.log(right_angle_triangle(3, 4, 0));\nconsole.log(right_angle_triangle(0,\
    \ 0, 0));", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(3, 4, 6));", "    let arr = [a, b,\
    \ c].sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] **\
    \ 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(6,\
    \ 3, 4));", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 7));\nconsole.log(right_angle_triangle(3, 7, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 7));\nconsole.log(right_angle_triangle(4, 7, 3));\nconsole.log(right_angle_triangle(7,\
    \ 3, 4));\nconsole.log(right_angle_triangle(7, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 8));\nconsole.log(right_angle_triangle(3, 8, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 8));\nconsole.log(right_angle_triangle(4, 8, 3));\nconsole.log(right_angle_triangle(8,\
    \ 3, 4));\nconsole.log(right_angle_triangle(8, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 9));\nconsole.log(right_angle_triangle(", "    return (a ** 2 + b ** 2 ===\
    \ c ** 2) || (a ** 2 + c ** 2 === b ** 2) || (b ** 2 + c ** 2 === a ** 2);\n}\n\
    \nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(3, 4, 7));", "    let arr = [a, b,\
    \ c].sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] **\
    \ 2;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(3,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 4, 3));\nconsole.log(right_angle_triangle(4,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 3, 5));\nconsole.log(right_angle_triangle(3,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 3));\nconsole.log(right_angle_triangle(5,\
    \ 5, 3));\nconsole.log(right_angle_triangle(5, 3, 5));\nconsole.log(right_angle_triangle(3,\
    \ 5, 5));\nconsole.log(right_angle_triangle(5, 5, 5));\nconsole.log(right_angle_triangle(5,\
    \ 5, 6));\nconsole.log(right_angle_triangle(5, 6, 5));\nconsole.log(right_angle_triangle(",
  "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] **\
    \ 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3, 4,\
    \ 5));\nconsole.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    return (a * a + b * b == c * c) || (a * a + c * c == b * b) ||\
    \ (b * b + c * c == a * a);\n}\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(4, 5, 3));\nconsole.log(right_angle_triangle(5,\
    \ 3, 4));\nconsole.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(4, 3, 5));\nconsole.log(right_angle_triangle(3,\
    \ 3, 3));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(4,\
    \ 3, 6));\nconsole.log(right_angle_triangle(6, 3, 4));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(4, 6, 3));\nconsole.log(right_angle_triangle(3,\
    \ 6, 4));\n", "    let sides = [a, b, c].sort((a, b) => a - b);\n    return sides[0]\
    \ ** 2 + sides[1] ** 2 === sides[2] ** 2;\n}\n\nconsole.log(right_angle_triangle(3,\
    \ 4, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 12, 13));\nconsole.log(right_angle_triangle(5,\
    \ 15, 20));\nconsole.log(right_angle_triangle(5, 15, 6));", "    let arr = [a,\
    \ b, c].sort((a, b) => a - b);\n    return arr[0] * arr[0] + arr[1] * arr[1] ===\
    \ arr[2] * arr[2];\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(4,\
    \ 3, 5));\nconsole.log(right_angle_triangle(5, 3, 4));\nconsole.log(right_angle_triangle(5,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 5, 4));\nconsole.log(right_angle_triangle(4,\
    \ 5, 3));\nconsole.log(right_angle_triangle(3, 3, 3));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));", "    return (a * a + b * b == c * c) || (a * a + c * c == b * b) ||\
    \ (b * b + c * c == a * a);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\n\
    console.log(right_angle_triangle(5, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 5, 4));\nconsole.log(right_angle_triangle(3, 4, 6));\nconsole.log(right_angle_triangle(6,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 6, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 7));\nconsole.log(right_angle_triangle(7, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 7, 4));\nconsole.log(right_angle_triangle(3, 4, 8));\nconsole.log(right_angle_triangle(8,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 8, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 9));\nconsole.log(right_angle_triangle(9, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 9, 4));\nconsole.log(right_angle_triangle(3, 4, 10));\nconsole.log(right_angle_triangle(10,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 10, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 11));\nconsole.log(right_angle_triangle(11, 4, 3));\nconsole.log(right_angle_triangle(3,\
    \ 11, 4));\nconsole.log(right_angle_triangle(3, 4, 12));\nconsole.log(right_angle_triangle(12,\
    \ 4, 3));\nconsole.log(right_angle_triangle(3, 12, 4));\nconsole.log(right_angle_triangle(3,\
    \ 4, 13));\nconsole.log(right_angle_triangle(13, 4", "    let result: boolean\
    \ = false;\n    if (a * a + b * b == c * c) {\n        result = true;\n    }\n\
    \    return result;\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\n", "    let sides = [a, b, c];\n    sides.sort((a, b) => a - b);\n\
    \    let [a, b, c] = sides;\n    return Math.pow(a, 2) + Math.pow(b, 2) === Math.pow(c,\
    \ 2);\n}\n\nconsole.log(right_angle_triangle(3, 4, 5));\nconsole.log(right_angle_triangle(3,\
    \ 4, 6));\nconsole.log(right_angle_triangle(3, 4, 7));\nconsole.log(right_angle_triangle(3,\
    \ 4, 8));\nconsole.log(right_angle_triangle(3, 4, 9));\nconsole.log(right_angle_triangle(3,\
    \ 4, 10));\nconsole.log(right_angle_triangle(3, 4, 11));\nconsole.log(right_angle_triangle(3,\
    \ 4, 12));\nconsole.log(right_angle_triangle(3, 4, 13));\nconsole.log(right_angle_triangle(3,\
    \ 4, 14));\nconsole.log(right_angle_triangle(3, 4, 15));\nconsole.log(right_angle_triangle(3,\
    \ 4, 16));\nconsole.log(right_angle_triangle(3, 4, 17));\nconsole.log(right_angle_triangle(3,\
    \ 4, 18));\nconsole.log(right_angle_triangle(3, 4, 19));\nconsole.log(right_angle_triangle(3,\
    \ 4, 20));\nconsole.log(right_angle_triangle(3, 4, 21));\nconsole.log(right_angle_triangle(3,\
    \ 4, 22));\nconsole.log(right_angle_triangle(3, 4, 23));\nconsole.log(right_angle_triangle(3,\
    \ 4, 24));\nconsole.log(right_angle_triangle(3, 4, 25));\nconsole.log(right_angle_triangle(3,\
    \ 4, 26));\nconsole.log(right_angle_triangle(3, 4, 27));\nconsole.log(right_angle_triangle(3,\
    \ 4, 28));\nconsole.log("]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"
